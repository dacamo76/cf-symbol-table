{
 "errors": {},
 "symbols": [
  "macropy.__version__",
  "macropy.activate",
  "macropy.case_classes",
  "macropy.case_classes.CaseClass",
  "macropy.case_classes.Enum",
  "macropy.case_classes.apply",
  "macropy.case_classes.case",
  "macropy.case_classes.enum",
  "macropy.case_classes.extract_args",
  "macropy.case_classes.find_members",
  "macropy.case_classes.macros",
  "macropy.case_classes.noop_init",
  "macropy.case_classes.prep_initialization",
  "macropy.case_classes.shared_transform",
  "macropy.case_classes.split_body",
  "macropy.console",
  "macropy.core",
  "macropy.core.Captured",
  "macropy.core.INFSTR",
  "macropy.core.Literal",
  "macropy.core.__all__",
  "macropy.core._ast_leftovers",
  "macropy.core.analysis",
  "macropy.core.analysis.Scoped",
  "macropy.core.analysis.__all__",
  "macropy.core.analysis.extract_arg_names",
  "macropy.core.analysis.find_assignments",
  "macropy.core.analysis.find_names",
  "macropy.core.ast_repr",
  "macropy.core.binop",
  "macropy.core.boolops",
  "macropy.core.cleanup",
  "macropy.core.cleanup.ast_ctx_fixer",
  "macropy.core.cleanup.fill_line_numbers",
  "macropy.core.cleanup.fix_ctx",
  "macropy.core.cmpops",
  "macropy.core.compat",
  "macropy.core.compat.CPY",
  "macropy.core.compat.Call",
  "macropy.core.compat.HAS_FSTRING",
  "macropy.core.compat.PY33",
  "macropy.core.compat.PY34",
  "macropy.core.compat.PY35",
  "macropy.core.compat.PY36",
  "macropy.core.compat.PYPY",
  "macropy.core.compat.function_nodes",
  "macropy.core.compat.scope_nodes",
  "macropy.core.console",
  "macropy.core.console.MacroConsole",
  "macropy.core.else_rec",
  "macropy.core.exact_src",
  "macropy.core.exact_src.ExactSrcException",
  "macropy.core.exact_src._transforms",
  "macropy.core.exact_src.exact_src",
  "macropy.core.exact_src.indexer",
  "macropy.core.exact_src.linear_index",
  "macropy.core.exporters",
  "macropy.core.exporters.NullExporter",
  "macropy.core.exporters.PycExporter",
  "macropy.core.exporters.SaveExporter",
  "macropy.core.exporters.logger",
  "macropy.core.exporters.suffix",
  "macropy.core.exporters.wr_long",
  "macropy.core.failure",
  "macropy.core.failure.MacroExpansionError",
  "macropy.core.failure.clear_errors",
  "macropy.core.failure.raise_error",
  "macropy.core.gen_sym",
  "macropy.core.gen_sym.gen_sym",
  "macropy.core.hquotes",
  "macropy.core.hquotes.ast_literal",
  "macropy.core.hquotes.captured_registry",
  "macropy.core.hquotes.hq",
  "macropy.core.hquotes.hygienate",
  "macropy.core.hquotes.hygienator",
  "macropy.core.hquotes.macros",
  "macropy.core.hquotes.post_proc",
  "macropy.core.hquotes.u",
  "macropy.core.hquotes.unhygienic",
  "macropy.core.import_hooks",
  "macropy.core.import_hooks.MacroFinder",
  "macropy.core.import_hooks.MacroLoader",
  "macropy.core.import_hooks._MacroLoader",
  "macropy.core.import_hooks.logger",
  "macropy.core.jmap",
  "macropy.core.macros",
  "macropy.core.macros.Block",
  "macropy.core.macros.Decorator",
  "macropy.core.macros.ExpansionContext",
  "macropy.core.macros.Expr",
  "macropy.core.macros.MacroData",
  "macropy.core.macros.MacroType",
  "macropy.core.macros.Macros",
  "macropy.core.macros.ModuleExpansionContext",
  "macropy.core.macros.WrappedFunction",
  "macropy.core.macros.check_annotated",
  "macropy.core.macros.detect_macros",
  "macropy.core.macros.filters",
  "macropy.core.macros.injected_vars",
  "macropy.core.macros.logger",
  "macropy.core.macros.macro_function",
  "macropy.core.macros.macro_stub",
  "macropy.core.macros.post_processing",
  "macropy.core.macros.preserve_line_numbers",
  "macropy.core.mix",
  "macropy.core.parse_expr",
  "macropy.core.parse_stmt",
  "macropy.core.quotes",
  "macropy.core.quotes.ast",
  "macropy.core.quotes.ast_list",
  "macropy.core.quotes.ast_literal",
  "macropy.core.quotes.macros",
  "macropy.core.quotes.name",
  "macropy.core.quotes.q",
  "macropy.core.quotes.u",
  "macropy.core.real_repr",
  "macropy.core.rec",
  "macropy.core.tabs",
  "macropy.core.trec",
  "macropy.core.unop",
  "macropy.core.unparse",
  "macropy.core.util",
  "macropy.core.util.Lazy",
  "macropy.core.util.box",
  "macropy.core.util.distinct",
  "macropy.core.util.flatten",
  "macropy.core.util.merge_dicts",
  "macropy.core.util.register",
  "macropy.core.util.singleton",
  "macropy.core.walkers",
  "macropy.core.walkers.Walker",
  "macropy.experimental",
  "macropy.experimental.js_snippets.ast",
  "macropy.experimental.js_snippets.ast_repr",
  "macropy.experimental.js_snippets.js",
  "macropy.experimental.js_snippets.macros",
  "macropy.experimental.js_snippets.path",
  "macropy.experimental.js_snippets.pyjs",
  "macropy.experimental.js_snippets.q",
  "macropy.experimental.js_snippets.std_lib",
  "macropy.experimental.js_snippets.std_lib_script",
  "macropy.experimental.js_snippets.u",
  "macropy.experimental.pattern.ClassMatcher",
  "macropy.experimental.pattern.ListMatcher",
  "macropy.experimental.pattern.LiteralMatcher",
  "macropy.experimental.pattern.Matcher",
  "macropy.experimental.pattern.NameMatcher",
  "macropy.experimental.pattern.OptionalMatcher",
  "macropy.experimental.pattern.ParallelMatcher",
  "macropy.experimental.pattern.PatternException",
  "macropy.experimental.pattern.PatternMatchException",
  "macropy.experimental.pattern.PatternVarConflict",
  "macropy.experimental.pattern.PatternVarMismatch",
  "macropy.experimental.pattern.TupleMatcher",
  "macropy.experimental.pattern.WildcardMatcher",
  "macropy.experimental.pattern._is_pattern_match_expr",
  "macropy.experimental.pattern._is_pattern_match_stmt",
  "macropy.experimental.pattern._matching",
  "macropy.experimental.pattern._rewrite_if",
  "macropy.experimental.pattern._vars_are_disjoint",
  "macropy.experimental.pattern.build_matcher",
  "macropy.experimental.pattern.macros",
  "macropy.experimental.pattern.patterns",
  "macropy.experimental.pattern.switch",
  "macropy.experimental.pinq._find_let_bindings",
  "macropy.experimental.pinq.expand_let_bindings",
  "macropy.experimental.pinq.fix_columns",
  "macropy.experimental.pinq.generate_schema",
  "macropy.experimental.pinq.macros",
  "macropy.experimental.pinq.process",
  "macropy.experimental.pinq.query",
  "macropy.experimental.pinq.sql",
  "macropy.experimental.pyxl_strings.Macros",
  "macropy.experimental.pyxl_strings.e",
  "macropy.experimental.pyxl_strings.macros",
  "macropy.experimental.pyxl_strings.p",
  "macropy.experimental.pyxl_strings.rawhtml",
  "macropy.experimental.pyxl_strings.unicode",
  "macropy.experimental.tco.TCOType",
  "macropy.experimental.tco.in_tc_stack",
  "macropy.experimental.tco.macros",
  "macropy.experimental.tco.tco",
  "macropy.experimental.tco.trampoline",
  "macropy.exporter",
  "macropy.exporters",
  "macropy.logging",
  "macropy.logging.log",
  "macropy.peg",
  "macropy.peg.Captured",
  "macropy.peg.Failure",
  "macropy.peg.Input",
  "macropy.peg.ParseError",
  "macropy.peg.Parser",
  "macropy.peg.Success",
  "macropy.peg.ast_literal",
  "macropy.peg.ast_repr",
  "macropy.peg.case",
  "macropy.peg.cut",
  "macropy.peg.f",
  "macropy.peg.hq",
  "macropy.peg.macros",
  "macropy.peg.peg",
  "macropy.peg.process",
  "macropy.peg.u",
  "macropy.quick_lambda",
  "macropy.quick_lambda._",
  "macropy.quick_lambda.f",
  "macropy.quick_lambda.get_interned",
  "macropy.quick_lambda.interned",
  "macropy.quick_lambda.lazy",
  "macropy.quick_lambda.macros",
  "macropy.string_interp",
  "macropy.string_interp.Captured",
  "macropy.string_interp.ast_list",
  "macropy.string_interp.ast_repr",
  "macropy.string_interp.hq",
  "macropy.string_interp.macros",
  "macropy.string_interp.s",
  "macropy.string_interp.u",
  "macropy.tracing",
  "macropy.tracing.ast_literal",
  "macropy.tracing.hq",
  "macropy.tracing.literal_eval",
  "macropy.tracing.log",
  "macropy.tracing.macros",
  "macropy.tracing.require",
  "macropy.tracing.show_expanded",
  "macropy.tracing.trace",
  "macropy.tracing.u",
  "macropy.tracing.unhygienic",
  "macropy.tracing.wrap"
 ]
}