{
 "errors": {},
 "symbols": [
  "numcodecs.Adler32",
  "numcodecs.BZ2",
  "numcodecs.Blosc",
  "numcodecs.CRC32",
  "numcodecs.Categorize",
  "numcodecs.Delta",
  "numcodecs.FixedScaleOffset",
  "numcodecs.LZMA",
  "numcodecs.PY2",
  "numcodecs.PackBits",
  "numcodecs.Zlib",
  "numcodecs.abc",
  "numcodecs.abc.Codec",
  "numcodecs.blosc",
  "numcodecs.blosc.Blosc",
  "numcodecs.bz2",
  "numcodecs.bz2.BZ2",
  "numcodecs.bz2.Codec",
  "numcodecs.bz2.buffer_copy",
  "numcodecs.categorize",
  "numcodecs.categorize.Categorize",
  "numcodecs.categorize.Codec",
  "numcodecs.categorize.buffer_copy",
  "numcodecs.categorize.ensure_bytes",
  "numcodecs.categorize.ensure_text",
  "numcodecs.categorize.ndarray_from_buffer",
  "numcodecs.checksum32",
  "numcodecs.checksum32.Adler32",
  "numcodecs.checksum32.CRC32",
  "numcodecs.checksum32.Checksum32",
  "numcodecs.checksum32.Codec",
  "numcodecs.checksum32.buffer_copy",
  "numcodecs.checksum32.ndarray_from_buffer",
  "numcodecs.compat",
  "numcodecs.compat.PY2",
  "numcodecs.compat.binary_type",
  "numcodecs.compat.buffer_copy",
  "numcodecs.compat.buffer_tobytes",
  "numcodecs.compat.ensure_bytes",
  "numcodecs.compat.ensure_text",
  "numcodecs.compat.integer_types",
  "numcodecs.compat.ndarray_from_buffer",
  "numcodecs.compat.text_type",
  "numcodecs.delta",
  "numcodecs.delta.Codec",
  "numcodecs.delta.Delta",
  "numcodecs.delta.buffer_copy",
  "numcodecs.delta.ndarray_from_buffer",
  "numcodecs.fixedscaleoffset",
  "numcodecs.fixedscaleoffset.Codec",
  "numcodecs.fixedscaleoffset.FixedScaleOffset",
  "numcodecs.fixedscaleoffset.buffer_copy",
  "numcodecs.fixedscaleoffset.ndarray_from_buffer",
  "numcodecs.get_codec",
  "numcodecs.lzma",
  "numcodecs.lzma.Codec",
  "numcodecs.lzma.LZMA",
  "numcodecs.lzma.buffer_copy",
  "numcodecs.ncores",
  "numcodecs.packbits",
  "numcodecs.packbits.Codec",
  "numcodecs.packbits.PackBits",
  "numcodecs.packbits.buffer_copy",
  "numcodecs.packbits.ndarray_from_buffer",
  "numcodecs.register_codec",
  "numcodecs.registry",
  "numcodecs.registry.get_codec",
  "numcodecs.registry.register_codec",
  "numcodecs.tests",
  "numcodecs.tests.common",
  "numcodecs.tests.common.Adler32",
  "numcodecs.tests.common.BZ2",
  "numcodecs.tests.common.Blosc",
  "numcodecs.tests.common.CRC32",
  "numcodecs.tests.common.Categorize",
  "numcodecs.tests.common.Delta",
  "numcodecs.tests.common.FixedScaleOffset",
  "numcodecs.tests.common.LZMA",
  "numcodecs.tests.common.PY2",
  "numcodecs.tests.common.PackBits",
  "numcodecs.tests.common.Zlib",
  "numcodecs.tests.common.blosc",
  "numcodecs.tests.common.buffer_tobytes",
  "numcodecs.tests.common.check_config",
  "numcodecs.tests.common.check_encode_decode",
  "numcodecs.tests.common.check_repr",
  "numcodecs.tests.common.get_codec",
  "numcodecs.tests.common.ncores",
  "numcodecs.tests.common.ndarray_from_buffer",
  "numcodecs.tests.common.register_codec",
  "numcodecs.tests.common.version",
  "numcodecs.tests.test_blosc",
  "numcodecs.tests.test_blosc.Blosc",
  "numcodecs.tests.test_blosc.arrays",
  "numcodecs.tests.test_blosc.check_config",
  "numcodecs.tests.test_blosc.check_encode_decode",
  "numcodecs.tests.test_blosc.check_repr",
  "numcodecs.tests.test_blosc.codecs",
  "numcodecs.tests.test_blosc.test_config",
  "numcodecs.tests.test_blosc.test_encode_decode",
  "numcodecs.tests.test_blosc.test_repr",
  "numcodecs.tests.test_bz2",
  "numcodecs.tests.test_bz2.BZ2",
  "numcodecs.tests.test_bz2.arrays",
  "numcodecs.tests.test_bz2.check_config",
  "numcodecs.tests.test_bz2.check_encode_decode",
  "numcodecs.tests.test_bz2.check_repr",
  "numcodecs.tests.test_bz2.codecs",
  "numcodecs.tests.test_bz2.test_config",
  "numcodecs.tests.test_bz2.test_encode_decode",
  "numcodecs.tests.test_bz2.test_repr",
  "numcodecs.tests.test_categorize",
  "numcodecs.tests.test_categorize.Categorize",
  "numcodecs.tests.test_categorize.PY2",
  "numcodecs.tests.test_categorize.arrays",
  "numcodecs.tests.test_categorize.arrays_num",
  "numcodecs.tests.test_categorize.arrays_u",
  "numcodecs.tests.test_categorize.check_config",
  "numcodecs.tests.test_categorize.check_encode_decode",
  "numcodecs.tests.test_categorize.labels",
  "numcodecs.tests.test_categorize.labels_num",
  "numcodecs.tests.test_categorize.labels_u",
  "numcodecs.tests.test_categorize.test_config",
  "numcodecs.tests.test_categorize.test_encode",
  "numcodecs.tests.test_categorize.test_repr",
  "numcodecs.tests.test_checksum32",
  "numcodecs.tests.test_checksum32.Adler32",
  "numcodecs.tests.test_checksum32.CRC32",
  "numcodecs.tests.test_checksum32.arrays",
  "numcodecs.tests.test_checksum32.check_config",
  "numcodecs.tests.test_checksum32.check_encode_decode",
  "numcodecs.tests.test_checksum32.check_repr",
  "numcodecs.tests.test_checksum32.codecs",
  "numcodecs.tests.test_checksum32.test_config",
  "numcodecs.tests.test_checksum32.test_encode_decode",
  "numcodecs.tests.test_checksum32.test_errors",
  "numcodecs.tests.test_checksum32.test_repr",
  "numcodecs.tests.test_delta",
  "numcodecs.tests.test_delta.Delta",
  "numcodecs.tests.test_delta.arrays",
  "numcodecs.tests.test_delta.check_config",
  "numcodecs.tests.test_delta.check_encode_decode",
  "numcodecs.tests.test_delta.check_repr",
  "numcodecs.tests.test_delta.test_config",
  "numcodecs.tests.test_delta.test_encode",
  "numcodecs.tests.test_delta.test_repr",
  "numcodecs.tests.test_fixedscaleoffset",
  "numcodecs.tests.test_fixedscaleoffset.FixedScaleOffset",
  "numcodecs.tests.test_fixedscaleoffset.arrs",
  "numcodecs.tests.test_fixedscaleoffset.check_config",
  "numcodecs.tests.test_fixedscaleoffset.check_encode_decode",
  "numcodecs.tests.test_fixedscaleoffset.check_repr",
  "numcodecs.tests.test_fixedscaleoffset.codecs",
  "numcodecs.tests.test_fixedscaleoffset.test_config",
  "numcodecs.tests.test_fixedscaleoffset.test_encode",
  "numcodecs.tests.test_fixedscaleoffset.test_repr",
  "numcodecs.tests.test_lzma",
  "numcodecs.tests.test_lzma.LZMA",
  "numcodecs.tests.test_lzma.PY2",
  "numcodecs.tests.test_lzma.arrays",
  "numcodecs.tests.test_lzma.check_config",
  "numcodecs.tests.test_lzma.check_encode_decode",
  "numcodecs.tests.test_lzma.check_repr",
  "numcodecs.tests.test_lzma.codecs",
  "numcodecs.tests.test_lzma.test_config",
  "numcodecs.tests.test_lzma.test_encode_decode",
  "numcodecs.tests.test_lzma.test_repr",
  "numcodecs.tests.test_packbits",
  "numcodecs.tests.test_packbits.PackBits",
  "numcodecs.tests.test_packbits.arrays",
  "numcodecs.tests.test_packbits.check_config",
  "numcodecs.tests.test_packbits.check_encode_decode",
  "numcodecs.tests.test_packbits.check_repr",
  "numcodecs.tests.test_packbits.test_config",
  "numcodecs.tests.test_packbits.test_encode_decode",
  "numcodecs.tests.test_packbits.test_repr",
  "numcodecs.tests.test_registry",
  "numcodecs.tests.test_registry.get_codec",
  "numcodecs.tests.test_registry.test_registry_errors",
  "numcodecs.tests.test_zlib",
  "numcodecs.tests.test_zlib.Zlib",
  "numcodecs.tests.test_zlib.arrays",
  "numcodecs.tests.test_zlib.check_config",
  "numcodecs.tests.test_zlib.check_encode_decode",
  "numcodecs.tests.test_zlib.check_repr",
  "numcodecs.tests.test_zlib.codecs",
  "numcodecs.tests.test_zlib.test_config",
  "numcodecs.tests.test_zlib.test_encode_decode",
  "numcodecs.tests.test_zlib.test_repr",
  "numcodecs.version",
  "numcodecs.version.version",
  "numcodecs.zlib",
  "numcodecs.zlib.Codec",
  "numcodecs.zlib.Zlib",
  "numcodecs.zlib.buffer_copy"
 ]
}