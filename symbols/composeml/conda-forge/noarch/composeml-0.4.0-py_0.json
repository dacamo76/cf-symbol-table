{
 "errors": {
  "composeml.data_slice": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "composeml.label_times.object": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  }
 },
 "symbols": [
  "composeml.LabelMaker",
  "composeml.LabelTimes",
  "composeml.__version__",
  "composeml.conftest",
  "composeml.conftest.LabelTimes",
  "composeml.conftest.add_labels",
  "composeml.conftest.read_csv",
  "composeml.conftest.total_spent",
  "composeml.conftest.transactions",
  "composeml.conftest.unique_amounts_fn",
  "composeml.data_slice",
  "composeml.data_slice.DataSlice",
  "composeml.demos",
  "composeml.demos.DATA",
  "composeml.demos.load_transactions",
  "composeml.label_maker",
  "composeml.label_maker.DataSlice",
  "composeml.label_maker.ExampleSearch",
  "composeml.label_maker.LabelMaker",
  "composeml.label_maker.LabelSearch",
  "composeml.label_maker.LabelTimes",
  "composeml.label_maker.can_be_type",
  "composeml.label_maker.cutoff_data",
  "composeml.label_maker.to_offset",
  "composeml.label_search",
  "composeml.label_search.ExampleSearch",
  "composeml.label_search.LabelSearch",
  "composeml.label_times",
  "composeml.label_times.LabelTimes",
  "composeml.label_times.description",
  "composeml.label_times.description.describe_label_times",
  "composeml.label_times.deserialize",
  "composeml.label_times.deserialize.read_config",
  "composeml.label_times.deserialize.read_data",
  "composeml.label_times.deserialize.read_label_times",
  "composeml.label_times.object",
  "composeml.label_times.plots",
  "composeml.label_times.plots.COLOR",
  "composeml.label_times.plots.LabelPlots",
  "composeml.label_times.read_label_times",
  "composeml.offsets",
  "composeml.offsets.can_be_type",
  "composeml.offsets.is_offset",
  "composeml.offsets.parse",
  "composeml.offsets.to_offset",
  "composeml.read_label_times",
  "composeml.tests",
  "composeml.tests.test_datasets",
  "composeml.tests.test_datasets.test_transactions",
  "composeml.tests.test_featuretools",
  "composeml.tests.test_featuretools.LabelMaker",
  "composeml.tests.test_featuretools.test_dfs",
  "composeml.tests.test_featuretools.total_spent",
  "composeml.tests.test_label_maker",
  "composeml.tests.test_label_maker.LabelMaker",
  "composeml.tests.test_label_maker.test_invalid_offset",
  "composeml.tests.test_label_maker.test_invalid_threshold",
  "composeml.tests.test_label_maker.test_label_type",
  "composeml.tests.test_label_maker.test_search_default",
  "composeml.tests.test_label_maker.test_search_examples_per_label",
  "composeml.tests.test_label_maker.test_search_invalid_n_examples",
  "composeml.tests.test_label_maker.test_search_offset_mix_0",
  "composeml.tests.test_label_maker.test_search_offset_mix_1",
  "composeml.tests.test_label_maker.test_search_offset_mix_2",
  "composeml.tests.test_label_maker.test_search_offset_mix_3",
  "composeml.tests.test_label_maker.test_search_offset_mix_4",
  "composeml.tests.test_label_maker.test_search_offset_mix_5",
  "composeml.tests.test_label_maker.test_search_offset_mix_6",
  "composeml.tests.test_label_maker.test_search_offset_mix_7",
  "composeml.tests.test_label_maker.test_search_offset_negative_0",
  "composeml.tests.test_label_maker.test_search_offset_negative_1",
  "composeml.tests.test_label_maker.test_search_on_empty_data_slices",
  "composeml.tests.test_label_maker.test_search_on_empty_labels",
  "composeml.tests.test_label_maker.test_search_with_multiple_targets",
  "composeml.tests.test_label_maker.test_search_with_undefined_labels",
  "composeml.tests.test_label_maker.test_slice_context",
  "composeml.tests.test_label_maker.test_slice_overlap",
  "composeml.tests.test_label_maker.to_csv",
  "composeml.tests.test_label_plots",
  "composeml.tests.test_label_plots.test_count_by_time_categorical",
  "composeml.tests.test_label_plots.test_count_by_time_continuous",
  "composeml.tests.test_label_plots.test_distribution_categorical",
  "composeml.tests.test_label_plots.test_distribution_continuous",
  "composeml.tests.test_label_plots.test_single_target",
  "composeml.tests.test_label_serialization",
  "composeml.tests.test_label_serialization.test_csv",
  "composeml.tests.test_label_serialization.test_parquet",
  "composeml.tests.test_label_serialization.test_pickle",
  "composeml.tests.test_label_times",
  "composeml.tests.test_label_times.LabelTimes",
  "composeml.tests.test_label_times.test_count",
  "composeml.tests.test_label_times.test_describe",
  "composeml.tests.test_label_times.test_distribution_categorical",
  "composeml.tests.test_label_times.test_distribution_continous",
  "composeml.tests.test_label_times.test_label_select_errors",
  "composeml.tests.test_label_times.test_target_type",
  "composeml.tests.test_label_times.to_csv",
  "composeml.tests.test_label_transforms",
  "composeml.tests.test_label_transforms.test_bin",
  "composeml.tests.test_label_transforms.test_bin.test_bins",
  "composeml.tests.test_label_transforms.test_bin.test_quantile_bins",
  "composeml.tests.test_label_transforms.test_bin.test_single_target",
  "composeml.tests.test_label_transforms.test_lead",
  "composeml.tests.test_label_transforms.test_lead.test_lead",
  "composeml.tests.test_label_transforms.test_sample",
  "composeml.tests.test_label_transforms.test_sample.LabelTimes",
  "composeml.tests.test_label_transforms.test_sample.labels",
  "composeml.tests.test_label_transforms.test_sample.read_csv",
  "composeml.tests.test_label_transforms.test_sample.test_sample_frac_int",
  "composeml.tests.test_label_transforms.test_sample.test_sample_frac_per_instance",
  "composeml.tests.test_label_transforms.test_sample.test_sample_frac_per_label",
  "composeml.tests.test_label_transforms.test_sample.test_sample_in_transforms",
  "composeml.tests.test_label_transforms.test_sample.test_sample_n_int",
  "composeml.tests.test_label_transforms.test_sample.test_sample_n_per_instance",
  "composeml.tests.test_label_transforms.test_sample.test_sample_n_per_label",
  "composeml.tests.test_label_transforms.test_sample.test_sample_with_replacement",
  "composeml.tests.test_label_transforms.test_sample.test_single_target",
  "composeml.tests.test_label_transforms.test_sample.to_csv",
  "composeml.tests.test_label_transforms.test_threshold",
  "composeml.tests.test_label_transforms.test_threshold.test_single_target",
  "composeml.tests.test_label_transforms.test_threshold.test_threshold",
  "composeml.tests.test_offsets",
  "composeml.tests.test_offsets.parse",
  "composeml.tests.test_offsets.test_parser",
  "composeml.tests.utils",
  "composeml.tests.utils.read_csv",
  "composeml.tests.utils.to_csv",
  "composeml.utils",
  "composeml.utils.can_be_type",
  "composeml.version",
  "composeml.version.__version__"
 ]
}