{
 "errors": {},
 "symbols": [
  "thinc.about",
  "thinc.about.__author__",
  "thinc.about.__email__",
  "thinc.about.__license__",
  "thinc.about.__name__",
  "thinc.about.__release__",
  "thinc.about.__summary__",
  "thinc.about.__title__",
  "thinc.about.__uri__",
  "thinc.about.__version__",
  "thinc.extra",
  "thinc.extra._vendorized",
  "thinc.extra._vendorized.keras_data_utils",
  "thinc.extra._vendorized.keras_data_utils.get_file",
  "thinc.extra._vendorized.keras_data_utils.progbar",
  "thinc.extra._vendorized.keras_data_utils.validate_file",
  "thinc.extra._vendorized.keras_datasets",
  "thinc.extra._vendorized.keras_datasets.load_mnist",
  "thinc.extra._vendorized.keras_generic_utils",
  "thinc.extra._vendorized.keras_generic_utils.Progbar",
  "thinc.extra._vendorized.keras_generic_utils.display_table",
  "thinc.extra._vendorized.keras_generic_utils.func_dump",
  "thinc.extra._vendorized.keras_generic_utils.func_load",
  "thinc.extra._vendorized.keras_generic_utils.get_from_module",
  "thinc.extra._vendorized.keras_generic_utils.make_tuple",
  "thinc.extra.datasets",
  "thinc.extra.datasets.ANCORA_1_4_ZIP",
  "thinc.extra.datasets.EWTB_1_4_ZIP",
  "thinc.extra.datasets.GITHUB",
  "thinc.extra.datasets.ancora_pos_tags",
  "thinc.extra.datasets.ewtb_pos_tags",
  "thinc.extra.datasets.mnist",
  "thinc.extra.datasets.read_conll",
  "thinc.extra.datasets.ud_pos_tags",
  "thinc.extra.tests",
  "thinc.linear",
  "thinc.linear.tests",
  "thinc.linear.tests.test_avgtron",
  "thinc.linear.tests.test_avgtron.assert_near_eq",
  "thinc.linear.tests.test_avgtron.test_basic",
  "thinc.linear.tests.test_sparse_array",
  "thinc.linear.tests.test_sparse_array.test_init",
  "thinc.linear.tests.test_sparse_array.test_setitem",
  "thinc.neural",
  "thinc.neural.base",
  "thinc.neural.base.Model",
  "thinc.neural.base.Model.Trainer",
  "thinc.neural.base.Model.device",
  "thinc.neural.base.Model.input_shape",
  "thinc.neural.base.Model.is_initialized",
  "thinc.neural.base.Model.name",
  "thinc.neural.base.Model.ops",
  "thinc.neural.base.Model.output_shape",
  "thinc.neural.base.Network",
  "thinc.neural.base.Network.input_shape",
  "thinc.neural.base.Network.name",
  "thinc.neural.base.Network.nr_weight",
  "thinc.neural.base.Network.output_shape",
  "thinc.neural.convolution",
  "thinc.neural.convolution.ExtractWindow",
  "thinc.neural.convolution.Trainer",
  "thinc.neural.convolution.device",
  "thinc.neural.convolution.input_shape",
  "thinc.neural.convolution.is_initialized",
  "thinc.neural.convolution.name",
  "thinc.neural.convolution.ops",
  "thinc.neural.convolution.output_shape",
  "thinc.neural.doc2vecs",
  "thinc.neural.doc2vecs.SpacyWindowEncode",
  "thinc.neural.doc2vecs.Trainer",
  "thinc.neural.doc2vecs.device",
  "thinc.neural.doc2vecs.input_shape",
  "thinc.neural.doc2vecs.is_initialized",
  "thinc.neural.doc2vecs.name",
  "thinc.neural.doc2vecs.ops",
  "thinc.neural.doc2vecs.output_shape",
  "thinc.neural.exceptions",
  "thinc.neural.exceptions.ShapeError",
  "thinc.neural.id2vec",
  "thinc.neural.id2vec.Embed",
  "thinc.neural.id2vec.Trainer",
  "thinc.neural.id2vec.device",
  "thinc.neural.id2vec.input_shape",
  "thinc.neural.id2vec.is_initialized",
  "thinc.neural.id2vec.name",
  "thinc.neural.id2vec.ops",
  "thinc.neural.id2vec.output_shape",
  "thinc.neural.ids2vecs",
  "thinc.neural.ids2vecs.Trainer",
  "thinc.neural.ids2vecs.WindowEncode",
  "thinc.neural.ids2vecs.device",
  "thinc.neural.ids2vecs.input_shape",
  "thinc.neural.ids2vecs.is_initialized",
  "thinc.neural.ids2vecs.name",
  "thinc.neural.ids2vecs.ops",
  "thinc.neural.ids2vecs.output_shape",
  "thinc.neural.ops",
  "thinc.neural.ops.CupyOps",
  "thinc.neural.ops.DataPool",
  "thinc.neural.ops.NumpyOps",
  "thinc.neural.ops.Ops",
  "thinc.neural.ops.cupy",
  "thinc.neural.optimizers",
  "thinc.neural.optimizers.Adam",
  "thinc.neural.optimizers.Eve",
  "thinc.neural.optimizers.SGD",
  "thinc.neural.optimizers.clip_gradient",
  "thinc.neural.optimizers.linear_decay",
  "thinc.neural.optimizers.update_averages",
  "thinc.neural.tests",
  "thinc.neural.tests.integration",
  "thinc.neural.tests.integration.test_affine_learns",
  "thinc.neural.tests.integration.test_affine_learns.test_init",
  "thinc.neural.tests.integration.test_affine_learns.test_predict_bias",
  "thinc.neural.tests.integration.test_affine_learns.test_predict_weights",
  "thinc.neural.tests.integration.test_affine_learns.test_update",
  "thinc.neural.tests.unit",
  "thinc.neural.tests.unit.test_base",
  "thinc.neural.tests.unit.test_base.MockOps",
  "thinc.neural.tests.unit.test_base.Subclass",
  "thinc.neural.tests.unit.test_base.test_begin_update",
  "thinc.neural.tests.unit.test_base.test_predict",
  "thinc.neural.tests.unit.test_base.test_specify_shape",
  "thinc.neural.tests.unit.test_ops",
  "thinc.neural.tests.unit.test_ops.test_get_dropout_empty",
  "thinc.neural.tests.unit.test_ops.test_get_dropout_not_empty",
  "thinc.neural.tests.unit.test_vec2vec",
  "thinc.neural.tests.unit.test_vec2vec.DataPool",
  "thinc.neural.tests.unit.test_vec2vec.MockOps",
  "thinc.neural.tests.unit.test_vec2vec.ops",
  "thinc.neural.tests.unit.test_vec2vec.test_begin_update",
  "thinc.neural.tests.unit.test_vec2vec.test_finish_update",
  "thinc.neural.tests.unit.test_vec2vec.test_init",
  "thinc.neural.tests.unit.test_vec2vec.test_nr_weight",
  "thinc.neural.tests.unit.test_vec2vec.test_predict_batch_bias",
  "thinc.neural.tests.unit.test_vec2vec.test_predict_batch_not_batch",
  "thinc.neural.tests.unit.test_vec2vec.test_predict_batch_weights",
  "thinc.neural.tests.unit.test_vec2vec.test_predict_update_dim_mismatch",
  "thinc.neural.tests.unit.test_window_encode",
  "thinc.neural.tests.unit.test_window_encode.MyWindowEncode",
  "thinc.neural.tests.unit.test_window_encode.set_vector",
  "thinc.neural.tests.unit.test_window_encode.test_dot_ids",
  "thinc.neural.tests.unit.test_window_encode.test_get_ids",
  "thinc.neural.tests.unit.test_window_encode.test_init",
  "thinc.neural.tests.unit.test_window_encode.test_predict_batch",
  "thinc.neural.tests.unit.test_window_encode.test_predict_shapes",
  "thinc.neural.tests.unit.test_window_encode.test_update",
  "thinc.neural.train",
  "thinc.neural.train.Trainer",
  "thinc.neural.util",
  "thinc.neural.util.get_ops",
  "thinc.neural.util.minibatch",
  "thinc.neural.util.partition",
  "thinc.neural.util.score_model",
  "thinc.neural.vec2id",
  "thinc.neural.vec2id.MLP",
  "thinc.neural.vec2id.Trainer",
  "thinc.neural.vec2id.device",
  "thinc.neural.vec2id.input_shape",
  "thinc.neural.vec2id.is_initialized",
  "thinc.neural.vec2id.name",
  "thinc.neural.vec2id.nr_weight",
  "thinc.neural.vec2id.ops",
  "thinc.neural.vec2id.output_shape",
  "thinc.neural.vec2vec",
  "thinc.neural.vec2vec.Affine",
  "thinc.neural.vec2vec.Maxout",
  "thinc.neural.vec2vec.ReLu",
  "thinc.neural.vec2vec.Softmax",
  "thinc.neural.vec2vec._take_which",
  "thinc.neural.vecs2vec",
  "thinc.neural.vecs2vec.MaxPooling",
  "thinc.neural.vecs2vec.MeanPooling",
  "thinc.neural.vecs2vec.MinPooling",
  "thinc.neural.vecs2vec.MultiPooling",
  "thinc.neural.vecs2vecs",
  "thinc.neural.vecs2vecs.LSTM",
  "thinc.neural.vecs2vecs._get_finish_backward",
  "thinc.neural.vecs2vecs.begin_LSTM_forward",
  "thinc.neural.vecs2vecs.begin_lstm_backward",
  "thinc.neural.vecs2vecs.checkBatchGradient",
  "thinc.neural.vecs2vecs.checkSequentialMatchesBatch",
  "thinc.train",
  "thinc.train.Trainer"
 ]
}