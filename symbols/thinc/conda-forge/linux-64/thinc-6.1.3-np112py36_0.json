{
 "errors": {},
 "symbols": [
  "thinc.about",
  "thinc.about.__author__",
  "thinc.about.__email__",
  "thinc.about.__license__",
  "thinc.about.__name__",
  "thinc.about.__release__",
  "thinc.about.__summary__",
  "thinc.about.__title__",
  "thinc.about.__uri__",
  "thinc.about.__version__",
  "thinc.api",
  "thinc.api.FunctionLayer",
  "thinc.api.Params",
  "thinc.api.Trainer",
  "thinc.api.describe_params",
  "thinc.api.device",
  "thinc.api.input_shape",
  "thinc.api.layerize",
  "thinc.api.layers",
  "thinc.api.metalayerize",
  "thinc.api.multiroute",
  "thinc.api.name",
  "thinc.api.ops",
  "thinc.api.output_shape",
  "thinc.api.shape",
  "thinc.api.sink_return",
  "thinc.api.size",
  "thinc.api.split_backward",
  "thinc.extra",
  "thinc.extra._vendorized",
  "thinc.extra._vendorized.keras_data_utils",
  "thinc.extra._vendorized.keras_data_utils.get_file",
  "thinc.extra._vendorized.keras_data_utils.progbar",
  "thinc.extra._vendorized.keras_data_utils.validate_file",
  "thinc.extra._vendorized.keras_datasets",
  "thinc.extra._vendorized.keras_datasets.get_word_index",
  "thinc.extra._vendorized.keras_datasets.load_mnist",
  "thinc.extra._vendorized.keras_datasets.load_reuters",
  "thinc.extra._vendorized.keras_generic_utils",
  "thinc.extra._vendorized.keras_generic_utils.Progbar",
  "thinc.extra._vendorized.keras_generic_utils.display_table",
  "thinc.extra._vendorized.keras_generic_utils.func_dump",
  "thinc.extra._vendorized.keras_generic_utils.func_load",
  "thinc.extra._vendorized.keras_generic_utils.get_from_module",
  "thinc.extra._vendorized.keras_generic_utils.make_tuple",
  "thinc.extra.datasets",
  "thinc.extra.datasets.ANCORA_1_4_ZIP",
  "thinc.extra.datasets.EWTB_1_4_ZIP",
  "thinc.extra.datasets.GITHUB",
  "thinc.extra.datasets.ancora_pos_tags",
  "thinc.extra.datasets.ewtb_pos_tags",
  "thinc.extra.datasets.get_word_index",
  "thinc.extra.datasets.mnist",
  "thinc.extra.datasets.read_conll",
  "thinc.extra.datasets.reuters",
  "thinc.extra.datasets.ud_pos_tags",
  "thinc.extra.tests",
  "thinc.linear",
  "thinc.linear.tests",
  "thinc.linear.tests.test_avgtron",
  "thinc.linear.tests.test_avgtron.assert_near_eq",
  "thinc.linear.tests.test_avgtron.test_basic",
  "thinc.linear.tests.test_sparse_array",
  "thinc.linear.tests.test_sparse_array.test_init",
  "thinc.linear.tests.test_sparse_array.test_setitem",
  "thinc.loss",
  "thinc.loss.categorical_crossentropy",
  "thinc.neural",
  "thinc.neural._classes",
  "thinc.neural._classes._window_encode2",
  "thinc.neural._classes._window_encode2.WindowEncode",
  "thinc.neural._classes.affine",
  "thinc.neural._classes.affine.Affine",
  "thinc.neural._classes.affine.Affine.W",
  "thinc.neural._classes.affine.Affine.b",
  "thinc.neural._classes.affine.Affine.d_W",
  "thinc.neural._classes.affine.Affine.d_b",
  "thinc.neural._classes.affine.Affine.describe_params",
  "thinc.neural._classes.affine.Affine.name",
  "thinc.neural._classes.affine.Affine.shape",
  "thinc.neural._classes.affine.Params",
  "thinc.neural._classes.affine.Trainer",
  "thinc.neural._classes.affine.describe_params",
  "thinc.neural._classes.affine.device",
  "thinc.neural._classes.affine.input_shape",
  "thinc.neural._classes.affine.layers",
  "thinc.neural._classes.affine.name",
  "thinc.neural._classes.affine.ops",
  "thinc.neural._classes.affine.output_shape",
  "thinc.neural._classes.affine.shape",
  "thinc.neural._classes.affine.size",
  "thinc.neural._classes.batchnorm",
  "thinc.neural._classes.batchnorm.BatchNormalization",
  "thinc.neural._classes.batchnorm.ScaleShift",
  "thinc.neural._classes.batchnorm._forward",
  "thinc.neural._classes.batchnorm._get_d_moments",
  "thinc.neural._classes.batchnorm._get_moments",
  "thinc.neural._classes.convolution",
  "thinc.neural._classes.convolution.ExtractWindow",
  "thinc.neural._classes.convolution.Params",
  "thinc.neural._classes.convolution.Trainer",
  "thinc.neural._classes.convolution.describe_params",
  "thinc.neural._classes.convolution.device",
  "thinc.neural._classes.convolution.input_shape",
  "thinc.neural._classes.convolution.layers",
  "thinc.neural._classes.convolution.name",
  "thinc.neural._classes.convolution.ops",
  "thinc.neural._classes.convolution.output_shape",
  "thinc.neural._classes.convolution.shape",
  "thinc.neural._classes.convolution.size",
  "thinc.neural._classes.elu",
  "thinc.neural._classes.elu.ELU",
  "thinc.neural._classes.elu.bwd_elu",
  "thinc.neural._classes.elu.fwd_elu",
  "thinc.neural._classes.embed",
  "thinc.neural._classes.embed.Embed",
  "thinc.neural._classes.lstm",
  "thinc.neural._classes.lstm.LSTM",
  "thinc.neural._classes.lstm._get_finish_backward",
  "thinc.neural._classes.lstm.begin_LSTM_forward",
  "thinc.neural._classes.lstm.begin_lstm_backward",
  "thinc.neural._classes.lstm.checkBatchGradient",
  "thinc.neural._classes.lstm.checkSequentialMatchesBatch",
  "thinc.neural._classes.maxout",
  "thinc.neural._classes.maxout.Maxout",
  "thinc.neural._classes.maxout.Params",
  "thinc.neural._classes.maxout.Trainer",
  "thinc.neural._classes.maxout.W",
  "thinc.neural._classes.maxout.b",
  "thinc.neural._classes.maxout.d_W",
  "thinc.neural._classes.maxout.d_b",
  "thinc.neural._classes.maxout.describe_params",
  "thinc.neural._classes.maxout.device",
  "thinc.neural._classes.maxout.input_shape",
  "thinc.neural._classes.maxout.layers",
  "thinc.neural._classes.maxout.name",
  "thinc.neural._classes.maxout.ops",
  "thinc.neural._classes.maxout.output_shape",
  "thinc.neural._classes.maxout.shape",
  "thinc.neural._classes.maxout.size",
  "thinc.neural._classes.model",
  "thinc.neural._classes.model.Model",
  "thinc.neural._classes.model.Model.Params",
  "thinc.neural._classes.model.Model.Trainer",
  "thinc.neural._classes.model.Model.describe_params",
  "thinc.neural._classes.model.Model.device",
  "thinc.neural._classes.model.Model.input_shape",
  "thinc.neural._classes.model.Model.layers",
  "thinc.neural._classes.model.Model.name",
  "thinc.neural._classes.model.Model.ops",
  "thinc.neural._classes.model.Model.output_shape",
  "thinc.neural._classes.model.Model.shape",
  "thinc.neural._classes.model.Model.size",
  "thinc.neural._classes.model.is_batch",
  "thinc.neural._classes.relu",
  "thinc.neural._classes.relu.Params",
  "thinc.neural._classes.relu.ReLu",
  "thinc.neural._classes.relu.Trainer",
  "thinc.neural._classes.relu.W",
  "thinc.neural._classes.relu.b",
  "thinc.neural._classes.relu.d_W",
  "thinc.neural._classes.relu.d_b",
  "thinc.neural._classes.relu.describe_params",
  "thinc.neural._classes.relu.device",
  "thinc.neural._classes.relu.input_shape",
  "thinc.neural._classes.relu.layers",
  "thinc.neural._classes.relu.name",
  "thinc.neural._classes.relu.ops",
  "thinc.neural._classes.relu.output_shape",
  "thinc.neural._classes.relu.shape",
  "thinc.neural._classes.relu.size",
  "thinc.neural._classes.resnet",
  "thinc.neural._classes.resnet.Params",
  "thinc.neural._classes.resnet.ResBlock",
  "thinc.neural._classes.resnet.Residual",
  "thinc.neural._classes.resnet.Trainer",
  "thinc.neural._classes.resnet._relu",
  "thinc.neural._classes.resnet.describe_params",
  "thinc.neural._classes.resnet.device",
  "thinc.neural._classes.resnet.input_shape",
  "thinc.neural._classes.resnet.layers",
  "thinc.neural._classes.resnet.name",
  "thinc.neural._classes.resnet.ops",
  "thinc.neural._classes.resnet.output_shape",
  "thinc.neural._classes.resnet.shape",
  "thinc.neural._classes.resnet.size",
  "thinc.neural._classes.softmax",
  "thinc.neural._classes.softmax.Softmax",
  "thinc.neural._classes.window_encode",
  "thinc.neural._classes.window_encode.MaxoutWindowEncode",
  "thinc.neural._classes.window_encode._compute_hidden_layer",
  "thinc.neural._classes.window_encode._dot_ids",
  "thinc.neural._classes.window_encode._get_full_gradients",
  "thinc.neural._classes.window_encode._get_full_inputs",
  "thinc.neural._classes.window_encode._get_positions",
  "thinc.neural._classes.window_encode._get_uniq_vectors",
  "thinc.neural._classes.window_encode._zero_features_past_sequence_boundaries",
  "thinc.neural.activations",
  "thinc.neural.activations.maxout",
  "thinc.neural.activations.relu",
  "thinc.neural.activations.softmax",
  "thinc.neural.exceptions",
  "thinc.neural.exceptions.ShapeError",
  "thinc.neural.id2vec",
  "thinc.neural.ids2vecs",
  "thinc.neural.params",
  "thinc.neural.params.Params",
  "thinc.neural.tests",
  "thinc.neural.tests.integration",
  "thinc.neural.tests.integration.test_affine_learns",
  "thinc.neural.tests.integration.test_affine_learns.test_init",
  "thinc.neural.tests.integration.test_affine_learns.test_predict_bias",
  "thinc.neural.tests.integration.test_affine_learns.test_predict_weights",
  "thinc.neural.tests.integration.test_affine_learns.test_update",
  "thinc.neural.tests.integration.test_relu_gradient",
  "thinc.neural.tests.integration.test_relu_gradient.test_relu_clipped_gradients_are_zero",
  "thinc.neural.tests.integration.test_relu_gradient.test_relu_clips_negative",
  "thinc.neural.tests.strategies",
  "thinc.neural.tests.strategies.arrays_BI",
  "thinc.neural.tests.strategies.arrays_BOP",
  "thinc.neural.tests.strategies.arrays_OI_O_BI",
  "thinc.neural.tests.strategies.arrays_OPFI_BI_lengths",
  "thinc.neural.tests.strategies.get_input",
  "thinc.neural.tests.strategies.get_model",
  "thinc.neural.tests.strategies.get_ops",
  "thinc.neural.tests.strategies.get_output",
  "thinc.neural.tests.strategies.lengths",
  "thinc.neural.tests.strategies.ndarrays",
  "thinc.neural.tests.unit",
  "thinc.neural.tests.unit.test_ops",
  "thinc.neural.tests.unit.test_ops.test_argmax_computes_correctly",
  "thinc.neural.tests.unit.test_ops.test_batch_dot_computes_correctly",
  "thinc.neural.tests.unit.test_ops.test_batch_outer_computes_correctly",
  "thinc.neural.tests.unit.test_ops.test_clip_low_computes_correctly_for_zero",
  "thinc.neural.tests.unit.test_ops.test_dot_computes_correctly",
  "thinc.neural.tests.unit.test_ops.test_dropout_backward",
  "thinc.neural.tests.unit.test_ops.test_dropout_forward",
  "thinc.neural.tests.unit.test_ops.test_flatten_unflatten_roundtrip",
  "thinc.neural.tests.unit.test_ops.test_get_dropout_empty",
  "thinc.neural.tests.unit.test_ops.test_get_dropout_not_empty",
  "thinc.neural.tests.unit.test_ops.test_norm_computes_correctly",
  "thinc.neural.tests.unit.test_ops.test_softmax_sums_to_one",
  "thinc.neural.tests.unit.test_ops.test_softmax_works_inplace",
  "thinc.neural.tests.unit.test_ops.test_take_which_computes_correctly",
  "thinc.neural.tests.unit.test_window_encode",
  "thinc.neural.tests.unit.test_window_encode.MyWindowEncode",
  "thinc.neural.tests.unit.test_window_encode.set_vector",
  "thinc.neural.tests.unit.test_window_encode.test_dot_ids",
  "thinc.neural.tests.unit.test_window_encode.test_get_ids",
  "thinc.neural.tests.unit.test_window_encode.test_init",
  "thinc.neural.tests.unit.test_window_encode.test_predict_batch",
  "thinc.neural.tests.unit.test_window_encode.test_predict_shapes",
  "thinc.neural.tests.unit.test_window_encode.test_update",
  "thinc.neural.train",
  "thinc.neural.train.Trainer",
  "thinc.neural.util",
  "thinc.neural.util.Unassigned",
  "thinc.neural.util.get_ops",
  "thinc.neural.util.im2col",
  "thinc.neural.util.minibatch",
  "thinc.neural.util.partition",
  "thinc.neural.util.score_model",
  "thinc.neural.util.timeit",
  "thinc.neural.vec2vec",
  "thinc.neural.vecs2vec",
  "thinc.neural.vecs2vec.MaxPooling",
  "thinc.neural.vecs2vec.MeanPooling",
  "thinc.neural.vecs2vec.MinPooling",
  "thinc.neural.vecs2vec.MultiPooling",
  "thinc.neural.vecs2vecs"
 ]
}