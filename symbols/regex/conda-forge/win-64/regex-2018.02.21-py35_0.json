{
 "errors": {},
 "symbols": [
  "_regex_core.A",
  "_regex_core.ALNUM",
  "_regex_core.ALPHA",
  "_regex_core.ASCII",
  "_regex_core.Any",
  "_regex_core.Atomic",
  "_regex_core.B",
  "_regex_core.BESTMATCH",
  "_regex_core.BITS_PER_CODE",
  "_regex_core.BYTES_PER_CODE",
  "_regex_core.Boundary",
  "_regex_core.Branch",
  "_regex_core.CASE_FLAGS",
  "_regex_core.CASE_FLAGS_COMBINATIONS",
  "_regex_core.CASE_TEXT",
  "_regex_core.CHARACTER_ESCAPES",
  "_regex_core.CHARSET_ESCAPES",
  "_regex_core.COMMENT",
  "_regex_core.CallGroup",
  "_regex_core.CallRef",
  "_regex_core.Character",
  "_regex_core.Conditional",
  "_regex_core.D",
  "_regex_core.DEBUG",
  "_regex_core.DEFAULT_FLAGS",
  "_regex_core.DEFAULT_VERSION",
  "_regex_core.DIGITS",
  "_regex_core.DOTALL",
  "_regex_core.DefaultBoundary",
  "_regex_core.DefaultEndOfWord",
  "_regex_core.DefaultStartOfWord",
  "_regex_core.E",
  "_regex_core.ENHANCEMATCH",
  "_regex_core.EndOfLine",
  "_regex_core.EndOfString",
  "_regex_core.EndOfWord",
  "_regex_core.F",
  "_regex_core.FLAGS",
  "_regex_core.FULLCASE",
  "_regex_core.FULLIGNORECASE",
  "_regex_core.FULL_CASE_FOLDING",
  "_regex_core.FUZZY_OP",
  "_regex_core.Failure",
  "_regex_core.Fuzzy",
  "_regex_core.GLOBAL_FLAGS",
  "_regex_core.Grapheme",
  "_regex_core.GreedyRepeat",
  "_regex_core.Group",
  "_regex_core.HEX_DIGITS",
  "_regex_core.HEX_ESCAPES",
  "_regex_core.I",
  "_regex_core.IGNORECASE",
  "_regex_core.INDENT",
  "_regex_core.Info",
  "_regex_core.Keep",
  "_regex_core.L",
  "_regex_core.LOCALE",
  "_regex_core.LazyRepeat",
  "_regex_core.Literal",
  "_regex_core.LookAround",
  "_regex_core.M",
  "_regex_core.MULTILINE",
  "_regex_core.NAMED_CHAR_PART",
  "_regex_core.NOCASE",
  "_regex_core.Namespace",
  "_regex_core.OCT_DIGITS",
  "_regex_core.OP",
  "_regex_core.OPCODES",
  "_regex_core.P",
  "_regex_core.POSITION_ESCAPES",
  "_regex_core.POSITIVE_OP",
  "_regex_core.POSIX",
  "_regex_core.POS_TEXT",
  "_regex_core.PROPERTIES",
  "_regex_core.PROPERTY_NAMES",
  "_regex_core.PROPERTY_NAME_PART",
  "_regex_core.ParseError",
  "_regex_core.PossessiveRepeat",
  "_regex_core.PrecompiledCode",
  "_regex_core.Property",
  "_regex_core.Prune",
  "_regex_core.R",
  "_regex_core.REGEX_FLAGS",
  "_regex_core.REQUIRED_OP",
  "_regex_core.REVERSE",
  "_regex_core.REVERSE_OP",
  "_regex_core.Range",
  "_regex_core.RefGroup",
  "_regex_core.RegexBase",
  "_regex_core.S",
  "_regex_core.SCOPED_FLAGS",
  "_regex_core.SET_OPS",
  "_regex_core.SPECIAL_CHARS",
  "_regex_core.Scanner",
  "_regex_core.SearchAnchor",
  "_regex_core.Sequence",
  "_regex_core.SetBase",
  "_regex_core.SetDiff",
  "_regex_core.SetInter",
  "_regex_core.SetSymDiff",
  "_regex_core.SetUnion",
  "_regex_core.Skip",
  "_regex_core.Source",
  "_regex_core.StartOfLine",
  "_regex_core.StartOfString",
  "_regex_core.StartOfWord",
  "_regex_core.String",
  "_regex_core.T",
  "_regex_core.TEMPLATE",
  "_regex_core.U",
  "_regex_core.UNICODE",
  "_regex_core.UNLIMITED",
  "_regex_core.V0",
  "_regex_core.V1",
  "_regex_core.VERBOSE",
  "_regex_core.VERBS",
  "_regex_core.VERSION0",
  "_regex_core.VERSION1",
  "_regex_core.W",
  "_regex_core.WORD",
  "_regex_core.WORD_POSITION_ESCAPES",
  "_regex_core.X",
  "_regex_core.ZEROWIDTH_OP",
  "_regex_core.ZeroWidthBase",
  "_regex_core._ALL_ENCODINGS",
  "_regex_core._ALL_VERSIONS",
  "_regex_core._BINARY_VALUES",
  "_regex_core._FirstSetError",
  "_regex_core._POSIX_CLASSES",
  "_regex_core._QUANTIFIERS",
  "_regex_core._UnscopedFlagSet",
  "_regex_core.__all__",
  "_regex_core._check_firstset",
  "_regex_core._check_group_features",
  "_regex_core._compile_firstset",
  "_regex_core._compile_replacement",
  "_regex_core._flatten_code",
  "_regex_core._fold_case",
  "_regex_core._get_required_string",
  "_regex_core._parse_pattern",
  "_regex_core._shrink_cache",
  "_regex_core.append_literal",
  "_regex_core.apply_constraint",
  "_regex_core.apply_quantifier",
  "_regex_core.compile_repl_group",
  "_regex_core.error",
  "_regex_core.float_to_rational",
  "_regex_core.i",
  "_regex_core.is_above_limit",
  "_regex_core.is_cased_f",
  "_regex_core.is_cased_i",
  "_regex_core.is_decimal",
  "_regex_core.is_hexadecimal",
  "_regex_core.is_octal",
  "_regex_core.lookup_property",
  "_regex_core.make_case_flags",
  "_regex_core.make_character",
  "_regex_core.make_property",
  "_regex_core.make_ref_group",
  "_regex_core.make_sequence",
  "_regex_core.make_string_set",
  "_regex_core.name",
  "_regex_core.numeric_to_rational",
  "_regex_core.op",
  "_regex_core.parse_atomic",
  "_regex_core.parse_call_group",
  "_regex_core.parse_call_named_group",
  "_regex_core.parse_comment",
  "_regex_core.parse_common",
  "_regex_core.parse_conditional",
  "_regex_core.parse_constraint",
  "_regex_core.parse_cost_constraint",
  "_regex_core.parse_cost_equation",
  "_regex_core.parse_cost_limit",
  "_regex_core.parse_cost_term",
  "_regex_core.parse_count",
  "_regex_core.parse_escape",
  "_regex_core.parse_extension",
  "_regex_core.parse_flag_set",
  "_regex_core.parse_flags",
  "_regex_core.parse_fuzzy",
  "_regex_core.parse_group_ref",
  "_regex_core.parse_hex_escape",
  "_regex_core.parse_limited_quantifier",
  "_regex_core.parse_literal_and_element",
  "_regex_core.parse_lookaround",
  "_regex_core.parse_name",
  "_regex_core.parse_numeric_escape",
  "_regex_core.parse_octal_escape",
  "_regex_core.parse_paren",
  "_regex_core.parse_positional_flags",
  "_regex_core.parse_posix_class",
  "_regex_core.parse_property",
  "_regex_core.parse_quantifier",
  "_regex_core.parse_repl_hex_escape",
  "_regex_core.parse_repl_named_char",
  "_regex_core.parse_sequence",
  "_regex_core.parse_set",
  "_regex_core.parse_string_set",
  "_regex_core.parse_subpattern",
  "_regex_core.prop_id",
  "_regex_core.prop_name",
  "_regex_core.prop_values",
  "_regex_core.standardise_name",
  "_regex_core.val_id",
  "_regex_core.val_name",
  "_regex_core.values",
  "regex.DEFAULT_VERSION",
  "regex.Regex",
  "regex._MAXCACHE",
  "regex._MAXREPCACHE",
  "regex._METACHARS",
  "regex.__all__",
  "regex.__version__",
  "regex._cache",
  "regex._cache_lock",
  "regex._compile",
  "regex._locale_sensitive",
  "regex._named_args",
  "regex._pattern_type",
  "regex._pickle",
  "regex._replacement_cache",
  "regex.compile",
  "regex.escape",
  "regex.findall",
  "regex.finditer",
  "regex.fullmatch",
  "regex.match",
  "regex.purge",
  "regex.search",
  "regex.split",
  "regex.sub",
  "regex.template",
  "test_regex.BytesSubclass",
  "test_regex.RegexTests",
  "test_regex.StrSubclass",
  "test_regex.test_main"
 ]
}