{
 "errors": {
  "jupyter_core.__main__": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "jupyter_core.__main__",
  "jupyter_core.__version__",
  "jupyter_core.application",
  "jupyter_core.application.JupyterApp",
  "jupyter_core.application.NoStart",
  "jupyter_core.application.base_aliases",
  "jupyter_core.application.base_flags",
  "jupyter_core.application.raw_input",
  "jupyter_core.command",
  "jupyter_core.command.JupyterParser",
  "jupyter_core.command._execvp",
  "jupyter_core.command._jupyter_abspath",
  "jupyter_core.command._path_with_self",
  "jupyter_core.command.jupyter_parser",
  "jupyter_core.command.list_subcommands",
  "jupyter_core.command.main",
  "jupyter_core.migrate",
  "jupyter_core.migrate.JupyterMigrate",
  "jupyter_core.migrate.config_migrations",
  "jupyter_core.migrate.config_substitutions",
  "jupyter_core.migrate.custom_dst_t",
  "jupyter_core.migrate.custom_src_t",
  "jupyter_core.migrate.dst",
  "jupyter_core.migrate.get_ipython_dir",
  "jupyter_core.migrate.main",
  "jupyter_core.migrate.migrate",
  "jupyter_core.migrate.migrations",
  "jupyter_core.migrate.pjoin",
  "jupyter_core.migrate.regex",
  "jupyter_core.migrate.security_file",
  "jupyter_core.migrate.src",
  "jupyter_core.paths",
  "jupyter_core.paths.ENV_CONFIG_PATH",
  "jupyter_core.paths.ENV_JUPYTER_PATH",
  "jupyter_core.paths.SYSTEM_CONFIG_PATH",
  "jupyter_core.paths.SYSTEM_JUPYTER_PATH",
  "jupyter_core.paths.UF_HIDDEN",
  "jupyter_core.paths._dtemps",
  "jupyter_core.paths._mkdtemp_once",
  "jupyter_core.paths.allow_insecure_writes",
  "jupyter_core.paths.exists",
  "jupyter_core.paths.get_file_mode",
  "jupyter_core.paths.get_home_dir",
  "jupyter_core.paths.is_file_hidden",
  "jupyter_core.paths.is_file_hidden_posix",
  "jupyter_core.paths.is_file_hidden_win",
  "jupyter_core.paths.is_hidden",
  "jupyter_core.paths.issue_insecure_write_warning",
  "jupyter_core.paths.jupyter_config_dir",
  "jupyter_core.paths.jupyter_config_path",
  "jupyter_core.paths.jupyter_data_dir",
  "jupyter_core.paths.jupyter_path",
  "jupyter_core.paths.jupyter_runtime_dir",
  "jupyter_core.paths.pjoin",
  "jupyter_core.paths.programdata",
  "jupyter_core.paths.secure_write",
  "jupyter_core.paths.win32_restrict_file_to_user",
  "jupyter_core.tests",
  "jupyter_core.tests.dotipython",
  "jupyter_core.tests.dotipython.profile_default.ipython_config.c",
  "jupyter_core.tests.dotipython.profile_default.ipython_console_config.c",
  "jupyter_core.tests.dotipython.profile_default.ipython_kernel_config.c",
  "jupyter_core.tests.dotipython_empty",
  "jupyter_core.tests.dotipython_empty.profile_default.ipython_config.c",
  "jupyter_core.tests.dotipython_empty.profile_default.ipython_console_config.c",
  "jupyter_core.tests.dotipython_empty.profile_default.ipython_kernel_config.c",
  "jupyter_core.tests.dotipython_empty.profile_default.ipython_nbconvert_config.c",
  "jupyter_core.tests.dotipython_empty.profile_default.ipython_notebook_config.c",
  "jupyter_core.tests.mocking",
  "jupyter_core.tests.mocking.MultiPatch",
  "jupyter_core.tests.mocking.darwin",
  "jupyter_core.tests.mocking.linux",
  "jupyter_core.tests.mocking.windows",
  "jupyter_core.tests.test_application",
  "jupyter_core.tests.test_application.DummyApp",
  "jupyter_core.tests.test_application.JupyterApp",
  "jupyter_core.tests.test_application.NoStart",
  "jupyter_core.tests.test_application._dummy_config",
  "jupyter_core.tests.test_application.pjoin",
  "jupyter_core.tests.test_application.test_basic",
  "jupyter_core.tests.test_application.test_cli_override",
  "jupyter_core.tests.test_application.test_custom_config",
  "jupyter_core.tests.test_application.test_default_traits",
  "jupyter_core.tests.test_application.test_generate_config",
  "jupyter_core.tests.test_application.test_load_bad_config",
  "jupyter_core.tests.test_application.test_load_config",
  "jupyter_core.tests.test_application.test_runtime_dir_changed",
  "jupyter_core.tests.test_command",
  "jupyter_core.tests.test_command.__version__",
  "jupyter_core.tests.test_command.assert_output",
  "jupyter_core.tests.test_command.get_jupyter_output",
  "jupyter_core.tests.test_command.jupyter_config_dir",
  "jupyter_core.tests.test_command.jupyter_config_path",
  "jupyter_core.tests.test_command.jupyter_data_dir",
  "jupyter_core.tests.test_command.jupyter_path",
  "jupyter_core.tests.test_command.jupyter_runtime_dir",
  "jupyter_core.tests.test_command.list_subcommands",
  "jupyter_core.tests.test_command.test_config_dir",
  "jupyter_core.tests.test_command.test_data_dir",
  "jupyter_core.tests.test_command.test_help",
  "jupyter_core.tests.test_command.test_not_on_path",
  "jupyter_core.tests.test_command.test_path_priority",
  "jupyter_core.tests.test_command.test_paths",
  "jupyter_core.tests.test_command.test_runtime_dir",
  "jupyter_core.tests.test_command.test_subcommand_list",
  "jupyter_core.tests.test_command.test_subcommand_not_found",
  "jupyter_core.tests.test_command.test_subcommand_not_given",
  "jupyter_core.tests.test_command.write_executable",
  "jupyter_core.tests.test_migrate",
  "jupyter_core.tests.test_migrate.assert_files_equal",
  "jupyter_core.tests.test_migrate.dotipython",
  "jupyter_core.tests.test_migrate.dotipython_empty",
  "jupyter_core.tests.test_migrate.ensure_dir_exists",
  "jupyter_core.tests.test_migrate.here",
  "jupyter_core.tests.test_migrate.jupyter_data_dir",
  "jupyter_core.tests.test_migrate.migrate",
  "jupyter_core.tests.test_migrate.pjoin",
  "jupyter_core.tests.test_migrate.td",
  "jupyter_core.tests.test_migrate.test_migrate",
  "jupyter_core.tests.test_migrate.touch",
  "jupyter_core.tests.test_paths",
  "jupyter_core.tests.test_paths.ENV_JUPYTER_PATH",
  "jupyter_core.tests.test_paths.appdata",
  "jupyter_core.tests.test_paths.config_env",
  "jupyter_core.tests.test_paths.home_jupyter",
  "jupyter_core.tests.test_paths.is_file_hidden",
  "jupyter_core.tests.test_paths.is_hidden",
  "jupyter_core.tests.test_paths.jupyter_config_dir",
  "jupyter_core.tests.test_paths.jupyter_config_env",
  "jupyter_core.tests.test_paths.jupyter_data_dir",
  "jupyter_core.tests.test_paths.jupyter_path",
  "jupyter_core.tests.test_paths.jupyter_runtime_dir",
  "jupyter_core.tests.test_paths.no_config_env",
  "jupyter_core.tests.test_paths.no_xdg",
  "jupyter_core.tests.test_paths.paths",
  "jupyter_core.tests.test_paths.pjoin",
  "jupyter_core.tests.test_paths.realpath",
  "jupyter_core.tests.test_paths.secure_write",
  "jupyter_core.tests.test_paths.test_config_dir_darwin",
  "jupyter_core.tests.test_paths.test_config_dir_linux",
  "jupyter_core.tests.test_paths.test_config_dir_windows",
  "jupyter_core.tests.test_paths.test_data_dir_darwin",
  "jupyter_core.tests.test_paths.test_data_dir_env",
  "jupyter_core.tests.test_paths.test_data_dir_linux",
  "jupyter_core.tests.test_paths.test_data_dir_windows",
  "jupyter_core.tests.test_paths.test_is_hidden",
  "jupyter_core.tests.test_paths.test_jupyter_path",
  "jupyter_core.tests.test_paths.test_runtime_dir_darwin",
  "jupyter_core.tests.test_paths.test_runtime_dir_env",
  "jupyter_core.tests.test_paths.test_runtime_dir_linux",
  "jupyter_core.tests.test_paths.test_runtime_dir_windows",
  "jupyter_core.tests.test_paths.test_secure_write_unix",
  "jupyter_core.tests.test_paths.test_secure_write_win32",
  "jupyter_core.tests.test_paths.xdg",
  "jupyter_core.tests.test_paths.xdg_env",
  "jupyter_core.troubleshoot",
  "jupyter_core.troubleshoot.get_data",
  "jupyter_core.troubleshoot.main",
  "jupyter_core.troubleshoot.subs",
  "jupyter_core.utils",
  "jupyter_core.utils.ensure_dir_exists",
  "jupyter_core.utils.shutil_which",
  "jupyter_core.utils.shutil_which.which",
  "jupyter_core.version",
  "jupyter_core.version.__version__",
  "jupyter_core.version.version_info",
  "jupyter_core.version_info"
 ]
}