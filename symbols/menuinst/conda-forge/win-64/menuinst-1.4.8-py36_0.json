{
 "errors": {},
 "symbols": [
  "menuinst.Menu",
  "menuinst.ShortCut",
  "menuinst.__version__",
  "menuinst._install",
  "menuinst._version",
  "menuinst._version.get_versions",
  "menuinst._version.version_json",
  "menuinst.darwin",
  "menuinst.darwin.Application",
  "menuinst.darwin.Menu",
  "menuinst.darwin.ShortCut",
  "menuinst.darwin.sc",
  "menuinst.freedesktop",
  "menuinst.freedesktop.make_desktop_entry",
  "menuinst.freedesktop.make_directory_entry",
  "menuinst.install",
  "menuinst.isUserAdmin",
  "menuinst.knownfolders",
  "menuinst.knownfolders.FOLDERID",
  "menuinst.knownfolders.GUID",
  "menuinst.knownfolders.PathNotFoundException",
  "menuinst.knownfolders.PathNotVerifiableException",
  "menuinst.knownfolders.UserHandle",
  "menuinst.knownfolders._CoTaskMemFree",
  "menuinst.knownfolders._SHGetKnownFolderPath",
  "menuinst.knownfolders.folderid",
  "menuinst.knownfolders.get_folder_path",
  "menuinst.knownfolders.get_path",
  "menuinst.linux",
  "menuinst.linux.Menu",
  "menuinst.linux.ShortCut",
  "menuinst.linux.add_child",
  "menuinst.linux.appdir",
  "menuinst.linux.confdir",
  "menuinst.linux.datadir",
  "menuinst.linux.ensure_menu_file",
  "menuinst.linux.indent",
  "menuinst.linux.is_valid_menu_file",
  "menuinst.linux.menu_file",
  "menuinst.linux.mode",
  "menuinst.linux.sys_menu_file",
  "menuinst.linux.write_menu_file",
  "menuinst.main",
  "menuinst.main.main",
  "menuinst.runAsAdmin",
  "menuinst.utils",
  "menuinst.utils.rm_empty_dir",
  "menuinst.utils.rm_rf",
  "menuinst.win32",
  "menuinst.win32.DbgViewHandler",
  "menuinst.win32.Menu",
  "menuinst.win32.OutputDebugString",
  "menuinst.win32.ShortCut",
  "menuinst.win32.dbgview",
  "menuinst.win32.dirs_src",
  "menuinst.win32.extend_script_args",
  "menuinst.win32.folder_path",
  "menuinst.win32.get_python_args_for_subprocess",
  "menuinst.win32.logger",
  "menuinst.win32.quoted",
  "menuinst.win32.stream_handler",
  "menuinst.win32.substitute_env_variables",
  "menuinst.win32.to_bytes",
  "menuinst.win32.to_unicode",
  "menuinst.win32.unicode_prefix",
  "menuinst.win_elevate",
  "menuinst.win_elevate.isUserAdmin",
  "menuinst.win_elevate.runAsAdmin",
  "menuinst.win_elevate.text_type",
  "menuinst.win_elevate.userIsAdmin"
 ]
}