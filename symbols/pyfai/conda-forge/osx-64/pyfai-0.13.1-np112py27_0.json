{
 "errors": {},
 "symbols": [
  "pyFAI.AzimuthalIntegrator",
  "pyFAI.Detector",
  "pyFAI.OCLFullSplit",
  "pyFAI.OCLFullSplit.OCLFullSplit1d",
  "pyFAI.OCLFullSplit.__authors__",
  "pyFAI.OCLFullSplit.__contact__",
  "pyFAI.OCLFullSplit.__copyright__",
  "pyFAI.OCLFullSplit.__date__",
  "pyFAI.OCLFullSplit.__license__",
  "pyFAI.OCLFullSplit.logger",
  "pyFAI.__author__",
  "pyFAI.__date__",
  "pyFAI.__license__",
  "pyFAI._version",
  "pyFAI._version.MAJOR",
  "pyFAI._version.MICRO",
  "pyFAI._version.MINOR",
  "pyFAI._version.RELEASE_LEVEL_VALUE",
  "pyFAI._version.RELEV",
  "pyFAI._version.SERIAL",
  "pyFAI._version.__all__",
  "pyFAI._version.__authors__",
  "pyFAI._version.__copyright__",
  "pyFAI._version.__date__",
  "pyFAI._version.__docformat__",
  "pyFAI._version.__license__",
  "pyFAI._version.__status__",
  "pyFAI._version._version_info",
  "pyFAI._version.calc_hexversion",
  "pyFAI._version.date",
  "pyFAI._version.debianversion",
  "pyFAI._version.hexversion",
  "pyFAI._version.prerel",
  "pyFAI._version.strictversion",
  "pyFAI._version.version",
  "pyFAI._version.version_info",
  "pyFAI.average",
  "pyFAI.average.AlgorithmCreationError",
  "pyFAI.average.Average",
  "pyFAI.average.ImageAccumulatorFilter",
  "pyFAI.average.ImageReductionFilter",
  "pyFAI.average.ImageStackFilter",
  "pyFAI.average.MaxAveraging",
  "pyFAI.average.MeanAveraging",
  "pyFAI.average.MinAveraging",
  "pyFAI.average.MonitorNotFound",
  "pyFAI.average.MultiFilesAverageWriter",
  "pyFAI.average.SumAveraging",
  "pyFAI.average._AVERAGE_DARK_FILTERS",
  "pyFAI.average._FILTERS",
  "pyFAI.average._FILTER_NAME_MAPPING",
  "pyFAI.average.__authors__",
  "pyFAI.average.__contact__",
  "pyFAI.average.__copyright__",
  "pyFAI.average.__date__",
  "pyFAI.average.__license__",
  "pyFAI.average.__status__",
  "pyFAI.average._get_monitor_value",
  "pyFAI.average._normalize_image_stack",
  "pyFAI.average.average_dark",
  "pyFAI.average.average_images",
  "pyFAI.average.bounding_box",
  "pyFAI.average.common_prefix",
  "pyFAI.average.create_algorithm",
  "pyFAI.average.f",
  "pyFAI.average.is_algorithm_name_exists",
  "pyFAI.average.logger",
  "pyFAI.average.remove_saturated_pixel",
  "pyFAI.azimuthalIntegrator",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.DEFAULT_METHOD",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.darkcurrent",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.empty",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.flatfield",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd",
  "pyFAI.azimuthalIntegrator.AzimuthalIntegrator.xrpd2",
  "pyFAI.azimuthalIntegrator.__author__",
  "pyFAI.azimuthalIntegrator.__contact__",
  "pyFAI.azimuthalIntegrator.__copyright__",
  "pyFAI.azimuthalIntegrator.__date__",
  "pyFAI.azimuthalIntegrator.__docformat__",
  "pyFAI.azimuthalIntegrator.__license__",
  "pyFAI.azimuthalIntegrator.__status__",
  "pyFAI.azimuthalIntegrator.chia",
  "pyFAI.azimuthalIntegrator.correct_SA_spline",
  "pyFAI.azimuthalIntegrator.dist",
  "pyFAI.azimuthalIntegrator.dssa",
  "pyFAI.azimuthalIntegrator.error",
  "pyFAI.azimuthalIntegrator.histogram",
  "pyFAI.azimuthalIntegrator.logger",
  "pyFAI.azimuthalIntegrator.mask",
  "pyFAI.azimuthalIntegrator.maskfile",
  "pyFAI.azimuthalIntegrator.ocl_azim",
  "pyFAI.azimuthalIntegrator.ocl_azim_csr",
  "pyFAI.azimuthalIntegrator.ocl_azim_lut",
  "pyFAI.azimuthalIntegrator.ocl_sort",
  "pyFAI.azimuthalIntegrator.pixel1",
  "pyFAI.azimuthalIntegrator.pixel2",
  "pyFAI.azimuthalIntegrator.poni1",
  "pyFAI.azimuthalIntegrator.poni2",
  "pyFAI.azimuthalIntegrator.qa",
  "pyFAI.azimuthalIntegrator.ra",
  "pyFAI.azimuthalIntegrator.read",
  "pyFAI.azimuthalIntegrator.rot1",
  "pyFAI.azimuthalIntegrator.rot2",
  "pyFAI.azimuthalIntegrator.rot3",
  "pyFAI.azimuthalIntegrator.spline",
  "pyFAI.azimuthalIntegrator.splineFile",
  "pyFAI.azimuthalIntegrator.splitBBox",
  "pyFAI.azimuthalIntegrator.splitBBoxCSR",
  "pyFAI.azimuthalIntegrator.splitBBoxLUT",
  "pyFAI.azimuthalIntegrator.splitPixel",
  "pyFAI.azimuthalIntegrator.splitPixelFullCSR",
  "pyFAI.azimuthalIntegrator.ttha",
  "pyFAI.azimuthalIntegrator.wavelength",
  "pyFAI.azimuthalIntegrator.write",
  "pyFAI.benchmark.Bench",
  "pyFAI.benchmark.PONIS",
  "pyFAI.benchmark.__author__",
  "pyFAI.benchmark.__copyright__",
  "pyFAI.benchmark.__date__",
  "pyFAI.benchmark.__license__",
  "pyFAI.benchmark.bench",
  "pyFAI.benchmark.datasets",
  "pyFAI.benchmark.ds_list",
  "pyFAI.benchmark.pylab",
  "pyFAI.benchmark.run",
  "pyFAI.benchmark.run_benchmark",
  "pyFAI.benchmark.update_fig",
  "pyFAI.benchmarks",
  "pyFAI.blob_detection",
  "pyFAI.blob_detection.BlobDetection",
  "pyFAI.blob_detection.__authors__",
  "pyFAI.blob_detection.__contact__",
  "pyFAI.blob_detection.__copyright__",
  "pyFAI.blob_detection.__date__",
  "pyFAI.blob_detection.__docformat__",
  "pyFAI.blob_detection.__license__",
  "pyFAI.blob_detection.__status__",
  "pyFAI.blob_detection._blob",
  "pyFAI.blob_detection.image_test",
  "pyFAI.blob_detection.local_max",
  "pyFAI.blob_detection.logger",
  "pyFAI.blob_detection.make_gaussian",
  "pyFAI.blob_detection.pyFAI_morphology",
  "pyFAI.calc_hexversion",
  "pyFAI.calibrant",
  "pyFAI.calibrant.ALL_CALIBRANTS",
  "pyFAI.calibrant.Calibrant",
  "pyFAI.calibrant.Cell",
  "pyFAI.calibrant.__author__",
  "pyFAI.calibrant.__contact__",
  "pyFAI.calibrant.__copyright__",
  "pyFAI.calibrant.__date__",
  "pyFAI.calibrant.__license__",
  "pyFAI.calibrant.__status__",
  "pyFAI.calibrant.calibrant_factory",
  "pyFAI.calibrant.epsilon",
  "pyFAI.calibrant.logger",
  "pyFAI.calibration",
  "pyFAI.calibration.AbstractCalibration",
  "pyFAI.calibration.Calibration",
  "pyFAI.calibration.CheckCalib",
  "pyFAI.calibration.MultiCalib",
  "pyFAI.calibration.Recalibration",
  "pyFAI.calibration.__author__",
  "pyFAI.calibration.__contact__",
  "pyFAI.calibration.__copyright__",
  "pyFAI.calibration.__date__",
  "pyFAI.calibration.__license__",
  "pyFAI.calibration.__status__",
  "pyFAI.calibration.calib",
  "pyFAI.calibration.get_detector",
  "pyFAI.calibration.logger",
  "pyFAI.calibration.pyFAI_morphology",
  "pyFAI.containers",
  "pyFAI.containers.Integrate1dResult",
  "pyFAI.containers.Integrate2dResult",
  "pyFAI.containers.IntegrateResult",
  "pyFAI.containers.__author__",
  "pyFAI.containers.__contact__",
  "pyFAI.containers.__copyright__",
  "pyFAI.containers.__date__",
  "pyFAI.containers.__license__",
  "pyFAI.containers.__status__",
  "pyFAI.date",
  "pyFAI.decorators",
  "pyFAI.decorators.__author__",
  "pyFAI.decorators.__contact__",
  "pyFAI.decorators.__copyright__",
  "pyFAI.decorators.__date__",
  "pyFAI.decorators.__doc__",
  "pyFAI.decorators.__docformat__",
  "pyFAI.decorators.__license__",
  "pyFAI.decorators.__status__",
  "pyFAI.decorators.deprecated",
  "pyFAI.decorators.depreclog",
  "pyFAI.decorators.timeit",
  "pyFAI.decorators.timelog",
  "pyFAI.depreclog",
  "pyFAI.detector_factory",
  "pyFAI.detectors",
  "pyFAI.detectors.ADSC_Q210",
  "pyFAI.detectors.ADSC_Q270",
  "pyFAI.detectors.ADSC_Q315",
  "pyFAI.detectors.ADSC_Q4",
  "pyFAI.detectors.ALL_DETECTORS",
  "pyFAI.detectors.Aarhus",
  "pyFAI.detectors.Apex2",
  "pyFAI.detectors.Basler",
  "pyFAI.detectors.Detector",
  "pyFAI.detectors.Dexela2923",
  "pyFAI.detectors.Eiger",
  "pyFAI.detectors.FReLoN",
  "pyFAI.detectors.Fairchild",
  "pyFAI.detectors.HF_130K",
  "pyFAI.detectors.HF_1M",
  "pyFAI.detectors.HF_262k",
  "pyFAI.detectors.HF_2M",
  "pyFAI.detectors.HF_4M",
  "pyFAI.detectors.HF_9M",
  "pyFAI.detectors.ImXPadS10",
  "pyFAI.detectors.ImXPadS140",
  "pyFAI.detectors.ImXPadS70",
  "pyFAI.detectors.Mar345",
  "pyFAI.detectors.NexusDetector",
  "pyFAI.detectors.Perkin",
  "pyFAI.detectors.Pilatus",
  "pyFAI.detectors.Pixium",
  "pyFAI.detectors.RaspberryPi5M",
  "pyFAI.detectors.RaspberryPi8M",
  "pyFAI.detectors.Rayonix",
  "pyFAI.detectors.Titan",
  "pyFAI.detectors.Xpad_flat",
  "pyFAI.detectors.__author__",
  "pyFAI.detectors.__contact__",
  "pyFAI.detectors.__copyright__",
  "pyFAI.detectors.__date__",
  "pyFAI.detectors.__license__",
  "pyFAI.detectors.__status__",
  "pyFAI.detectors.bilinear",
  "pyFAI.detectors.detector_factory",
  "pyFAI.detectors.epsilon",
  "pyFAI.detectors.fabio",
  "pyFAI.detectors.load",
  "pyFAI.detectors.logger",
  "pyFAI.diffmap",
  "pyFAI.diffmap.DIGITS",
  "pyFAI.diffmap.DiffMap",
  "pyFAI.diffmap.Position",
  "pyFAI.diffmap.__author__",
  "pyFAI.diffmap.__contact__",
  "pyFAI.diffmap.__copyright__",
  "pyFAI.diffmap.__date__",
  "pyFAI.diffmap.__doc__",
  "pyFAI.diffmap.__docformat__",
  "pyFAI.diffmap.__license__",
  "pyFAI.diffmap.__status__",
  "pyFAI.diffmap.bytes",
  "pyFAI.diffmap.logger",
  "pyFAI.diffmap_widget",
  "pyFAI.diffmap_widget.DiffMapWidget",
  "pyFAI.diffmap_widget.IntegrateWidget",
  "pyFAI.diffmap_widget.TreeModel",
  "pyFAI.diffmap_widget.__author__",
  "pyFAI.diffmap_widget.__contact__",
  "pyFAI.diffmap_widget.__copyright__",
  "pyFAI.diffmap_widget.__date__",
  "pyFAI.diffmap_widget.__doc__",
  "pyFAI.diffmap_widget.__docformat__",
  "pyFAI.diffmap_widget.__license__",
  "pyFAI.diffmap_widget.__status__",
  "pyFAI.diffmap_widget.logger",
  "pyFAI.directories",
  "pyFAI.directories.PYFAI_DATA",
  "pyFAI.directories.__author__",
  "pyFAI.directories.__contact__",
  "pyFAI.directories.__copyright__",
  "pyFAI.directories.__date__",
  "pyFAI.directories.__license__",
  "pyFAI.directories.__status__",
  "pyFAI.directories.data_dir",
  "pyFAI.directories.err",
  "pyFAI.directories.logger",
  "pyFAI.directories.testimages",
  "pyFAI.distortion",
  "pyFAI.distortion.Distortion",
  "pyFAI.distortion.Quad",
  "pyFAI.distortion.__author__",
  "pyFAI.distortion.__contact__",
  "pyFAI.distortion.__copyright__",
  "pyFAI.distortion.__date__",
  "pyFAI.distortion.__license__",
  "pyFAI.distortion.__status__",
  "pyFAI.distortion._distortion",
  "pyFAI.distortion.det",
  "pyFAI.distortion.dis",
  "pyFAI.distortion.linalg",
  "pyFAI.distortion.logger",
  "pyFAI.distortion.lut",
  "pyFAI.distortion.ocl_azim_csr",
  "pyFAI.distortion.ocl_azim_lut",
  "pyFAI.distortion.test",
  "pyFAI.distortion.v",
  "pyFAI.ext",
  "pyFAI.geometry",
  "pyFAI.geometry.Geometry",
  "pyFAI.geometry.Geometry.chia",
  "pyFAI.geometry.Geometry.correct_SA_spline",
  "pyFAI.geometry.Geometry.dist",
  "pyFAI.geometry.Geometry.dssa",
  "pyFAI.geometry.Geometry.mask",
  "pyFAI.geometry.Geometry.maskfile",
  "pyFAI.geometry.Geometry.pixel1",
  "pyFAI.geometry.Geometry.pixel2",
  "pyFAI.geometry.Geometry.poni1",
  "pyFAI.geometry.Geometry.poni2",
  "pyFAI.geometry.Geometry.qa",
  "pyFAI.geometry.Geometry.ra",
  "pyFAI.geometry.Geometry.read",
  "pyFAI.geometry.Geometry.rot1",
  "pyFAI.geometry.Geometry.rot2",
  "pyFAI.geometry.Geometry.rot3",
  "pyFAI.geometry.Geometry.spline",
  "pyFAI.geometry.Geometry.splineFile",
  "pyFAI.geometry.Geometry.ttha",
  "pyFAI.geometry.Geometry.wavelength",
  "pyFAI.geometry.Geometry.write",
  "pyFAI.geometry.__author__",
  "pyFAI.geometry.__contact__",
  "pyFAI.geometry.__copyright__",
  "pyFAI.geometry.__date__",
  "pyFAI.geometry.__docformat__",
  "pyFAI.geometry.__license__",
  "pyFAI.geometry.__status__",
  "pyFAI.geometry._geometry",
  "pyFAI.geometry.bilinear",
  "pyFAI.geometry.logger",
  "pyFAI.geometryRefinement",
  "pyFAI.geometryRefinement.AzimuthalIntegrator",
  "pyFAI.geometryRefinement.DEFAULT_METHOD",
  "pyFAI.geometryRefinement.GeometryRefinement",
  "pyFAI.geometryRefinement.ROCA",
  "pyFAI.geometryRefinement.WindowsError",
  "pyFAI.geometryRefinement.__author__",
  "pyFAI.geometryRefinement.__contact__",
  "pyFAI.geometryRefinement.__copyright__",
  "pyFAI.geometryRefinement.__date__",
  "pyFAI.geometryRefinement.__license__",
  "pyFAI.geometryRefinement.__status__",
  "pyFAI.geometryRefinement.chia",
  "pyFAI.geometryRefinement.correct_SA_spline",
  "pyFAI.geometryRefinement.darkcurrent",
  "pyFAI.geometryRefinement.dist",
  "pyFAI.geometryRefinement.dssa",
  "pyFAI.geometryRefinement.empty",
  "pyFAI.geometryRefinement.flatfield",
  "pyFAI.geometryRefinement.logger",
  "pyFAI.geometryRefinement.mask",
  "pyFAI.geometryRefinement.maskfile",
  "pyFAI.geometryRefinement.pixel1",
  "pyFAI.geometryRefinement.pixel2",
  "pyFAI.geometryRefinement.poni1",
  "pyFAI.geometryRefinement.poni2",
  "pyFAI.geometryRefinement.qa",
  "pyFAI.geometryRefinement.ra",
  "pyFAI.geometryRefinement.read",
  "pyFAI.geometryRefinement.rot1",
  "pyFAI.geometryRefinement.rot2",
  "pyFAI.geometryRefinement.rot3",
  "pyFAI.geometryRefinement.spline",
  "pyFAI.geometryRefinement.splineFile",
  "pyFAI.geometryRefinement.ttha",
  "pyFAI.geometryRefinement.wavelength",
  "pyFAI.geometryRefinement.write",
  "pyFAI.geometryRefinement.xrpd",
  "pyFAI.geometryRefinement.xrpd2",
  "pyFAI.grid",
  "pyFAI.grid.Grid",
  "pyFAI.grid.__author__",
  "pyFAI.grid.__contact__",
  "pyFAI.grid.__copyright__",
  "pyFAI.grid.__date__",
  "pyFAI.grid.__docformat__",
  "pyFAI.grid.__license__",
  "pyFAI.grid.__status__",
  "pyFAI.grid.logger",
  "pyFAI.gui",
  "pyFAI.gui.__authors__",
  "pyFAI.gui.__date__",
  "pyFAI.gui.__license__",
  "pyFAI.gui._pyside_dynamic",
  "pyFAI.gui._pyside_dynamic.UiLoader",
  "pyFAI.gui._pyside_dynamic._logger",
  "pyFAI.gui._pyside_dynamic.loadUi",
  "pyFAI.gui.matplotlib",
  "pyFAI.gui.matplotlib.__authors__",
  "pyFAI.gui.matplotlib.__date__",
  "pyFAI.gui.matplotlib.__license__",
  "pyFAI.gui.matplotlib._logger",
  "pyFAI.gui.qt",
  "pyFAI.gui.qt.BINDING",
  "pyFAI.gui.qt.HAS_SVG",
  "pyFAI.gui.qt.Property",
  "pyFAI.gui.qt.Signal",
  "pyFAI.gui.qt.Slot",
  "pyFAI.gui.qt.__authors__",
  "pyFAI.gui.qt.__date__",
  "pyFAI.gui.qt.__license__",
  "pyFAI.gui.qt._logger",
  "pyFAI.gui.qt.pyqtSignal",
  "pyFAI.gui.qt.supportedImageFormats",
  "pyFAI.gui.utils",
  "pyFAI.gui.utils.Event",
  "pyFAI.gui.utils.__author__",
  "pyFAI.gui.utils.__contact__",
  "pyFAI.gui.utils.__copyright__",
  "pyFAI.gui.utils.__date__",
  "pyFAI.gui.utils.__license__",
  "pyFAI.gui.utils.__status__",
  "pyFAI.gui.utils.main_loop",
  "pyFAI.gui.utils.maximize_fig",
  "pyFAI.gui.utils.update_fig",
  "pyFAI.hexversion",
  "pyFAI.integrate_widget",
  "pyFAI.integrate_widget.AIWidget",
  "pyFAI.integrate_widget.UIC",
  "pyFAI.integrate_widget.__author__",
  "pyFAI.integrate_widget.__contact__",
  "pyFAI.integrate_widget.__copyright__",
  "pyFAI.integrate_widget.__date__",
  "pyFAI.integrate_widget.__license__",
  "pyFAI.integrate_widget.__status__",
  "pyFAI.integrate_widget.logger",
  "pyFAI.io",
  "pyFAI.io.AsciiWriter",
  "pyFAI.io.DefaultAiWriter",
  "pyFAI.io.FabioWriter",
  "pyFAI.io.HDF5Writer",
  "pyFAI.io.Nexus",
  "pyFAI.io.Writer",
  "pyFAI.io.__author__",
  "pyFAI.io.__contact__",
  "pyFAI.io.__copyright__",
  "pyFAI.io.__date__",
  "pyFAI.io.__docformat__",
  "pyFAI.io.__license__",
  "pyFAI.io.__status__",
  "pyFAI.io.error",
  "pyFAI.io.from_isotime",
  "pyFAI.io.get_isotime",
  "pyFAI.io.h5py",
  "pyFAI.io.is_hdf5",
  "pyFAI.io.logger",
  "pyFAI.load",
  "pyFAI.massif",
  "pyFAI.massif.Massif",
  "pyFAI.massif.WindowsError",
  "pyFAI.massif.__author__",
  "pyFAI.massif.__contact__",
  "pyFAI.massif.__copyright__",
  "pyFAI.massif.__date__",
  "pyFAI.massif.__license__",
  "pyFAI.massif.__status__",
  "pyFAI.massif.logger",
  "pyFAI.multi_geometry",
  "pyFAI.multi_geometry.MultiGeometry",
  "pyFAI.multi_geometry.__author__",
  "pyFAI.multi_geometry.__contact__",
  "pyFAI.multi_geometry.__copyright__",
  "pyFAI.multi_geometry.__date__",
  "pyFAI.multi_geometry.__docformat__",
  "pyFAI.multi_geometry.__license__",
  "pyFAI.multi_geometry.__status__",
  "pyFAI.multi_geometry.error",
  "pyFAI.multi_geometry.logger",
  "pyFAI.ocl_azim",
  "pyFAI.ocl_azim.Integrator1d",
  "pyFAI.ocl_azim.__author__",
  "pyFAI.ocl_azim.__contact__",
  "pyFAI.ocl_azim.__copyright__",
  "pyFAI.ocl_azim.__date__",
  "pyFAI.ocl_azim.__license__",
  "pyFAI.ocl_azim.logger",
  "pyFAI.ocl_azim_csr",
  "pyFAI.ocl_azim_csr.OCL_CSR_Integrator",
  "pyFAI.ocl_azim_csr.__authors__",
  "pyFAI.ocl_azim_csr.__contact__",
  "pyFAI.ocl_azim_csr.__copyright__",
  "pyFAI.ocl_azim_csr.__date__",
  "pyFAI.ocl_azim_csr.__license__",
  "pyFAI.ocl_azim_csr.logger",
  "pyFAI.ocl_azim_csr_dis",
  "pyFAI.ocl_azim_csr_dis.OCL_CSR_Integrator",
  "pyFAI.ocl_azim_csr_dis.__author__",
  "pyFAI.ocl_azim_csr_dis.__contact__",
  "pyFAI.ocl_azim_csr_dis.__copyright__",
  "pyFAI.ocl_azim_csr_dis.__date__",
  "pyFAI.ocl_azim_csr_dis.__license__",
  "pyFAI.ocl_azim_csr_dis.logger",
  "pyFAI.ocl_azim_lut",
  "pyFAI.ocl_azim_lut.OCL_LUT_Integrator",
  "pyFAI.ocl_azim_lut.__author__",
  "pyFAI.ocl_azim_lut.__contact__",
  "pyFAI.ocl_azim_lut.__copyright__",
  "pyFAI.ocl_azim_lut.__date__",
  "pyFAI.ocl_azim_lut.__license__",
  "pyFAI.ocl_azim_lut.logger",
  "pyFAI.ocl_hist_pixelsplit",
  "pyFAI.ocl_hist_pixelsplit.OCL_Hist_Pixelsplit",
  "pyFAI.ocl_hist_pixelsplit.__authors__",
  "pyFAI.ocl_hist_pixelsplit.__contact__",
  "pyFAI.ocl_hist_pixelsplit.__copyright__",
  "pyFAI.ocl_hist_pixelsplit.__date__",
  "pyFAI.ocl_hist_pixelsplit.__license__",
  "pyFAI.ocl_hist_pixelsplit.logger",
  "pyFAI.ocl_sort",
  "pyFAI.ocl_sort.Separator",
  "pyFAI.ocl_sort.__author__",
  "pyFAI.ocl_sort.__contact__",
  "pyFAI.ocl_sort.__copyright__",
  "pyFAI.ocl_sort.__date__",
  "pyFAI.ocl_sort.__license__",
  "pyFAI.ocl_sort.logger",
  "pyFAI.opencl",
  "pyFAI.opencl.AMD_FLOP_PER_CORE",
  "pyFAI.opencl.Device",
  "pyFAI.opencl.FLOP_PER_CORE",
  "pyFAI.opencl.NVIDIA_FLOP_PER_CORE",
  "pyFAI.opencl.OpenCL",
  "pyFAI.opencl.Platform",
  "pyFAI.opencl.__author__",
  "pyFAI.opencl.__contact__",
  "pyFAI.opencl.__copyright__",
  "pyFAI.opencl.__date__",
  "pyFAI.opencl.__license__",
  "pyFAI.opencl.__status__",
  "pyFAI.opencl.allocate_cl_buffers",
  "pyFAI.opencl.logger",
  "pyFAI.opencl.ocl",
  "pyFAI.opencl.pyopencl",
  "pyFAI.opencl.release_cl_buffers",
  "pyFAI.orderedset",
  "pyFAI.orderedset.OrderedSet",
  "pyFAI.orderedset.s",
  "pyFAI.orderedset.t",
  "pyFAI.peak_picker",
  "pyFAI.peak_picker.ControlPoints",
  "pyFAI.peak_picker.PeakPicker",
  "pyFAI.peak_picker.PointGroup",
  "pyFAI.peak_picker.WindowsError",
  "pyFAI.peak_picker.__author__",
  "pyFAI.peak_picker.__contact__",
  "pyFAI.peak_picker.__copyright__",
  "pyFAI.peak_picker.__date__",
  "pyFAI.peak_picker.__license__",
  "pyFAI.peak_picker.__status__",
  "pyFAI.peak_picker.logger",
  "pyFAI.peak_picker.qt",
  "pyFAI.project",
  "pyFAI.resources",
  "pyFAI.resources._RESOURCES_DIR",
  "pyFAI.resources.__authors__",
  "pyFAI.resources.__date__",
  "pyFAI.resources.__license__",
  "pyFAI.resources._dir",
  "pyFAI.resources.pkg_resources",
  "pyFAI.resources.resource_filename",
  "pyFAI.spline",
  "pyFAI.spline.Spline",
  "pyFAI.spline.__author__",
  "pyFAI.spline.__contact__",
  "pyFAI.spline.__copyright__",
  "pyFAI.spline.__date__",
  "pyFAI.spline.__license__",
  "pyFAI.spline.logger",
  "pyFAI.spline.main",
  "pyFAI.strictversion",
  "pyFAI.test",
  "pyFAI.test.__authors__",
  "pyFAI.test.__contact__",
  "pyFAI.test.__copyright__",
  "pyFAI.test.__date__",
  "pyFAI.test.__doc__",
  "pyFAI.test.__license__",
  "pyFAI.test.run_tests",
  "pyFAI.test.suite",
  "pyFAI.test.test_all",
  "pyFAI.test.test_all.__authors__",
  "pyFAI.test.test_all.__contact__",
  "pyFAI.test.test_all.__copyright__",
  "pyFAI.test.test_all.__date__",
  "pyFAI.test.test_all.__doc__",
  "pyFAI.test.test_all.__license__",
  "pyFAI.test.test_all.logger",
  "pyFAI.test.test_all.runner",
  "pyFAI.test.test_all.suite",
  "pyFAI.test.test_average",
  "pyFAI.test.test_average.TestAverage",
  "pyFAI.test.test_average.__author__",
  "pyFAI.test.test_average.__contact__",
  "pyFAI.test.test_average.__copyright__",
  "pyFAI.test.test_average.__date__",
  "pyFAI.test.test_average.__license__",
  "pyFAI.test.test_average.logger",
  "pyFAI.test.test_average.runner",
  "pyFAI.test.test_average.suite",
  "pyFAI.test.test_azimuthal_integrator",
  "pyFAI.test.test_azimuthal_integrator.TestAzimHalfFrelon",
  "pyFAI.test.test_azimuthal_integrator.TestAzimPilatus",
  "pyFAI.test.test_azimuthal_integrator.TestFlatimage",
  "pyFAI.test.test_azimuthal_integrator.TestSaxs",
  "pyFAI.test.test_azimuthal_integrator.TestSetter",
  "pyFAI.test.test_azimuthal_integrator.__author__",
  "pyFAI.test.test_azimuthal_integrator.__contact__",
  "pyFAI.test.test_azimuthal_integrator.__copyright__",
  "pyFAI.test.test_azimuthal_integrator.__date__",
  "pyFAI.test.test_azimuthal_integrator.__doc__",
  "pyFAI.test.test_azimuthal_integrator.__license__",
  "pyFAI.test.test_azimuthal_integrator.logger",
  "pyFAI.test.test_azimuthal_integrator.runner",
  "pyFAI.test.test_azimuthal_integrator.suite",
  "pyFAI.test.test_azimuthal_integrator.tmp_dir",
  "pyFAI.test.test_bayes",
  "pyFAI.test.test_bayes.TestBayes",
  "pyFAI.test.test_bayes.__author__",
  "pyFAI.test.test_bayes.__contact__",
  "pyFAI.test.test_bayes.__copyright__",
  "pyFAI.test.test_bayes.__date__",
  "pyFAI.test.test_bayes.__doc__",
  "pyFAI.test.test_bayes.__license__",
  "pyFAI.test.test_bayes.logger",
  "pyFAI.test.test_bayes.runner",
  "pyFAI.test.test_bayes.suite",
  "pyFAI.test.test_bilinear",
  "pyFAI.test.test_bilinear.TestBilinear",
  "pyFAI.test.test_bilinear.TestConversion",
  "pyFAI.test.test_bilinear.__author__",
  "pyFAI.test.test_bilinear.__contact__",
  "pyFAI.test.test_bilinear.__copyright__",
  "pyFAI.test.test_bilinear.__date__",
  "pyFAI.test.test_bilinear.__doc__",
  "pyFAI.test.test_bilinear.__license__",
  "pyFAI.test.test_bilinear.logger",
  "pyFAI.test.test_bilinear.runner",
  "pyFAI.test.test_bilinear.suite",
  "pyFAI.test.test_bispev",
  "pyFAI.test.test_bispev.TestBispev",
  "pyFAI.test.test_bispev.__author__",
  "pyFAI.test.test_bispev.__contact__",
  "pyFAI.test.test_bispev.__copyright__",
  "pyFAI.test.test_bispev.__date__",
  "pyFAI.test.test_bispev.__doc__",
  "pyFAI.test.test_bispev.__license__",
  "pyFAI.test.test_bispev.fitpack",
  "pyFAI.test.test_bispev.logger",
  "pyFAI.test.test_bispev.runner",
  "pyFAI.test.test_bispev.six",
  "pyFAI.test.test_bispev.suite",
  "pyFAI.test.test_blob_detection",
  "pyFAI.test.test_blob_detection.TestBlobDetection",
  "pyFAI.test.test_blob_detection.__author__",
  "pyFAI.test.test_blob_detection.__contact__",
  "pyFAI.test.test_blob_detection.__copyright__",
  "pyFAI.test.test_blob_detection.__date__",
  "pyFAI.test.test_blob_detection.__doc__",
  "pyFAI.test.test_blob_detection.__license__",
  "pyFAI.test.test_blob_detection.image_test_rings",
  "pyFAI.test.test_blob_detection.logger",
  "pyFAI.test.test_blob_detection.runner",
  "pyFAI.test.test_blob_detection.suite",
  "pyFAI.test.test_bug_regression",
  "pyFAI.test.test_bug_regression.TestBug170",
  "pyFAI.test.test_bug_regression.TestBug174",
  "pyFAI.test.test_bug_regression.TestBug211",
  "pyFAI.test.test_bug_regression.TestBug232",
  "pyFAI.test.test_bug_regression.__author__",
  "pyFAI.test.test_bug_regression.__contact__",
  "pyFAI.test.test_bug_regression.__copyright__",
  "pyFAI.test.test_bug_regression.__date__",
  "pyFAI.test.test_bug_regression.__doc__",
  "pyFAI.test.test_bug_regression.__license__",
  "pyFAI.test.test_bug_regression.logger",
  "pyFAI.test.test_bug_regression.runner",
  "pyFAI.test.test_bug_regression.suite",
  "pyFAI.test.test_calibrant",
  "pyFAI.test.test_calibrant.TestCalibrant",
  "pyFAI.test.test_calibrant.TestCell",
  "pyFAI.test.test_calibrant.__author__",
  "pyFAI.test.test_calibrant.__contact__",
  "pyFAI.test.test_calibrant.__copyright__",
  "pyFAI.test.test_calibrant.__date__",
  "pyFAI.test.test_calibrant.__doc__",
  "pyFAI.test.test_calibrant.__license__",
  "pyFAI.test.test_calibrant.logger",
  "pyFAI.test.test_calibrant.runner",
  "pyFAI.test.test_calibrant.six",
  "pyFAI.test.test_calibrant.suite",
  "pyFAI.test.test_convolution",
  "pyFAI.test.test_convolution.TestConvolution",
  "pyFAI.test.test_convolution.__author__",
  "pyFAI.test.test_convolution.__contact__",
  "pyFAI.test.test_convolution.__copyright__",
  "pyFAI.test.test_convolution.__date__",
  "pyFAI.test.test_convolution.__doc__",
  "pyFAI.test.test_convolution.__license__",
  "pyFAI.test.test_convolution.logger",
  "pyFAI.test.test_convolution.runner",
  "pyFAI.test.test_convolution.suite",
  "pyFAI.test.test_csr",
  "pyFAI.test.test_csr.ParamOpenclCSR",
  "pyFAI.test.test_csr.ParameterisedTestCase",
  "pyFAI.test.test_csr.TESTCASES",
  "pyFAI.test.test_csr.Test_CSR",
  "pyFAI.test.test_csr.__doc__",
  "pyFAI.test.test_csr.logger",
  "pyFAI.test.test_csr.runner",
  "pyFAI.test.test_csr.suite",
  "pyFAI.test.test_detector",
  "pyFAI.test.test_detector.TestDetector",
  "pyFAI.test.test_detector.__author__",
  "pyFAI.test.test_detector.__contact__",
  "pyFAI.test.test_detector.__copyright__",
  "pyFAI.test.test_detector.__date__",
  "pyFAI.test.test_detector.__license__",
  "pyFAI.test.test_detector.logger",
  "pyFAI.test.test_detector.runner",
  "pyFAI.test.test_detector.suite",
  "pyFAI.test.test_distortion",
  "pyFAI.test.test_distortion.TestHalfCCD",
  "pyFAI.test.test_distortion.TestImplementations",
  "pyFAI.test.test_distortion.__author__",
  "pyFAI.test.test_distortion.__contact__",
  "pyFAI.test.test_distortion.__copyright__",
  "pyFAI.test.test_distortion.__date__",
  "pyFAI.test.test_distortion.__license__",
  "pyFAI.test.test_distortion.logger",
  "pyFAI.test.test_distortion.runner",
  "pyFAI.test.test_distortion.suite",
  "pyFAI.test.test_dummy",
  "pyFAI.test.test_dummy.TestDummy",
  "pyFAI.test.test_dummy.__author__",
  "pyFAI.test.test_dummy.__contact__",
  "pyFAI.test.test_dummy.__copyright__",
  "pyFAI.test.test_dummy.__date__",
  "pyFAI.test.test_dummy.__doc__",
  "pyFAI.test.test_dummy.__license__",
  "pyFAI.test.test_dummy.logger",
  "pyFAI.test.test_dummy.pyFAI",
  "pyFAI.test.test_dummy.runner",
  "pyFAI.test.test_dummy.suite",
  "pyFAI.test.test_export",
  "pyFAI.test.test_export.TestFIT2D",
  "pyFAI.test.test_export.TestSPD",
  "pyFAI.test.test_export.__author__",
  "pyFAI.test.test_export.__contact__",
  "pyFAI.test.test_export.__copyright__",
  "pyFAI.test.test_export.__date__",
  "pyFAI.test.test_export.__doc__",
  "pyFAI.test.test_export.__license__",
  "pyFAI.test.test_export.logger",
  "pyFAI.test.test_export.runner",
  "pyFAI.test.test_export.suite",
  "pyFAI.test.test_export.testExport",
  "pyFAI.test.test_flat",
  "pyFAI.test.test_flat.TestFlat1D",
  "pyFAI.test.test_flat.TestFlat2D",
  "pyFAI.test.test_flat.__author__",
  "pyFAI.test.test_flat.__contact__",
  "pyFAI.test.test_flat.__copyright__",
  "pyFAI.test.test_flat.__date__",
  "pyFAI.test.test_flat.__doc__",
  "pyFAI.test.test_flat.__license__",
  "pyFAI.test.test_flat.logger",
  "pyFAI.test.test_flat.pyFAI",
  "pyFAI.test.test_flat.runner",
  "pyFAI.test.test_flat.suite",
  "pyFAI.test.test_geometry",
  "pyFAI.test.test_geometry.ParamFastPath",
  "pyFAI.test.test_geometry.ParamTestGeometry",
  "pyFAI.test.test_geometry.TestBug474",
  "pyFAI.test.test_geometry.TestBug88SolidAngle",
  "pyFAI.test.test_geometry.TestRecprocalSpacingSquarred",
  "pyFAI.test.test_geometry.TestSolidAngle",
  "pyFAI.test.test_geometry.__author__",
  "pyFAI.test.test_geometry.__contact__",
  "pyFAI.test.test_geometry.__copyright__",
  "pyFAI.test.test_geometry.__date__",
  "pyFAI.test.test_geometry.__license__",
  "pyFAI.test.test_geometry.logger",
  "pyFAI.test.test_geometry.runner",
  "pyFAI.test.test_geometry.suite",
  "pyFAI.test.test_geometry.timer",
  "pyFAI.test.test_geometry_refinement",
  "pyFAI.test.test_geometry_refinement.GeometryRefinement",
  "pyFAI.test.test_geometry_refinement.TestGeometryRefinement",
  "pyFAI.test.test_geometry_refinement.__author__",
  "pyFAI.test.test_geometry_refinement.__contact__",
  "pyFAI.test.test_geometry_refinement.__copyright__",
  "pyFAI.test.test_geometry_refinement.__date__",
  "pyFAI.test.test_geometry_refinement.__doc__",
  "pyFAI.test.test_geometry_refinement.__license__",
  "pyFAI.test.test_geometry_refinement.logger",
  "pyFAI.test.test_geometry_refinement.runner",
  "pyFAI.test.test_geometry_refinement.suite",
  "pyFAI.test.test_histogram",
  "pyFAI.test.test_histogram.EPS32",
  "pyFAI.test.test_histogram.TestHistogram1d",
  "pyFAI.test.test_histogram.TestHistogram2d",
  "pyFAI.test.test_histogram.__author__",
  "pyFAI.test.test_histogram.__contact__",
  "pyFAI.test.test_histogram.__copyright__",
  "pyFAI.test.test_histogram.__date__",
  "pyFAI.test.test_histogram.__doc__",
  "pyFAI.test.test_histogram.__license__",
  "pyFAI.test.test_histogram.logger",
  "pyFAI.test.test_histogram.runner",
  "pyFAI.test.test_histogram.suite",
  "pyFAI.test.test_integrate",
  "pyFAI.test.test_integrate.TestIntegrate1D",
  "pyFAI.test.test_integrate.TestIntegrate2D",
  "pyFAI.test.test_integrate.TestIntegrateResult",
  "pyFAI.test.test_integrate.__author__",
  "pyFAI.test.test_integrate.__contact__",
  "pyFAI.test.test_integrate.__copyright__",
  "pyFAI.test.test_integrate.__date__",
  "pyFAI.test.test_integrate.__doc__",
  "pyFAI.test.test_integrate.__license__",
  "pyFAI.test.test_integrate.logger",
  "pyFAI.test.test_integrate.runner",
  "pyFAI.test.test_integrate.suite",
  "pyFAI.test.test_integrate_widget",
  "pyFAI.test.test_integrate_widget.AIWidgetMocked",
  "pyFAI.test.test_integrate_widget.SkipGUITest",
  "pyFAI.test.test_integrate_widget.TestAIWidget",
  "pyFAI.test.test_integrate_widget.__author__",
  "pyFAI.test.test_integrate_widget.__contact__",
  "pyFAI.test.test_integrate_widget.__copyright__",
  "pyFAI.test.test_integrate_widget.__date__",
  "pyFAI.test.test_integrate_widget.__doc__",
  "pyFAI.test.test_integrate_widget.__license__",
  "pyFAI.test.test_integrate_widget.logger",
  "pyFAI.test.test_integrate_widget.qt",
  "pyFAI.test.test_integrate_widget.runner",
  "pyFAI.test.test_integrate_widget.suite",
  "pyFAI.test.test_io",
  "pyFAI.test.test_io.TestIsoTime",
  "pyFAI.test.test_io.TestNexus",
  "pyFAI.test.test_io.__author__",
  "pyFAI.test.test_io.__contact__",
  "pyFAI.test.test_io.__copyright__",
  "pyFAI.test.test_io.__date__",
  "pyFAI.test.test_io.__doc__",
  "pyFAI.test.test_io.__license__",
  "pyFAI.test.test_io.io",
  "pyFAI.test.test_io.logger",
  "pyFAI.test.test_io.pyFAI",
  "pyFAI.test.test_io.runner",
  "pyFAI.test.test_io.suite",
  "pyFAI.test.test_io.testFabIOWriter",
  "pyFAI.test.test_io.testHDF5Writer",
  "pyFAI.test.test_marchingsquares",
  "pyFAI.test.test_marchingsquares.TestMarchingSquares",
  "pyFAI.test.test_marchingsquares.__author__",
  "pyFAI.test.test_marchingsquares.__contact__",
  "pyFAI.test.test_marchingsquares.__copyright__",
  "pyFAI.test.test_marchingsquares.__date__",
  "pyFAI.test.test_marchingsquares.__license__",
  "pyFAI.test.test_marchingsquares.logger",
  "pyFAI.test.test_marchingsquares.runner",
  "pyFAI.test.test_marchingsquares.suite",
  "pyFAI.test.test_mask",
  "pyFAI.test.test_mask.TestMask",
  "pyFAI.test.test_mask.__author__",
  "pyFAI.test.test_mask.__contact__",
  "pyFAI.test.test_mask.__copyright__",
  "pyFAI.test.test_mask.__date__",
  "pyFAI.test.test_mask.__doc__",
  "pyFAI.test.test_mask.__license__",
  "pyFAI.test.test_mask.logger",
  "pyFAI.test.test_mask.runner",
  "pyFAI.test.test_mask.suite",
  "pyFAI.test.test_multi_geometry",
  "pyFAI.test.test_multi_geometry.TestMultiGeometry",
  "pyFAI.test.test_multi_geometry.__author__",
  "pyFAI.test.test_multi_geometry.__contact__",
  "pyFAI.test.test_multi_geometry.__copyright__",
  "pyFAI.test.test_multi_geometry.__date__",
  "pyFAI.test.test_multi_geometry.__license__",
  "pyFAI.test.test_multi_geometry.logger",
  "pyFAI.test.test_multi_geometry.runner",
  "pyFAI.test.test_multi_geometry.suite",
  "pyFAI.test.test_ocl_sort",
  "pyFAI.test.test_ocl_sort.TestOclSort",
  "pyFAI.test.test_ocl_sort.__author__",
  "pyFAI.test.test_ocl_sort.__contact__",
  "pyFAI.test.test_ocl_sort.__copyright__",
  "pyFAI.test.test_ocl_sort.__date__",
  "pyFAI.test.test_ocl_sort.__doc__",
  "pyFAI.test.test_ocl_sort.__license__",
  "pyFAI.test.test_ocl_sort.error",
  "pyFAI.test.test_ocl_sort.logger",
  "pyFAI.test.test_ocl_sort.pyopencl",
  "pyFAI.test.test_ocl_sort.runner",
  "pyFAI.test.test_ocl_sort.suite",
  "pyFAI.test.test_openCL",
  "pyFAI.test.test_openCL.TestMask",
  "pyFAI.test.test_openCL.TestSort",
  "pyFAI.test.test_openCL.__author__",
  "pyFAI.test.test_openCL.__contact__",
  "pyFAI.test.test_openCL.__copyright__",
  "pyFAI.test.test_openCL.__date__",
  "pyFAI.test.test_openCL.__doc__",
  "pyFAI.test.test_openCL.__license__",
  "pyFAI.test.test_openCL.error",
  "pyFAI.test.test_openCL.logger",
  "pyFAI.test.test_openCL.pyopencl",
  "pyFAI.test.test_openCL.runner",
  "pyFAI.test.test_openCL.suite",
  "pyFAI.test.test_peak_picking",
  "pyFAI.test.test_peak_picking.TestMassif",
  "pyFAI.test.test_peak_picking.__author__",
  "pyFAI.test.test_peak_picking.__contact__",
  "pyFAI.test.test_peak_picking.__copyright__",
  "pyFAI.test.test_peak_picking.__date__",
  "pyFAI.test.test_peak_picking.__doc__",
  "pyFAI.test.test_peak_picking.__license__",
  "pyFAI.test.test_peak_picking.logger",
  "pyFAI.test.test_peak_picking.runner",
  "pyFAI.test.test_peak_picking.suite",
  "pyFAI.test.test_peak_picking.testPeakPicking",
  "pyFAI.test.test_polarization",
  "pyFAI.test.test_polarization.TestPolarization",
  "pyFAI.test.test_polarization.__author__",
  "pyFAI.test.test_polarization.__contact__",
  "pyFAI.test.test_polarization.__copyright__",
  "pyFAI.test.test_polarization.__date__",
  "pyFAI.test.test_polarization.__doc__",
  "pyFAI.test.test_polarization.__license__",
  "pyFAI.test.test_polarization.logger",
  "pyFAI.test.test_polarization.runner",
  "pyFAI.test.test_polarization.suite",
  "pyFAI.test.test_preproc",
  "pyFAI.test.test_preproc.TestPreproc",
  "pyFAI.test.test_preproc.__author__",
  "pyFAI.test.test_preproc.__contact__",
  "pyFAI.test.test_preproc.__copyright__",
  "pyFAI.test.test_preproc.__date__",
  "pyFAI.test.test_preproc.__license__",
  "pyFAI.test.test_preproc.logger",
  "pyFAI.test.test_preproc.runner",
  "pyFAI.test.test_preproc.suite",
  "pyFAI.test.test_saxs",
  "pyFAI.test.test_saxs.TestSaxs",
  "pyFAI.test.test_saxs.__author__",
  "pyFAI.test.test_saxs.__contact__",
  "pyFAI.test.test_saxs.__copyright__",
  "pyFAI.test.test_saxs.__date__",
  "pyFAI.test.test_saxs.__doc__",
  "pyFAI.test.test_saxs.__license__",
  "pyFAI.test.test_saxs.logger",
  "pyFAI.test.test_saxs.runner",
  "pyFAI.test.test_saxs.suite",
  "pyFAI.test.test_scripts",
  "pyFAI.test.test_scripts.PyMca",
  "pyFAI.test.test_scripts.TestScriptsHelp",
  "pyFAI.test.test_scripts.__author__",
  "pyFAI.test.test_scripts.__contact__",
  "pyFAI.test.test_scripts.__copyright__",
  "pyFAI.test.test_scripts.__date__",
  "pyFAI.test.test_scripts.__doc__",
  "pyFAI.test.test_scripts.__license__",
  "pyFAI.test.test_scripts.logger",
  "pyFAI.test.test_scripts.qt",
  "pyFAI.test.test_scripts.runner",
  "pyFAI.test.test_scripts.silx",
  "pyFAI.test.test_scripts.suite",
  "pyFAI.test.test_sparse",
  "pyFAI.test.test_sparse.TestSparseBBox",
  "pyFAI.test.test_sparse.TestSparseUtils",
  "pyFAI.test.test_sparse.__author__",
  "pyFAI.test.test_sparse.__contact__",
  "pyFAI.test.test_sparse.__copyright__",
  "pyFAI.test.test_sparse.__date__",
  "pyFAI.test.test_sparse.__doc__",
  "pyFAI.test.test_sparse.__license__",
  "pyFAI.test.test_sparse.logger",
  "pyFAI.test.test_sparse.runner",
  "pyFAI.test.test_sparse.suite",
  "pyFAI.test.test_split_pixel",
  "pyFAI.test.test_split_pixel.TestSplitPixel",
  "pyFAI.test.test_split_pixel.__author__",
  "pyFAI.test.test_split_pixel.__contact__",
  "pyFAI.test.test_split_pixel.__copyright__",
  "pyFAI.test.test_split_pixel.__date__",
  "pyFAI.test.test_split_pixel.__doc__",
  "pyFAI.test.test_split_pixel.__license__",
  "pyFAI.test.test_split_pixel.logger",
  "pyFAI.test.test_split_pixel.runner",
  "pyFAI.test.test_split_pixel.suite",
  "pyFAI.test.test_utils",
  "pyFAI.test.test_utils.TestUtils",
  "pyFAI.test.test_utils.__author__",
  "pyFAI.test.test_utils.__contact__",
  "pyFAI.test.test_utils.__copyright__",
  "pyFAI.test.test_utils.__date__",
  "pyFAI.test.test_utils.__doc__",
  "pyFAI.test.test_utils.__license__",
  "pyFAI.test.test_utils.logger",
  "pyFAI.test.test_utils.runner",
  "pyFAI.test.test_utils.suite",
  "pyFAI.test.test_utils_shell",
  "pyFAI.test.test_utils_shell.TestUtilShell",
  "pyFAI.test.test_utils_shell.__author__",
  "pyFAI.test.test_utils_shell.__copyright__",
  "pyFAI.test.test_utils_shell.__date__",
  "pyFAI.test.test_utils_shell.__doc__",
  "pyFAI.test.test_utils_shell.__docformat__",
  "pyFAI.test.test_utils_shell.__license__",
  "pyFAI.test.test_utils_shell.__status__",
  "pyFAI.test.test_utils_shell.logger",
  "pyFAI.test.test_utils_shell.runner",
  "pyFAI.test.test_utils_shell.suite",
  "pyFAI.test.test_utils_stringutil",
  "pyFAI.test.test_utils_stringutil.TestUtilsString",
  "pyFAI.test.test_utils_stringutil.__author__",
  "pyFAI.test.test_utils_stringutil.__copyright__",
  "pyFAI.test.test_utils_stringutil.__date__",
  "pyFAI.test.test_utils_stringutil.__doc__",
  "pyFAI.test.test_utils_stringutil.__docformat__",
  "pyFAI.test.test_utils_stringutil.__license__",
  "pyFAI.test.test_utils_stringutil.__status__",
  "pyFAI.test.test_utils_stringutil.logger",
  "pyFAI.test.test_utils_stringutil.runner",
  "pyFAI.test.test_utils_stringutil.suite",
  "pyFAI.test.test_watershed",
  "pyFAI.test.test_watershed.TestWatershed",
  "pyFAI.test.test_watershed.__author__",
  "pyFAI.test.test_watershed.__contact__",
  "pyFAI.test.test_watershed.__copyright__",
  "pyFAI.test.test_watershed.__date__",
  "pyFAI.test.test_watershed.__doc__",
  "pyFAI.test.test_watershed.__license__",
  "pyFAI.test.test_watershed.logger",
  "pyFAI.test.test_watershed.runner",
  "pyFAI.test.test_watershed.suite",
  "pyFAI.test.test_worker",
  "pyFAI.test.test_worker.AzimuthalIntegratorMocked",
  "pyFAI.test.test_worker.MockedAiWriter",
  "pyFAI.test.test_worker.TestWorker",
  "pyFAI.test.test_worker.__author__",
  "pyFAI.test.test_worker.__contact__",
  "pyFAI.test.test_worker.__copyright__",
  "pyFAI.test.test_worker.__date__",
  "pyFAI.test.test_worker.__license__",
  "pyFAI.test.test_worker.logger",
  "pyFAI.test.test_worker.runner",
  "pyFAI.test.test_worker.suite",
  "pyFAI.test.utilstest",
  "pyFAI.test.utilstest.DATA_KEY",
  "pyFAI.test.utilstest.PACKAGE",
  "pyFAI.test.utilstest.ParameterisedTestCase",
  "pyFAI.test.utilstest.Rwp",
  "pyFAI.test.utilstest.TEST_HOME",
  "pyFAI.test.utilstest.UtilsTest",
  "pyFAI.test.utilstest.__author__",
  "pyFAI.test.utilstest.__contact__",
  "pyFAI.test.utilstest.__copyright__",
  "pyFAI.test.utilstest.__date__",
  "pyFAI.test.utilstest.__doc__",
  "pyFAI.test.utilstest.__license__",
  "pyFAI.test.utilstest.__name__",
  "pyFAI.test.utilstest.copy",
  "pyFAI.test.utilstest.diff_crv",
  "pyFAI.test.utilstest.diff_img",
  "pyFAI.test.utilstest.getLogger",
  "pyFAI.test.utilstest.logger",
  "pyFAI.test.utilstest.recursive_delete",
  "pyFAI.tests",
  "pyFAI.third_party",
  "pyFAI.third_party.argparse",
  "pyFAI.third_party.argparse.Action",
  "pyFAI.third_party.argparse.ArgumentDefaultsHelpFormatter",
  "pyFAI.third_party.argparse.ArgumentError",
  "pyFAI.third_party.argparse.ArgumentParser",
  "pyFAI.third_party.argparse.ArgumentTypeError",
  "pyFAI.third_party.argparse.FileType",
  "pyFAI.third_party.argparse.HelpFormatter",
  "pyFAI.third_party.argparse.Namespace",
  "pyFAI.third_party.argparse.ONE_OR_MORE",
  "pyFAI.third_party.argparse.OPTIONAL",
  "pyFAI.third_party.argparse.PARSER",
  "pyFAI.third_party.argparse.REMAINDER",
  "pyFAI.third_party.argparse.RawDescriptionHelpFormatter",
  "pyFAI.third_party.argparse.RawTextHelpFormatter",
  "pyFAI.third_party.argparse.SUPPRESS",
  "pyFAI.third_party.argparse.ZERO_OR_MORE",
  "pyFAI.third_party.argparse._ActionsContainer",
  "pyFAI.third_party.argparse._AppendAction",
  "pyFAI.third_party.argparse._AppendConstAction",
  "pyFAI.third_party.argparse._ArgumentGroup",
  "pyFAI.third_party.argparse._AttributeHolder",
  "pyFAI.third_party.argparse._CountAction",
  "pyFAI.third_party.argparse._HelpAction",
  "pyFAI.third_party.argparse._MutuallyExclusiveGroup",
  "pyFAI.third_party.argparse._StoreAction",
  "pyFAI.third_party.argparse._StoreConstAction",
  "pyFAI.third_party.argparse._StoreFalseAction",
  "pyFAI.third_party.argparse._StoreTrueAction",
  "pyFAI.third_party.argparse._SubParsersAction",
  "pyFAI.third_party.argparse._VersionAction",
  "pyFAI.third_party.argparse.__all__",
  "pyFAI.third_party.argparse.__version__",
  "pyFAI.third_party.argparse._basestring",
  "pyFAI.third_party.argparse._callable",
  "pyFAI.third_party.argparse._ensure_value",
  "pyFAI.third_party.argparse._get_action_name",
  "pyFAI.third_party.argparse._sorted",
  "pyFAI.third_party.six",
  "pyFAI.third_party.six.BytesIO",
  "pyFAI.third_party.six.Iterator",
  "pyFAI.third_party.six.MAXSIZE",
  "pyFAI.third_party.six.Module_six_moves_urllib",
  "pyFAI.third_party.six.MovedAttribute",
  "pyFAI.third_party.six.MovedModule",
  "pyFAI.third_party.six.PY2",
  "pyFAI.third_party.six.PY3",
  "pyFAI.third_party.six.StringIO",
  "pyFAI.third_party.six._LazyDescr",
  "pyFAI.third_party.six._LazyModule",
  "pyFAI.third_party.six._MovedItems",
  "pyFAI.third_party.six._SixMetaPathImporter",
  "pyFAI.third_party.six.__author__",
  "pyFAI.third_party.six.__package__",
  "pyFAI.third_party.six.__path__",
  "pyFAI.third_party.six.__version__",
  "pyFAI.third_party.six._add_doc",
  "pyFAI.third_party.six._func_closure",
  "pyFAI.third_party.six._func_code",
  "pyFAI.third_party.six._func_defaults",
  "pyFAI.third_party.six._func_globals",
  "pyFAI.third_party.six._import_module",
  "pyFAI.third_party.six._importer",
  "pyFAI.third_party.six._meth_func",
  "pyFAI.third_party.six._meth_self",
  "pyFAI.third_party.six._moved_attributes",
  "pyFAI.third_party.six._urllib_error_moved_attributes",
  "pyFAI.third_party.six._urllib_parse_moved_attributes",
  "pyFAI.third_party.six._urllib_request_moved_attributes",
  "pyFAI.third_party.six._urllib_response_moved_attributes",
  "pyFAI.third_party.six._urllib_robotparser_moved_attributes",
  "pyFAI.third_party.six.add_metaclass",
  "pyFAI.third_party.six.add_move",
  "pyFAI.third_party.six.advance_iterator",
  "pyFAI.third_party.six.b",
  "pyFAI.third_party.six.callable",
  "pyFAI.third_party.six.class_types",
  "pyFAI.third_party.six.create_bound_method",
  "pyFAI.third_party.six.exec_",
  "pyFAI.third_party.six.get_function_closure",
  "pyFAI.third_party.six.get_function_code",
  "pyFAI.third_party.six.get_function_defaults",
  "pyFAI.third_party.six.get_function_globals",
  "pyFAI.third_party.six.get_method_function",
  "pyFAI.third_party.six.get_method_self",
  "pyFAI.third_party.six.get_unbound_function",
  "pyFAI.third_party.six.indexbytes",
  "pyFAI.third_party.six.int2byte",
  "pyFAI.third_party.six.integer_types",
  "pyFAI.third_party.six.iterbytes",
  "pyFAI.third_party.six.iteritems",
  "pyFAI.third_party.six.iterkeys",
  "pyFAI.third_party.six.iterlists",
  "pyFAI.third_party.six.itervalues",
  "pyFAI.third_party.six.moves",
  "pyFAI.third_party.six.next",
  "pyFAI.third_party.six.print_",
  "pyFAI.third_party.six.remove_move",
  "pyFAI.third_party.six.reraise",
  "pyFAI.third_party.six.string_types",
  "pyFAI.third_party.six.text_type",
  "pyFAI.third_party.six.u",
  "pyFAI.third_party.six.with_metaclass",
  "pyFAI.third_party.six.wraps",
  "pyFAI.tree",
  "pyFAI.tree.DataSet",
  "pyFAI.tree.ListDataSet",
  "pyFAI.tree.TreeItem",
  "pyFAI.tree.__author__",
  "pyFAI.tree.__contact__",
  "pyFAI.tree.__copyright__",
  "pyFAI.tree.__date__",
  "pyFAI.tree.__doc__",
  "pyFAI.tree.__docformat__",
  "pyFAI.tree.__license__",
  "pyFAI.tree.__status__",
  "pyFAI.tree.logger",
  "pyFAI.units",
  "pyFAI.units.ANGLE_UNITS",
  "pyFAI.units.A_rad",
  "pyFAI.units.CONST_hc",
  "pyFAI.units.CONST_q",
  "pyFAI.units.LENGTH_UNITS",
  "pyFAI.units.Q",
  "pyFAI.units.Q_A",
  "pyFAI.units.Q_NM",
  "pyFAI.units.R",
  "pyFAI.units.RADIAL_UNITS",
  "pyFAI.units.R_M",
  "pyFAI.units.R_MM",
  "pyFAI.units.RecD2_NM",
  "pyFAI.units.TTH",
  "pyFAI.units.TTH_DEG",
  "pyFAI.units.TTH_RAD",
  "pyFAI.units.Unit",
  "pyFAI.units.__authors__",
  "pyFAI.units.__contact__",
  "pyFAI.units.__copyright__",
  "pyFAI.units.__date__",
  "pyFAI.units.__docformat__",
  "pyFAI.units.__license__",
  "pyFAI.units.__status__",
  "pyFAI.units.eq_2th",
  "pyFAI.units.eq_q",
  "pyFAI.units.eq_r",
  "pyFAI.units.hc",
  "pyFAI.units.l_m",
  "pyFAI.units.logger",
  "pyFAI.units.register_radial_unit",
  "pyFAI.units.to_unit",
  "pyFAI.utils",
  "pyFAI.utils.EPS32",
  "pyFAI.utils.FixedParameters",
  "pyFAI.utils.StringTypes",
  "pyFAI.utils.WindowsError",
  "pyFAI.utils.__author__",
  "pyFAI.utils.__contact__",
  "pyFAI.utils.__copyright__",
  "pyFAI.utils.__date__",
  "pyFAI.utils.__license__",
  "pyFAI.utils.__status__",
  "pyFAI.utils._compute_qth_percentile",
  "pyFAI.utils._get_data_path",
  "pyFAI.utils._relabel",
  "pyFAI.utils.bayes",
  "pyFAI.utils.bayes.BayesianBackground",
  "pyFAI.utils.bayes.__authors__",
  "pyFAI.utils.bayes.__copyright__",
  "pyFAI.utils.bayes.__date__",
  "pyFAI.utils.bayes.__docformat__",
  "pyFAI.utils.bayes.__license__",
  "pyFAI.utils.bayes.__status__",
  "pyFAI.utils.bayes.background",
  "pyFAI.utils.binning",
  "pyFAI.utils.calc_checksum",
  "pyFAI.utils.center_of_mass",
  "pyFAI.utils.concatenate_cl_kernel",
  "pyFAI.utils.convert_CamelCase",
  "pyFAI.utils.data_dir",
  "pyFAI.utils.deg2rad",
  "pyFAI.utils.dog",
  "pyFAI.utils.expand",
  "pyFAI.utils.float_",
  "pyFAI.utils.gaussian",
  "pyFAI.utils.get_calibration_dir",
  "pyFAI.utils.get_cl_file",
  "pyFAI.utils.get_ui_file",
  "pyFAI.utils.int_",
  "pyFAI.utils.is_far_from_group",
  "pyFAI.utils.lazy_property",
  "pyFAI.utils.logger",
  "pyFAI.utils.maximum_position",
  "pyFAI.utils.measure_offset",
  "pyFAI.utils.np",
  "pyFAI.utils.percentile",
  "pyFAI.utils.readFloatFromKeyboard",
  "pyFAI.utils.read_cl_file",
  "pyFAI.utils.relabel",
  "pyFAI.utils.roundfft",
  "pyFAI.utils.sem",
  "pyFAI.utils.shell",
  "pyFAI.utils.shell.ProgressBar",
  "pyFAI.utils.shell.__author__",
  "pyFAI.utils.shell.__copyright__",
  "pyFAI.utils.shell.__date__",
  "pyFAI.utils.shell.__doc__",
  "pyFAI.utils.shell.__docformat__",
  "pyFAI.utils.shell.__license__",
  "pyFAI.utils.shell.__status__",
  "pyFAI.utils.shift",
  "pyFAI.utils.str_",
  "pyFAI.utils.stringutil",
  "pyFAI.utils.stringutil.SafeFormatter",
  "pyFAI.utils.stringutil.__author__",
  "pyFAI.utils.stringutil.__copyright__",
  "pyFAI.utils.stringutil.__date__",
  "pyFAI.utils.stringutil.__doc__",
  "pyFAI.utils.stringutil.__docformat__",
  "pyFAI.utils.stringutil.__license__",
  "pyFAI.utils.stringutil.__status__",
  "pyFAI.utils.stringutil._safe_formater",
  "pyFAI.utils.stringutil.safe_format",
  "pyFAI.utils.unBinning",
  "pyFAI.utils.win32",
  "pyFAI.version",
  "pyFAI.version_info",
  "pyFAI.worker",
  "pyFAI.worker.DistortionWorker",
  "pyFAI.worker.PixelwiseWorker",
  "pyFAI.worker.Worker",
  "pyFAI.worker.__author__",
  "pyFAI.worker.__contact__",
  "pyFAI.worker.__copyright__",
  "pyFAI.worker.__date__",
  "pyFAI.worker.__license__",
  "pyFAI.worker.__status__",
  "pyFAI.worker.err",
  "pyFAI.worker.logger",
  "pyFAI.worker.make_ai",
  "pyFAI.worker.preproc"
 ]
}