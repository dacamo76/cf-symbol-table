{
 "errors": {},
 "symbols": [
  "pygpcca.GPCCA",
  "pygpcca.__author__",
  "pygpcca.__email__",
  "pygpcca.__maintainer__",
  "pygpcca.__version__",
  "pygpcca._gpcca",
  "pygpcca._gpcca.DEFAULT_SCHUR_METHOD",
  "pygpcca._gpcca.EPS",
  "pygpcca._gpcca.GPCCA",
  "pygpcca._gpcca.OArray",
  "pygpcca._gpcca.__all__",
  "pygpcca._gpcca.__author__",
  "pygpcca._gpcca.__copyright__",
  "pygpcca._gpcca.__credits__",
  "pygpcca._gpcca.__email__",
  "pygpcca._gpcca.__maintainer__",
  "pygpcca._gpcca._check_conj_split",
  "pygpcca._gpcca._cluster_by_isa",
  "pygpcca._gpcca._coarsegrain",
  "pygpcca._gpcca._do_schur",
  "pygpcca._gpcca._fill_matrix",
  "pygpcca._gpcca._gpcca_core",
  "pygpcca._gpcca._gram_schmidt_mod",
  "pygpcca._gpcca._indexsearch",
  "pygpcca._gpcca._initialize_rot_matrix",
  "pygpcca._gpcca._objective",
  "pygpcca._gpcca._opt_soft",
  "pygpcca._gpcca.cached_property",
  "pygpcca._gpcca.connected_sets",
  "pygpcca._gpcca.d",
  "pygpcca._gpcca.gpcca_coarsegrain",
  "pygpcca._gpcca.is_transition_matrix",
  "pygpcca._gpcca.sorted_schur",
  "pygpcca._gpcca.stationary_distribution",
  "pygpcca._sort_real_schur",
  "pygpcca._sort_real_schur.A",
  "pygpcca._sort_real_schur.Q",
  "pygpcca._sort_real_schur.R",
  "pygpcca._sort_real_schur.T",
  "pygpcca._sort_real_schur.Z",
  "pygpcca._sort_real_schur._",
  "pygpcca._sort_real_schur.__all__",
  "pygpcca._sort_real_schur.ap",
  "pygpcca._sort_real_schur.d",
  "pygpcca._sort_real_schur.delta",
  "pygpcca._sort_real_schur.delta_orig",
  "pygpcca._sort_real_schur.eps",
  "pygpcca._sort_real_schur.ev",
  "pygpcca._sort_real_schur.ev_orig",
  "pygpcca._sort_real_schur.expensive_asserts",
  "pygpcca._sort_real_schur.lu_complpiv",
  "pygpcca._sort_real_schur.n",
  "pygpcca._sort_real_schur.normalize",
  "pygpcca._sort_real_schur.r",
  "pygpcca._sort_real_schur.rot",
  "pygpcca._sort_real_schur.select",
  "pygpcca._sort_real_schur.sort_real_schur",
  "pygpcca._sort_real_schur.swap",
  "pygpcca._sort_real_schur.z",
  "pygpcca._sorted_schur",
  "pygpcca._sorted_schur.DEFAULT_SCHUR_METHOD",
  "pygpcca._sorted_schur.EPS",
  "pygpcca._sorted_schur.NO_PETSC_SLEPC_FOUND_MSG",
  "pygpcca._sorted_schur.__all__",
  "pygpcca._sorted_schur._check_conj_split",
  "pygpcca._sorted_schur._check_schur",
  "pygpcca._sorted_schur._initialize_matrix",
  "pygpcca._sorted_schur.d",
  "pygpcca._sorted_schur.petsc4py",
  "pygpcca._sorted_schur.slepc4py",
  "pygpcca._sorted_schur.sort_real_schur",
  "pygpcca._sorted_schur.sorted_brandts_schur",
  "pygpcca._sorted_schur.sorted_krylov_schur",
  "pygpcca._sorted_schur.sorted_schur",
  "pygpcca.gpcca_coarsegrain",
  "pygpcca.stationary_distribution",
  "pygpcca.utils",
  "pygpcca.utils._checks",
  "pygpcca.utils._checks.__all__",
  "pygpcca.utils._checks.assert_array",
  "pygpcca.utils._checks.d",
  "pygpcca.utils._checks.ensure_ndarray_or_sparse",
  "pygpcca.utils._constants",
  "pygpcca.utils._constants.DEFAULT_SCHUR_METHOD",
  "pygpcca.utils._constants.EPS",
  "pygpcca.utils._constants.NO_PETSC_SLEPC_FOUND_MSG",
  "pygpcca.utils._docs",
  "pygpcca.utils._docs.P",
  "pygpcca.utils._docs.Q_sort",
  "pygpcca.utils._docs.R_sort",
  "pygpcca.utils._docs.chi_ret",
  "pygpcca.utils._docs.crispness_ret",
  "pygpcca.utils._docs.d",
  "pygpcca.utils._docs.eigenvalues_k",
  "pygpcca.utils._docs.eigenvalues_m",
  "pygpcca.utils._docs.eta",
  "pygpcca.utils._docs.k",
  "pygpcca.utils._docs.m",
  "pygpcca.utils._docs.m_optimize",
  "pygpcca.utils._docs.method",
  "pygpcca.utils._docs.rot_matrix_ret",
  "pygpcca.utils._docs.tol_krylov",
  "pygpcca.utils._docs.z",
  "pygpcca.utils._docs.z_P",
  "pygpcca.utils._utils",
  "pygpcca.utils._utils.EPS",
  "pygpcca.utils._utils.__all__",
  "pygpcca.utils._utils._csd",
  "pygpcca.utils._utils._css",
  "pygpcca.utils._utils._itmd",
  "pygpcca.utils._utils._itms",
  "pygpcca.utils._utils._sdd",
  "pygpcca.utils._utils._sds",
  "pygpcca.utils._utils.backward_iteration",
  "pygpcca.utils._utils.connected_sets",
  "pygpcca.utils._utils.d",
  "pygpcca.utils._utils.ensure_ndarray_or_sparse",
  "pygpcca.utils._utils.is_transition_matrix",
  "pygpcca.utils._utils.stationary_distribution",
  "pygpcca.utils.stationary_distribution",
  "tests.conftest",
  "tests.conftest.A_mu0",
  "tests.conftest.A_mu1000",
  "tests.conftest.P",
  "tests.conftest.R_i",
  "tests.conftest._session_setup",
  "tests.conftest._skip_if_no_petsc_slepc",
  "tests.conftest.assert_allclose",
  "tests.conftest.bdc",
  "tests.conftest.chi_isa_mu0_n3",
  "tests.conftest.chi_isa_mu100_n3",
  "tests.conftest.count",
  "tests.conftest.crispness_values_P_2_LM",
  "tests.conftest.crispness_values_P_2_LR",
  "tests.conftest.example_matrix_mu",
  "tests.conftest.get_known_input",
  "tests.conftest.minChi_P_2_LM",
  "tests.conftest.minChi_P_2_LR",
  "tests.conftest.mu",
  "tests.conftest.n_m_P_2_LM",
  "tests.conftest.n_m_P_2_LR",
  "tests.conftest.optimal_crispness_P_2_LM",
  "tests.conftest.optimal_crispness_P_2_LR",
  "tests.conftest.sd",
  "tests.conftest.skip_if_no_petsc_slepc",
  "tests.conftest.svecs_mu0",
  "tests.conftest.svecs_mu1000",
  "tests.conftest.top_eigenvalues_P_2_LM",
  "tests.conftest.top_eigenvalues_P_2_LR",
  "tests.test_gpcca",
  "tests.test_gpcca.TestCustom",
  "tests.test_gpcca.TestGPCCAMatlabRegression",
  "tests.test_gpcca.TestGPCCAMatlabUnit",
  "tests.test_gpcca.TestPETScSLEPc",
  "tests.test_gpcca.TestUtils",
  "tests.test_gpcca._assert_schur",
  "tests.test_gpcca._find_permutation",
  "tests.test_gpcca.assert_allclose",
  "tests.test_gpcca.eps",
  "tests.test_gpcca.get_known_input",
  "tests.test_gpcca.mu",
  "tests.test_gpcca.skip_if_no_petsc_slepc",
  "tests.test_stat_dist",
  "tests.test_stat_dist.TestStationaryDistribution",
  "tests.test_stat_dist._create_qp",
  "tests.test_stat_dist.assert_allclose",
  "tests.test_stat_dist.bdc"
 ]
}