{
 "errors": {
  "neovim.api": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "neovim.__all__",
  "neovim.api",
  "pynvim.ErrorResponse",
  "pynvim.Host",
  "pynvim.IS_PYTHON3",
  "pynvim.NullHandler",
  "pynvim.Nvim",
  "pynvim.VERSION",
  "pynvim.Version",
  "pynvim.__all__",
  "pynvim.api",
  "pynvim.api.Buffer",
  "pynvim.api.Nvim",
  "pynvim.api.Tabpage",
  "pynvim.api.Window",
  "pynvim.api.__all__",
  "pynvim.api.buffer",
  "pynvim.api.buffer.Buffer",
  "pynvim.api.buffer.Range",
  "pynvim.api.buffer.__all__",
  "pynvim.api.buffer.adjust_index",
  "pynvim.api.buffer.basestring",
  "pynvim.api.common",
  "pynvim.api.common.Remote",
  "pynvim.api.common._identity",
  "pynvim.api.common.decode_if_bytes",
  "pynvim.api.common.walk",
  "pynvim.api.decode_if_bytes",
  "pynvim.api.nvim",
  "pynvim.api.nvim.Buffers",
  "pynvim.api.nvim.CompatibilitySession",
  "pynvim.api.nvim.Current",
  "pynvim.api.nvim.Funcs",
  "pynvim.api.nvim.LuaFuncs",
  "pynvim.api.nvim.Nvim",
  "pynvim.api.nvim.__all__",
  "pynvim.api.nvim.lua_module",
  "pynvim.api.nvim.os_chdir",
  "pynvim.api.tabpage",
  "pynvim.api.tabpage.Tabpage",
  "pynvim.api.tabpage.__all__",
  "pynvim.api.walk",
  "pynvim.api.window",
  "pynvim.api.window.Window",
  "pynvim.api.window.__all__",
  "pynvim.attach",
  "pynvim.autocmd",
  "pynvim.child_session",
  "pynvim.command",
  "pynvim.compat",
  "pynvim.compat.IS_PYTHON3",
  "pynvim.compat.NUM_TYPES",
  "pynvim.compat.check_async",
  "pynvim.compat.find_module",
  "pynvim.compat.long",
  "pynvim.compat.unicode_errors_default",
  "pynvim.decode",
  "pynvim.encoding",
  "pynvim.function",
  "pynvim.msgpack_rpc",
  "pynvim.msgpack_rpc.AsyncSession",
  "pynvim.msgpack_rpc.ErrorResponse",
  "pynvim.msgpack_rpc.EventLoop",
  "pynvim.msgpack_rpc.MsgpackStream",
  "pynvim.msgpack_rpc.Session",
  "pynvim.msgpack_rpc.__all__",
  "pynvim.msgpack_rpc.async_session",
  "pynvim.msgpack_rpc.async_session.AsyncSession",
  "pynvim.msgpack_rpc.async_session.Response",
  "pynvim.msgpack_rpc.async_session.debug",
  "pynvim.msgpack_rpc.async_session.info",
  "pynvim.msgpack_rpc.async_session.logger",
  "pynvim.msgpack_rpc.async_session.warn",
  "pynvim.msgpack_rpc.child_session",
  "pynvim.msgpack_rpc.event_loop",
  "pynvim.msgpack_rpc.event_loop.AsyncioEventLoop",
  "pynvim.msgpack_rpc.event_loop.EventLoop",
  "pynvim.msgpack_rpc.event_loop.UvEventLoop",
  "pynvim.msgpack_rpc.event_loop.__all__",
  "pynvim.msgpack_rpc.event_loop.asyncio",
  "pynvim.msgpack_rpc.event_loop.asyncio.AsyncioEventLoop",
  "pynvim.msgpack_rpc.event_loop.asyncio.debug",
  "pynvim.msgpack_rpc.event_loop.asyncio.info",
  "pynvim.msgpack_rpc.event_loop.asyncio.logger",
  "pynvim.msgpack_rpc.event_loop.asyncio.loop_cls",
  "pynvim.msgpack_rpc.event_loop.asyncio.warn",
  "pynvim.msgpack_rpc.event_loop.base",
  "pynvim.msgpack_rpc.event_loop.base.BaseEventLoop",
  "pynvim.msgpack_rpc.event_loop.base.debug",
  "pynvim.msgpack_rpc.event_loop.base.default_int_handler",
  "pynvim.msgpack_rpc.event_loop.base.info",
  "pynvim.msgpack_rpc.event_loop.base.logger",
  "pynvim.msgpack_rpc.event_loop.base.main_thread",
  "pynvim.msgpack_rpc.event_loop.base.warn",
  "pynvim.msgpack_rpc.event_loop.uv",
  "pynvim.msgpack_rpc.event_loop.uv.UvEventLoop",
  "pynvim.msgpack_rpc.msgpack_stream",
  "pynvim.msgpack_rpc.msgpack_stream.MsgpackStream",
  "pynvim.msgpack_rpc.msgpack_stream.debug",
  "pynvim.msgpack_rpc.msgpack_stream.info",
  "pynvim.msgpack_rpc.msgpack_stream.logger",
  "pynvim.msgpack_rpc.msgpack_stream.warn",
  "pynvim.msgpack_rpc.session",
  "pynvim.msgpack_rpc.session.ErrorResponse",
  "pynvim.msgpack_rpc.session.Session",
  "pynvim.msgpack_rpc.session.debug",
  "pynvim.msgpack_rpc.session.error",
  "pynvim.msgpack_rpc.session.info",
  "pynvim.msgpack_rpc.session.logger",
  "pynvim.msgpack_rpc.session.warn",
  "pynvim.msgpack_rpc.socket_session",
  "pynvim.msgpack_rpc.stdio_session",
  "pynvim.msgpack_rpc.tcp_session",
  "pynvim.plugin",
  "pynvim.plugin.Host",
  "pynvim.plugin.__all__",
  "pynvim.plugin.autocmd",
  "pynvim.plugin.command",
  "pynvim.plugin.decode",
  "pynvim.plugin.decorators",
  "pynvim.plugin.decorators.__all__",
  "pynvim.plugin.decorators.autocmd",
  "pynvim.plugin.decorators.command",
  "pynvim.plugin.decorators.debug",
  "pynvim.plugin.decorators.dec",
  "pynvim.plugin.decorators.decode",
  "pynvim.plugin.decorators.encoding.dec",
  "pynvim.plugin.decorators.function",
  "pynvim.plugin.decorators.info",
  "pynvim.plugin.decorators.logger",
  "pynvim.plugin.decorators.plugin",
  "pynvim.plugin.decorators.rpc_export",
  "pynvim.plugin.decorators.shutdown_hook",
  "pynvim.plugin.decorators.warn",
  "pynvim.plugin.encoding",
  "pynvim.plugin.function",
  "pynvim.plugin.host",
  "pynvim.plugin.host.Host",
  "pynvim.plugin.host.__all__",
  "pynvim.plugin.host.debug",
  "pynvim.plugin.host.error",
  "pynvim.plugin.host.host_method_spec",
  "pynvim.plugin.host.info",
  "pynvim.plugin.host.logger",
  "pynvim.plugin.host.warn",
  "pynvim.plugin.plugin",
  "pynvim.plugin.rpc_export",
  "pynvim.plugin.script_host",
  "pynvim.plugin.script_host.LegacyVim",
  "pynvim.plugin.script_host.PYTHON_SUBDIR",
  "pynvim.plugin.script_host.RedirectStream",
  "pynvim.plugin.script_host.ScriptHost",
  "pynvim.plugin.script_host.__all__",
  "pynvim.plugin.script_host.basestring",
  "pynvim.plugin.script_host.debug",
  "pynvim.plugin.script_host.discover_runtime_directories",
  "pynvim.plugin.script_host.info",
  "pynvim.plugin.script_host.logger",
  "pynvim.plugin.script_host.num_to_str",
  "pynvim.plugin.script_host.num_types",
  "pynvim.plugin.script_host.path_hook",
  "pynvim.plugin.script_host.warn",
  "pynvim.plugin.shutdown_hook",
  "pynvim.rpc_export",
  "pynvim.setup_logging",
  "pynvim.shutdown_hook",
  "pynvim.socket_session",
  "pynvim.start_host",
  "pynvim.stdio_session",
  "pynvim.tcp_session",
  "pynvim.util",
  "pynvim.util.VERSION",
  "pynvim.util.Version",
  "pynvim.util.format_exc_skip"
 ]
}