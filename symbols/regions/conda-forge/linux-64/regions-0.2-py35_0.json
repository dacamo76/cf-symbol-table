{
 "errors": {},
 "symbols": [
  "regions.BoundingBox",
  "regions.CirclePixelRegion",
  "regions.CircleSkyRegion",
  "regions.CompoundPixelRegion",
  "regions.CompoundSkyRegion",
  "regions.DS9RegionParserError",
  "regions.DS9RegionParserWarning",
  "regions.EllipsePixelRegion",
  "regions.EllipseSkyRegion",
  "regions.ExampleDataset",
  "regions.Mask",
  "regions.PixelRegion",
  "regions.PointPixelRegion",
  "regions.PointSkyRegion",
  "regions.PolygonPixelRegion",
  "regions.RectanglePixelRegion",
  "regions.RectangleSkyRegion",
  "regions.Region",
  "regions.SkyRegion",
  "regions.VALID_MASK_MODES",
  "regions._DEFAULT_WCS_MODE",
  "regions._DEFAULT_WCS_ORIGIN",
  "regions.__all__",
  "regions.__githash__",
  "regions.__version__",
  "regions._astropy_init",
  "regions._astropy_init.__all__",
  "regions._astropy_init.__githash__",
  "regions._astropy_init.__version__",
  "regions._astropy_init._get_test_runner",
  "regions._astropy_init.config_dir",
  "regions._astropy_init.config_template",
  "regions._astropy_init.orig_error",
  "regions._astropy_init.test",
  "regions._astropy_init.wmsg",
  "regions._geometry",
  "regions._geometry.__all__",
  "regions._geometry.rotate_polygon",
  "regions._geometry.rotate_polygon.__all__",
  "regions._geometry.rotate_polygon.rotate_polygon",
  "regions._geometry.tests",
  "regions._geometry.tests.test_circular_overlap_grid",
  "regions._geometry.tests.test_circular_overlap_grid.arg_list",
  "regions._geometry.tests.test_circular_overlap_grid.circ_sizes",
  "regions._geometry.tests.test_circular_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_circular_overlap_grid.subsamples",
  "regions._geometry.tests.test_circular_overlap_grid.test_circular_overlap_grid",
  "regions._geometry.tests.test_elliptical_overlap_grid",
  "regions._geometry.tests.test_elliptical_overlap_grid.angles",
  "regions._geometry.tests.test_elliptical_overlap_grid.arg_list",
  "regions._geometry.tests.test_elliptical_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.maj_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.min_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.subsamples",
  "regions._geometry.tests.test_elliptical_overlap_grid.test_elliptical_overlap_grid",
  "regions._geometry.tests.test_rectangular_overlap_grid",
  "regions._geometry.tests.test_rectangular_overlap_grid.angles",
  "regions._geometry.tests.test_rectangular_overlap_grid.arg_list",
  "regions._geometry.tests.test_rectangular_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_rectangular_overlap_grid.rect_sizes",
  "regions._geometry.tests.test_rectangular_overlap_grid.subsamples",
  "regions._geometry.tests.test_rectangular_overlap_grid.test_rectangular_overlap_grid",
  "regions._get_test_runner",
  "regions._table_to_bintable",
  "regions._utils",
  "regions._utils.assert_angle",
  "regions._utils.examples",
  "regions._utils.examples.ExampleDataset",
  "regions._utils.examples.__all__",
  "regions._utils.examples._table_to_bintable",
  "regions._utils.examples.dataset",
  "regions._utils.examples.make_example_dataset",
  "regions._utils.skycoord_to_pixel_mode",
  "regions._utils.skycoord_to_pixel_scale_angle",
  "regions._utils.tests",
  "regions._utils.tests.test_examples",
  "regions._utils.tests.test_examples.TestExampleSimulatedDataset",
  "regions._utils.wcs_helpers",
  "regions._utils.wcs_helpers.assert_angle",
  "regions._utils.wcs_helpers.skycoord_to_pixel_mode",
  "regions._utils.wcs_helpers.skycoord_to_pixel_scale_angle",
  "regions.angle",
  "regions.config_dir",
  "regions.config_template",
  "regions.conftest",
  "regions.conftest.PYTEST_HEADER_MODULES",
  "regions.conftest.TESTED_VERSIONS",
  "regions.conftest.packagename",
  "regions.conftest.version",
  "regions.coordinate",
  "regions.coordinate_systems",
  "regions.coordinate_units",
  "regions.coordsys_name_mapping",
  "regions.core",
  "regions.core.BoundingBox",
  "regions.core.CompoundPixelRegion",
  "regions.core.CompoundSkyRegion",
  "regions.core.Mask",
  "regions.core.PixCoord",
  "regions.core.PixelRegion",
  "regions.core.Region",
  "regions.core.SkyRegion",
  "regions.core.VALID_MASK_MODES",
  "regions.core._DEFAULT_WCS_MODE",
  "regions.core._DEFAULT_WCS_ORIGIN",
  "regions.core.__all__",
  "regions.core.bounding_box",
  "regions.core.bounding_box.BoundingBox",
  "regions.core.bounding_box.__all__",
  "regions.core.compound",
  "regions.core.compound.CompoundPixelRegion",
  "regions.core.compound.CompoundSkyRegion",
  "regions.core.compound.__all__",
  "regions.core.core",
  "regions.core.core.PixelRegion",
  "regions.core.core.Region",
  "regions.core.core.SkyRegion",
  "regions.core.core.VALID_MASK_MODES",
  "regions.core.core._DEFAULT_WCS_MODE",
  "regions.core.core._DEFAULT_WCS_ORIGIN",
  "regions.core.core.__all__",
  "regions.core.mask",
  "regions.core.mask.Mask",
  "regions.core.mask.__all__",
  "regions.core.pixcoord",
  "regions.core.pixcoord.PixCoord",
  "regions.core.pixcoord.__all__",
  "regions.core.tests",
  "regions.core.tests.test_bounding_box",
  "regions.core.tests.test_bounding_box.HAS_MATPLOTLIB",
  "regions.core.tests.test_bounding_box.test_bounding_box_as_patch",
  "regions.core.tests.test_bounding_box.test_bounding_box_eq",
  "regions.core.tests.test_bounding_box.test_bounding_box_extent",
  "regions.core.tests.test_bounding_box.test_bounding_box_from_float",
  "regions.core.tests.test_bounding_box.test_bounding_box_init",
  "regions.core.tests.test_bounding_box.test_bounding_box_inputs",
  "regions.core.tests.test_bounding_box.test_bounding_box_repr",
  "regions.core.tests.test_bounding_box.test_bounding_box_shape",
  "regions.core.tests.test_bounding_box.test_bounding_box_slices",
  "regions.core.tests.test_compound",
  "regions.core.tests.test_compound.test_compound",
  "regions.core.tests.test_pixcoord",
  "regions.core.tests.test_pixcoord.HAS_SHAPELY",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_scalar",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_scalar",
  "regions.core.tests.test_pixcoord.test_pixcoord_shapely_array",
  "regions.core.tests.test_pixcoord.test_pixcoord_shapely_scalar",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_scalar",
  "regions.core.tests.test_pixcoord.wcs",
  "regions.cython_version",
  "regions.cython_version.cython_version",
  "regions.dataset",
  "regions.ds9_objects_to_string",
  "regions.ds9_region_list_to_objects",
  "regions.ds9_string_to_objects",
  "regions.ds9_string_to_region_list",
  "regions.global_parser",
  "regions.height",
  "regions.hour_or_deg",
  "regions.io",
  "regions.io.DS9RegionParserError",
  "regions.io.DS9RegionParserWarning",
  "regions.io.__all__",
  "regions.io.angle",
  "regions.io.coordinate",
  "regions.io.coordinate_systems",
  "regions.io.coordinate_units",
  "regions.io.coordsys_name_mapping",
  "regions.io.ds9_objects_to_string",
  "regions.io.ds9_region_list_to_objects",
  "regions.io.ds9_string_to_objects",
  "regions.io.ds9_string_to_region_list",
  "regions.io.global_parser",
  "regions.io.height",
  "regions.io.hour_or_deg",
  "regions.io.language_spec",
  "regions.io.letter",
  "regions.io.line_parser",
  "regions.io.meta_parser",
  "regions.io.meta_token",
  "regions.io.paren",
  "regions.io.parse_angular_length_quantity",
  "regions.io.parse_coordinate",
  "regions.io.radius",
  "regions.io.read_ds9",
  "regions.io.read_ds9.DS9RegionParserError",
  "regions.io.read_ds9.DS9RegionParserWarning",
  "regions.io.read_ds9.__all__",
  "regions.io.read_ds9.angle",
  "regions.io.read_ds9.coordinate",
  "regions.io.read_ds9.coordinate_systems",
  "regions.io.read_ds9.coordinate_units",
  "regions.io.read_ds9.coordsys_name_mapping",
  "regions.io.read_ds9.ds9_region_list_to_objects",
  "regions.io.read_ds9.ds9_string_to_objects",
  "regions.io.read_ds9.ds9_string_to_region_list",
  "regions.io.read_ds9.global_parser",
  "regions.io.read_ds9.height",
  "regions.io.read_ds9.hour_or_deg",
  "regions.io.read_ds9.language_spec",
  "regions.io.read_ds9.letter",
  "regions.io.read_ds9.line_parser",
  "regions.io.read_ds9.meta_parser",
  "regions.io.read_ds9.meta_token",
  "regions.io.read_ds9.paren",
  "regions.io.read_ds9.parse_angular_length_quantity",
  "regions.io.read_ds9.parse_coordinate",
  "regions.io.read_ds9.radius",
  "regions.io.read_ds9.read_ds9",
  "regions.io.read_ds9.region_type_or_coordsys_re",
  "regions.io.read_ds9.strip_paren",
  "regions.io.read_ds9.type_parser",
  "regions.io.read_ds9.unit_mapping",
  "regions.io.read_ds9.width",
  "regions.io.region_type_or_coordsys_re",
  "regions.io.setup_package",
  "regions.io.setup_package.get_package_data",
  "regions.io.strip_paren",
  "regions.io.tests",
  "regions.io.tests.test_ds9_language",
  "regions.io.tests.test_ds9_language._ASTROPY_MINVERSION",
  "regions.io.tests.test_ds9_language._ASTROPY_VERSION",
  "regions.io.tests.test_ds9_language.test_ds9_color",
  "regions.io.tests.test_ds9_language.test_ds9_io",
  "regions.io.tests.test_ds9_language.test_ds9_objects_to_str",
  "regions.io.tests.test_ds9_language.test_ds9_string_to_objects",
  "regions.io.tests.test_ds9_language.test_fk5",
  "regions.io.tests.test_ds9_language.test_galactic",
  "regions.io.tests.test_ds9_language.test_global_parser",
  "regions.io.tests.test_ds9_language.test_missing_region_warns",
  "regions.io.tests.test_ds9_language.test_physical",
  "regions.io.tests.test_ds9_language.test_read",
  "regions.io.type_parser",
  "regions.io.unit_mapping",
  "regions.io.width",
  "regions.io.write_ds9",
  "regions.io.write_ds9.__all__",
  "regions.io.write_ds9.coordsys_name_mapping",
  "regions.io.write_ds9.ds9_objects_to_string",
  "regions.io.write_ds9.write_ds9",
  "regions.language_spec",
  "regions.letter",
  "regions.line_parser",
  "regions.make_example_dataset",
  "regions.meta_parser",
  "regions.meta_token",
  "regions.orig_error",
  "regions.paren",
  "regions.parse_angular_length_quantity",
  "regions.parse_coordinate",
  "regions.radius",
  "regions.read_ds9",
  "regions.region_type_or_coordsys_re",
  "regions.shapes",
  "regions.shapes.CirclePixelRegion",
  "regions.shapes.CircleSkyRegion",
  "regions.shapes.EllipsePixelRegion",
  "regions.shapes.EllipseSkyRegion",
  "regions.shapes.PointPixelRegion",
  "regions.shapes.PointSkyRegion",
  "regions.shapes.PolygonPixelRegion",
  "regions.shapes.RectanglePixelRegion",
  "regions.shapes.RectangleSkyRegion",
  "regions.shapes.__all__",
  "regions.shapes.circle",
  "regions.shapes.circle.CirclePixelRegion",
  "regions.shapes.circle.CircleSkyRegion",
  "regions.shapes.circle.__all__",
  "regions.shapes.ellipse",
  "regions.shapes.ellipse.EllipsePixelRegion",
  "regions.shapes.ellipse.EllipseSkyRegion",
  "regions.shapes.ellipse.__all__",
  "regions.shapes.point",
  "regions.shapes.point.PointPixelRegion",
  "regions.shapes.point.PointSkyRegion",
  "regions.shapes.point.__all__",
  "regions.shapes.polygon",
  "regions.shapes.polygon.PolygonPixelRegion",
  "regions.shapes.polygon.PolygonSkyRegion",
  "regions.shapes.polygon.__all__",
  "regions.shapes.rectangle",
  "regions.shapes.rectangle.RectanglePixelRegion",
  "regions.shapes.rectangle.RectangleSkyRegion",
  "regions.shapes.rectangle.__all__",
  "regions.shapes.setup_package",
  "regions.shapes.setup_package.get_package_data",
  "regions.shapes.tests",
  "regions.shapes.tests.setup_package",
  "regions.shapes.tests.setup_package.get_package_data",
  "regions.shapes.tests.test_api",
  "regions.shapes.tests.test_api.COMMON_WCS",
  "regions.shapes.tests.test_api.MASK_MODES",
  "regions.shapes.tests.test_api.PIXEL_REGIONS",
  "regions.shapes.tests.test_api.SKYPIX_MODES",
  "regions.shapes.tests.test_api.SKY_REGIONS",
  "regions.shapes.tests.test_api.ids_func",
  "regions.shapes.tests.test_api.test_pix_area",
  "regions.shapes.tests.test_api.test_pix_in",
  "regions.shapes.tests.test_api.test_pix_to_mask",
  "regions.shapes.tests.test_api.test_pix_to_shapely",
  "regions.shapes.tests.test_api.test_pix_to_sky",
  "regions.shapes.tests.test_api.test_sky_area",
  "regions.shapes.tests.test_api.test_sky_in",
  "regions.shapes.tests.test_api.test_sky_to_pix",
  "regions.shapes.tests.test_circle",
  "regions.shapes.tests.test_circle.TestCirclePixelRegion",
  "regions.shapes.tests.test_circle.TestCircleSkyRegion",
  "regions.shapes.tests.test_ellipse",
  "regions.shapes.tests.test_ellipse.TestEllipsePixelRegion",
  "regions.shapes.tests.test_ellipse.TestEllipseSkyRegion",
  "regions.shapes.tests.test_masks",
  "regions.shapes.tests.test_masks.MODES",
  "regions.shapes.tests.test_masks.REGIONS",
  "regions.shapes.tests.test_masks.label",
  "regions.shapes.tests.test_masks.test_to_mask",
  "regions.shapes.tests.test_point",
  "regions.shapes.tests.test_point.TestPointPixelRegion",
  "regions.shapes.tests.test_point.TestPointSkyRegion",
  "regions.shapes.tests.test_polygon",
  "regions.shapes.tests.test_polygon.TestPolygonPixelRegion",
  "regions.shapes.tests.test_polygon.TestPolygonSkyRegion",
  "regions.shapes.tests.test_rectangle",
  "regions.shapes.tests.test_rectangle.TestRectanglePixelRegion",
  "regions.shapes.tests.test_rectangle.TestRectangleSkyRegion",
  "regions.shapes.tests.utils",
  "regions.shapes.tests.utils.ASTROPY_LT_13",
  "regions.shapes.tests.utils.HAS_MATPLOTLIB",
  "regions.shapes.tests.utils.HAS_SHAPELY",
  "regions.strip_paren",
  "regions.test",
  "regions.tests",
  "regions.tests.setup_package",
  "regions.tests.setup_package.get_package_data",
  "regions.type_parser",
  "regions.unit_mapping",
  "regions.version",
  "regions.version._decode_stdio",
  "regions.version._get_repo_path",
  "regions.version._last_generated_version",
  "regions.version._last_githash",
  "regions.version._packagename",
  "regions.version.bugfix",
  "regions.version.compiler",
  "regions.version.cython_version",
  "regions.version.debug",
  "regions.version.get_git_devstr",
  "regions.version.githash",
  "regions.version.major",
  "regions.version.minor",
  "regions.version.release",
  "regions.version.timestamp",
  "regions.version.update_git_devstr",
  "regions.version.version",
  "regions.width",
  "regions.wmsg",
  "regions.write_ds9"
 ]
}