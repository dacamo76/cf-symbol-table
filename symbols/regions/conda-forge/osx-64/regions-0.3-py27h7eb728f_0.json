{
 "errors": {},
 "symbols": [
  "regions.AnnulusAngle",
  "regions.AnnulusCenterPix",
  "regions.AnnulusCenterSky",
  "regions.AnnulusInnerQuantityLength",
  "regions.AnnulusInnerScalarLength",
  "regions.AnnulusOuterQuantityLength",
  "regions.AnnulusOuterScalarLength",
  "regions.AsymmetricAnnulusPixelRegion",
  "regions.AsymmetricAnnulusSkyRegion",
  "regions.BoundingBox",
  "regions.CRTFParser",
  "regions.CRTFRegionParser",
  "regions.CircleAnnulusPixelRegion",
  "regions.CircleAnnulusSkyRegion",
  "regions.CirclePixelRegion",
  "regions.CircleSkyRegion",
  "regions.CompoundPixelRegion",
  "regions.CompoundSkyRegion",
  "regions.CoordinateParser",
  "regions.DS9Parser",
  "regions.DS9RegionParser",
  "regions.EllipseAnnulusPixelRegion",
  "regions.EllipseAnnulusSkyRegion",
  "regions.EllipsePixelRegion",
  "regions.EllipseSkyRegion",
  "regions.ExampleDataset",
  "regions.FITSRegionParser",
  "regions.FITSRegionParserError",
  "regions.FITSRegionParserWarning",
  "regions.FITSRegionRowParser",
  "regions.LinePixelRegion",
  "regions.LineSkyRegion",
  "regions.Meta",
  "regions.MetaRegion",
  "regions.OneDPix",
  "regions.OneDSky",
  "regions.PixelRegion",
  "regions.PointPixelRegion",
  "regions.PointSkyRegion",
  "regions.PolygonPixelRegion",
  "regions.PolygonSkyRegion",
  "regions.QuantityLength",
  "regions.RectangleAnnulusPixelRegion",
  "regions.RectangleAnnulusSkyRegion",
  "regions.RectanglePixelRegion",
  "regions.RectangleSkyRegion",
  "regions.Region",
  "regions.RegionAttr",
  "regions.RegionConversionError",
  "regions.RegionMask",
  "regions.ScalarLength",
  "regions.ScalarPix",
  "regions.ScalarSky",
  "regions.Shape",
  "regions.SkyRegion",
  "regions.TextPixelRegion",
  "regions.TextSkyRegion",
  "regions.VALID_MASK_MODES",
  "regions._DEFAULT_WCS_MODE",
  "regions._DEFAULT_WCS_ORIGIN",
  "regions.__all__",
  "regions.__githash__",
  "regions.__version__",
  "regions._astropy_init",
  "regions._astropy_init.__all__",
  "regions._astropy_init.__githash__",
  "regions._astropy_init.__version__",
  "regions._astropy_init._get_test_runner",
  "regions._astropy_init.config_dir",
  "regions._astropy_init.config_template",
  "regions._astropy_init.orig_error",
  "regions._astropy_init.test",
  "regions._astropy_init.wmsg",
  "regions._geometry",
  "regions._geometry.__all__",
  "regions._geometry.rotate_polygon",
  "regions._geometry.rotate_polygon.__all__",
  "regions._geometry.rotate_polygon.rotate_polygon",
  "regions._geometry.tests",
  "regions._geometry.tests.test_circular_overlap_grid",
  "regions._geometry.tests.test_circular_overlap_grid.arg_list",
  "regions._geometry.tests.test_circular_overlap_grid.circ_sizes",
  "regions._geometry.tests.test_circular_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_circular_overlap_grid.subsamples",
  "regions._geometry.tests.test_circular_overlap_grid.test_circular_overlap_grid",
  "regions._geometry.tests.test_elliptical_overlap_grid",
  "regions._geometry.tests.test_elliptical_overlap_grid.angles",
  "regions._geometry.tests.test_elliptical_overlap_grid.arg_list",
  "regions._geometry.tests.test_elliptical_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.maj_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.min_sizes",
  "regions._geometry.tests.test_elliptical_overlap_grid.subsamples",
  "regions._geometry.tests.test_elliptical_overlap_grid.test_elliptical_overlap_grid",
  "regions._geometry.tests.test_rectangular_overlap_grid",
  "regions._geometry.tests.test_rectangular_overlap_grid.angles",
  "regions._geometry.tests.test_rectangular_overlap_grid.arg_list",
  "regions._geometry.tests.test_rectangular_overlap_grid.grid_sizes",
  "regions._geometry.tests.test_rectangular_overlap_grid.rect_sizes",
  "regions._geometry.tests.test_rectangular_overlap_grid.subsamples",
  "regions._geometry.tests.test_rectangular_overlap_grid.test_rectangular_overlap_grid",
  "regions._get_test_runner",
  "regions._table_to_bintable",
  "regions._to_io_meta",
  "regions._utils",
  "regions._utils.assert_angle",
  "regions._utils.examples",
  "regions._utils.examples.ExampleDataset",
  "regions._utils.examples.__all__",
  "regions._utils.examples._table_to_bintable",
  "regions._utils.examples.dataset",
  "regions._utils.examples.make_example_dataset",
  "regions._utils.skycoord_to_pixel_mode",
  "regions._utils.skycoord_to_pixel_scale_angle",
  "regions._utils.tests",
  "regions._utils.tests.test_examples",
  "regions._utils.tests.test_examples.TestExampleSimulatedDataset",
  "regions._utils.wcs_helpers",
  "regions._utils.wcs_helpers.assert_angle",
  "regions._utils.wcs_helpers.skycoord_to_pixel_mode",
  "regions._utils.wcs_helpers.skycoord_to_pixel_scale_angle",
  "regions.angle",
  "regions.config_dir",
  "regions.config_template",
  "regions.conftest",
  "regions.conftest.PYTEST_HEADER_MODULES",
  "regions.conftest.TESTED_VERSIONS",
  "regions.conftest.packagename",
  "regions.conftest.version",
  "regions.coordinate",
  "regions.coordsys_mapping",
  "regions.core",
  "regions.core.AnnulusAngle",
  "regions.core.AnnulusCenterPix",
  "regions.core.AnnulusCenterSky",
  "regions.core.AnnulusInnerQuantityLength",
  "regions.core.AnnulusInnerScalarLength",
  "regions.core.AnnulusOuterQuantityLength",
  "regions.core.AnnulusOuterScalarLength",
  "regions.core.BoundingBox",
  "regions.core.CompoundPixelRegion",
  "regions.core.CompoundSkyRegion",
  "regions.core.Meta",
  "regions.core.MetaRegion",
  "regions.core.OneDPix",
  "regions.core.OneDSky",
  "regions.core.PixCoord",
  "regions.core.PixelRegion",
  "regions.core.QuantityLength",
  "regions.core.Region",
  "regions.core.RegionAttr",
  "regions.core.RegionMask",
  "regions.core.ScalarLength",
  "regions.core.ScalarPix",
  "regions.core.ScalarSky",
  "regions.core.SkyRegion",
  "regions.core.VALID_MASK_MODES",
  "regions.core._DEFAULT_WCS_MODE",
  "regions.core._DEFAULT_WCS_ORIGIN",
  "regions.core.__all__",
  "regions.core.attributes",
  "regions.core.attributes.AnnulusAngle",
  "regions.core.attributes.AnnulusCenterPix",
  "regions.core.attributes.AnnulusCenterSky",
  "regions.core.attributes.AnnulusInnerQuantityLength",
  "regions.core.attributes.AnnulusInnerScalarLength",
  "regions.core.attributes.AnnulusOuterQuantityLength",
  "regions.core.attributes.AnnulusOuterScalarLength",
  "regions.core.attributes.CompoundRegionPix",
  "regions.core.attributes.CompoundRegionSky",
  "regions.core.attributes.Meta",
  "regions.core.attributes.OneDPix",
  "regions.core.attributes.OneDSky",
  "regions.core.attributes.QuantityLength",
  "regions.core.attributes.RegionAttr",
  "regions.core.attributes.RegionMeta",
  "regions.core.attributes.RegionVisual",
  "regions.core.attributes.ScalarLength",
  "regions.core.attributes.ScalarPix",
  "regions.core.attributes.ScalarSky",
  "regions.core.attributes.__all__",
  "regions.core.bounding_box",
  "regions.core.bounding_box.BoundingBox",
  "regions.core.bounding_box.__all__",
  "regions.core.compound",
  "regions.core.compound.CompoundPixelRegion",
  "regions.core.compound.CompoundSkyRegion",
  "regions.core.compound.CompoundSkyRegion.region1",
  "regions.core.compound.CompoundSkyRegion.region2",
  "regions.core.compound.__all__",
  "regions.core.core",
  "regions.core.core.MetaRegion",
  "regions.core.core.PixelRegion",
  "regions.core.core.Region",
  "regions.core.core.SkyRegion",
  "regions.core.core.VALID_MASK_MODES",
  "regions.core.core._DEFAULT_WCS_MODE",
  "regions.core.core._DEFAULT_WCS_ORIGIN",
  "regions.core.core.__all__",
  "regions.core.mask",
  "regions.core.mask.RegionMask",
  "regions.core.mask.__all__",
  "regions.core.pixcoord",
  "regions.core.pixcoord.PixCoord",
  "regions.core.pixcoord.__all__",
  "regions.core.tests",
  "regions.core.tests.test_bounding_box",
  "regions.core.tests.test_bounding_box.HAS_MATPLOTLIB",
  "regions.core.tests.test_bounding_box.test_bounding_box_as_artist",
  "regions.core.tests.test_bounding_box.test_bounding_box_eq",
  "regions.core.tests.test_bounding_box.test_bounding_box_extent",
  "regions.core.tests.test_bounding_box.test_bounding_box_from_float",
  "regions.core.tests.test_bounding_box.test_bounding_box_init",
  "regions.core.tests.test_bounding_box.test_bounding_box_inputs",
  "regions.core.tests.test_bounding_box.test_bounding_box_repr",
  "regions.core.tests.test_bounding_box.test_bounding_box_shape",
  "regions.core.tests.test_bounding_box.test_bounding_box_slices",
  "regions.core.tests.test_compound",
  "regions.core.tests.test_compound.test_compound_pixel",
  "regions.core.tests.test_compound.test_compound_sky",
  "regions.core.tests.test_mask",
  "regions.core.tests.test_mask.HAS_MATPLOTLIB",
  "regions.core.tests.test_mask.POSITIONS",
  "regions.core.tests.test_mask.test_mask_array",
  "regions.core.tests.test_mask.test_mask_cutout_copy",
  "regions.core.tests.test_mask.test_mask_cutout_no_overlap",
  "regions.core.tests.test_mask.test_mask_cutout_partial_overlap",
  "regions.core.tests.test_mask.test_mask_cutout_shape",
  "regions.core.tests.test_mask.test_mask_input_shapes",
  "regions.core.tests.test_pixcoord",
  "regions.core.tests.test_pixcoord.test_equality",
  "regions.core.tests.test_pixcoord.test_pixcoord_basic_dimension",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_basics_scalar",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_separation_scalar",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_array_1d",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_array_2d",
  "regions.core.tests.test_pixcoord.test_pixcoord_to_sky_scalar",
  "regions.core.tests.test_pixcoord.wcs",
  "regions.crtf_objects_to_string",
  "regions.cython_version",
  "regions.cython_version.cython_version",
  "regions.dataset",
  "regions.ds9_objects_to_string",
  "regions.fits_region_objects_to_table",
  "regions.height",
  "regions.io",
  "regions.io.CRTFParser",
  "regions.io.CRTFRegionParser",
  "regions.io.CoordinateParser",
  "regions.io.DS9Parser",
  "regions.io.DS9RegionParser",
  "regions.io.FITSRegionParser",
  "regions.io.FITSRegionParserError",
  "regions.io.FITSRegionParserWarning",
  "regions.io.FITSRegionRowParser",
  "regions.io.RegionConversionError",
  "regions.io.Shape",
  "regions.io.__all__",
  "regions.io._to_io_meta",
  "regions.io.angle",
  "regions.io.coordinate",
  "regions.io.coordsys_mapping",
  "regions.io.core",
  "regions.io.core.RegionConversionError",
  "regions.io.core.Shape",
  "regions.io.core.__all__",
  "regions.io.core._to_io_meta",
  "regions.io.core.coordsys_mapping",
  "regions.io.core.reg_mapping",
  "regions.io.core.regions_attributes",
  "regions.io.core.to_crtf_meta",
  "regions.io.core.to_ds9_meta",
  "regions.io.core.to_shape_list",
  "regions.io.core.valid_coordsys",
  "regions.io.crtf",
  "regions.io.crtf.core",
  "regions.io.crtf.core.CRTFRegionParserError",
  "regions.io.crtf.core.CRTFRegionParserWarning",
  "regions.io.crtf.core.__all__",
  "regions.io.crtf.core.valid_symbols",
  "regions.io.crtf.read",
  "regions.io.crtf.read.CRTFParser",
  "regions.io.crtf.read.CRTFRegionParser",
  "regions.io.crtf.read.CoordinateParser",
  "regions.io.crtf.read.__all__",
  "regions.io.crtf.read.read_crtf",
  "regions.io.crtf.read.regex_begin",
  "regions.io.crtf.read.regex_comment",
  "regions.io.crtf.read.regex_coordinate",
  "regions.io.crtf.read.regex_global",
  "regions.io.crtf.read.regex_length",
  "regions.io.crtf.read.regex_line",
  "regions.io.crtf.read.regex_meta",
  "regions.io.crtf.read.regex_region",
  "regions.io.crtf.setup_package",
  "regions.io.crtf.setup_package.get_package_data",
  "regions.io.crtf.tests",
  "regions.io.crtf.tests.test_crtf_language",
  "regions.io.crtf.tests.test_crtf_language._ASTROPY_MINVERSION",
  "regions.io.crtf.tests.test_crtf_language._ASTROPY_VERSION",
  "regions.io.crtf.tests.test_crtf_language.implemented_region_types",
  "regions.io.crtf.tests.test_crtf_language.test_file_crtf",
  "regions.io.crtf.tests.test_crtf_language.test_global_parser",
  "regions.io.crtf.tests.test_crtf_language.test_valid_crtf_line",
  "regions.io.crtf.tests.test_crtf_language.test_valid_global_meta_key",
  "regions.io.crtf.tests.test_crtf_language.test_valid_meta_key",
  "regions.io.crtf.tests.test_crtf_language.test_valid_region_syntax",
  "regions.io.crtf.tests.test_crtf_language.test_valid_region_type",
  "regions.io.crtf.write",
  "regions.io.crtf.write.__all__",
  "regions.io.crtf.write.crtf_objects_to_string",
  "regions.io.crtf.write.write_crtf",
  "regions.io.crtf_objects_to_string",
  "regions.io.ds9",
  "regions.io.ds9.core",
  "regions.io.ds9.core.DS9RegionParserError",
  "regions.io.ds9.core.DS9RegionParserWarning",
  "regions.io.ds9.core.__all__",
  "regions.io.ds9.core.valid_symbols_ds9",
  "regions.io.ds9.read",
  "regions.io.ds9.read.CoordinateParser",
  "regions.io.ds9.read.DS9Parser",
  "regions.io.ds9.read.DS9RegionParser",
  "regions.io.ds9.read.__all__",
  "regions.io.ds9.read.angle",
  "regions.io.ds9.read.coordinate",
  "regions.io.ds9.read.height",
  "regions.io.ds9.read.radius",
  "regions.io.ds9.read.read_ds9",
  "regions.io.ds9.read.regex_global",
  "regions.io.ds9.read.regex_meta",
  "regions.io.ds9.read.regex_paren",
  "regions.io.ds9.read.regex_splitter",
  "regions.io.ds9.read.width",
  "regions.io.ds9.setup_package",
  "regions.io.ds9.setup_package.get_package_data",
  "regions.io.ds9.tests",
  "regions.io.ds9.tests.test_ds9_language",
  "regions.io.ds9.tests.test_ds9_language._ASTROPY_MINVERSION",
  "regions.io.ds9.tests.test_ds9_language._ASTROPY_VERSION",
  "regions.io.ds9.tests.test_ds9_language.implemented_region_types",
  "regions.io.ds9.tests.test_ds9_language.test_ds9_color",
  "regions.io.ds9.tests.test_ds9_language.test_ds9_io",
  "regions.io.ds9.tests.test_ds9_language.test_ds9_objects_to_str",
  "regions.io.ds9.tests.test_ds9_language.test_ds9_string_to_objects",
  "regions.io.ds9.tests.test_ds9_language.test_expicit_formatting_directives",
  "regions.io.ds9.tests.test_ds9_language.test_file",
  "regions.io.ds9.tests.test_ds9_language.test_global_parser",
  "regions.io.ds9.tests.test_ds9_language.test_issue134_regression",
  "regions.io.ds9.tests.test_ds9_language.test_issue65_regression",
  "regions.io.ds9.tests.test_ds9_language.test_missing_region_warns",
  "regions.io.ds9.tests.test_ds9_language.test_pixel_angle",
  "regions.io.ds9.tests.test_ds9_language.test_read",
  "regions.io.ds9.write",
  "regions.io.ds9.write.__all__",
  "regions.io.ds9.write.ds9_objects_to_string",
  "regions.io.ds9.write.write_ds9",
  "regions.io.ds9_objects_to_string",
  "regions.io.fits",
  "regions.io.fits.core",
  "regions.io.fits.core.FITSRegionParserError",
  "regions.io.fits.core.FITSRegionParserWarning",
  "regions.io.fits.core.__all__",
  "regions.io.fits.core.language_spec",
  "regions.io.fits.read",
  "regions.io.fits.read.FITSRegionParser",
  "regions.io.fits.read.FITSRegionRowParser",
  "regions.io.fits.read.__all__",
  "regions.io.fits.read.read_fits_region",
  "regions.io.fits.setup_package",
  "regions.io.fits.setup_package.get_package_data",
  "regions.io.fits.tests",
  "regions.io.fits.tests.test_fits_region",
  "regions.io.fits.tests.test_fits_region.implemented_region_types",
  "regions.io.fits.tests.test_fits_region.test_file_fits",
  "regions.io.fits.tests.test_fits_region.test_only_pixel_regions",
  "regions.io.fits.tests.test_fits_region.test_valid_columns",
  "regions.io.fits.tests.test_fits_region.test_valid_row",
  "regions.io.fits.write",
  "regions.io.fits.write.__all__",
  "regions.io.fits.write.fits_region_objects_to_table",
  "regions.io.fits.write.write_fits_region",
  "regions.io.fits_region_objects_to_table",
  "regions.io.height",
  "regions.io.language_spec",
  "regions.io.radius",
  "regions.io.read_crtf",
  "regions.io.read_ds9",
  "regions.io.read_fits_region",
  "regions.io.reg_mapping",
  "regions.io.regex_begin",
  "regions.io.regex_comment",
  "regions.io.regex_coordinate",
  "regions.io.regex_global",
  "regions.io.regex_length",
  "regions.io.regex_line",
  "regions.io.regex_meta",
  "regions.io.regex_paren",
  "regions.io.regex_region",
  "regions.io.regex_splitter",
  "regions.io.regions_attributes",
  "regions.io.tests",
  "regions.io.tests.test_shape_object",
  "regions.io.tests.test_shape_object.test_shape_crtf",
  "regions.io.tests.test_shape_object.test_shape_ds9",
  "regions.io.tests.test_shape_object.test_valid_ellipse_crtf",
  "regions.io.tests.test_shape_object.test_valid_ellipse_ds9",
  "regions.io.tests.test_shape_object.test_valid_shape",
  "regions.io.to_crtf_meta",
  "regions.io.to_ds9_meta",
  "regions.io.to_shape_list",
  "regions.io.valid_coordsys",
  "regions.io.width",
  "regions.io.write_crtf",
  "regions.io.write_ds9",
  "regions.io.write_fits_region",
  "regions.language_spec",
  "regions.make_example_dataset",
  "regions.orig_error",
  "regions.radius",
  "regions.read_crtf",
  "regions.read_ds9",
  "regions.read_fits_region",
  "regions.reg_mapping",
  "regions.regex_begin",
  "regions.regex_comment",
  "regions.regex_coordinate",
  "regions.regex_global",
  "regions.regex_length",
  "regions.regex_line",
  "regions.regex_meta",
  "regions.regex_paren",
  "regions.regex_region",
  "regions.regex_splitter",
  "regions.regions_attributes",
  "regions.shapes",
  "regions.shapes.AsymmetricAnnulusPixelRegion",
  "regions.shapes.AsymmetricAnnulusSkyRegion",
  "regions.shapes.CircleAnnulusPixelRegion",
  "regions.shapes.CircleAnnulusSkyRegion",
  "regions.shapes.CirclePixelRegion",
  "regions.shapes.CircleSkyRegion",
  "regions.shapes.EllipseAnnulusPixelRegion",
  "regions.shapes.EllipseAnnulusSkyRegion",
  "regions.shapes.EllipsePixelRegion",
  "regions.shapes.EllipseSkyRegion",
  "regions.shapes.LinePixelRegion",
  "regions.shapes.LineSkyRegion",
  "regions.shapes.PointPixelRegion",
  "regions.shapes.PointSkyRegion",
  "regions.shapes.PolygonPixelRegion",
  "regions.shapes.PolygonSkyRegion",
  "regions.shapes.RectangleAnnulusPixelRegion",
  "regions.shapes.RectangleAnnulusSkyRegion",
  "regions.shapes.RectanglePixelRegion",
  "regions.shapes.RectangleSkyRegion",
  "regions.shapes.TextPixelRegion",
  "regions.shapes.TextSkyRegion",
  "regions.shapes.__all__",
  "regions.shapes.annulus",
  "regions.shapes.annulus.AsymmetricAnnulusPixelRegion",
  "regions.shapes.annulus.AsymmetricAnnulusSkyRegion",
  "regions.shapes.annulus.CircleAnnulusPixelRegion",
  "regions.shapes.annulus.CircleAnnulusSkyRegion",
  "regions.shapes.annulus.EllipseAnnulusPixelRegion",
  "regions.shapes.annulus.EllipseAnnulusSkyRegion",
  "regions.shapes.annulus.RectangleAnnulusPixelRegion",
  "regions.shapes.annulus.RectangleAnnulusSkyRegion",
  "regions.shapes.annulus.__all__",
  "regions.shapes.annulus.region1",
  "regions.shapes.annulus.region2",
  "regions.shapes.circle",
  "regions.shapes.circle.CirclePixelRegion",
  "regions.shapes.circle.CircleSkyRegion",
  "regions.shapes.circle.__all__",
  "regions.shapes.ellipse",
  "regions.shapes.ellipse.EllipsePixelRegion",
  "regions.shapes.ellipse.EllipseSkyRegion",
  "regions.shapes.ellipse.__all__",
  "regions.shapes.line",
  "regions.shapes.line.LinePixelRegion",
  "regions.shapes.line.LineSkyRegion",
  "regions.shapes.line.__all__",
  "regions.shapes.point",
  "regions.shapes.point.PointPixelRegion",
  "regions.shapes.point.PointSkyRegion",
  "regions.shapes.point.__all__",
  "regions.shapes.polygon",
  "regions.shapes.polygon.PolygonPixelRegion",
  "regions.shapes.polygon.PolygonSkyRegion",
  "regions.shapes.polygon.__all__",
  "regions.shapes.rectangle",
  "regions.shapes.rectangle.RectanglePixelRegion",
  "regions.shapes.rectangle.RectangleSkyRegion",
  "regions.shapes.rectangle.__all__",
  "regions.shapes.setup_package",
  "regions.shapes.setup_package.get_package_data",
  "regions.shapes.tests",
  "regions.shapes.tests.setup_package",
  "regions.shapes.tests.setup_package.get_package_data",
  "regions.shapes.tests.test_annulus",
  "regions.shapes.tests.test_annulus.AsymmetricAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.AsymmetricAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.CircleAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.CircleAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.EllipseAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.EllipseAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.RectangleAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.RectangleAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.TestCircleAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.TestCircleAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.TestEllipseAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.TestEllipseAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.TestRectangleAnnulusPixelRegion",
  "regions.shapes.tests.test_annulus.TestRectangleAnnulusSkyRegion",
  "regions.shapes.tests.test_annulus.__all__",
  "regions.shapes.tests.test_api",
  "regions.shapes.tests.test_api.COMMON_WCS",
  "regions.shapes.tests.test_api.MASK_MODES",
  "regions.shapes.tests.test_api.PIXEL_REGIONS",
  "regions.shapes.tests.test_api.SKY_REGIONS",
  "regions.shapes.tests.test_api.ids_func",
  "regions.shapes.tests.test_api.test_attribute_validation_pixel_regions",
  "regions.shapes.tests.test_api.test_attribute_validation_sky_regions",
  "regions.shapes.tests.test_api.test_pix_area",
  "regions.shapes.tests.test_api.test_pix_in",
  "regions.shapes.tests.test_api.test_pix_to_mask",
  "regions.shapes.tests.test_api.test_pix_to_sky",
  "regions.shapes.tests.test_api.test_sky_in",
  "regions.shapes.tests.test_api.test_sky_to_pix",
  "regions.shapes.tests.test_circle",
  "regions.shapes.tests.test_circle.TestCirclePixelRegion",
  "regions.shapes.tests.test_circle.TestCircleSkyRegion",
  "regions.shapes.tests.test_common",
  "regions.shapes.tests.test_common.BaseTestPixelRegion",
  "regions.shapes.tests.test_common.BaseTestRegion",
  "regions.shapes.tests.test_common.BaseTestSkyRegion",
  "regions.shapes.tests.test_ellipse",
  "regions.shapes.tests.test_ellipse.TestEllipsePixelRegion",
  "regions.shapes.tests.test_ellipse.TestEllipseSkyRegion",
  "regions.shapes.tests.test_line",
  "regions.shapes.tests.test_line.TestLinePixelRegion",
  "regions.shapes.tests.test_line.TestLineSkyRegion",
  "regions.shapes.tests.test_masks",
  "regions.shapes.tests.test_masks.MODES",
  "regions.shapes.tests.test_masks.REGIONS",
  "regions.shapes.tests.test_masks.label",
  "regions.shapes.tests.test_masks.test_to_mask",
  "regions.shapes.tests.test_point",
  "regions.shapes.tests.test_point.TestPointPixelRegion",
  "regions.shapes.tests.test_point.TestPointSkyRegion",
  "regions.shapes.tests.test_polygon",
  "regions.shapes.tests.test_polygon.TestPolygonPixelRegion",
  "regions.shapes.tests.test_polygon.TestPolygonSkyRegion",
  "regions.shapes.tests.test_rectangle",
  "regions.shapes.tests.test_rectangle.TestRectanglePixelRegion",
  "regions.shapes.tests.test_rectangle.TestRectangleSkyRegion",
  "regions.shapes.tests.test_rectangle.test_corners",
  "regions.shapes.tests.test_rectangle.test_rectangular_pixel_region_bbox",
  "regions.shapes.tests.test_text",
  "regions.shapes.tests.test_text.TestTextPixelRegion",
  "regions.shapes.tests.test_text.TestTextSkyRegion",
  "regions.shapes.tests.utils",
  "regions.shapes.tests.utils.ASTROPY_LT_13",
  "regions.shapes.tests.utils.HAS_MATPLOTLIB",
  "regions.shapes.text",
  "regions.shapes.text.TextPixelRegion",
  "regions.shapes.text.TextSkyRegion",
  "regions.shapes.text.__all__",
  "regions.test",
  "regions.tests",
  "regions.tests.helpers",
  "regions.tests.helpers.make_simple_wcs",
  "regions.tests.setup_package",
  "regions.tests.setup_package.get_package_data",
  "regions.to_crtf_meta",
  "regions.to_ds9_meta",
  "regions.to_shape_list",
  "regions.valid_coordsys",
  "regions.version",
  "regions.version._decode_stdio",
  "regions.version._get_repo_path",
  "regions.version._last_generated_version",
  "regions.version._last_githash",
  "regions.version._packagename",
  "regions.version.bugfix",
  "regions.version.compiler",
  "regions.version.cython_version",
  "regions.version.debug",
  "regions.version.get_git_devstr",
  "regions.version.githash",
  "regions.version.major",
  "regions.version.minor",
  "regions.version.release",
  "regions.version.timestamp",
  "regions.version.update_git_devstr",
  "regions.version.version",
  "regions.width",
  "regions.wmsg",
  "regions.write_crtf",
  "regions.write_ds9",
  "regions.write_fits_region"
 ]
}