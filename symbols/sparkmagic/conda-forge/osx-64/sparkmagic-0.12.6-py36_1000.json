{
 "errors": {
  "sparkmagic.kernels.pyspark3kernel": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 487, in get_global_filters",
    "    origin_scope=origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 326, in get_filters",
    "    yield from filters",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 69, in get_filters",
    "    yield DictFilter(self.sub_modules_dict())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 47, in sub_modules_dict",
    "    self.py__path__()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.kernels.pyspark3kernel.pyspark3kernel": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.kernels.pysparkkernel": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/pysparkkernel/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/pysparkkernel/__init__.py'",
    ""
   ]
  },
  "sparkmagic.kernels.pysparkkernel.pysparkkernel": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.kernels.sparkrkernel": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/sparkrkernel/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/sparkrkernel/__init__.py'",
    ""
   ]
  },
  "sparkmagic.kernels.sparkrkernel.sparkrkernel": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/sparkrkernel/sparkrkernel.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/kernels/sparkrkernel/sparkrkernel.py'",
    ""
   ]
  },
  "sparkmagic.kernels.wrapperkernel": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 487, in get_global_filters",
    "    origin_scope=origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 326, in get_filters",
    "    yield from filters",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 69, in get_filters",
    "    yield DictFilter(self.sub_modules_dict())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 47, in sub_modules_dict",
    "    self.py__path__()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.kernels.wrapperkernel.sparkkernelbase": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.kernels.wrapperkernel.usercodeparser": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "sparkmagic.serverextension": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/serverextension/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/serverextension/__init__.py'",
    ""
   ]
  },
  "sparkmagic.serverextension.handlers": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/serverextension/handlers.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/serverextension/handlers.py'",
    ""
   ]
  },
  "sparkmagic.utils": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/__init__.py'",
    ""
   ]
  },
  "sparkmagic.utils.configuration": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/configuration.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/configuration.py'",
    ""
   ]
  },
  "sparkmagic.utils.constants": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/constants.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/constants.py'",
    ""
   ]
  },
  "sparkmagic.utils.sparkevents": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/sparkevents.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/sparkevents.py'",
    ""
   ]
  },
  "sparkmagic.utils.sparklogger": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/sparklogger.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpev7hde28/lib/python3.6/site-packages/sparkmagic/utils/sparklogger.py'",
    ""
   ]
  },
  "sparkmagic.utils.utils": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 223, in run",
    "    self._send(inference_state_id, None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  }
 },
 "symbols": [
  "sparkmagic.__version__",
  "sparkmagic._jupyter_nbextension_paths",
  "sparkmagic._jupyter_server_extension_paths",
  "sparkmagic.controllerwidget",
  "sparkmagic.controllerwidget.abstractmenuwidget",
  "sparkmagic.controllerwidget.abstractmenuwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.addendpointwidget",
  "sparkmagic.controllerwidget.addendpointwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.addendpointwidget.AddEndpointWidget",
  "sparkmagic.controllerwidget.addendpointwidget.Endpoint",
  "sparkmagic.controllerwidget.addendpointwidget.constants",
  "sparkmagic.controllerwidget.createsessionwidget",
  "sparkmagic.controllerwidget.createsessionwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.createsessionwidget.CreateSessionWidget",
  "sparkmagic.controllerwidget.createsessionwidget.LANG_PYTHON",
  "sparkmagic.controllerwidget.createsessionwidget.LANG_PYTHON3",
  "sparkmagic.controllerwidget.createsessionwidget.LANG_SCALA",
  "sparkmagic.controllerwidget.createsessionwidget.configuration",
  "sparkmagic.controllerwidget.magicscontrollerwidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.AddEndpointWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.CreateSessionWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.Endpoint",
  "sparkmagic.controllerwidget.magicscontrollerwidget.LANGS_SUPPORTED",
  "sparkmagic.controllerwidget.magicscontrollerwidget.MagicsControllerWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.ManageEndpointWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.ManageSessionWidget",
  "sparkmagic.controllerwidget.magicscontrollerwidget.configuration",
  "sparkmagic.controllerwidget.manageendpointwidget",
  "sparkmagic.controllerwidget.manageendpointwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.manageendpointwidget.HttpClientException",
  "sparkmagic.controllerwidget.manageendpointwidget.ManageEndpointWidget",
  "sparkmagic.controllerwidget.manageendpointwidget.SparkLog",
  "sparkmagic.controllerwidget.managesessionwidget",
  "sparkmagic.controllerwidget.managesessionwidget.AbstractMenuWidget",
  "sparkmagic.controllerwidget.managesessionwidget.ManageSessionWidget",
  "sparkmagic.kernels",
  "sparkmagic.kernels.BadUserDataException",
  "sparkmagic.kernels.Command",
  "sparkmagic.kernels.Endpoint",
  "sparkmagic.kernels.KernelMagics",
  "sparkmagic.kernels.LANGS_SUPPORTED",
  "sparkmagic.kernels.SparkEvents",
  "sparkmagic.kernels.SparkMagicBase",
  "sparkmagic.kernels._event",
  "sparkmagic.kernels.configuration",
  "sparkmagic.kernels.constants",
  "sparkmagic.kernels.get_coerce_value",
  "sparkmagic.kernels.get_livy_kind",
  "sparkmagic.kernels.handle_expected_exceptions",
  "sparkmagic.kernels.kernelmagics",
  "sparkmagic.kernels.kernelmagics.BadUserDataException",
  "sparkmagic.kernels.kernelmagics.Command",
  "sparkmagic.kernels.kernelmagics.Endpoint",
  "sparkmagic.kernels.kernelmagics.KernelMagics",
  "sparkmagic.kernels.kernelmagics.LANGS_SUPPORTED",
  "sparkmagic.kernels.kernelmagics.SparkEvents",
  "sparkmagic.kernels.kernelmagics.SparkMagicBase",
  "sparkmagic.kernels.kernelmagics._event",
  "sparkmagic.kernels.kernelmagics.configuration",
  "sparkmagic.kernels.kernelmagics.constants",
  "sparkmagic.kernels.kernelmagics.get_coerce_value",
  "sparkmagic.kernels.kernelmagics.get_livy_kind",
  "sparkmagic.kernels.kernelmagics.handle_expected_exceptions",
  "sparkmagic.kernels.kernelmagics.load_ipython_extension",
  "sparkmagic.kernels.kernelmagics.parse_argstring_or_throw",
  "sparkmagic.kernels.kernelmagics.wrap_unexpected_exceptions",
  "sparkmagic.kernels.load_ipython_extension",
  "sparkmagic.kernels.parse_argstring_or_throw",
  "sparkmagic.kernels.pyspark3kernel",
  "sparkmagic.kernels.pysparkkernel",
  "sparkmagic.kernels.sparkkernel",
  "sparkmagic.kernels.sparkkernel.sparkkernel.LANG_SCALA",
  "sparkmagic.kernels.sparkkernel.sparkkernel.SparkKernel",
  "sparkmagic.kernels.sparkkernel.sparkkernel.SparkKernelBase",
  "sparkmagic.kernels.sparkrkernel",
  "sparkmagic.kernels.wrap_unexpected_exceptions",
  "sparkmagic.kernels.wrapperkernel",
  "sparkmagic.kernels.wrapperkernel.sparkkernelbase.SparkKernelBase",
  "sparkmagic.livyclientlib",
  "sparkmagic.livyclientlib.command",
  "sparkmagic.livyclientlib.command.Command",
  "sparkmagic.livyclientlib.command.FINAL_STATEMENT_STATUS",
  "sparkmagic.livyclientlib.command.MAGICS_LOGGER_NAME",
  "sparkmagic.livyclientlib.command.SparkEvents",
  "sparkmagic.livyclientlib.command.SparkLog",
  "sparkmagic.livyclientlib.command.configuration",
  "sparkmagic.livyclientlib.configurableretrypolicy",
  "sparkmagic.livyclientlib.configurableretrypolicy.BadUserConfigurationException",
  "sparkmagic.livyclientlib.configurableretrypolicy.ConfigurableRetryPolicy",
  "sparkmagic.livyclientlib.endpoint",
  "sparkmagic.livyclientlib.endpoint.AUTHS_SUPPORTED",
  "sparkmagic.livyclientlib.endpoint.Endpoint",
  "sparkmagic.livyclientlib.exceptions",
  "sparkmagic.livyclientlib.exceptions.BadUserConfigurationException",
  "sparkmagic.livyclientlib.exceptions.BadUserDataException",
  "sparkmagic.livyclientlib.exceptions.DataFrameParseException",
  "sparkmagic.livyclientlib.exceptions.EXPECTED_ERROR_MSG",
  "sparkmagic.livyclientlib.exceptions.EXPECTED_EXCEPTIONS",
  "sparkmagic.livyclientlib.exceptions.HttpClientException",
  "sparkmagic.livyclientlib.exceptions.INTERNAL_ERROR_MSG",
  "sparkmagic.livyclientlib.exceptions.LivyClientLibException",
  "sparkmagic.livyclientlib.exceptions.LivyClientTimeoutException",
  "sparkmagic.livyclientlib.exceptions.LivyUnexpectedStatusException",
  "sparkmagic.livyclientlib.exceptions.SessionManagementException",
  "sparkmagic.livyclientlib.exceptions.SqlContextNotFoundException",
  "sparkmagic.livyclientlib.exceptions.handle_expected_exceptions",
  "sparkmagic.livyclientlib.exceptions.wrap_unexpected_exceptions",
  "sparkmagic.livyclientlib.linearretrypolicy",
  "sparkmagic.livyclientlib.linearretrypolicy.LinearRetryPolicy",
  "sparkmagic.livyclientlib.livyreliablehttpclient",
  "sparkmagic.livyclientlib.livyreliablehttpclient.BadUserConfigurationException",
  "sparkmagic.livyclientlib.livyreliablehttpclient.CONFIGURABLE_RETRY",
  "sparkmagic.livyclientlib.livyreliablehttpclient.LINEAR_RETRY",
  "sparkmagic.livyclientlib.livyreliablehttpclient.LivyReliableHttpClient",
  "sparkmagic.livyclientlib.livyreliablehttpclient.configuration",
  "sparkmagic.livyclientlib.livysession",
  "sparkmagic.livyclientlib.reliablehttpclient",
  "sparkmagic.livyclientlib.reliablehttpclient.BadUserConfigurationException",
  "sparkmagic.livyclientlib.reliablehttpclient.HttpClientException",
  "sparkmagic.livyclientlib.reliablehttpclient.MAGICS_LOGGER_NAME",
  "sparkmagic.livyclientlib.reliablehttpclient.ReliableHttpClient",
  "sparkmagic.livyclientlib.reliablehttpclient.SparkLog",
  "sparkmagic.livyclientlib.reliablehttpclient.configuration",
  "sparkmagic.livyclientlib.reliablehttpclient.constants",
  "sparkmagic.livyclientlib.sessionmanager",
  "sparkmagic.livyclientlib.sessionmanager.MAGICS_LOGGER_NAME",
  "sparkmagic.livyclientlib.sessionmanager.SessionManagementException",
  "sparkmagic.livyclientlib.sessionmanager.SessionManager",
  "sparkmagic.livyclientlib.sessionmanager.SparkLog",
  "sparkmagic.livyclientlib.sessionmanager.configuration",
  "sparkmagic.livyclientlib.sparkcontroller",
  "sparkmagic.livyclientlib.sparkcontroller.MAGICS_LOGGER_NAME",
  "sparkmagic.livyclientlib.sparkcontroller.SparkController",
  "sparkmagic.livyclientlib.sparkcontroller.SparkLog",
  "sparkmagic.livyclientlib.sparkcontroller.configuration",
  "sparkmagic.livyclientlib.sparkcontroller.constants",
  "sparkmagic.livyclientlib.sparkstorecommand",
  "sparkmagic.livyclientlib.sparkstorecommand.SparkStoreCommand",
  "sparkmagic.livyclientlib.sqlquery",
  "sparkmagic.livyclientlib.sqlquery.SQLQuery",
  "sparkmagic.livyclientlib.sqlquery.SparkEvents",
  "sparkmagic.livyclientlib.sqlquery.coerce_pandas_df_to_numeric_datetime",
  "sparkmagic.livyclientlib.sqlquery.configuration",
  "sparkmagic.livyclientlib.sqlquery.constants",
  "sparkmagic.livyclientlib.sqlquery.records_to_dataframe",
  "sparkmagic.load_jupyter_server_extension",
  "sparkmagic.magics",
  "sparkmagic.magics.CONTEXT_NAME_SPARK",
  "sparkmagic.magics.CONTEXT_NAME_SQL",
  "sparkmagic.magics.Command",
  "sparkmagic.magics.Endpoint",
  "sparkmagic.magics.LANG_PYTHON",
  "sparkmagic.magics.LANG_R",
  "sparkmagic.magics.LANG_SCALA",
  "sparkmagic.magics.MagicsControllerWidget",
  "sparkmagic.magics.RemoteSparkMagics",
  "sparkmagic.magics.SparkMagicBase",
  "sparkmagic.magics.configuration",
  "sparkmagic.magics.get_coerce_value",
  "sparkmagic.magics.handle_expected_exceptions",
  "sparkmagic.magics.load_ipython_extension",
  "sparkmagic.magics.parse_argstring_or_throw",
  "sparkmagic.magics.remotesparkmagics",
  "sparkmagic.magics.remotesparkmagics.CONTEXT_NAME_SPARK",
  "sparkmagic.magics.remotesparkmagics.CONTEXT_NAME_SQL",
  "sparkmagic.magics.remotesparkmagics.Command",
  "sparkmagic.magics.remotesparkmagics.Endpoint",
  "sparkmagic.magics.remotesparkmagics.LANG_PYTHON",
  "sparkmagic.magics.remotesparkmagics.LANG_R",
  "sparkmagic.magics.remotesparkmagics.LANG_SCALA",
  "sparkmagic.magics.remotesparkmagics.MagicsControllerWidget",
  "sparkmagic.magics.remotesparkmagics.RemoteSparkMagics",
  "sparkmagic.magics.remotesparkmagics.SparkMagicBase",
  "sparkmagic.magics.remotesparkmagics.configuration",
  "sparkmagic.magics.remotesparkmagics.get_coerce_value",
  "sparkmagic.magics.remotesparkmagics.handle_expected_exceptions",
  "sparkmagic.magics.remotesparkmagics.load_ipython_extension",
  "sparkmagic.magics.remotesparkmagics.parse_argstring_or_throw",
  "sparkmagic.magics.sparkmagicsbase",
  "sparkmagic.magics.sparkmagicsbase.Command",
  "sparkmagic.magics.sparkmagicsbase.MAGICS_LOGGER_NAME",
  "sparkmagic.magics.sparkmagicsbase.SQLQuery",
  "sparkmagic.magics.sparkmagicsbase.SparkController",
  "sparkmagic.magics.sparkmagicsbase.SparkEvents",
  "sparkmagic.magics.sparkmagicsbase.SparkLog",
  "sparkmagic.magics.sparkmagicsbase.SparkMagicBase",
  "sparkmagic.magics.sparkmagicsbase.SparkStoreCommand",
  "sparkmagic.magics.sparkmagicsbase.configuration",
  "sparkmagic.magics.sparkmagicsbase.get_sessions_info_html",
  "sparkmagic.serverextension",
  "sparkmagic.serverextension.handlers.load_jupyter_server_extension",
  "sparkmagic.utils",
  "sparkmagic.utils.configuration",
  "sparkmagic.utils.configuration.get_livy_kind",
  "sparkmagic.utils.constants",
  "sparkmagic.utils.constants.AUTHS_SUPPORTED",
  "sparkmagic.utils.constants.CONFIGURABLE_RETRY",
  "sparkmagic.utils.constants.CONTEXT_NAME_SPARK",
  "sparkmagic.utils.constants.CONTEXT_NAME_SQL",
  "sparkmagic.utils.constants.EXPECTED_ERROR_MSG",
  "sparkmagic.utils.constants.FINAL_STATEMENT_STATUS",
  "sparkmagic.utils.constants.INTERNAL_ERROR_MSG",
  "sparkmagic.utils.constants.LANGS_SUPPORTED",
  "sparkmagic.utils.constants.LANG_PYTHON",
  "sparkmagic.utils.constants.LANG_PYTHON3",
  "sparkmagic.utils.constants.LANG_R",
  "sparkmagic.utils.constants.LANG_SCALA",
  "sparkmagic.utils.constants.LINEAR_RETRY",
  "sparkmagic.utils.constants.MAGICS_LOGGER_NAME",
  "sparkmagic.utils.sparkevents.SparkEvents",
  "sparkmagic.utils.sparklogger.SparkLog",
  "sparkmagic.utils.utils.coerce_pandas_df_to_numeric_datetime",
  "sparkmagic.utils.utils.get_coerce_value",
  "sparkmagic.utils.utils.get_sessions_info_html",
  "sparkmagic.utils.utils.parse_argstring_or_throw",
  "sparkmagic.utils.utils.records_to_dataframe"
 ]
}