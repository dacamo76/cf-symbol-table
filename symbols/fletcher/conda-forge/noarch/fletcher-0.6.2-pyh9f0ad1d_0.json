{
 "errors": {
  "fletcher.string_mixin": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  }
 },
 "symbols": [
  "benchmarks.arithmetic_ops",
  "benchmarks.arithmetic_ops.ArithmeticOps",
  "benchmarks.benchmarks",
  "benchmarks.benchmarks.Indexing",
  "benchmarks.benchmarks.TimeSuitePatterns",
  "benchmarks.benchmarks.TimeSuiteText",
  "benchmarks.benchmarks.generate_test_array",
  "benchmarks.boolean",
  "benchmarks.boolean.BooleanAll",
  "benchmarks.boolean.BooleanAny",
  "benchmarks.comparison_ops",
  "benchmarks.comparison_ops.ComparisonOps",
  "benchmarks.take",
  "benchmarks.take.Take",
  "benchmarks.take._take_fill_random",
  "benchmarks.take._take_nofill_random",
  "benchmarks.take._take_nofill_range",
  "benchmarks.take.attr",
  "benchmarks.take.attrs",
  "benchmarks.take.call",
  "benchmarks.take.fname",
  "benchmarks.take.func",
  "benchmarks.take.functions",
  "fletcher.FletcherBaseArray",
  "fletcher.FletcherBaseDtype",
  "fletcher.FletcherChunkedArray",
  "fletcher.FletcherChunkedDtype",
  "fletcher.FletcherContinuousArray",
  "fletcher.FletcherContinuousDtype",
  "fletcher.HAS_DASK",
  "fletcher.TextAccessor",
  "fletcher.__all__",
  "fletcher.__version__",
  "fletcher._algorithms",
  "fletcher._algorithms.EMPTY_BUFFER_VIEW",
  "fletcher._algorithms._buffer_to_view",
  "fletcher._algorithms._extract_data_buffer_as_np_array",
  "fletcher._algorithms._extract_isnull_bitmap",
  "fletcher._algorithms._extract_isnull_bytemap",
  "fletcher._algorithms._isnull",
  "fletcher._algorithms._merge_non_aligned_bitmaps",
  "fletcher._algorithms._merge_valid_bitmaps",
  "fletcher._algorithms.dispatch_chunked_binary_map",
  "fletcher._algorithms.extract_isnull_bytemap",
  "fletcher._algorithms.isnull",
  "fletcher._algorithms.kurt_op",
  "fletcher._algorithms.max_op",
  "fletcher._algorithms.median_op",
  "fletcher._algorithms.min_op",
  "fletcher._algorithms.njit",
  "fletcher._algorithms.np_reduce_op",
  "fletcher._algorithms.np_ufunc_array_array",
  "fletcher._algorithms.np_ufunc_array_scalar",
  "fletcher._algorithms.np_ufunc_op",
  "fletcher._algorithms.np_ufunc_scalar_array",
  "fletcher._algorithms.pd_nanop",
  "fletcher._algorithms.prod_op",
  "fletcher._algorithms.skew_op",
  "fletcher._algorithms.std_op",
  "fletcher._algorithms.str_length",
  "fletcher._algorithms.sum_op",
  "fletcher._algorithms.var_op",
  "fletcher._compat",
  "fletcher._compat.HAS_DASK",
  "fletcher._compat.njit",
  "fletcher._dask_compat",
  "fletcher._dask_compat.FletcherChunkedDtype",
  "fletcher._dask_compat.FletcherContinuousDtype",
  "fletcher._dask_compat._0",
  "fletcher._dask_compat._1",
  "fletcher.algorithms",
  "fletcher.algorithms.bool",
  "fletcher.algorithms.bool._all_op",
  "fletcher.algorithms.bool._any_op",
  "fletcher.algorithms.bool._or_na",
  "fletcher.algorithms.bool.all_op",
  "fletcher.algorithms.bool.all_true",
  "fletcher.algorithms.bool.all_true_like",
  "fletcher.algorithms.bool.any_op",
  "fletcher.algorithms.bool.apply_per_chunk",
  "fletcher.algorithms.bool.bitmap_or_unaligned",
  "fletcher.algorithms.bool.dispatch_chunked_binary_map",
  "fletcher.algorithms.bool.masked_bitmap_or_unaligned",
  "fletcher.algorithms.bool.njit",
  "fletcher.algorithms.bool.or_array_array",
  "fletcher.algorithms.bool.or_array_nparray",
  "fletcher.algorithms.bool.or_na",
  "fletcher.algorithms.bool.or_vectorised",
  "fletcher.algorithms.numpy_ufunc",
  "fletcher.algorithms.string",
  "fletcher.algorithms.string.StringArrayBuilder",
  "fletcher.algorithms.string._buffer_to_view",
  "fletcher.algorithms.string._calculate_chunk_offsets",
  "fletcher.algorithms.string._check_valid_row",
  "fletcher.algorithms.string._combined_in_chunk_offsets",
  "fletcher.algorithms.string._do_strip",
  "fletcher.algorithms.string._endswith",
  "fletcher.algorithms.string._extract_string_buffers",
  "fletcher.algorithms.string._extract_striped_string",
  "fletcher.algorithms.string._merge_string_data",
  "fletcher.algorithms.string._merge_valid_bitmaps",
  "fletcher.algorithms.string._shift_unaligned_bitmap",
  "fletcher.algorithms.string._slice_generic",
  "fletcher.algorithms.string._slice_handle_chunk",
  "fletcher.algorithms.string._slice_pos_inputs_nostep",
  "fletcher.algorithms.string._slice_pos_inputs_step",
  "fletcher.algorithms.string._startswith",
  "fletcher.algorithms.string._text_cat",
  "fletcher.algorithms.string._text_contains_case_sensitive",
  "fletcher.algorithms.string._text_count_case_sensitive",
  "fletcher.algorithms.string._text_replace_case_sensitive",
  "fletcher.algorithms.string._text_strip",
  "fletcher.algorithms.string._utf8_chr2",
  "fletcher.algorithms.string._utf8_chr3",
  "fletcher.algorithms.string._utf8_chr4",
  "fletcher.algorithms.string.apply_per_chunk",
  "fletcher.algorithms.string.compute_kmp_failure_function",
  "fletcher.algorithms.string.finalize_string_array",
  "fletcher.algorithms.string.get_utf8_size",
  "fletcher.algorithms.string.njit",
  "fletcher.algorithms.string.shift_unaligned_bitmap",
  "fletcher.algorithms.string_builder",
  "fletcher.algorithms.string_builder.BitVector",
  "fletcher.algorithms.string_builder.ByteVector",
  "fletcher.algorithms.string_builder.LibcMalloc",
  "fletcher.algorithms.string_builder.StringArrayBuilder",
  "fletcher.algorithms.string_builder.byte_for_bits",
  "fletcher.algorithms.string_builder.finalize_string_array",
  "fletcher.algorithms.string_builder.free",
  "fletcher.algorithms.string_builder.libc",
  "fletcher.algorithms.string_builder.malloc",
  "fletcher.algorithms.string_builder.malloc_callable",
  "fletcher.algorithms.string_builder.malloc_nojit",
  "fletcher.algorithms.string_builder.memcpy",
  "fletcher.algorithms.string_builder.memset",
  "fletcher.algorithms.string_builder.numba_byte",
  "fletcher.algorithms.string_builder_nojit",
  "fletcher.algorithms.string_builder_nojit.BitVector",
  "fletcher.algorithms.string_builder_nojit.ByteVector",
  "fletcher.algorithms.string_builder_nojit.StringArrayBuilder",
  "fletcher.algorithms.string_builder_nojit.byte_for_bits",
  "fletcher.algorithms.string_builder_nojit.finalize_string_array",
  "fletcher.algorithms.utils",
  "fletcher.algorithms.utils.chunking",
  "fletcher.algorithms.utils.chunking._1",
  "fletcher.algorithms.utils.chunking._2",
  "fletcher.algorithms.utils.chunking._calculate_chunk_offsets",
  "fletcher.algorithms.utils.chunking._combined_in_chunk_offsets",
  "fletcher.algorithms.utils.chunking._in_chunk_offsets",
  "fletcher.algorithms.utils.chunking._not_implemented_path",
  "fletcher.algorithms.utils.chunking.apply_per_chunk",
  "fletcher.algorithms.utils.chunking.dispatch_chunked_binary_map",
  "fletcher.algorithms.utils.kmp",
  "fletcher.algorithms.utils.kmp.append_to_kmp_matching",
  "fletcher.algorithms.utils.kmp.compute_kmp_failure_function",
  "fletcher.algorithms.utils.kmp.njit",
  "fletcher.base",
  "fletcher.base.ARROW_GE_0_18_0",
  "fletcher.base.FletcherBaseArray",
  "fletcher.base.FletcherBaseDtype",
  "fletcher.base.FletcherChunkedArray",
  "fletcher.base.FletcherChunkedDtype",
  "fletcher.base.FletcherContinuousArray",
  "fletcher.base.FletcherContinuousDtype",
  "fletcher.base.PANDAS_GE_0_26_0",
  "fletcher.base.StringSupportingExtensionArray",
  "fletcher.base.__all__",
  "fletcher.base._calculate_chunk_offsets",
  "fletcher.base._examples",
  "fletcher.base._get_example",
  "fletcher.base._is_numeric",
  "fletcher.base._python_type_map",
  "fletcher.base._string_type_map",
  "fletcher.base.all_op",
  "fletcher.base.all_true",
  "fletcher.base.any_op",
  "fletcher.base.kurt_op",
  "fletcher.base.max_op",
  "fletcher.base.median_op",
  "fletcher.base.min_op",
  "fletcher.base.np_ufunc_op",
  "fletcher.base.or_na",
  "fletcher.base.or_vectorised",
  "fletcher.base.pandas_from_arrow",
  "fletcher.base.prod_op",
  "fletcher.base.skew_op",
  "fletcher.base.std_op",
  "fletcher.base.sum_op",
  "fletcher.base.var_op",
  "fletcher.io",
  "fletcher.io.pandas_from_arrow",
  "fletcher.io.read_parquet",
  "fletcher.pandas_from_arrow",
  "fletcher.read_parquet",
  "fletcher.string_array",
  "fletcher.string_array.FletcherBaseArray",
  "fletcher.string_array.FletcherChunkedArray",
  "fletcher.string_array.FletcherContinuousArray",
  "fletcher.string_array.NumbaString",
  "fletcher.string_array.TextAccessor",
  "fletcher.string_array._endswith",
  "fletcher.string_array._extract_isnull_bitmap",
  "fletcher.string_array._make",
  "fletcher.string_array._missing_capactiy",
  "fletcher.string_array._slice_handle_chunk",
  "fletcher.string_array._startswith",
  "fletcher.string_array._text_cat",
  "fletcher.string_array._text_contains_case_sensitive",
  "fletcher.string_array._text_count_case_sensitive",
  "fletcher.string_array._text_replace_case_sensitive",
  "fletcher.string_array._text_strip",
  "fletcher.string_array.all_true_like",
  "fletcher.string_array.buffers_as_arrays",
  "fletcher.string_mixin",
  "fletcher.string_mixin.StringSupportingExtensionArray",
  "fletcher.testing",
  "fletcher.testing.examples"
 ]
}