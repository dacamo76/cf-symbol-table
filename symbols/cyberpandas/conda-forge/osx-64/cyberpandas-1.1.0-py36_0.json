{
 "errors": {
  "cyberpandas.base": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  }
 },
 "symbols": [
  "cyberpandas.IPAccessor",
  "cyberpandas.IPArray",
  "cyberpandas.IPType",
  "cyberpandas.MACArray",
  "cyberpandas.MACType",
  "cyberpandas.__all__",
  "cyberpandas.__version__",
  "cyberpandas._accessor",
  "cyberpandas._accessor.Delegated",
  "cyberpandas._accessor.delegated_method",
  "cyberpandas._utils",
  "cyberpandas._utils.combine",
  "cyberpandas._utils.pack",
  "cyberpandas._utils.to_bytes",
  "cyberpandas._utils.unpack",
  "cyberpandas.base",
  "cyberpandas.common",
  "cyberpandas.common._IPv4_MAX",
  "cyberpandas.common._IPv6_MAX",
  "cyberpandas.common._U8_MAX",
  "cyberpandas.dtypes",
  "cyberpandas.dtypes.is_ipv4",
  "cyberpandas.dtypes.is_ipv6",
  "cyberpandas.ip_array",
  "cyberpandas.ip_array.IPAccessor",
  "cyberpandas.ip_array.IPArray",
  "cyberpandas.ip_array.IPType",
  "cyberpandas.ip_array.IPv4v6Base",
  "cyberpandas.ip_array.is_ipaddress_type",
  "cyberpandas.ip_methods",
  "cyberpandas.ip_methods._as_int",
  "cyberpandas.ip_methods._crosses_boundary",
  "cyberpandas.ip_methods.ip_range",
  "cyberpandas.ip_range",
  "cyberpandas.mac_array",
  "cyberpandas.mac_array.MACArray",
  "cyberpandas.mac_array.MACType",
  "cyberpandas.mac_array._format",
  "cyberpandas.mac_array._parse",
  "cyberpandas.mac_array.to_macaddress",
  "cyberpandas.parser",
  "cyberpandas.parser._as_ip_object",
  "cyberpandas.parser._to_int_pairs",
  "cyberpandas.parser._to_ip_array",
  "cyberpandas.parser._to_ipaddress_pyint",
  "cyberpandas.parser.to_ipaddress",
  "cyberpandas.to_ipaddress",
  "pandas.tests.extension.base",
  "tests.ip",
  "tests.ip.test_dtypes",
  "tests.ip.test_dtypes.test_is_ipv4",
  "tests.ip.test_dtypes.test_is_not_ipv4",
  "tests.ip.test_interface",
  "tests.ip.test_interface.TestConstructors",
  "tests.ip.test_interface.TestDtype",
  "tests.ip.test_interface.TestGetitem",
  "tests.ip.test_interface.TestInterface",
  "tests.ip.test_interface.TestMethods",
  "tests.ip.test_interface.TestMissing",
  "tests.ip.test_interface.TestReshaping",
  "tests.ip.test_interface.all_data",
  "tests.ip.test_interface.base",
  "tests.ip.test_interface.data_for_grouping",
  "tests.ip.test_interface.data_for_sorting",
  "tests.ip.test_interface.data_missing",
  "tests.ip.test_interface.dtype",
  "tests.ip.test_interface.na_cmp",
  "tests.ip.test_interface.na_value",
  "tests.ip.test_ip",
  "tests.ip.test_ip.test_array",
  "tests.ip.test_ip.test_attributes",
  "tests.ip.test_ip.test_bytes_roundtrip",
  "tests.ip.test_ip.test_comparison_raises",
  "tests.ip.test_ip.test_equality",
  "tests.ip.test_ip.test_factorize",
  "tests.ip.test_ip.test_from_ndarray",
  "tests.ip.test_ip.test_getitem_scalar",
  "tests.ip.test_ip.test_getitem_slice",
  "tests.ip.test_ip.test_hostmask_basic",
  "tests.ip.test_ip.test_ip_range",
  "tests.ip.test_ip.test_isin_all4",
  "tests.ip.test_ip.test_isin_all6",
  "tests.ip.test_ip.test_isin_iparray",
  "tests.ip.test_ip.test_isin_mix",
  "tests.ip.test_ip.test_isip",
  "tests.ip.test_ip.test_isna",
  "tests.ip.test_ip.test_iter_works",
  "tests.ip.test_ip.test_make_container",
  "tests.ip.test_ip.test_mask",
  "tests.ip.test_ip.test_netmask_basic",
  "tests.ip.test_ip.test_ops",
  "tests.ip.test_ip.test_repr_works",
  "tests.ip.test_ip.test_setitem_array",
  "tests.ip.test_ip.test_setitem_scalar",
  "tests.ip.test_ip.test_to_pyipaddress",
  "tests.ip.test_ip.test_tolist",
  "tests.ip.test_ip.test_topyints",
  "tests.ip.test_ip.test_unique",
  "tests.ip.test_ip.test_value_counts",
  "tests.ip.test_ip_pandas",
  "tests.ip.test_ip_pandas.test_accessor_frame",
  "tests.ip.test_ip_pandas.test_accessor_works",
  "tests.ip.test_ip_pandas.test_argsort",
  "tests.ip.test_ip_pandas.test_concatenate_blocks",
  "tests.ip.test_ip_pandas.test_dataframe_constructor",
  "tests.ip.test_ip_pandas.test_dataframe_from_series",
  "tests.ip.test_ip_pandas.test_factorize",
  "tests.ip.test_ip_pandas.test_getitem_scalar",
  "tests.ip.test_ip_pandas.test_getitem_slice",
  "tests.ip.test_ip_pandas.test_groupby_make_grouper",
  "tests.ip.test_ip_pandas.test_non_ip_raises",
  "tests.ip.test_ip_pandas.test_series_constructor",
  "tests.ip.test_ip_pandas.test_setitem_scalar",
  "tests.ip.test_pandas_methods",
  "tests.ip.test_pandas_methods.frame",
  "tests.ip.test_pandas_methods.obj",
  "tests.ip.test_pandas_methods.series",
  "tests.ip.test_pandas_methods.test__take",
  "tests.ip.test_pandas_methods.test_dropna",
  "tests.ip.test_pandas_methods.test_fillna",
  "tests.ip.test_pandas_methods.test_iloc_frame",
  "tests.ip.test_pandas_methods.test_iloc_series",
  "tests.ip.test_pandas_methods.test_isna",
  "tests.ip.test_pandas_methods.test_loc_frame",
  "tests.ip.test_pandas_methods.test_loc_series",
  "tests.ip.test_pandas_methods.test_reindex",
  "tests.ip.test_pandas_methods.test_works_frame",
  "tests.ip.test_pandas_methods.test_works_generic",
  "tests.ip.test_parser",
  "tests.ip.test_parser.test_as_ip_object",
  "tests.ip.test_parser.test_to_ipaddress",
  "tests.mac",
  "tests.mac.test_interface",
  "tests.mac.test_interface.TestConstructors",
  "tests.mac.test_interface.TestDtype",
  "tests.mac.test_interface.TestGetitem",
  "tests.mac.test_interface.TestInterface",
  "tests.mac.test_interface.TestMethods",
  "tests.mac.test_interface.TestMissing",
  "tests.mac.test_interface.TestReshaping",
  "tests.mac.test_interface.all_data",
  "tests.mac.test_interface.base",
  "tests.mac.test_interface.data_for_grouping",
  "tests.mac.test_interface.data_for_sorting",
  "tests.mac.test_interface.data_missing",
  "tests.mac.test_interface.dtype",
  "tests.mac.test_interface.na_cmp",
  "tests.mac.test_interface.na_value"
 ]
}