{
 "errors": {},
 "symbols": [
  "pyavm.AVM",
  "pyavm.NoAVMPresent",
  "pyavm.__version__",
  "pyavm.avm",
  "pyavm.avm.AVM",
  "pyavm.avm.NoAVMPresent",
  "pyavm.avm.NoSpatialInformation",
  "pyavm.avm.astropy_installed",
  "pyavm.avm.auto_type",
  "pyavm.avm.basestring",
  "pyavm.avm.capitalize",
  "pyavm.avm.decode_ascii",
  "pyavm.avm.key",
  "pyavm.avm.namespaces",
  "pyavm.avm.parse_avm_content",
  "pyavm.avm.register_namespace",
  "pyavm.avm.reverse_namespaces",
  "pyavm.avm.unicode",
  "pyavm.avm.utf8",
  "pyavm.cv",
  "pyavm.cv.IMAGE_PRODUCT_QUALITY_CHOICES",
  "pyavm.cv.METADATA_VERSION_CHOICES",
  "pyavm.cv.SPATIAL_COORDINATE_FRAME_CHOICES",
  "pyavm.cv.SPATIAL_COORDSYSTEM_PROJECTION_CHOICES",
  "pyavm.cv.SPATIAL_EQUINOX_CHOICES",
  "pyavm.cv.SPATIAL_QUALITY_CHOICES",
  "pyavm.cv.SPECTRAL_BAND_CHOICES",
  "pyavm.cv.SPECTRAL_COLOR_ASSIGNMENT_CHOICES",
  "pyavm.cv.TYPE_CHOICES",
  "pyavm.datatypes",
  "pyavm.datatypes.AVMData",
  "pyavm.datatypes.AVMDate",
  "pyavm.datatypes.AVMDateTime",
  "pyavm.datatypes.AVMDateTimeList",
  "pyavm.datatypes.AVMEmail",
  "pyavm.datatypes.AVMFloat",
  "pyavm.datatypes.AVMLocalizedString",
  "pyavm.datatypes.AVMOrderedFloatList",
  "pyavm.datatypes.AVMOrderedList",
  "pyavm.datatypes.AVMString",
  "pyavm.datatypes.AVMURL",
  "pyavm.datatypes.AVMUnorderedList",
  "pyavm.datatypes.AVMUnorderedStringList",
  "pyavm.datatypes.__all__",
  "pyavm.datatypes.basestring",
  "pyavm.datatypes.key",
  "pyavm.datatypes.namespaces",
  "pyavm.datatypes.reverse_namespaces",
  "pyavm.datatypes.unicode",
  "pyavm.embed",
  "pyavm.embed.embed_xmp",
  "pyavm.exceptions",
  "pyavm.exceptions.AVMEmptyValueError",
  "pyavm.exceptions.AVMItemNotInControlledVocabularyError",
  "pyavm.exceptions.AVMListLengthError",
  "pyavm.exceptions.NoXMPPacketFound",
  "pyavm.extract",
  "pyavm.extract.__all__",
  "pyavm.extract.extract_xmp",
  "pyavm.jpeg",
  "pyavm.jpeg.JPEGFile",
  "pyavm.jpeg.JPEGSegment",
  "pyavm.jpeg.MARKERS",
  "pyavm.jpeg.VARIABLE",
  "pyavm.jpeg.is_jpeg",
  "pyavm.png",
  "pyavm.png.PNGChunk",
  "pyavm.png.PNGFile",
  "pyavm.png.PNG_SIGNATURE",
  "pyavm.png.is_png",
  "pyavm.specs",
  "pyavm.specs.AVMData",
  "pyavm.specs.AVMDate",
  "pyavm.specs.AVMDateTime",
  "pyavm.specs.AVMDateTimeList",
  "pyavm.specs.AVMEmail",
  "pyavm.specs.AVMFloat",
  "pyavm.specs.AVMLocalizedString",
  "pyavm.specs.AVMOrderedFloatList",
  "pyavm.specs.AVMOrderedList",
  "pyavm.specs.AVMString",
  "pyavm.specs.AVMURL",
  "pyavm.specs.AVMUnorderedList",
  "pyavm.specs.AVMUnorderedStringList",
  "pyavm.specs.IMAGE_PRODUCT_QUALITY_CHOICES",
  "pyavm.specs.METADATA_VERSION_CHOICES",
  "pyavm.specs.REVERSE_SPECS",
  "pyavm.specs.SPATIAL_COORDINATE_FRAME_CHOICES",
  "pyavm.specs.SPATIAL_COORDSYSTEM_PROJECTION_CHOICES",
  "pyavm.specs.SPATIAL_EQUINOX_CHOICES",
  "pyavm.specs.SPATIAL_QUALITY_CHOICES",
  "pyavm.specs.SPECS",
  "pyavm.specs.SPECTRAL_BAND_CHOICES",
  "pyavm.specs.SPECTRAL_COLOR_ASSIGNMENT_CHOICES",
  "pyavm.specs.TYPE_CHOICES",
  "pyavm.specs.__all__",
  "pyavm.specs.basestring",
  "pyavm.specs.key",
  "pyavm.specs.namespaces",
  "pyavm.specs.reverse_namespaces",
  "pyavm.specs.spec",
  "pyavm.specs.unicode",
  "pyavm.specs.value",
  "pyavm.tests",
  "pyavm.tests.test_avm",
  "pyavm.tests.test_avm.ROOT",
  "pyavm.tests.test_avm.test_from_image_jpg",
  "pyavm.tests.test_avm.test_from_image_other",
  "pyavm.tests.test_avm.test_from_image_png",
  "pyavm.tests.test_avm.test_from_wcs_cd",
  "pyavm.tests.test_header",
  "pyavm.tests.test_header.ROOT",
  "pyavm.tests.test_header.basestring",
  "pyavm.tests.test_header.test_from_header",
  "pyavm.tests.test_header.test_wcs_1",
  "pyavm.tests.test_header.test_wcs_2",
  "pyavm.tests.test_header.unicode",
  "pyavm.tests.test_io",
  "pyavm.tests.test_io.ROOT",
  "pyavm.tests.test_io.XML_FILES",
  "pyavm.tests.test_io.test_io_jpeg",
  "pyavm.tests.test_io.test_io_png",
  "pyavm.tests.test_main",
  "pyavm.tests.test_main.NO_WCS",
  "pyavm.tests.test_main.ROOT",
  "pyavm.tests.test_main.XML_FILES",
  "pyavm.tests.test_main.XML_FILES_WCS",
  "pyavm.tests.test_main.test_parse",
  "pyavm.tests.test_main.test_to_wcs",
  "pyavm.tests.test_main.test_to_xml",
  "pyavm.tests.test_main.test_to_xmp",
  "pyavm.tests.test_specs",
  "pyavm.tests.test_specs.test_specs",
  "pyavm.tests.test_specs.test_warning",
  "pyavm.tests.test_wcs_utils",
  "pyavm.tests.test_wcs_utils.ROTATIONS",
  "pyavm.tests.test_wcs_utils.SCALES",
  "pyavm.tests.test_wcs_utils.test_get_cdelt_crota",
  "pyavm.wcs_utils",
  "pyavm.wcs_utils.arg",
  "pyavm.wcs_utils.get_cd"
 ]
}