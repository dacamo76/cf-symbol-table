{
 "errors": {},
 "symbols": [
  "license_expression.AND",
  "license_expression.BaseSymbol",
  "license_expression.ExpressionError",
  "license_expression.ExpressionParseError",
  "license_expression.KEYWORDS",
  "license_expression.KEYWORDS_STRINGS",
  "license_expression.KW_AND",
  "license_expression.KW_LPAR",
  "license_expression.KW_OR",
  "license_expression.KW_RPAR",
  "license_expression.KW_WITH",
  "license_expression.Keyword",
  "license_expression.LicenseSymbol",
  "license_expression.LicenseWithExceptionSymbol",
  "license_expression.Licensing",
  "license_expression.OPERATORS",
  "license_expression.OR",
  "license_expression.PARSE_ERRORS",
  "license_expression.PARSE_EXPRESSION_NOT_UNICODE",
  "license_expression.PARSE_INVALID_EXCEPTION",
  "license_expression.PARSE_INVALID_SYMBOL",
  "license_expression.PARSE_INVALID_SYMBOL_AS_EXCEPTION",
  "license_expression.Renderable",
  "license_expression.TOKEN_WITH",
  "license_expression.Token",
  "license_expression.Trie",
  "license_expression._pyahocorasick",
  "license_expression._pyahocorasick.TRACE",
  "license_expression._pyahocorasick.Token",
  "license_expression._pyahocorasick.Trie",
  "license_expression._pyahocorasick._tokenizer",
  "license_expression._pyahocorasick.filter_overlapping",
  "license_expression._pyahocorasick.get_tokens",
  "license_expression._pyahocorasick.logger",
  "license_expression._pyahocorasick.logger_debug",
  "license_expression._pyahocorasick.nil",
  "license_expression._pyahocorasick.str",
  "license_expression._pyahocorasick.unicode",
  "license_expression._simple_tokenizer",
  "license_expression.as_symbols",
  "license_expression.build_symbols_from_unknown_tokens",
  "license_expression.build_token_groups_for_with_subexpression",
  "license_expression.is_valid_license_key",
  "license_expression.is_with_subexpression",
  "license_expression.ordered_unique",
  "license_expression.replace_with_subexpression_by_license_symbol",
  "license_expression.str",
  "license_expression.unicode",
  "license_expression.validate_symbols"
 ]
}