{
 "errors": {},
 "symbols": [
  "opt_einsum.BranchBound",
  "opt_einsum.DynamicProgramming",
  "opt_einsum.RandomGreedy",
  "opt_einsum.__git_revision__",
  "opt_einsum.__version__",
  "opt_einsum._version",
  "opt_einsum._version.get_versions",
  "opt_einsum._version.version_json",
  "opt_einsum.backends",
  "opt_einsum.backends.__all__",
  "opt_einsum.backends.build_expression",
  "opt_einsum.backends.cupy",
  "opt_einsum.backends.cupy.__all__",
  "opt_einsum.backends.cupy.build_expression",
  "opt_einsum.backends.cupy.evaluate_constants",
  "opt_einsum.backends.cupy.to_cupy",
  "opt_einsum.backends.dispatch",
  "opt_einsum.backends.dispatch.CONVERT_BACKENDS",
  "opt_einsum.backends.dispatch.EVAL_CONSTS_BACKENDS",
  "opt_einsum.backends.dispatch.__all__",
  "opt_einsum.backends.dispatch._aliases",
  "opt_einsum.backends.dispatch._cached_funcs",
  "opt_einsum.backends.dispatch._has_einsum",
  "opt_einsum.backends.dispatch._has_tensordot",
  "opt_einsum.backends.dispatch._import_func",
  "opt_einsum.backends.dispatch.build_expression",
  "opt_einsum.backends.dispatch.evaluate_constants",
  "opt_einsum.backends.dispatch.get_func",
  "opt_einsum.backends.dispatch.has_backend",
  "opt_einsum.backends.dispatch.has_einsum",
  "opt_einsum.backends.dispatch.has_tensordot",
  "opt_einsum.backends.evaluate_constants",
  "opt_einsum.backends.get_func",
  "opt_einsum.backends.has_backend",
  "opt_einsum.backends.has_einsum",
  "opt_einsum.backends.has_tensordot",
  "opt_einsum.backends.jax",
  "opt_einsum.backends.jax._JAX",
  "opt_einsum.backends.jax.__all__",
  "opt_einsum.backends.jax._get_jax_and_to_jax",
  "opt_einsum.backends.jax.build_expression",
  "opt_einsum.backends.jax.evaluate_constants",
  "opt_einsum.backends.object_arrays",
  "opt_einsum.backends.object_arrays.object_einsum",
  "opt_einsum.backends.tensorflow",
  "opt_einsum.backends.tensorflow._CACHED_TF_DEVICE",
  "opt_einsum.backends.tensorflow.__all__",
  "opt_einsum.backends.tensorflow._get_tensorflow_and_device",
  "opt_einsum.backends.tensorflow.build_expression",
  "opt_einsum.backends.tensorflow.evaluate_constants",
  "opt_einsum.backends.tensorflow.to_tensorflow",
  "opt_einsum.backends.theano",
  "opt_einsum.backends.theano.__all__",
  "opt_einsum.backends.theano.build_expression",
  "opt_einsum.backends.theano.evaluate_constants",
  "opt_einsum.backends.theano.to_theano",
  "opt_einsum.backends.to_cupy",
  "opt_einsum.backends.to_tensorflow",
  "opt_einsum.backends.to_theano",
  "opt_einsum.backends.to_torch",
  "opt_einsum.backends.torch",
  "opt_einsum.backends.torch._TORCH_DEVICE",
  "opt_einsum.backends.torch._TORCH_HAS_TENSORDOT",
  "opt_einsum.backends.torch.__all__",
  "opt_einsum.backends.torch._get_torch_and_device",
  "opt_einsum.backends.torch._torch_symbols_base",
  "opt_einsum.backends.torch.build_expression",
  "opt_einsum.backends.torch.einsum",
  "opt_einsum.backends.torch.evaluate_constants",
  "opt_einsum.backends.torch.tensordot",
  "opt_einsum.backends.torch.to_torch",
  "opt_einsum.backends.torch.transpose",
  "opt_einsum.blas",
  "opt_einsum.blas.__all__",
  "opt_einsum.blas.can_blas",
  "opt_einsum.blas.tensor_blas",
  "opt_einsum.contract",
  "opt_einsum.contract.ContractExpression",
  "opt_einsum.contract.PathInfo",
  "opt_einsum.contract.Shaped",
  "opt_einsum.contract._VALID_CONTRACT_KWARGS",
  "opt_einsum.contract.__all__",
  "opt_einsum.contract._choose_memory_arg",
  "opt_einsum.contract._core_contract",
  "opt_einsum.contract._default_transpose",
  "opt_einsum.contract._einsum",
  "opt_einsum.contract._tensordot",
  "opt_einsum.contract._transpose",
  "opt_einsum.contract.contract",
  "opt_einsum.contract.format_const_einsum_str",
  "opt_einsum.contract.infer_backend",
  "opt_einsum.contract.parse_backend",
  "opt_einsum.contract.shape_only",
  "opt_einsum.get_symbol",
  "opt_einsum.helpers",
  "opt_einsum.helpers.__all__",
  "opt_einsum.helpers._default_dim_dict",
  "opt_einsum.helpers._sizes",
  "opt_einsum.helpers._valid_chars",
  "opt_einsum.helpers.build_views",
  "opt_einsum.helpers.compute_size_by_dict",
  "opt_einsum.helpers.find_contraction",
  "opt_einsum.helpers.flop_count",
  "opt_einsum.helpers.rand_equation",
  "opt_einsum.parser",
  "opt_einsum.parser.__all__",
  "opt_einsum.parser._einsum_symbols_base",
  "opt_einsum.parser.alpha_canonicalize",
  "opt_einsum.parser.convert_interleaved_input",
  "opt_einsum.parser.convert_subscripts",
  "opt_einsum.parser.convert_to_valid_einsum_chars",
  "opt_einsum.parser.find_output_shape",
  "opt_einsum.parser.find_output_str",
  "opt_einsum.parser.gen_unused_symbols",
  "opt_einsum.parser.get_symbol",
  "opt_einsum.parser.has_valid_einsum_chars_only",
  "opt_einsum.parser.is_valid_einsum_char",
  "opt_einsum.parser.parse_einsum_input",
  "opt_einsum.parser.possibly_convert_to_numpy",
  "opt_einsum.path_random",
  "opt_einsum.path_random.RandomGreedy",
  "opt_einsum.path_random.RandomOptimizer",
  "opt_einsum.path_random.__all__",
  "opt_einsum.path_random._trial_greedy_ssa_path_and_cost",
  "opt_einsum.path_random.random_choices",
  "opt_einsum.path_random.random_greedy",
  "opt_einsum.path_random.random_seed",
  "opt_einsum.path_random.ssa_path_compute_cost",
  "opt_einsum.path_random.thermal_chooser",
  "opt_einsum.paths",
  "opt_einsum.paths.BranchBound",
  "opt_einsum.paths.DynamicProgramming",
  "opt_einsum.paths.PathOptimizer",
  "opt_einsum.paths._AUTO_CHOICES",
  "opt_einsum.paths._AUTO_HQ_CHOICES",
  "opt_einsum.paths._BETTER_FNS",
  "opt_einsum.paths._COST_FNS",
  "opt_einsum.paths._PATH_OPTIONS",
  "opt_einsum.paths._UNLIMITED_MEM",
  "opt_einsum.paths.__all__",
  "opt_einsum.paths._bitmap_select",
  "opt_einsum.paths._compute_oversize_flops",
  "opt_einsum.paths._dp_calc_legs",
  "opt_einsum.paths._dp_compare_flops",
  "opt_einsum.paths._dp_compare_size",
  "opt_einsum.paths._dp_parse_out_single_term_ops",
  "opt_einsum.paths._find_disconnected_subgraphs",
  "opt_einsum.paths._get_candidate",
  "opt_einsum.paths._push_candidate",
  "opt_einsum.paths._simple_chooser",
  "opt_einsum.paths._tree_to_sequence",
  "opt_einsum.paths._update_ref_counts",
  "opt_einsum.paths.auto",
  "opt_einsum.paths.better_flops_first",
  "opt_einsum.paths.better_size_first",
  "opt_einsum.paths.branch",
  "opt_einsum.paths.calc_k12_flops",
  "opt_einsum.paths.cost_memory_removed",
  "opt_einsum.paths.dynamic_programming",
  "opt_einsum.paths.get_better_fn",
  "opt_einsum.paths.get_path_fn",
  "opt_einsum.paths.greedy",
  "opt_einsum.paths.i",
  "opt_einsum.paths.linear_to_ssa",
  "opt_einsum.paths.optimal",
  "opt_einsum.paths.register_path_fn",
  "opt_einsum.paths.simple_tree_tuple",
  "opt_einsum.paths.ssa_greedy_optimize",
  "opt_einsum.paths.ssa_to_linear",
  "opt_einsum.shared_intermediates",
  "opt_einsum.sharing",
  "opt_einsum.sharing._SHARING_STACK",
  "opt_einsum.sharing.__all__",
  "opt_einsum.sharing._add_sharing_cache",
  "opt_einsum.sharing._memoize",
  "opt_einsum.sharing._remove_sharing_cache",
  "opt_einsum.sharing._save_tensors",
  "opt_einsum.sharing.count_cached_ops",
  "opt_einsum.sharing.currently_sharing",
  "opt_einsum.sharing.einsum_cache_wrap",
  "opt_einsum.sharing.get_sharing_cache",
  "opt_einsum.sharing.shared_intermediates",
  "opt_einsum.sharing.tensordot_cache_wrap",
  "opt_einsum.sharing.to_backend_cache_wrap",
  "opt_einsum.sharing.transpose_cache_wrap",
  "opt_einsum.tests",
  "opt_einsum.tests.test_backends",
  "opt_einsum.tests.test_backends._TF_CONFIG",
  "opt_einsum.tests.test_backends.backends",
  "opt_einsum.tests.test_backends.contract",
  "opt_einsum.tests.test_backends.found_autograd",
  "opt_einsum.tests.test_backends.found_cupy",
  "opt_einsum.tests.test_backends.found_jax",
  "opt_einsum.tests.test_backends.found_tensorflow",
  "opt_einsum.tests.test_backends.found_theano",
  "opt_einsum.tests.test_backends.found_torch",
  "opt_einsum.tests.test_backends.helpers",
  "opt_einsum.tests.test_backends.sharing",
  "opt_einsum.tests.test_backends.test_auto_backend_custom_array_no_tensordot",
  "opt_einsum.tests.test_backends.test_autograd_gradient",
  "opt_einsum.tests.test_backends.test_cupy",
  "opt_einsum.tests.test_backends.test_dask",
  "opt_einsum.tests.test_backends.test_jax",
  "opt_einsum.tests.test_backends.test_object_arrays_backend",
  "opt_einsum.tests.test_backends.test_sparse",
  "opt_einsum.tests.test_backends.test_tensorflow",
  "opt_einsum.tests.test_backends.test_theano",
  "opt_einsum.tests.test_backends.test_torch",
  "opt_einsum.tests.test_backends.tests",
  "opt_einsum.tests.test_blas",
  "opt_einsum.tests.test_blas.blas",
  "opt_einsum.tests.test_blas.blas_tests",
  "opt_einsum.tests.test_blas.contract",
  "opt_einsum.tests.test_blas.helpers",
  "opt_einsum.tests.test_blas.test_blas_out",
  "opt_einsum.tests.test_blas.test_can_blas",
  "opt_einsum.tests.test_blas.test_tensor_blas",
  "opt_einsum.tests.test_contract",
  "opt_einsum.tests.test_contract.all_optimizers",
  "opt_einsum.tests.test_contract.contract",
  "opt_einsum.tests.test_contract.helpers",
  "opt_einsum.tests.test_contract.linear_to_ssa",
  "opt_einsum.tests.test_contract.ssa_to_linear",
  "opt_einsum.tests.test_contract.test_compare",
  "opt_einsum.tests.test_contract.test_contract_expression_interleaved_input",
  "opt_einsum.tests.test_contract.test_contract_expression_with_constants",
  "opt_einsum.tests.test_contract.test_contract_expressions",
  "opt_einsum.tests.test_contract.test_contract_path_supply_shapes",
  "opt_einsum.tests.test_contract.test_drop_in_replacement",
  "opt_einsum.tests.test_contract.test_linear_vs_ssa",
  "opt_einsum.tests.test_contract.test_printing",
  "opt_einsum.tests.test_contract.test_rand_equation",
  "opt_einsum.tests.test_contract.test_some_non_alphabet_maintains_order",
  "opt_einsum.tests.test_contract.tests",
  "opt_einsum.tests.test_edge_cases",
  "opt_einsum.tests.test_edge_cases.contract",
  "opt_einsum.tests.test_edge_cases.test_broadcasting_contraction",
  "opt_einsum.tests.test_edge_cases.test_can_blas_on_healed_broadcast_dimensions",
  "opt_einsum.tests.test_edge_cases.test_contract_expression_checks",
  "opt_einsum.tests.test_input",
  "opt_einsum.tests.test_input.build_views",
  "opt_einsum.tests.test_input.contract",
  "opt_einsum.tests.test_input.test_compare",
  "opt_einsum.tests.test_input.test_contract_inputs",
  "opt_einsum.tests.test_input.test_ellipse_input1",
  "opt_einsum.tests.test_input.test_ellipse_input2",
  "opt_einsum.tests.test_input.test_ellipse_input3",
  "opt_einsum.tests.test_input.test_ellipse_input4",
  "opt_einsum.tests.test_input.test_hashable_object_input_format",
  "opt_einsum.tests.test_input.test_large_int_input_format",
  "opt_einsum.tests.test_input.test_singleton_dimension_broadcast",
  "opt_einsum.tests.test_input.test_type_errors",
  "opt_einsum.tests.test_input.test_value_errors",
  "opt_einsum.tests.test_paths",
  "opt_einsum.tests.test_paths.assert_contract_order",
  "opt_einsum.tests.test_paths.check_path",
  "opt_einsum.tests.test_paths.explicit_path_tests",
  "opt_einsum.tests.test_paths.path_edge_tests",
  "opt_einsum.tests.test_paths.test_bad_path_option",
  "opt_einsum.tests.test_paths.test_can_optimize_outer_products",
  "opt_einsum.tests.test_paths.test_custom_branchbound",
  "opt_einsum.tests.test_paths.test_custom_dp_can_optimize_for_outer_products",
  "opt_einsum.tests.test_paths.test_custom_dp_can_optimize_for_size",
  "opt_einsum.tests.test_paths.test_custom_dp_can_set_cost_cap",
  "opt_einsum.tests.test_paths.test_custom_path_optimizer",
  "opt_einsum.tests.test_paths.test_custom_random_greedy",
  "opt_einsum.tests.test_paths.test_custom_random_optimizer",
  "opt_einsum.tests.test_paths.test_dp_edge_cases_all_singlet_indices",
  "opt_einsum.tests.test_paths.test_dp_edge_cases_dimension_1",
  "opt_einsum.tests.test_paths.test_explicit_path",
  "opt_einsum.tests.test_paths.test_flop_cost",
  "opt_einsum.tests.test_paths.test_greedy_edge_cases",
  "opt_einsum.tests.test_paths.test_large_path",
  "opt_einsum.tests.test_paths.test_memory_paths",
  "opt_einsum.tests.test_paths.test_optimal_edge_cases",
  "opt_einsum.tests.test_paths.test_optimizer_registration",
  "opt_einsum.tests.test_paths.test_parallel_random_greedy",
  "opt_einsum.tests.test_paths.test_path_edge_cases",
  "opt_einsum.tests.test_paths.test_path_greedy",
  "opt_einsum.tests.test_paths.test_path_optimal",
  "opt_einsum.tests.test_paths.test_size_by_dict",
  "opt_einsum.tests.test_sharing",
  "opt_einsum.tests.test_sharing._compute_cost",
  "opt_einsum.tests.test_sharing.backends",
  "opt_einsum.tests.test_sharing.contract",
  "opt_einsum.tests.test_sharing.count_cached_ops",
  "opt_einsum.tests.test_sharing.cupy_if_found",
  "opt_einsum.tests.test_sharing.currently_sharing",
  "opt_einsum.tests.test_sharing.equations",
  "opt_einsum.tests.test_sharing.get_sharing_cache",
  "opt_einsum.tests.test_sharing.get_symbol",
  "opt_einsum.tests.test_sharing.helpers",
  "opt_einsum.tests.test_sharing.parse_einsum_input",
  "opt_einsum.tests.test_sharing.shared_intermediates",
  "opt_einsum.tests.test_sharing.test_chain",
  "opt_einsum.tests.test_sharing.test_complete_sharing",
  "opt_einsum.tests.test_sharing.test_multithreaded_sharing",
  "opt_einsum.tests.test_sharing.test_no_sharing_separate_cache",
  "opt_einsum.tests.test_sharing.test_partial_sharing",
  "opt_einsum.tests.test_sharing.test_sharing_modulo_commutativity",
  "opt_einsum.tests.test_sharing.test_sharing_nesting",
  "opt_einsum.tests.test_sharing.test_sharing_reused_cache",
  "opt_einsum.tests.test_sharing.test_sharing_value",
  "opt_einsum.tests.test_sharing.test_sharing_with_constants",
  "opt_einsum.tests.test_sharing.to_backend",
  "opt_einsum.tests.test_sharing.to_cupy",
  "opt_einsum.tests.test_sharing.to_torch",
  "opt_einsum.tests.test_sharing.torch_if_found"
 ]
}