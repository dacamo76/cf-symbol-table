{
 "errors": {},
 "symbols": [
  "fairlearn._FAIRLEARN_DEV_VERSION_ENV_VAR",
  "fairlearn._NO_PREDICT_BEFORE_FIT",
  "fairlearn.__name__",
  "fairlearn.__version__",
  "fairlearn._base_version",
  "fairlearn._dev_version",
  "fairlearn._input_validation",
  "fairlearn._input_validation._ALLOWED_INPUT_TYPES_SENSITIVE_FEATURES",
  "fairlearn._input_validation._ALLOWED_INPUT_TYPES_X",
  "fairlearn._input_validation._ALLOWED_INPUT_TYPES_Y",
  "fairlearn._input_validation._EMPTY_INPUT_ERROR_MESSAGE",
  "fairlearn._input_validation._INPUT_DATA_FORMAT_ERROR_MESSAGE",
  "fairlearn._input_validation._KW_SENSITIVE_FEATURES",
  "fairlearn._input_validation._LABELS_NOT_0_1_ERROR_MESSAGE",
  "fairlearn._input_validation._MESSAGE_RATIO_NOT_IN_RANGE",
  "fairlearn._input_validation._MESSAGE_SENSITIVE_FEATURES_NONE",
  "fairlearn._input_validation._MESSAGE_X_NONE",
  "fairlearn._input_validation._MESSAGE_X_SENSITIVE_ROWS",
  "fairlearn._input_validation._MESSAGE_X_Y_ROWS",
  "fairlearn._input_validation._MESSAGE_Y_NONE",
  "fairlearn._input_validation._MORE_THAN_ONE_COLUMN_ERROR_MESSAGE",
  "fairlearn._input_validation._NDARRAY_NOT_TWO_DIMENSIONAL_ERROR_MESSAGE",
  "fairlearn._input_validation._NOT_ALLOWED_MATRIX_TYPE_ERROR_MESSAGE",
  "fairlearn._input_validation._NOT_ALLOWED_TYPE_ERROR_MESSAGE",
  "fairlearn._input_validation._SENSITIVE_FEATURE_COMPRESSION_SEPARATOR",
  "fairlearn._input_validation._compress_multiple_sensitive_features_into_single_column",
  "fairlearn._input_validation._validate_and_reformat_input",
  "fairlearn._input_validation.logger",
  "fairlearn.close_handler",
  "fairlearn.dev_version_string",
  "fairlearn.dev_version_value",
  "fairlearn.fairlearn_logs",
  "fairlearn.handler",
  "fairlearn.logger",
  "fairlearn.metrics",
  "fairlearn.metrics.__all__",
  "fairlearn.metrics._balanced_root_mean_squared_error",
  "fairlearn.metrics._balanced_root_mean_squared_error._Y_TRUE_NOT_0_1",
  "fairlearn.metrics._balanced_root_mean_squared_error._balanced_root_mean_squared_error",
  "fairlearn.metrics._balanced_root_mean_squared_error_group_summary",
  "fairlearn.metrics._derived_metric_dict",
  "fairlearn.metrics._disparities",
  "fairlearn.metrics._disparities.demographic_parity_difference",
  "fairlearn.metrics._disparities.demographic_parity_ratio",
  "fairlearn.metrics._disparities.equalized_odds_difference",
  "fairlearn.metrics._disparities.equalized_odds_ratio",
  "fairlearn.metrics._extra_metrics",
  "fairlearn.metrics._extra_metrics._root_mean_squared_error",
  "fairlearn.metrics._extra_metrics.false_negative_rate",
  "fairlearn.metrics._extra_metrics.false_positive_rate",
  "fairlearn.metrics._extra_metrics.true_negative_rate",
  "fairlearn.metrics._extra_metrics.true_positive_rate",
  "fairlearn.metrics._group_metric_set",
  "fairlearn.metrics._group_metric_set.ACCURACY_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.BALANCED_ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION",
  "fairlearn.metrics._group_metric_set.BINARY_CLASSIFICATION_METRICS",
  "fairlearn.metrics._group_metric_set.FALLOUT_RATE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MEAN_ABSOLUTE_ERROR_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MEAN_OVERPREDICTION_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MEAN_PREDICTION_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MEAN_SQUARED_ERROR_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MEAN_UNDERPREDICTION_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.MISS_RATE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.PRECISION_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.R2_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.RECALL_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.REGRESSION",
  "fairlearn.metrics._group_metric_set.REGRESSION_METRICS",
  "fairlearn.metrics._group_metric_set.ROC_AUC_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.ROOT_MEAN_SQUARED_ERROR_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.SELECTION_RATE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.SPECIFICITY_SCORE_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set.ZERO_ONE_LOSS_GROUP_SUMMARY",
  "fairlearn.metrics._group_metric_set._BINS",
  "fairlearn.metrics._group_metric_set._BIN_LABELS",
  "fairlearn.metrics._group_metric_set._BIN_VECTOR",
  "fairlearn.metrics._group_metric_set._DASHBOARD_DICTIONARY",
  "fairlearn.metrics._group_metric_set._FEATURE_BIN_NAME",
  "fairlearn.metrics._group_metric_set._GLOBAL",
  "fairlearn.metrics._group_metric_set._MODEL_NAMES",
  "fairlearn.metrics._group_metric_set._PRECOMPUTED_BINS",
  "fairlearn.metrics._group_metric_set._PRECOMPUTED_METRICS",
  "fairlearn.metrics._group_metric_set._PREDICTION_BINARY_CLASSIFICATION",
  "fairlearn.metrics._group_metric_set._PREDICTION_REGRESSION",
  "fairlearn.metrics._group_metric_set._PREDICTION_TYPE",
  "fairlearn.metrics._group_metric_set._SCHEMA",
  "fairlearn.metrics._group_metric_set._VERSION",
  "fairlearn.metrics._group_metric_set._Y_PRED",
  "fairlearn.metrics._group_metric_set._Y_TRUE",
  "fairlearn.metrics._group_metric_set._allowed_prediction_types",
  "fairlearn.metrics._group_metric_set._create_group_metric_set",
  "fairlearn.metrics._group_metric_set._process_predictions",
  "fairlearn.metrics._group_metric_set._process_sensitive_features",
  "fairlearn.metrics._input_manipulations",
  "fairlearn.metrics._input_manipulations._ARRAY_NOT_1D",
  "fairlearn.metrics._input_manipulations._convert_to_ndarray_1d",
  "fairlearn.metrics._input_manipulations._convert_to_ndarray_and_squeeze",
  "fairlearn.metrics._mean_overprediction",
  "fairlearn.metrics._mean_overprediction_group_summary",
  "fairlearn.metrics._mean_predictions",
  "fairlearn.metrics._mean_predictions._mean_overprediction",
  "fairlearn.metrics._mean_predictions._mean_underprediction",
  "fairlearn.metrics._mean_predictions.mean_prediction",
  "fairlearn.metrics._mean_underprediction",
  "fairlearn.metrics._mean_underprediction_group_summary",
  "fairlearn.metrics._metric_group_summary_dict",
  "fairlearn.metrics._metrics_engine",
  "fairlearn.metrics._metrics_engine.METRICS_SPEC",
  "fairlearn.metrics._metrics_engine.TRANSFORMATIONS",
  "fairlearn.metrics._metrics_engine._DEFAULT_INDEXED_PARAMS",
  "fairlearn.metrics._metrics_engine._DerivedMetricCallable",
  "fairlearn.metrics._metrics_engine._MESSAGE_SIZE_MISMATCH",
  "fairlearn.metrics._metrics_engine._MetricGroupSummaryCallable",
  "fairlearn.metrics._metrics_engine._check_array_sizes",
  "fairlearn.metrics._metrics_engine._check_metric_params",
  "fairlearn.metrics._metrics_engine._derive_metrics",
  "fairlearn.metrics._metrics_engine._derived_metric_dict",
  "fairlearn.metrics._metrics_engine._function_name",
  "fairlearn.metrics._metrics_engine._metric_group_summary_dict",
  "fairlearn.metrics._metrics_engine.difference_from_summary",
  "fairlearn.metrics._metrics_engine.group_max_from_summary",
  "fairlearn.metrics._metrics_engine.group_min_from_summary",
  "fairlearn.metrics._metrics_engine.group_summary",
  "fairlearn.metrics._metrics_engine.make_derived_metric",
  "fairlearn.metrics._metrics_engine.make_metric_group_summary",
  "fairlearn.metrics._metrics_engine.ratio_from_summary",
  "fairlearn.metrics._root_mean_squared_error_group_summary",
  "fairlearn.metrics._selection_rate",
  "fairlearn.metrics._selection_rate.selection_rate",
  "fairlearn.metrics.accuracy_score_group_summary",
  "fairlearn.metrics.demographic_parity_difference",
  "fairlearn.metrics.demographic_parity_ratio",
  "fairlearn.metrics.difference_from_summary",
  "fairlearn.metrics.equalized_odds_difference",
  "fairlearn.metrics.equalized_odds_ratio",
  "fairlearn.metrics.false_negative_rate",
  "fairlearn.metrics.false_negative_rate_group_summary",
  "fairlearn.metrics.false_positive_rate",
  "fairlearn.metrics.false_positive_rate_group_summary",
  "fairlearn.metrics.group_max_from_summary",
  "fairlearn.metrics.group_min_from_summary",
  "fairlearn.metrics.group_summary",
  "fairlearn.metrics.make_derived_metric",
  "fairlearn.metrics.make_metric_group_summary",
  "fairlearn.metrics.mean_absolute_error_group_summary",
  "fairlearn.metrics.mean_prediction",
  "fairlearn.metrics.mean_prediction_group_summary",
  "fairlearn.metrics.mean_squared_error_group_summary",
  "fairlearn.metrics.precision_score_group_summary",
  "fairlearn.metrics.r2_score_group_summary",
  "fairlearn.metrics.ratio_from_summary",
  "fairlearn.metrics.recall_score_group_summary",
  "fairlearn.metrics.roc_auc_score_group_summary",
  "fairlearn.metrics.selection_rate",
  "fairlearn.metrics.selection_rate_group_summary",
  "fairlearn.metrics.true_negative_rate",
  "fairlearn.metrics.true_negative_rate_group_summary",
  "fairlearn.metrics.true_positive_rate",
  "fairlearn.metrics.zero_one_loss_group_summary",
  "fairlearn.msg",
  "fairlearn.postprocessing",
  "fairlearn.postprocessing.ThresholdOptimizer",
  "fairlearn.postprocessing.__all__",
  "fairlearn.postprocessing._constants",
  "fairlearn.postprocessing._constants.DEMOGRAPHIC_PARITY",
  "fairlearn.postprocessing._constants.EQUALIZED_ODDS",
  "fairlearn.postprocessing._constants.LABEL_KEY",
  "fairlearn.postprocessing._constants.OUTPUT_SEPARATOR",
  "fairlearn.postprocessing._constants.P0_KEY",
  "fairlearn.postprocessing._constants.P1_KEY",
  "fairlearn.postprocessing._constants.SCORE_KEY",
  "fairlearn.postprocessing._constants.SENSITIVE_FEATURE_KEY",
  "fairlearn.postprocessing._constants._MATPLOTLIB_IMPORT_ERROR_MESSAGE",
  "fairlearn.postprocessing._interpolated_prediction",
  "fairlearn.postprocessing._interpolated_prediction.InterpolatedPredictor",
  "fairlearn.postprocessing._interpolated_prediction.logger",
  "fairlearn.postprocessing._plotting",
  "fairlearn.postprocessing._plotting._get_debug_color",
  "fairlearn.postprocessing._plotting._plot_curve",
  "fairlearn.postprocessing._plotting._plot_overlap",
  "fairlearn.postprocessing._plotting._plot_solution",
  "fairlearn.postprocessing._plotting._raise_if_not_threshold_optimizer",
  "fairlearn.postprocessing._plotting.plot_threshold_optimizer",
  "fairlearn.postprocessing._roc_curve_utilities",
  "fairlearn.postprocessing._roc_curve_utilities.DEGENERATE_LABELS_ERROR_MESSAGE",
  "fairlearn.postprocessing._roc_curve_utilities._calculate_roc_points",
  "fairlearn.postprocessing._roc_curve_utilities._filter_points_to_get_convex_hull",
  "fairlearn.postprocessing._roc_curve_utilities._get_counts",
  "fairlearn.postprocessing._roc_curve_utilities._get_roc",
  "fairlearn.postprocessing._roc_curve_utilities._get_scores_labels_and_counts",
  "fairlearn.postprocessing._roc_curve_utilities._interpolate_curve",
  "fairlearn.postprocessing._threshold_operation",
  "fairlearn.postprocessing._threshold_operation.ThresholdOperation",
  "fairlearn.postprocessing._threshold_optimizer",
  "fairlearn.postprocessing._threshold_optimizer.DIFFERENT_INPUT_LENGTH_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.ESTIMATOR_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.MULTIPLE_DATA_COLUMNS_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.NON_BINARY_LABELS_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.NOT_SUPPORTED_CONSTRAINTS_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.SCORES_DATA_TOO_MANY_COLUMNS_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.SENSITIVE_FEATURE_NAME_CONFLICT_DETECTED_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer.ThresholdOptimizer",
  "fairlearn.postprocessing._threshold_optimizer.UNEXPECTED_DATA_TYPE_ERROR_MESSAGE",
  "fairlearn.postprocessing._threshold_optimizer._SUPPORTED_CONSTRAINTS",
  "fairlearn.postprocessing._threshold_optimizer._reformat_and_group_data",
  "fairlearn.postprocessing._threshold_optimizer._reformat_data_into_dict",
  "fairlearn.postprocessing._threshold_optimizer._validate_and_reformat_input",
  "fairlearn.postprocessing._threshold_optimizer._vectorized_prediction",
  "fairlearn.postprocessing._threshold_optimizer.logger",
  "fairlearn.postprocessing.plot_threshold_optimizer",
  "fairlearn.reductions",
  "fairlearn.reductions.AbsoluteLoss",
  "fairlearn.reductions.ClassificationMoment",
  "fairlearn.reductions.ConditionalSelectionRate",
  "fairlearn.reductions.DemographicParity",
  "fairlearn.reductions.EqualizedOdds",
  "fairlearn.reductions.ErrorRate",
  "fairlearn.reductions.ExponentiatedGradient",
  "fairlearn.reductions.GridSearch",
  "fairlearn.reductions.GroupLossMoment",
  "fairlearn.reductions.LossMoment",
  "fairlearn.reductions.Moment",
  "fairlearn.reductions.SquareLoss",
  "fairlearn.reductions.TruePositiveRateDifference",
  "fairlearn.reductions.ZeroOneLoss",
  "fairlearn.reductions.__all__",
  "fairlearn.reductions._exponentiated_gradient",
  "fairlearn.reductions._exponentiated_gradient.ExponentiatedGradient",
  "fairlearn.reductions._exponentiated_gradient.__all__",
  "fairlearn.reductions._exponentiated_gradient._constants",
  "fairlearn.reductions._exponentiated_gradient._constants._ACCURACY_MUL",
  "fairlearn.reductions._exponentiated_gradient._constants._INDENTATION",
  "fairlearn.reductions._exponentiated_gradient._constants._LINE",
  "fairlearn.reductions._exponentiated_gradient._constants._MIN_T",
  "fairlearn.reductions._exponentiated_gradient._constants._PRECISION",
  "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_INCREASE_T",
  "fairlearn.reductions._exponentiated_gradient._constants._REGRET_CHECK_START_T",
  "fairlearn.reductions._exponentiated_gradient._constants._RUN_LP_STEP",
  "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_ETA",
  "fairlearn.reductions._exponentiated_gradient._constants._SHRINK_REGRET",
  "fairlearn.reductions._exponentiated_gradient._lagrangian",
  "fairlearn.reductions._exponentiated_gradient._lagrangian._GapResult",
  "fairlearn.reductions._exponentiated_gradient._lagrangian._Lagrangian",
  "fairlearn.reductions._exponentiated_gradient._lagrangian.logger",
  "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient",
  "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ClassificationMoment",
  "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.ExponentiatedGradient",
  "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient._validate_and_reformat_input",
  "fairlearn.reductions._exponentiated_gradient.exponentiated_gradient.logger",
  "fairlearn.reductions._grid_search",
  "fairlearn.reductions._grid_search.GridSearch",
  "fairlearn.reductions._grid_search.__all__",
  "fairlearn.reductions._grid_search._grid_generator",
  "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_TEMPLATE",
  "fairlearn.reductions._grid_search._grid_generator.GRID_DIMENSION_WARN_THRESHOLD",
  "fairlearn.reductions._grid_search._grid_generator.GRID_SIZE_WARN_TEMPLATE",
  "fairlearn.reductions._grid_search._grid_generator._GridGenerator",
  "fairlearn.reductions._grid_search._grid_generator.logger",
  "fairlearn.reductions._grid_search.grid_search",
  "fairlearn.reductions._grid_search.grid_search.ClassificationMoment",
  "fairlearn.reductions._grid_search.grid_search.GridSearch",
  "fairlearn.reductions._grid_search.grid_search.Moment",
  "fairlearn.reductions._grid_search.grid_search.TRADEOFF_OPTIMIZATION",
  "fairlearn.reductions._grid_search.grid_search._KW_SENSITIVE_FEATURES",
  "fairlearn.reductions._grid_search.grid_search._NO_PREDICT_BEFORE_FIT",
  "fairlearn.reductions._grid_search.grid_search._validate_and_reformat_input",
  "fairlearn.reductions._grid_search.grid_search.logger",
  "fairlearn.reductions._moments",
  "fairlearn.reductions._moments.AbsoluteLoss",
  "fairlearn.reductions._moments.ClassificationMoment",
  "fairlearn.reductions._moments.ConditionalSelectionRate",
  "fairlearn.reductions._moments.DemographicParity",
  "fairlearn.reductions._moments.EqualizedOdds",
  "fairlearn.reductions._moments.ErrorRate",
  "fairlearn.reductions._moments.GroupLossMoment",
  "fairlearn.reductions._moments.LossMoment",
  "fairlearn.reductions._moments.Moment",
  "fairlearn.reductions._moments.SquareLoss",
  "fairlearn.reductions._moments.TruePositiveRateDifference",
  "fairlearn.reductions._moments.ZeroOneLoss",
  "fairlearn.reductions._moments.__all__",
  "fairlearn.reductions._moments.bounded_group_loss",
  "fairlearn.reductions._moments.bounded_group_loss.AbsoluteLoss",
  "fairlearn.reductions._moments.bounded_group_loss.AverageLossMoment",
  "fairlearn.reductions._moments.bounded_group_loss.ConditionalLossMoment",
  "fairlearn.reductions._moments.bounded_group_loss.GroupLossMoment",
  "fairlearn.reductions._moments.bounded_group_loss.SquareLoss",
  "fairlearn.reductions._moments.bounded_group_loss.ZeroOneLoss",
  "fairlearn.reductions._moments.bounded_group_loss._KW_SENSITIVE_FEATURES",
  "fairlearn.reductions._moments.conditional_selection_rate",
  "fairlearn.reductions._moments.conditional_selection_rate.ConditionalSelectionRate",
  "fairlearn.reductions._moments.conditional_selection_rate.DemographicParity",
  "fairlearn.reductions._moments.conditional_selection_rate.EqualizedOdds",
  "fairlearn.reductions._moments.conditional_selection_rate.ErrorRateRatio",
  "fairlearn.reductions._moments.conditional_selection_rate.TruePositiveRateDifference",
  "fairlearn.reductions._moments.conditional_selection_rate._LOWER_BOUND_DIFF",
  "fairlearn.reductions._moments.conditional_selection_rate._MESSAGE_RATIO_NOT_IN_RANGE",
  "fairlearn.reductions._moments.conditional_selection_rate._UPPER_BOUND_DIFF",
  "fairlearn.reductions._moments.conditional_selection_rate.total_samples",
  "fairlearn.reductions._moments.error_rate",
  "fairlearn.reductions._moments.error_rate.ErrorRate",
  "fairlearn.reductions._moments.error_rate.total_samples",
  "fairlearn.reductions._moments.moment",
  "fairlearn.reductions._moments.moment.ClassificationMoment",
  "fairlearn.reductions._moments.moment.LossMoment",
  "fairlearn.reductions._moments.moment.Moment",
  "fairlearn.reductions._moments.moment.Moment.total_samples",
  "fairlearn.reductions._moments.moment._ALL",
  "fairlearn.reductions._moments.moment._EVENT",
  "fairlearn.reductions._moments.moment._GROUP_ID",
  "fairlearn.reductions._moments.moment._KW_SENSITIVE_FEATURES",
  "fairlearn.reductions._moments.moment._LABEL",
  "fairlearn.reductions._moments.moment._LOSS",
  "fairlearn.reductions._moments.moment._PREDICTION",
  "fairlearn.reductions._moments.moment._SIGN",
  "fairlearn.show_versions",
  "fairlearn.show_versions._get_deps_info",
  "fairlearn.show_versions._get_sys_info",
  "fairlearn.show_versions.show_versions",
  "fairlearn.widget",
  "fairlearn.widget.FairlearnDashboard",
  "fairlearn.widget.__all__",
  "fairlearn.widget._fairlearn_dashboard",
  "fairlearn.widget._fairlearn_dashboard.FairlearnDashboard",
  "fairlearn.widget._fairlearn_dashboard._balanced_root_mean_squared_error_group_summary",
  "fairlearn.widget._fairlearn_dashboard._mean_overprediction_group_summary",
  "fairlearn.widget._fairlearn_dashboard._mean_underprediction_group_summary",
  "fairlearn.widget._fairlearn_dashboard._root_mean_squared_error_group_summary",
  "fairlearn.widget._fairlearn_dashboard.accuracy_score_group_summary",
  "fairlearn.widget._fairlearn_dashboard.false_negative_rate_group_summary",
  "fairlearn.widget._fairlearn_dashboard.false_positive_rate_group_summary",
  "fairlearn.widget._fairlearn_dashboard.mean_absolute_error_group_summary",
  "fairlearn.widget._fairlearn_dashboard.mean_prediction_group_summary",
  "fairlearn.widget._fairlearn_dashboard.mean_squared_error_group_summary",
  "fairlearn.widget._fairlearn_dashboard.precision_score_group_summary",
  "fairlearn.widget._fairlearn_dashboard.r2_score_group_summary",
  "fairlearn.widget._fairlearn_dashboard.recall_score_group_summary",
  "fairlearn.widget._fairlearn_dashboard.roc_auc_score_group_summary",
  "fairlearn.widget._fairlearn_dashboard.selection_rate_group_summary",
  "fairlearn.widget._fairlearn_dashboard.true_negative_rate_group_summary",
  "fairlearn.widget._fairlearn_dashboard.zero_one_loss_group_summary",
  "fairlearn.widget._fairlearn_widget",
  "fairlearn.widget._fairlearn_widget.FairlearnWidget",
  "fairlearn.widget._jupyter_nbextension_paths",
  "test.notebooks",
  "test.notebooks.test_notebooks",
  "test.notebooks.test_notebooks.ScrapSpec",
  "test.notebooks.test_notebooks.append_scrapbook_commands",
  "test.notebooks.test_notebooks.assay_one_notebook",
  "test.notebooks.test_notebooks.test_binary_classification_on_compas_dataset",
  "test.notebooks.test_notebooks.test_binary_classification_with_the_uci_credit_card_default_dataset",
  "test.notebooks.test_notebooks.test_grid_search_for_binary_classification",
  "test.notebooks.test_notebooks.test_grid_search_with_census_data",
  "test.notebooks.test_notebooks.test_group_metrics_notebook",
  "test.notebooks.test_notebooks.test_mitigating_disparities_in_ranking_from_binary_data",
  "test.unit",
  "test.unit.conftest",
  "test.unit.conftest.pytest_collection_modifyitems",
  "test.unit.conftest.pytest_configure",
  "test.unit.constants",
  "test.unit.constants.MULTIPLE_SENSITIVE_FEATURE_COMPRESSION_SKIP_REASON",
  "test.unit.input_convertors",
  "test.unit.input_convertors._map_into_single_column",
  "test.unit.input_convertors.conversions_for_1d",
  "test.unit.input_convertors.ensure_dataframe",
  "test.unit.input_convertors.ensure_list",
  "test.unit.input_convertors.ensure_list_1d",
  "test.unit.input_convertors.ensure_ndarray",
  "test.unit.input_convertors.ensure_series",
  "test.unit.metrics",
  "test.unit.metrics.sample_loader",
  "test.unit.metrics.sample_loader._DATA_DIR",
  "test.unit.metrics.sample_loader._TEST_DIR",
  "test.unit.metrics.sample_loader.load_sample_dashboard",
  "test.unit.metrics.sample_loader.test_logger",
  "test.unit.metrics.test_balanced_root_mean_squared_error",
  "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_correct",
  "test.unit.metrics.test_balanced_root_mean_squared_error.test_all_incorrect",
  "test.unit.metrics.test_balanced_root_mean_squared_error.test_probability_predict",
  "test.unit.metrics.test_balanced_root_mean_squared_error.test_weighted",
  "test.unit.metrics.test_balanced_root_mean_squared_error.test_y_true_not_0_1",
  "test.unit.metrics.test_create_group_metric_set",
  "test.unit.metrics.test_create_group_metric_set.TestCreateGroupMetricSet",
  "test.unit.metrics.test_create_group_metric_set.TestProcessPredictions",
  "test.unit.metrics.test_create_group_metric_set.TestProcessSensitiveFeatures",
  "test.unit.metrics.test_create_group_metric_set._BC_1P_1F",
  "test.unit.metrics.test_create_group_metric_set._BC_2P_3F",
  "test.unit.metrics.test_create_group_metric_set.conversions_for_1d",
  "test.unit.metrics.test_create_group_metric_set.validate_dashboard_dictionary",
  "test.unit.metrics.test_extra_metrics",
  "test.unit.metrics.test_extra_metrics.test_fnr_all_correct",
  "test.unit.metrics.test_extra_metrics.test_fnr_none_correct",
  "test.unit.metrics.test_extra_metrics.test_fnr_some_correct",
  "test.unit.metrics.test_extra_metrics.test_fnr_with_false_positive",
  "test.unit.metrics.test_extra_metrics.test_fpr_all_correct",
  "test.unit.metrics.test_extra_metrics.test_fpr_none_correct",
  "test.unit.metrics.test_extra_metrics.test_fpr_some_correct",
  "test.unit.metrics.test_extra_metrics.test_tnr_all_correct",
  "test.unit.metrics.test_extra_metrics.test_tnr_none_correct",
  "test.unit.metrics.test_extra_metrics.test_tnr_some_correct",
  "test.unit.metrics.test_group_sklearn_wrappers",
  "test.unit.metrics.test_group_sklearn_wrappers.Y_pred",
  "test.unit.metrics.test_group_sklearn_wrappers.Y_pred_ternary",
  "test.unit.metrics.test_group_sklearn_wrappers.Y_true",
  "test.unit.metrics.test_group_sklearn_wrappers.Y_true_ternary",
  "test.unit.metrics.test_group_sklearn_wrappers.a",
  "test.unit.metrics.test_group_sklearn_wrappers.b",
  "test.unit.metrics.test_group_sklearn_wrappers.c",
  "test.unit.metrics.test_group_sklearn_wrappers.group2",
  "test.unit.metrics.test_group_sklearn_wrappers.groups",
  "test.unit.metrics.test_group_sklearn_wrappers.metrics_no_sample_weights",
  "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_unweighted",
  "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted",
  "test.unit.metrics.test_group_sklearn_wrappers.supported_metrics_weighted_binary",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_accuracy_score_unnormalized",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_confusion_matrix_labels",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_list_ndarray",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_mean_squared_error_multioutput_single_ndarray",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_pos_label",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_precision_score_ternary",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_r2_score_multioutput",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_pos_label",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_recall_score_ternary",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_average",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_roc_auc_score_max_fpr",
  "test.unit.metrics.test_group_sklearn_wrappers.test_group_zero_one_loss_unnormalized",
  "test.unit.metrics.test_group_sklearn_wrappers.test_metric_unweighted",
  "test.unit.metrics.test_group_sklearn_wrappers.test_metric_weighted",
  "test.unit.metrics.test_group_sklearn_wrappers.weight",
  "test.unit.metrics.test_input_manipulations",
  "test.unit.metrics.test_input_manipulations.TestConvertToNDArray1D",
  "test.unit.metrics.test_input_manipulations.TestConvertToNDArrayAndSqueeze",
  "test.unit.metrics.test_mean_predictions",
  "test.unit.metrics.test_mean_predictions.test_mean_overprediction_unweighted",
  "test.unit.metrics.test_mean_predictions.test_mean_overprediction_weighted",
  "test.unit.metrics.test_mean_predictions.test_mean_prediction_single",
  "test.unit.metrics.test_mean_predictions.test_mean_prediction_unweighted",
  "test.unit.metrics.test_mean_predictions.test_mean_prediction_weighted",
  "test.unit.metrics.test_mean_predictions.test_mean_underprediction_unweighted",
  "test.unit.metrics.test_mean_predictions.test_mean_underprediction_weighted",
  "test.unit.metrics.test_metrics_engine",
  "test.unit.metrics.test_metrics_engine.TestGroupSummary",
  "test.unit.metrics.test_metrics_engine.TestMakeDerivedMetric",
  "test.unit.metrics.test_metrics_engine.TestMakeMetricGroupSummary",
  "test.unit.metrics.test_metrics_engine.conversions_for_1d",
  "test.unit.metrics.test_metrics_engine.mock_func",
  "test.unit.metrics.test_metrics_engine_dicts",
  "test.unit.metrics.test_metrics_engine_dicts.derived_metric_results",
  "test.unit.metrics.test_metrics_engine_dicts.metric_group_summary_results",
  "test.unit.metrics.test_metrics_engine_dicts.sf_binary",
  "test.unit.metrics.test_metrics_engine_dicts.test_derived_metrics_smoke",
  "test.unit.metrics.test_metrics_engine_dicts.test_dict_sizes",
  "test.unit.metrics.test_metrics_engine_dicts.test_metric_group_summary_smoke",
  "test.unit.metrics.test_metrics_engine_dicts.y_pred",
  "test.unit.metrics.test_metrics_engine_dicts.y_true",
  "test.unit.metrics.test_selection_rate",
  "test.unit.metrics.test_selection_rate.test_selection_rate_group_summary",
  "test.unit.metrics.test_selection_rate.test_selection_rate_non_numeric",
  "test.unit.metrics.test_selection_rate.test_selection_rate_unweighted",
  "test.unit.metrics.test_selection_rate.test_selection_rate_weighted",
  "test.unit.postprocessing",
  "test.unit.postprocessing.conftest",
  "test.unit.postprocessing.conftest.ExampleEstimator",
  "test.unit.postprocessing.conftest.ExampleNotEstimator1",
  "test.unit.postprocessing.conftest.ExampleNotEstimator2",
  "test.unit.postprocessing.conftest.ExampleNotPredictor",
  "test.unit.postprocessing.conftest.ExamplePredictor",
  "test.unit.postprocessing.conftest.LabelAndPrediction",
  "test.unit.postprocessing.conftest.X_ex",
  "test.unit.postprocessing.conftest._data",
  "test.unit.postprocessing.conftest._data_ex1",
  "test.unit.postprocessing.conftest._data_ex2",
  "test.unit.postprocessing.conftest._data_ex3",
  "test.unit.postprocessing.conftest._get_grouped_data_and_base_points",
  "test.unit.postprocessing.conftest._get_predictions_by_sensitive_feature",
  "test.unit.postprocessing.conftest._map_into_single_column",
  "test.unit.postprocessing.conftest.candidate_A_transforms",
  "test.unit.postprocessing.conftest.candidate_X_transforms",
  "test.unit.postprocessing.conftest.candidate_Y_transforms",
  "test.unit.postprocessing.conftest.data",
  "test.unit.postprocessing.conftest.degenerate_labels_ex",
  "test.unit.postprocessing.conftest.ensure_dataframe",
  "test.unit.postprocessing.conftest.ensure_list_1d",
  "test.unit.postprocessing.conftest.ensure_ndarray",
  "test.unit.postprocessing.conftest.ensure_series",
  "test.unit.postprocessing.conftest.is_invalid_transformation",
  "test.unit.postprocessing.conftest.labels_ex",
  "test.unit.postprocessing.conftest.scores_ex",
  "test.unit.postprocessing.conftest.sensitive_feature_names_ex1",
  "test.unit.postprocessing.conftest.sensitive_feature_names_ex2",
  "test.unit.postprocessing.conftest.sensitive_feature_names_ex3",
  "test.unit.postprocessing.conftest.sensitive_features_ex1",
  "test.unit.postprocessing.conftest.sensitive_features_ex2",
  "test.unit.postprocessing.conftest.sensitive_features_ex3",
  "test.unit.postprocessing.test_curve_utilities",
  "test.unit.postprocessing.test_curve_utilities._assert_equal_points",
  "test.unit.postprocessing.test_curve_utilities._assert_interpolated_points_are_between_base_points",
  "test.unit.postprocessing.test_curve_utilities.test_assert_interpolated_curve",
  "test.unit.postprocessing.test_curve_utilities.test_calculate_roc_points",
  "test.unit.postprocessing.test_curve_utilities.test_convex_hull",
  "test.unit.postprocessing.test_curve_utilities.test_get_roc",
  "test.unit.postprocessing.test_curve_utilities.test_interpolate_curve",
  "test.unit.postprocessing.test_plots",
  "test.unit.postprocessing.test_plots.PYTEST_MPL_NOT_INSTALLED_MSG",
  "test.unit.postprocessing.test_plots.TestPlots",
  "test.unit.postprocessing.test_plots._fit_and_plot",
  "test.unit.postprocessing.test_plots.is_mpl_installed",
  "test.unit.postprocessing.test_plots.is_py35_on_macos",
  "test.unit.postprocessing.test_smoke",
  "test.unit.postprocessing.test_smoke._ESTIMATORS",
  "test.unit.postprocessing.test_smoke.test_smoke",
  "test.unit.postprocessing.test_threshold_operation",
  "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_invalid_operator",
  "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_less",
  "test.unit.postprocessing.test_threshold_operation.test_predict_from_operation_more",
  "test.unit.postprocessing.test_threshold_optimization",
  "test.unit.postprocessing.test_threshold_optimization._NEG_P0",
  "test.unit.postprocessing.test_threshold_optimization._NEG_P1",
  "test.unit.postprocessing.test_threshold_optimization._P0",
  "test.unit.postprocessing.test_threshold_optimization._P1",
  "test.unit.postprocessing.test_threshold_optimization._POS_P0",
  "test.unit.postprocessing.test_threshold_optimization._POS_P1",
  "test.unit.postprocessing.test_threshold_optimization._degenerate_labels_feature_name",
  "test.unit.postprocessing.test_threshold_optimization._expected_ps_demographic_parity",
  "test.unit.postprocessing.test_threshold_optimization._expected_ps_equalized_odds",
  "test.unit.postprocessing.test_threshold_optimization._map_into_single_column",
  "test.unit.postprocessing.test_threshold_optimization.create_adjusted_predictor",
  "test.unit.postprocessing.test_threshold_optimization.test_constraints_not_supported",
  "test.unit.postprocessing.test_threshold_optimization.test_no_estimator_error",
  "test.unit.postprocessing.test_threshold_optimization.test_none_input_data",
  "test.unit.postprocessing.test_threshold_optimization.test_predict_before_fit_error",
  "test.unit.postprocessing.test_threshold_optimization.test_predict_different_argument_lengths",
  "test.unit.postprocessing.test_threshold_optimization.test_predict_output_0_or_1",
  "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_degenerate_labels",
  "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_demographic_parity",
  "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_different_input_lengths",
  "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_equalized_odds",
  "test.unit.postprocessing.test_threshold_optimization.test_threshold_optimization_non_binary_labels",
  "test.unit.reductions",
  "test.unit.reductions.conftest",
  "test.unit.reductions.conftest.ensure_list",
  "test.unit.reductions.conftest.ensure_series",
  "test.unit.reductions.conftest.is_invalid_transformation",
  "test.unit.reductions.exponentiated_gradient",
  "test.unit.reductions.exponentiated_gradient.simple_learners",
  "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresBinaryClassifierLearner",
  "test.unit.reductions.exponentiated_gradient.simple_learners.LeastSquaresRegressor",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.TestExponentiatedGradientArguments",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._PRECISION",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments._map_into_single_column",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_A_transforms",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_X_transforms",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.candidate_Y_transforms",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.conversions_for_1d",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_dataframe",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.ensure_ndarray",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_arguments.is_invalid_transformation",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke",
  "test.unit.reductions.exponentiated_gradient.test_exponentiatedgradient_smoke.TestExponentiatedGradientSmoke",
  "test.unit.reductions.exponentiated_gradient.test_lagrangian",
  "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_call_oracle",
  "test.unit.reductions.exponentiated_gradient.test_lagrangian.test_lagrangian_eval",
  "test.unit.reductions.exponentiated_gradient.test_utilities",
  "test.unit.reductions.exponentiated_gradient.test_utilities.X1",
  "test.unit.reductions.exponentiated_gradient.test_utilities.X2",
  "test.unit.reductions.exponentiated_gradient.test_utilities.X3",
  "test.unit.reductions.exponentiated_gradient.test_utilities._get_data",
  "test.unit.reductions.exponentiated_gradient.test_utilities.labels",
  "test.unit.reductions.exponentiated_gradient.test_utilities.sensitive_features",
  "test.unit.reductions.grid_search",
  "test.unit.reductions.grid_search.test_grid_generator",
  "test.unit.reductions.grid_search.test_grid_generator._quick_data",
  "test.unit.reductions.grid_search.test_grid_generator.calculate_grid",
  "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_demographic_parity",
  "test.unit.reductions.grid_search.test_grid_generator.test_grid_generator_equalized_odds",
  "test.unit.reductions.grid_search.test_grid_search_arguments",
  "test.unit.reductions.grid_search.test_grid_search_arguments.ArgumentTests",
  "test.unit.reductions.grid_search.test_grid_search_arguments.ConditionalOpportunityTests",
  "test.unit.reductions.grid_search.test_grid_search_arguments.TestBoundedGroupLoss",
  "test.unit.reductions.grid_search.test_grid_search_arguments.TestDemographicParity",
  "test.unit.reductions.grid_search.test_grid_search_arguments.TestEqualizedOdds",
  "test.unit.reductions.grid_search.test_grid_search_arguments._quick_data",
  "test.unit.reductions.grid_search.test_grid_search_arguments.assert_n_grid_search_results",
  "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_A_transforms",
  "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_X_transforms",
  "test.unit.reductions.grid_search.test_grid_search_arguments.candidate_Y_transforms",
  "test.unit.reductions.grid_search.test_grid_search_arguments.conversions_for_1d",
  "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_dataframe",
  "test.unit.reductions.grid_search.test_grid_search_arguments.ensure_ndarray",
  "test.unit.reductions.grid_search.test_grid_search_arguments.is_invalid_transformation",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity._simple_threshold_data",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity.assert_n_grid_search_results",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_can_specify_and_generate_lambda_vecs",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_demographicparity_fair_uneven_populations",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_lambda_vec_zero_unchanged_model",
  "test.unit.reductions.grid_search.test_grid_search_demographicparity.test_single_y_class",
  "test.unit.reductions.grid_search.test_grid_search_regression",
  "test.unit.reductions.grid_search.test_grid_search_regression._simple_regression_data",
  "test.unit.reductions.grid_search.test_grid_search_regression.assert_n_grid_search_results",
  "test.unit.reductions.grid_search.test_grid_search_regression.logging_all_close",
  "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_lagrange_specifications",
  "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unfair",
  "test.unit.reductions.grid_search.test_grid_search_regression.test_bgl_unmitigated_same",
  "test.unit.reductions.grid_search.utilities",
  "test.unit.reductions.grid_search.utilities._quick_data",
  "test.unit.reductions.grid_search.utilities.assert_n_grid_search_results",
  "test.unit.reductions.moments",
  "test.unit.reductions.moments.data_generator",
  "test.unit.reductions.moments.data_generator.simple_binary_threshold_data",
  "test.unit.reductions.moments.test_moments_demographic_parity",
  "test.unit.reductions.moments.test_moments_demographic_parity.test_construct_and_load",
  "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_negatives",
  "test.unit.reductions.moments.test_moments_demographic_parity.test_project_lambda_smoke_positives",
  "test.unit.reductions.moments.test_moments_demographic_parity.test_signed_weights",
  "test.unit.reductions.moments.test_moments_equalized_odds",
  "test.unit.reductions.moments.test_moments_equalized_odds.test_construct_and_load",
  "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_negatives",
  "test.unit.reductions.moments.test_moments_equalized_odds.test_project_lambda_smoke_positives",
  "test.unit.reductions.moments.test_moments_equalized_odds.test_signed_weights",
  "test.unit.reductions.test_smoke",
  "test.unit.reductions.test_smoke._ESTIMATORS",
  "test.unit.reductions.test_smoke.test_smoke",
  "test.unit.utility_functions",
  "test.unit.utility_functions.logging_all_close"
 ]
}