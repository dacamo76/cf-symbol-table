{
 "errors": {},
 "symbols": [
  "pyrobuf.__main__",
  "pyrobuf.__main__.Compiler",
  "pyrobuf.__main__.main",
  "pyrobuf.compile",
  "pyrobuf.compile.Compiler",
  "pyrobuf.compile.Parser",
  "pyrobuf.compile.Proto3Parser",
  "pyrobuf.compile._FileExistsError",
  "pyrobuf.compile._VM",
  "pyrobuf.parse_proto",
  "pyrobuf.parse_proto.Parser",
  "pyrobuf.parse_proto.Proto3Parser",
  "pyrobuf.protobuf",
  "pyrobuf.setuptools_ext",
  "pyrobuf.setuptools_ext.Compiler",
  "pyrobuf.setuptools_ext.add_pyrobuf_module",
  "pyrobuf.setuptools_ext.basestring",
  "pyrobuf.setuptools_ext.pyrobuf_modules",
  "tests.conftest",
  "tests.conftest.pytest_sessionstart",
  "tests.create_message",
  "tests.create_message.create_an_test",
  "tests.create_message.create_buffer",
  "tests.create_message.create_google_test",
  "tests.messages",
  "tests.messages.test_message_pb2",
  "tests.messages.test_message_pb2.DESCRIPTOR",
  "tests.messages.test_message_pb2.Test",
  "tests.messages.test_message_pb2._TEST",
  "tests.messages.test_message_pb2._TEST_ENUMFIELD",
  "tests.messages.test_message_pb2._TEST_SS1",
  "tests.messages.test_message_pb2._TEST_SS1_SS2",
  "tests.messages.test_message_pb2._TEST_SS1_THING",
  "tests.messages.test_message_pb2._TEST_SS3",
  "tests.messages.test_ref_message_pb2",
  "tests.messages.test_ref_message_pb2.DESCRIPTOR",
  "tests.messages.test_ref_message_pb2.TestRef",
  "tests.messages.test_ref_message_pb2._TESTREF",
  "tests.messages.test_ref_message_pb2._b",
  "tests.messages.test_ref_message_pb2._sym_db",
  "tests.perf_lists",
  "tests.perf_lists.main",
  "tests.performances",
  "tests.performances.BUILD",
  "tests.performances.GOOGLE",
  "tests.performances.HERE",
  "tests.performances.lib_path",
  "tests.performances.main",
  "tests.test_bytes_and_string_lists",
  "tests.test_bytes_and_string_lists.NON_STRING_VALUE",
  "tests.test_bytes_and_string_lists.TestBytesList",
  "tests.test_bytes_and_string_lists.TestStringList",
  "tests.test_caching",
  "tests.test_caching.CachingTest",
  "tests.test_custom_options",
  "tests.test_custom_options.TestCustomOptions",
  "tests.test_custom_options.TestCustomOptionsTest",
  "tests.test_deprecated_field",
  "tests.test_deprecated_field.DecimalDefaultsTest",
  "tests.test_field_defaults",
  "tests.test_field_defaults.DecimalDefaultsTest",
  "tests.test_field_defaults.StringDefaultsTest",
  "tests.test_field_defaults.TestDecimalDefaultsMessage",
  "tests.test_field_defaults.TestStringDefaultsMessage",
  "tests.test_has_field",
  "tests.test_has_field.HasFieldTest",
  "tests.test_has_field.Test",
  "tests.test_has_field.TestRef",
  "tests.test_has_field.TestSs1",
  "tests.test_has_field.TestSs1Thing",
  "tests.test_has_field_many",
  "tests.test_has_field_many.test_has_field",
  "tests.test_imported_enums",
  "tests.test_imported_enums.CLOSE",
  "tests.test_imported_enums.ExposesInternalEnumConstantsMessage",
  "tests.test_imported_enums.ImportedEnumsTest",
  "tests.test_imported_enums.MSG_ONE",
  "tests.test_imported_enums.UsesImportedEnumsMessage",
  "tests.test_is_initialized",
  "tests.test_is_initialized.MergeFromTest",
  "tests.test_is_initialized.SubMessage",
  "tests.test_is_initialized.TestIsInitialized",
  "tests.test_is_initialized.TestWithRequiredSubMessage",
  "tests.test_issue_11",
  "tests.test_issue_11.test_after_overflow",
  "tests.test_issue_11.test_before_overflow",
  "tests.test_issue_69",
  "tests.test_issue_69.test_message_a",
  "tests.test_issue_69.test_message_b",
  "tests.test_items",
  "tests.test_items.ItemsTest",
  "tests.test_items.Test",
  "tests.test_lists",
  "tests.test_lists.DoubleListTest",
  "tests.test_merge_from",
  "tests.test_merge_from.MergeFromTest",
  "tests.test_merge_from.Test",
  "tests.test_merge_from.TestSs1",
  "tests.test_merge_from.TestSs3",
  "tests.test_message",
  "tests.test_message.GOOGLE_SERIALIZED_MESSAGE",
  "tests.test_message.MessageTest",
  "tests.test_message_field_types",
  "tests.test_message_field_types.MessageFieldTypesTest",
  "tests.test_message_field_types.TestFieldTypes",
  "tests.test_message_init_kwargs",
  "tests.test_message_init_kwargs.MergeFromTest",
  "tests.test_message_init_kwargs.Test",
  "tests.test_message_init_kwargs.TestSs1",
  "tests.test_message_init_kwargs.TestSs3",
  "tests.test_message_with_no_fields",
  "tests.test_message_with_no_fields.EmptyMessageTest",
  "tests.test_message_with_no_fields.EmptyMessageWithNoFields",
  "tests.test_nested_issue55",
  "tests.test_nested_issue55.M",
  "tests.test_nested_issue55.MN",
  "tests.test_nested_issue55.MN2",
  "tests.test_nested_issue55.NestedTest",
  "tests.test_parser",
  "tests.test_parser.test_field_validity",
  "tests.test_parser.test_field_validity.FieldValidityTest",
  "tests.test_parser.test_field_validity.enum_name_collision_proto",
  "tests.test_parser.test_field_validity.enum_to_field_collision_proto",
  "tests.test_parser.test_field_validity.field_name_collision_proto",
  "tests.test_parser.test_field_validity.global_enum_to_message_collision_proto",
  "tests.test_parser.test_field_validity.index_collision_proto",
  "tests.test_parser.test_field_validity.nonzero_first_value_proto3",
  "tests.test_parser.test_field_validity.recursive_message_to_enum_collision_proto",
  "tests.test_parser.test_field_validity.recursive_message_to_field_collision_proto",
  "tests.test_parser.test_field_validity.value_collision_proto",
  "tests.test_parser.test_field_validity.zero_index_proto",
  "tests.test_parser.test_map_field",
  "tests.test_parser.test_map_field.TestMapField",
  "tests.test_parser.test_map_field.map_field_with_builtin_types",
  "tests.test_parser.test_map_field.map_field_with_enum",
  "tests.test_parser.test_map_field.map_field_with_message",
  "tests.test_parser.test_missing_lbraces",
  "tests.test_parser.test_missing_lbraces.TestMissingLBraces",
  "tests.test_parser.test_oneof",
  "tests.test_parser.test_oneof.TestOneOf",
  "tests.test_parser.test_oneof.proto_def",
  "tests.test_parser.test_syntax",
  "tests.test_parser.test_syntax.SyntaxTest",
  "tests.test_parser.test_syntax.syntax2_explicit",
  "tests.test_parser.test_syntax.syntax2_implicit",
  "tests.test_parser.test_syntax.syntax3_explicit",
  "tests.test_repeated_enum",
  "tests.test_repeated_enum.RepeatedEnumTest",
  "tests.test_repeated_enum.TestRepeatedEnum",
  "tests.test_signed_integer",
  "tests.test_signed_integer.gen_rand_int32",
  "tests.test_signed_integer.gen_rand_int64",
  "tests.test_signed_integer.gen_rand_uint32",
  "tests.test_signed_integer.gen_rand_uint64",
  "tests.test_signed_integer.test_int32",
  "tests.test_signed_integer.test_int64",
  "tests.test_signed_integer.test_sint32",
  "tests.test_signed_integer.test_sint64",
  "tests.test_signed_integer.test_uint32",
  "tests.test_signed_integer.test_uint64",
  "tests.test_typed_lists",
  "tests.test_typed_lists.MergeFromTest",
  "tests.test_typed_lists.Test",
  "tests.test_typed_lists.TestRef",
  "tests.test_unicode_strings",
  "tests.test_unicode_strings.GREEK_LETTERS",
  "tests.test_unicode_strings.Test",
  "tests.test_unicode_strings.TestFieldTypes",
  "tests.test_unicode_strings.TestSs1",
  "tests.test_unicode_strings.TestUnicodeStrings",
  "tests.test_unknown_field",
  "tests.test_unknown_field.GOOGLE_SERIALIZED_MESSAGE",
  "tests.test_unknown_field.MessageTest",
  "tests.test_unknown_field.TestTruncated",
  "tests.test_varint_encoding",
  "tests.test_varint_encoding.test_signed_varint_decode_0",
  "tests.test_varint_encoding.test_signed_varint_decode_1",
  "tests.test_varint_encoding.test_signed_varint_decode_max_int32",
  "tests.test_varint_encoding.test_signed_varint_decode_max_int64",
  "tests.test_varint_encoding.test_signed_varint_decode_negative_1",
  "tests.test_varint_encoding.test_signed_varint_decode_negative_max_int32",
  "tests.test_varint_encoding.test_signed_varint_decode_negative_max_int64",
  "tests.test_varint_encoding.test_signed_varint_encode_0",
  "tests.test_varint_encoding.test_signed_varint_encode_1",
  "tests.test_varint_encoding.test_signed_varint_encode_max_int32",
  "tests.test_varint_encoding.test_signed_varint_encode_max_int64",
  "tests.test_varint_encoding.test_signed_varint_encode_negative_1",
  "tests.test_varint_encoding.test_signed_varint_encode_negative_max_int32",
  "tests.test_varint_encoding.test_signed_varint_encode_negative_max_int64",
  "tests.test_varint_encoding.test_varint_decode_0",
  "tests.test_varint_encoding.test_varint_decode_1",
  "tests.test_varint_encoding.test_varint_decode_max_int32",
  "tests.test_varint_encoding.test_varint_decode_max_int64",
  "tests.test_varint_encoding.test_varint_decode_negative_1",
  "tests.test_varint_encoding.test_varint_decode_negative_max_int32",
  "tests.test_varint_encoding.test_varint_decode_negative_max_int64",
  "tests.test_varint_encoding.test_varint_encode_0",
  "tests.test_varint_encoding.test_varint_encode_1",
  "tests.test_varint_encoding.test_varint_encode_max_int32",
  "tests.test_varint_encoding.test_varint_encode_max_int64",
  "tests.test_varint_encoding.test_varint_encode_negative_1",
  "tests.test_varint_encoding.test_varint_encode_negative_max_int32",
  "tests.test_varint_encoding.test_varint_encode_negative_max_int64"
 ]
}