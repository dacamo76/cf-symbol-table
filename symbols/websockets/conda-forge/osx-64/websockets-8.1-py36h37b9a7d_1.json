{
 "errors": {
  "websockets.auth": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/utils.py\", line 16, in wrapper",
    "    return list(func(*args, **kwargs))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 160, in _convert_names",
    "    for name in names:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 100, in _break_check",
    "    reachable = _check_if(context, flow_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 278, in infer_trailer",
    "    return atom_values.execute(args)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in execute",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in <genexpr>",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 133, in wrapper",
    "    return func(value, arguments=arguments, callback=call)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 159, in wrapper",
    "    value.inference_state, arguments, clinic_string))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/arguments.py\", line 94, in iterate_argument_clinic",
    "    value_set = NO_VALUES if argument is None else argument.infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/pytest.py\", line 62, in wrapper",
    "    return func(param_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 514, in infer",
    "    values = super().infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 499, in infer",
    "    values = self.infer_annotation()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 455, in infer_annotation",
    "    ignore_stars=ignore_stars)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/annotation.py\", line 114, in infer_param",
    "    values = _infer_param(function_value, param)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/annotation.py\", line 183, in _infer_param",
    "    return infer_annotation(context, annotation)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/annotation.py\", line 34, in infer_annotation",
    "    value_set = context.infer_node(annotation)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "websockets.client": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/client.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/client.py'",
    ""
   ]
  },
  "websockets.extensions": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/__init__.py'",
    ""
   ]
  },
  "websockets.extensions.base": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/base.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/base.py'",
    ""
   ]
  },
  "websockets.extensions.permessage_deflate": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/permessage_deflate.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/extensions/permessage_deflate.py'",
    ""
   ]
  },
  "websockets.headers": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/headers.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/headers.py'",
    ""
   ]
  },
  "websockets.http": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/http.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/http.py'",
    ""
   ]
  },
  "websockets.typing": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/typing.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/typing.py'",
    ""
   ]
  },
  "websockets.utils": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/utils.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpdwzyxvyf/lib/python3.6/site-packages/websockets/utils.py'",
    ""
   ]
  }
 },
 "symbols": [
  "websockets.AbortHandshake",
  "websockets.BasicAuthWebSocketServerProtocol",
  "websockets.CLOSE_CODES",
  "websockets.CTRL_OPCODES",
  "websockets.Connect",
  "websockets.ConnectionClosed",
  "websockets.Credentials",
  "websockets.DATA_OPCODES",
  "websockets.Data__doc__",
  "websockets.DuplicateParameter",
  "websockets.EXTERNAL_CLOSE_CODES",
  "websockets.ExtensionHeader__doc__",
  "websockets.ExtensionName",
  "websockets.ExtensionParameter",
  "websockets.ExtensionParameter__doc__",
  "websockets.Frame",
  "websockets.GUID",
  "websockets.HeadersLikeOrCallable",
  "websockets.InvalidHeaderFormat",
  "websockets.InvalidHeaderValue",
  "websockets.InvalidOrigin",
  "websockets.InvalidParameterName",
  "websockets.InvalidParameterValue",
  "websockets.InvalidState",
  "websockets.InvalidURI",
  "websockets.InvalidUpgrade",
  "websockets.OP_BINARY",
  "websockets.OP_CLOSE",
  "websockets.OP_CONT",
  "websockets.OP_PING",
  "websockets.OP_PONG",
  "websockets.OP_TEXT",
  "websockets.PayloadTooBig",
  "websockets.ProtocolError",
  "websockets.Serve",
  "websockets.State",
  "websockets.WebSocketClientProtocol",
  "websockets.WebSocketException",
  "websockets.WebSocketProtocolError",
  "websockets.WebSocketServer",
  "websockets.__all__",
  "websockets.__main__",
  "websockets.__main__.exit_from_event_loop_thread",
  "websockets.__main__.main",
  "websockets.__main__.print_during_input",
  "websockets.__main__.print_over_input",
  "websockets.__main__.run_client",
  "websockets.__main__.win_enable_vt100",
  "websockets.__version__",
  "websockets.accept",
  "websockets.auth",
  "websockets.auth.BasicAuthWebSocketServerProtocol",
  "websockets.auth.Credentials",
  "websockets.auth.basic_auth_protocol_factory",
  "websockets.auth.is_credentials",
  "websockets.basic_auth_protocol_factory",
  "websockets.build_response",
  "websockets.check_close",
  "websockets.check_request",
  "websockets.client",
  "websockets.client.Connect",
  "websockets.client.WebSocketClientProtocol",
  "websockets.client.connect",
  "websockets.client.logger",
  "websockets.client.unix_connect",
  "websockets.connect",
  "websockets.encode_data",
  "websockets.exceptions",
  "websockets.exceptions.AbortHandshake",
  "websockets.exceptions.CLOSE_CODES",
  "websockets.exceptions.ConnectionClosed",
  "websockets.exceptions.DuplicateParameter",
  "websockets.exceptions.InvalidHandshake",
  "websockets.exceptions.InvalidHeader",
  "websockets.exceptions.InvalidHeaderFormat",
  "websockets.exceptions.InvalidHeaderValue",
  "websockets.exceptions.InvalidMessage",
  "websockets.exceptions.InvalidOrigin",
  "websockets.exceptions.InvalidParameterName",
  "websockets.exceptions.InvalidParameterValue",
  "websockets.exceptions.InvalidState",
  "websockets.exceptions.InvalidStatusCode",
  "websockets.exceptions.InvalidURI",
  "websockets.exceptions.InvalidUpgrade",
  "websockets.exceptions.NegotiationError",
  "websockets.exceptions.PayloadTooBig",
  "websockets.exceptions.ProtocolError",
  "websockets.exceptions.RedirectHandshake",
  "websockets.exceptions.SecurityError",
  "websockets.exceptions.WebSocketException",
  "websockets.exceptions.WebSocketProtocolError",
  "websockets.exceptions.__all__",
  "websockets.exceptions.format_close",
  "websockets.extensions",
  "websockets.format_close",
  "websockets.framing",
  "websockets.framing.CTRL_OPCODES",
  "websockets.framing.DATA_OPCODES",
  "websockets.framing.EXTERNAL_CLOSE_CODES",
  "websockets.framing.Frame",
  "websockets.framing.OP_BINARY",
  "websockets.framing.OP_CLOSE",
  "websockets.framing.OP_CONT",
  "websockets.framing.OP_PING",
  "websockets.framing.OP_PONG",
  "websockets.framing.OP_TEXT",
  "websockets.framing.__all__",
  "websockets.framing.check_close",
  "websockets.framing.encode_data",
  "websockets.framing.parse_close",
  "websockets.framing.prepare_data",
  "websockets.framing.serialize_close",
  "websockets.handshake",
  "websockets.handshake.GUID",
  "websockets.handshake.__all__",
  "websockets.handshake.accept",
  "websockets.handshake.build_request",
  "websockets.handshake.build_response",
  "websockets.handshake.check_request",
  "websockets.handshake.check_response",
  "websockets.headers",
  "websockets.http",
  "websockets.is_credentials",
  "websockets.logger",
  "websockets.parse_close",
  "websockets.prepare_data",
  "websockets.protocol",
  "websockets.protocol.CTRL_OPCODES",
  "websockets.protocol.DATA_OPCODES",
  "websockets.protocol.EXTERNAL_CLOSE_CODES",
  "websockets.protocol.Frame",
  "websockets.protocol.GUID",
  "websockets.protocol.OP_BINARY",
  "websockets.protocol.OP_CLOSE",
  "websockets.protocol.OP_CONT",
  "websockets.protocol.OP_PING",
  "websockets.protocol.OP_PONG",
  "websockets.protocol.OP_TEXT",
  "websockets.protocol.State",
  "websockets.protocol.WebSocketCommonProtocol",
  "websockets.protocol.__all__",
  "websockets.protocol.accept",
  "websockets.protocol.build_request",
  "websockets.protocol.build_response",
  "websockets.protocol.check_close",
  "websockets.protocol.check_request",
  "websockets.protocol.check_response",
  "websockets.protocol.encode_data",
  "websockets.protocol.logger",
  "websockets.protocol.parse_close",
  "websockets.protocol.prepare_data",
  "websockets.protocol.serialize_close",
  "websockets.serialize_close",
  "websockets.serve",
  "websockets.server",
  "websockets.server.HTTPResponse",
  "websockets.server.HeadersLikeOrCallable",
  "websockets.server.Serve",
  "websockets.server.WebSocketServer",
  "websockets.server.__all__",
  "websockets.server.logger",
  "websockets.server.serve",
  "websockets.server.unix_serve",
  "websockets.typing",
  "websockets.typing.Data__doc__",
  "websockets.typing.ExtensionHeader__doc__",
  "websockets.typing.ExtensionName",
  "websockets.typing.ExtensionParameter",
  "websockets.typing.ExtensionParameter__doc__",
  "websockets.unix_connect",
  "websockets.unix_serve",
  "websockets.uri",
  "websockets.uri.WebSocketURI",
  "websockets.uri.__all__",
  "websockets.uri.parse_uri",
  "websockets.utils",
  "websockets.version",
  "websockets.version.version"
 ]
}