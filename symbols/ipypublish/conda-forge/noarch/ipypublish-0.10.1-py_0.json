{
 "errors": {
  "ipypublish.sphinx.gls.cache": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/typing.py')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 424, in _complete_inherited",
    "    next(filters)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 206, in get_filters",
    "    metaclasses = self.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 396, in get_metaclasses",
    "    values = value.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 396, in get_metaclasses",
    "    values = value.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 394, in get_metaclasses",
    "    for value in lazy_base.infer():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 456, in import_module",
    "    is_package=is_pkg,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 472, in _load_python_module",
    "    cache_path=settings.cache_directory,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "ipypublish.__version__",
  "ipypublish.bib2glossary",
  "ipypublish.bib2glossary.BibGlossDB",
  "ipypublish.bib2glossary.BibGlossEntry",
  "ipypublish.bib2glossary.classes",
  "ipypublish.bib2glossary.classes.BibGlossDB",
  "ipypublish.bib2glossary.classes.BibGlossEntry",
  "ipypublish.bib2glossary.classes.ETYPE_ACRONYM",
  "ipypublish.bib2glossary.classes.ETYPE_GLOSS",
  "ipypublish.bib2glossary.classes.ETYPE_SYMBOL",
  "ipypublish.bib2glossary.classes.NEWACRONYM_FIELDS",
  "ipypublish.bib2glossary.classes.NEWGLOSS_FIELDS",
  "ipypublish.bib2glossary.classes.logger",
  "ipypublish.bib2glossary.definitions",
  "ipypublish.bib2glossary.definitions.ETYPE_ACRONYM",
  "ipypublish.bib2glossary.definitions.ETYPE_GLOSS",
  "ipypublish.bib2glossary.definitions.ETYPE_SYMBOL",
  "ipypublish.bib2glossary.definitions.NEWACRONYM_FIELDS",
  "ipypublish.bib2glossary.definitions.NEWGLOSS_FIELDS",
  "ipypublish.bib2glossary.parse_tex",
  "ipypublish.bib2glossary.parse_tex._create_msg_error",
  "ipypublish.bib2glossary.parse_tex._extract_parameters",
  "ipypublish.bib2glossary.parse_tex.create_newacronym_dict",
  "ipypublish.bib2glossary.parse_tex.create_newgloss_dict",
  "ipypublish.bib2glossary.parse_tex.extract_parameters",
  "ipypublish.bib2glossary.parse_tex.extract_required_val",
  "ipypublish.bib2glossary.parse_tex.import_texsoup",
  "ipypublish.bib2glossary.parse_tex.logger",
  "ipypublish.bib2glossary.parse_tex.parse_tex",
  "ipypublish.bib2glossary.test_bib2gloss",
  "ipypublish.bib2glossary.test_bib2gloss.BibGlossDB",
  "ipypublish.bib2glossary.test_bib2gloss.bib_str",
  "ipypublish.bib2glossary.test_bib2gloss.test_load_bib_type_error",
  "ipypublish.bib2glossary.test_bib2gloss.test_load_bib_type_ignore",
  "ipypublish.bib2glossary.test_bib2gloss.test_load_tex",
  "ipypublish.bib2glossary.test_bib2gloss.test_to_bib_string",
  "ipypublish.bib2glossary.test_bib2gloss.test_to_dict",
  "ipypublish.bib2glossary.test_bib2gloss.test_to_latex_dict",
  "ipypublish.bib2glossary.test_bib2gloss.tex_str",
  "ipypublish.bib2glossary.test_parse_tex",
  "ipypublish.bib2glossary.test_parse_tex.parse_tex",
  "ipypublish.bib2glossary.test_parse_tex.test_acronym_ioerror",
  "ipypublish.bib2glossary.test_parse_tex.test_duplicate_key",
  "ipypublish.bib2glossary.test_parse_tex.test_gterm_ioerror",
  "ipypublish.bib2glossary.test_parse_tex.test_ioerror_skip",
  "ipypublish.bib2glossary.test_parse_tex.test_parse_acronyms",
  "ipypublish.bib2glossary.test_parse_tex.test_parse_gterms",
  "ipypublish.bib2glossary.test_parse_tex.test_parse_mixed",
  "ipypublish.convert",
  "ipypublish.convert.config_manager",
  "ipypublish.convert.config_manager._EXPORT_SCHEMA",
  "ipypublish.convert.config_manager._EXPORT_SCHEMA_FILE",
  "ipypublish.convert.config_manager._TEMPLATE_KEY",
  "ipypublish.convert.config_manager.create_exporter_cls",
  "ipypublish.convert.config_manager.create_template",
  "ipypublish.convert.config_manager.export_plugins",
  "ipypublish.convert.config_manager.get_export_config_path",
  "ipypublish.convert.config_manager.get_export_extension",
  "ipypublish.convert.config_manager.get_module_path",
  "ipypublish.convert.config_manager.handle_error",
  "ipypublish.convert.config_manager.iter_all_export_infos",
  "ipypublish.convert.config_manager.iter_all_export_paths",
  "ipypublish.convert.config_manager.load_export_config",
  "ipypublish.convert.config_manager.load_template",
  "ipypublish.convert.config_manager.logger",
  "ipypublish.convert.config_manager.pathlib",
  "ipypublish.convert.config_manager.read_file_from_directory",
  "ipypublish.convert.config_manager.read_file_from_module",
  "ipypublish.convert.config_manager.schema",
  "ipypublish.convert.config_manager.str_to_jinja",
  "ipypublish.convert.main",
  "ipypublish.convert.main.IpyPubMain",
  "ipypublish.convert.main.create_exporter_cls",
  "ipypublish.convert.main.dict_to_config",
  "ipypublish.convert.main.find_entry_point",
  "ipypublish.convert.main.get_export_config_path",
  "ipypublish.convert.main.get_module_path",
  "ipypublish.convert.main.get_valid_filename",
  "ipypublish.convert.main.handle_error",
  "ipypublish.convert.main.load_export_config",
  "ipypublish.convert.main.load_template",
  "ipypublish.convert.main.merge_notebooks",
  "ipypublish.convert.main.pathlib",
  "ipypublish.convert.main.read_file_from_directory",
  "ipypublish.convert.main.replace_placeholders",
  "ipypublish.convert.main.schema",
  "ipypublish.convert.nbmerge",
  "ipypublish.convert.nbmerge.alphanumeric_sort",
  "ipypublish.convert.nbmerge.handle_error",
  "ipypublish.convert.nbmerge.logger",
  "ipypublish.convert.nbmerge.merge_notebooks",
  "ipypublish.convert.nbmerge.pathlib",
  "ipypublish.export_plugins",
  "ipypublish.filters",
  "ipypublish.filters.ansi_listings",
  "ipypublish.filters.ansi_listings._ANSI_COLORS",
  "ipypublish.filters.ansi_listings._ANSI_RE",
  "ipypublish.filters.ansi_listings.__all__",
  "ipypublish.filters.ansi_listings._ansi2anything",
  "ipypublish.filters.ansi_listings._get_extended_color",
  "ipypublish.filters.ansi_listings._latexconverter",
  "ipypublish.filters.ansi_listings.ansi2listings",
  "ipypublish.filters.filters",
  "ipypublish.filters.filters._repl",
  "ipypublish.filters.filters._split_option",
  "ipypublish.filters.filters._write_roman",
  "ipypublish.filters.filters.basename",
  "ipypublish.filters.filters.create_key",
  "ipypublish.filters.filters.dict_to_kwds",
  "ipypublish.filters.filters.first_para",
  "ipypublish.filters.filters.get_caption",
  "ipypublish.filters.filters.get_empty_lines",
  "ipypublish.filters.filters.is_equation",
  "ipypublish.filters.filters.remove_dollars",
  "ipypublish.filters.filters.strip_ext",
  "ipypublish.filters.filters.wrap_eqn",
  "ipypublish.filters.filters.wrap_latex",
  "ipypublish.filters.meta_to_yaml",
  "ipypublish.filters.meta_to_yaml.meta_to_yaml",
  "ipypublish.filters.meta_to_yaml.recurse_convert",
  "ipypublish.filters.replace_string",
  "ipypublish.filters.replace_string.replace_string",
  "ipypublish.filters.rst_choose_output",
  "ipypublish.filters.rst_choose_output.DISPLAY_DATA_PRIORITY_HTML",
  "ipypublish.filters.rst_choose_output.DISPLAY_DATA_PRIORITY_LATEX",
  "ipypublish.filters.rst_choose_output.choose_output_type",
  "ipypublish.filters_pandoc",
  "ipypublish.filters_pandoc.builtin2meta",
  "ipypublish.filters_pandoc.definitions",
  "ipypublish.filters_pandoc.definitions.ATTRIBUTE_CITE_CLASS",
  "ipypublish.filters_pandoc.definitions.CITE_HTML_NAMES",
  "ipypublish.filters_pandoc.definitions.CONVERTED_CITE_CLASS",
  "ipypublish.filters_pandoc.definitions.CONVERTED_DIRECTIVE_CLASS",
  "ipypublish.filters_pandoc.definitions.CONVERTED_OTHER_CLASS",
  "ipypublish.filters_pandoc.definitions.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.definitions.PREFIX_MAP",
  "ipypublish.filters_pandoc.definitions.PREFIX_MAP_LATEX_R",
  "ipypublish.filters_pandoc.definitions.PREFIX_MAP_RST_R",
  "ipypublish.filters_pandoc.definitions.RAWDIV_CLASS",
  "ipypublish.filters_pandoc.definitions.RAWSPAN_CLASS",
  "ipypublish.filters_pandoc.definitions.RST_KNOWN_ROLES",
  "ipypublish.filters_pandoc.format_cite_elements",
  "ipypublish.filters_pandoc.format_cite_elements.ATTRIBUTE_CITE_CLASS",
  "ipypublish.filters_pandoc.format_cite_elements.CITE_HTML_NAMES",
  "ipypublish.filters_pandoc.format_cite_elements.CONVERTED_CITE_CLASS",
  "ipypublish.filters_pandoc.format_cite_elements.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.format_cite_elements.finalize",
  "ipypublish.filters_pandoc.format_cite_elements.format_cites",
  "ipypublish.filters_pandoc.format_cite_elements.format_span_cites",
  "ipypublish.filters_pandoc.format_cite_elements.main",
  "ipypublish.filters_pandoc.format_cite_elements.prepare",
  "ipypublish.filters_pandoc.format_cite_elements.process_bib_entry",
  "ipypublish.filters_pandoc.format_cite_elements.read_bibliography",
  "ipypublish.filters_pandoc.format_cite_elements.strip_cite_spans",
  "ipypublish.filters_pandoc.format_label_elements",
  "ipypublish.filters_pandoc.format_label_elements.LABELLED_IMAGE_CLASS",
  "ipypublish.filters_pandoc.format_label_elements.LABELLED_MATH_CLASS",
  "ipypublish.filters_pandoc.format_label_elements.LABELLED_TABLE_CLASS",
  "ipypublish.filters_pandoc.format_label_elements.LATEX_FIG_LABELLED",
  "ipypublish.filters_pandoc.format_label_elements.LATEX_FIG_UNLABELLED",
  "ipypublish.filters_pandoc.format_label_elements._wrap_in_anchor",
  "ipypublish.filters_pandoc.format_label_elements.convert_attributes",
  "ipypublish.filters_pandoc.format_label_elements.convert_units",
  "ipypublish.filters_pandoc.format_label_elements.finalize",
  "ipypublish.filters_pandoc.format_label_elements.format_image",
  "ipypublish.filters_pandoc.format_label_elements.format_math",
  "ipypublish.filters_pandoc.format_label_elements.format_table",
  "ipypublish.filters_pandoc.format_label_elements.main",
  "ipypublish.filters_pandoc.format_label_elements.prepare",
  "ipypublish.filters_pandoc.format_label_elements.strip_labelled_spans",
  "ipypublish.filters_pandoc.format_raw_spans",
  "ipypublish.filters_pandoc.format_raw_spans.CONVERTED_DIRECTIVE_CLASS",
  "ipypublish.filters_pandoc.format_raw_spans.CONVERTED_OTHER_CLASS",
  "ipypublish.filters_pandoc.format_raw_spans.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.format_raw_spans.finalize",
  "ipypublish.filters_pandoc.format_raw_spans.main",
  "ipypublish.filters_pandoc.format_raw_spans.prepare",
  "ipypublish.filters_pandoc.format_raw_spans.process_code_latex",
  "ipypublish.filters_pandoc.format_raw_spans.process_raw_spans",
  "ipypublish.filters_pandoc.html_bib",
  "ipypublish.filters_pandoc.html_bib.DefaultFormatter",
  "ipypublish.filters_pandoc.html_bib.add_abbreviated_author",
  "ipypublish.filters_pandoc.html_bib.process_bib_entry",
  "ipypublish.filters_pandoc.html_bib.read_bibliography",
  "ipypublish.filters_pandoc.html_bib.safe_str",
  "ipypublish.filters_pandoc.html_bib.split_date",
  "ipypublish.filters_pandoc.main",
  "ipypublish.filters_pandoc.main.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.main.apply_filter",
  "ipypublish.filters_pandoc.main.create_ipub_meta",
  "ipypublish.filters_pandoc.main.format_cite_elements",
  "ipypublish.filters_pandoc.main.format_label_elements",
  "ipypublish.filters_pandoc.main.format_raw_spans",
  "ipypublish.filters_pandoc.main.get_option",
  "ipypublish.filters_pandoc.main.jinja_filter",
  "ipypublish.filters_pandoc.main.pandoc_filters",
  "ipypublish.filters_pandoc.main.prepare_cites",
  "ipypublish.filters_pandoc.main.prepare_labels",
  "ipypublish.filters_pandoc.main.prepare_raw",
  "ipypublish.filters_pandoc.main.rmarkdown_to_mpe",
  "ipypublish.filters_pandoc.prepare_cites",
  "ipypublish.filters_pandoc.prepare_cites.ATTRIBUTE_CITE_CLASS",
  "ipypublish.filters_pandoc.prepare_cites.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.prepare_cites.PREFIX_MAP",
  "ipypublish.filters_pandoc.prepare_cites.finalize",
  "ipypublish.filters_pandoc.prepare_cites.find_attributes",
  "ipypublish.filters_pandoc.prepare_cites.get_pf_content_attr",
  "ipypublish.filters_pandoc.prepare_cites.main",
  "ipypublish.filters_pandoc.prepare_cites.prepare",
  "ipypublish.filters_pandoc.prepare_cites.process_citations",
  "ipypublish.filters_pandoc.prepare_labels",
  "ipypublish.filters_pandoc.prepare_labels.LABELLED_IMAGE_CLASS",
  "ipypublish.filters_pandoc.prepare_labels.LABELLED_MATH_CLASS",
  "ipypublish.filters_pandoc.prepare_labels.LABELLED_TABLE_CLASS",
  "ipypublish.filters_pandoc.prepare_labels.REFTYPE_IMAGE",
  "ipypublish.filters_pandoc.prepare_labels.REFTYPE_MATH",
  "ipypublish.filters_pandoc.prepare_labels.REFTYPE_TABLE",
  "ipypublish.filters_pandoc.prepare_labels.compare_version",
  "ipypublish.filters_pandoc.prepare_labels.finalize",
  "ipypublish.filters_pandoc.prepare_labels.find_attributes",
  "ipypublish.filters_pandoc.prepare_labels.get_panflute_containers",
  "ipypublish.filters_pandoc.prepare_labels.main",
  "ipypublish.filters_pandoc.prepare_labels.prepare",
  "ipypublish.filters_pandoc.prepare_labels.resolve_equations_images",
  "ipypublish.filters_pandoc.prepare_labels.resolve_tables",
  "ipypublish.filters_pandoc.prepare_raw",
  "ipypublish.filters_pandoc.prepare_raw.ATTRIBUTE_CITE_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.CONVERTED_CITE_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.CONVERTED_DIRECTIVE_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.CONVERTED_OTHER_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.PREFIX_MAP",
  "ipypublish.filters_pandoc.prepare_raw.PREFIX_MAP_LATEX_R",
  "ipypublish.filters_pandoc.prepare_raw.PREFIX_MAP_RST_R",
  "ipypublish.filters_pandoc.prepare_raw.RAWDIV_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.RAWSPAN_CLASS",
  "ipypublish.filters_pandoc.prepare_raw.RST_KNOWN_ROLES",
  "ipypublish.filters_pandoc.prepare_raw.assess_latex",
  "ipypublish.filters_pandoc.prepare_raw.create_cite_span",
  "ipypublish.filters_pandoc.prepare_raw.finalize",
  "ipypublish.filters_pandoc.prepare_raw.gather_processors",
  "ipypublish.filters_pandoc.prepare_raw.get_panflute_containers",
  "ipypublish.filters_pandoc.prepare_raw.get_pf_content_attr",
  "ipypublish.filters_pandoc.prepare_raw.main",
  "ipypublish.filters_pandoc.prepare_raw.prepare",
  "ipypublish.filters_pandoc.prepare_raw.process_html_cites",
  "ipypublish.filters_pandoc.prepare_raw.process_internal_links",
  "ipypublish.filters_pandoc.prepare_raw.process_latex_raw",
  "ipypublish.filters_pandoc.prepare_raw.process_latex_str",
  "ipypublish.filters_pandoc.prepare_raw.process_rst_roles",
  "ipypublish.filters_pandoc.prepare_raw.wrap_rst_directives",
  "ipypublish.filters_pandoc.rmarkdown_to_mpe",
  "ipypublish.filters_pandoc.rmarkdown_to_mpe.finalize",
  "ipypublish.filters_pandoc.rmarkdown_to_mpe.format_code_html",
  "ipypublish.filters_pandoc.rmarkdown_to_mpe.main",
  "ipypublish.filters_pandoc.rmarkdown_to_mpe.prepare",
  "ipypublish.filters_pandoc.tests",
  "ipypublish.filters_pandoc.tests.test_convert_raw",
  "ipypublish.filters_pandoc.tests.test_convert_raw.apply_filter",
  "ipypublish.filters_pandoc.tests.test_convert_raw.format_cite_elements",
  "ipypublish.filters_pandoc.tests.test_convert_raw.format_raw_spans",
  "ipypublish.filters_pandoc.tests.test_convert_raw.prepare_raw",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_citations_latex",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_citations_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_cite_in_table_caption",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_html_to_latex_cite",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_html_to_latex_label",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_html_to_rst_cite",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_latex_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_mkdown_hlink_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_cite_to_latex",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_cite_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_directive_to_latex",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_directive_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_directive_with_options_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_known_role_to_rst",
  "ipypublish.filters_pandoc.tests.test_convert_raw.test_rst_label_to_rst",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.apply_filter",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.format_cite_elements",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.prepare_cites",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.test_multiple_references_latex",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.test_multiple_references_rst",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.test_reference_prefixes_latex",
  "ipypublish.filters_pandoc.tests.test_format_cite_elements.test_reference_prefixes_rst",
  "ipypublish.filters_pandoc.tests.test_format_label_elements",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.apply_filter",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.format_label_elements",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.prepare_labels",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_image_html",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_image_latex",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_image_rst",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_math_md_to_rst",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_math_span_html",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_math_span_latex",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_math_span_rst",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_table_html",
  "ipypublish.filters_pandoc.tests.test_format_label_elements.test_table_rst",
  "ipypublish.filters_pandoc.tests.test_jinja_filter",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.create_ipub_meta",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.jinja_filter",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_at_notation_false",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_basic",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_option_in_cell_meta",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_option_in_nb_meta",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_option_in_top_matter",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_reference",
  "ipypublish.filters_pandoc.tests.test_jinja_filter.test_remove_filter",
  "ipypublish.filters_pandoc.tests.test_prepare_cites",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.apply_filter",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.main",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.test_image_html",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.test_para_html",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.test_para_rst",
  "ipypublish.filters_pandoc.tests.test_prepare_cites.test_table_html",
  "ipypublish.filters_pandoc.tests.test_prepare_labels",
  "ipypublish.filters_pandoc.tests.test_prepare_labels.apply_to_json",
  "ipypublish.filters_pandoc.tests.test_prepare_labels.main",
  "ipypublish.filters_pandoc.tests.test_prepare_labels.test_basic",
  "ipypublish.filters_pandoc.tests.test_prepare_labels.test_multiple_on_line",
  "ipypublish.filters_pandoc.tests.test_prepare_labels.test_with_tables",
  "ipypublish.filters_pandoc.utils",
  "ipypublish.filters_pandoc.utils.IPUB_META_ROUTE",
  "ipypublish.filters_pandoc.utils._search_attribute_left",
  "ipypublish.filters_pandoc.utils._search_attribute_right",
  "ipypublish.filters_pandoc.utils.apply_filter",
  "ipypublish.filters_pandoc.utils.compare_version",
  "ipypublish.filters_pandoc.utils.convert_attributes",
  "ipypublish.filters_pandoc.utils.convert_units",
  "ipypublish.filters_pandoc.utils.create_ipub_meta",
  "ipypublish.filters_pandoc.utils.find_attributes",
  "ipypublish.filters_pandoc.utils.get_option",
  "ipypublish.filters_pandoc.utils.get_panflute_containers",
  "ipypublish.filters_pandoc.utils.get_pf_content_attr",
  "ipypublish.filters_pandoc.utils.process_attributes",
  "ipypublish.filters_pandoc.utils.strip_quotes",
  "ipypublish.frontend",
  "ipypublish.frontend.nbpresent",
  "ipypublish.frontend.nbpresent.IpyPubMain",
  "ipypublish.frontend.nbpresent.RevealServer",
  "ipypublish.frontend.nbpresent.logger",
  "ipypublish.frontend.nbpresent.nbpresent",
  "ipypublish.frontend.nbpresent.parse_options",
  "ipypublish.frontend.nbpresent.run",
  "ipypublish.frontend.nbpublish",
  "ipypublish.frontend.nbpublish.IpyPubMain",
  "ipypublish.frontend.nbpublish.logger",
  "ipypublish.frontend.nbpublish.nbpublish",
  "ipypublish.frontend.nbpublish.parse_options",
  "ipypublish.frontend.nbpublish.run",
  "ipypublish.frontend.shared",
  "ipypublish.frontend.shared.CustomFormatter",
  "ipypublish.frontend.shared.CustomParser",
  "ipypublish.frontend.shared.__version__",
  "ipypublish.frontend.shared.get_parser",
  "ipypublish.frontend.shared.get_plugin_str",
  "ipypublish.frontend.shared.iter_all_export_infos",
  "ipypublish.frontend.shared.parse_options",
  "ipypublish.nb_setup",
  "ipypublish.port_api",
  "ipypublish.port_api.convert_format_str",
  "ipypublish.port_api.convert_format_str.DefaultFormatter",
  "ipypublish.port_api.convert_format_str.convert_format_str",
  "ipypublish.port_api.convert_format_str.template",
  "ipypublish.port_api.plugin_to_json",
  "ipypublish.port_api.plugin_to_json.assess_syntax",
  "ipypublish.port_api.plugin_to_json.ast_to_json",
  "ipypublish.port_api.plugin_to_json.convert_config",
  "ipypublish.port_api.plugin_to_json.convert_dict",
  "ipypublish.port_api.plugin_to_json.convert_oformat",
  "ipypublish.port_api.plugin_to_json.convert_to_json",
  "ipypublish.port_api.plugin_to_json.create_json",
  "ipypublish.port_api.plugin_to_json.err",
  "ipypublish.port_api.plugin_to_json.replace_template_path",
  "ipypublish.port_api.tpl_dct_to_json",
  "ipypublish.port_api.tpl_dct_to_json._dir_path",
  "ipypublish.port_api.tpl_dct_to_json._ext",
  "ipypublish.port_api.tpl_dct_to_json._folder",
  "ipypublish.port_api.tpl_dct_to_json._name",
  "ipypublish.port_api.tpl_dct_to_json._outpath",
  "ipypublish.port_api.tpl_dct_to_json._path",
  "ipypublish.port_api.tpl_dct_to_json._prefix",
  "ipypublish.port_api.tpl_dct_to_json.assess_syntax",
  "ipypublish.port_api.tpl_dct_to_json.py_to_json",
  "ipypublish.postprocessors",
  "ipypublish.postprocessors.base",
  "ipypublish.postprocessors.base.IPyPostProcessor",
  "ipypublish.postprocessors.base.handle_error",
  "ipypublish.postprocessors.base.pathlib",
  "ipypublish.postprocessors.convert_bibgloss",
  "ipypublish.postprocessors.convert_bibgloss.BibGlossDB",
  "ipypublish.postprocessors.convert_bibgloss.ConvertBibGloss",
  "ipypublish.postprocessors.convert_bibgloss.IPyPostProcessor",
  "ipypublish.postprocessors.file_actions",
  "ipypublish.postprocessors.file_actions.CopyResourcePaths",
  "ipypublish.postprocessors.file_actions.IPyPostProcessor",
  "ipypublish.postprocessors.file_actions.RemoveFolder",
  "ipypublish.postprocessors.file_actions.WriteResourceFiles",
  "ipypublish.postprocessors.file_actions.WriteTextFile",
  "ipypublish.postprocessors.pdfexport",
  "ipypublish.postprocessors.pdfexport.IPyPostProcessor",
  "ipypublish.postprocessors.pdfexport.PDFExport",
  "ipypublish.postprocessors.pdfexport.VIEW_PDF",
  "ipypublish.postprocessors.pdfexport.change_dir",
  "ipypublish.postprocessors.reveal_serve",
  "ipypublish.postprocessors.reveal_serve.IPyPostProcessor",
  "ipypublish.postprocessors.reveal_serve.ProxyHandler",
  "ipypublish.postprocessors.reveal_serve.RevealServer",
  "ipypublish.postprocessors.sphinx",
  "ipypublish.postprocessors.sphinx.IPyPostProcessor",
  "ipypublish.postprocessors.sphinx.RunSphinx",
  "ipypublish.postprocessors.sphinx.__version__",
  "ipypublish.postprocessors.sphinx.import_sphinx",
  "ipypublish.postprocessors.sphinx.make_conf",
  "ipypublish.postprocessors.sphinx.make_index",
  "ipypublish.postprocessors.stream_modify",
  "ipypublish.postprocessors.stream_modify.FilterOutputFiles",
  "ipypublish.postprocessors.stream_modify.FixSlideReferences",
  "ipypublish.postprocessors.stream_modify.IPyPostProcessor",
  "ipypublish.postprocessors.stream_modify.RemoveBlankLines",
  "ipypublish.postprocessors.stream_modify.RemoveTrailingSpace",
  "ipypublish.postprocessors.to_stream",
  "ipypublish.postprocessors.to_stream.IPyPostProcessor",
  "ipypublish.postprocessors.to_stream.WriteStream",
  "ipypublish.preprocessors",
  "ipypublish.preprocessors.crop_cells",
  "ipypublish.preprocessors.crop_cells.CropCells",
  "ipypublish.preprocessors.latex_doc_captions",
  "ipypublish.preprocessors.latex_doc_captions.LatexCaptions",
  "ipypublish.preprocessors.latex_doc_captions.logger",
  "ipypublish.preprocessors.latex_doc_defaults",
  "ipypublish.preprocessors.latex_doc_defaults.MetaDefaults",
  "ipypublish.preprocessors.latex_doc_defaults.flatten",
  "ipypublish.preprocessors.latex_doc_html",
  "ipypublish.preprocessors.latex_doc_html.LatexDocHTML",
  "ipypublish.preprocessors.latex_doc_links",
  "ipypublish.preprocessors.latex_doc_links.LatexDocLinks",
  "ipypublish.preprocessors.latex_doc_links.extract_file_links",
  "ipypublish.preprocessors.latex_doc_links.guess_extension_without_jpe",
  "ipypublish.preprocessors.latex_doc_links.is_hyperlink",
  "ipypublish.preprocessors.latex_doc_links.logger",
  "ipypublish.preprocessors.latex_doc_links.resolve_path",
  "ipypublish.preprocessors.latextags_to_html",
  "ipypublish.preprocessors.latextags_to_html.DefaultFormatter",
  "ipypublish.preprocessors.latextags_to_html.LatexTagsToHTML",
  "ipypublish.preprocessors.latextags_to_html.safe_str",
  "ipypublish.preprocessors.slides_from_markdown",
  "ipypublish.preprocessors.slides_from_markdown.FinalCells",
  "ipypublish.preprocessors.slides_from_markdown.MarkdownSlides",
  "ipypublish.preprocessors.slides_from_markdown.header_level",
  "ipypublish.preprocessors.slides_from_markdown.is_header",
  "ipypublish.preprocessors.slides_from_markdown.number_title",
  "ipypublish.preprocessors.split_outputs",
  "ipypublish.preprocessors.split_outputs.SplitOutputs",
  "ipypublish.preprocessors.split_outputs.merge",
  "ipypublish.schema",
  "ipypublish.scripts",
  "ipypublish.scripts.ipynb_latex_setup",
  "ipypublish.scripts.ipynb_latex_setup._ipy_present",
  "ipypublish.scripts.ipynb_latex_setup._jsonextended_present",
  "ipypublish.scripts.ipynb_latex_setup._mpl_present",
  "ipypublish.scripts.ipynb_latex_setup._pandas_present",
  "ipypublish.scripts.ipynb_latex_setup._pil_present",
  "ipypublish.scripts.ipynb_latex_setup._sympy_present",
  "ipypublish.scripts.ipynb_latex_setup.create_test_image",
  "ipypublish.scripts.ipynb_latex_setup.images_gridconcat",
  "ipypublish.scripts.ipynb_latex_setup.images_hconcat",
  "ipypublish.scripts.ipynb_latex_setup.images_read",
  "ipypublish.scripts.ipynb_latex_setup.images_vconcat",
  "ipypublish.scripts.ipynb_latex_setup.ipython",
  "ipypublish.scripts.nb_setup",
  "ipypublish.scripts.nb_setup.MPL_OPTIONS",
  "ipypublish.scripts.nb_setup.create_test_image",
  "ipypublish.scripts.nb_setup.get_pimage",
  "ipypublish.scripts.nb_setup.images_gridconcat",
  "ipypublish.scripts.nb_setup.images_hconcat",
  "ipypublish.scripts.nb_setup.images_read",
  "ipypublish.scripts.nb_setup.images_vconcat",
  "ipypublish.scripts.nb_setup.setup_matplotlib",
  "ipypublish.scripts.nb_setup.setup_pandas",
  "ipypublish.scripts.nb_setup.setup_sympy",
  "ipypublish.sphinx",
  "ipypublish.sphinx.create_setup",
  "ipypublish.sphinx.create_setup.logger",
  "ipypublish.sphinx.create_setup.make_conf",
  "ipypublish.sphinx.create_setup.make_index",
  "ipypublish.sphinx.create_setup.read_file_from_directory",
  "ipypublish.sphinx.gls",
  "ipypublish.sphinx.gls.bibgloss",
  "ipypublish.sphinx.gls.bibgloss.BibGlossEntry",
  "ipypublish.sphinx.gls.bibgloss.docutils_citation_node",
  "ipypublish.sphinx.gls.bibgloss.docutils_citation_ref_node",
  "ipypublish.sphinx.gls.bibgloss.format_entries",
  "ipypublish.sphinx.gls.bibgloss.latex_to_docutils",
  "ipypublish.sphinx.gls.bibgloss.rst_to_docutils",
  "ipypublish.sphinx.gls.cache",
  "ipypublish.sphinx.gls.cache.BibfileCache",
  "ipypublish.sphinx.gls.cache.BibliographyCache",
  "ipypublish.sphinx.gls.cache.Cache",
  "ipypublish.sphinx.gls.directives",
  "ipypublish.sphinx.gls.directives.BibGlossDB",
  "ipypublish.sphinx.gls.directives.BibGlossaryDirective",
  "ipypublish.sphinx.gls.directives.BibGlossaryNode",
  "ipypublish.sphinx.gls.directives.BibfileCache",
  "ipypublish.sphinx.gls.directives.BibliographyCache",
  "ipypublish.sphinx.gls.directives.logger",
  "ipypublish.sphinx.gls.extension",
  "ipypublish.sphinx.gls.extension.BibGlossaryDirective",
  "ipypublish.sphinx.gls.extension.BibGlossaryNode",
  "ipypublish.sphinx.gls.extension.BibGlossaryTransform",
  "ipypublish.sphinx.gls.extension.GLSCapitalRole",
  "ipypublish.sphinx.gls.extension.GLSPluralCapitalRole",
  "ipypublish.sphinx.gls.extension.GLSPluralRole",
  "ipypublish.sphinx.gls.extension.GLSRole",
  "ipypublish.sphinx.gls.extension.HandleMissingCitesTransform",
  "ipypublish.sphinx.gls.extension.OverrideCitationReferences",
  "ipypublish.sphinx.gls.extension.__version__",
  "ipypublish.sphinx.gls.extension.import_sphinx",
  "ipypublish.sphinx.gls.extension.processing",
  "ipypublish.sphinx.gls.extension.setup",
  "ipypublish.sphinx.gls.nodes",
  "ipypublish.sphinx.gls.nodes.BibGlossaryNode",
  "ipypublish.sphinx.gls.processing",
  "ipypublish.sphinx.gls.processing.Cache",
  "ipypublish.sphinx.gls.processing.init_bibgloss_cache",
  "ipypublish.sphinx.gls.processing.latex_to_docutils",
  "ipypublish.sphinx.gls.processing.logger",
  "ipypublish.sphinx.gls.processing.process_citation_references",
  "ipypublish.sphinx.gls.processing.process_citations",
  "ipypublish.sphinx.gls.processing.purge_bibgloss_cache",
  "ipypublish.sphinx.gls.roles",
  "ipypublish.sphinx.gls.roles.BibGlossDB",
  "ipypublish.sphinx.gls.roles.GLSCapitalRole",
  "ipypublish.sphinx.gls.roles.GLSPluralCapitalRole",
  "ipypublish.sphinx.gls.roles.GLSPluralRole",
  "ipypublish.sphinx.gls.roles.GLSRole",
  "ipypublish.sphinx.gls.roles.docutils_citation_ref_node",
  "ipypublish.sphinx.gls.setup",
  "ipypublish.sphinx.gls.transforms",
  "ipypublish.sphinx.gls.transforms.BibGlossaryNode",
  "ipypublish.sphinx.gls.transforms.BibGlossaryTransform",
  "ipypublish.sphinx.gls.transforms.HandleMissingCitesTransform",
  "ipypublish.sphinx.gls.transforms.OverrideCitationReferences",
  "ipypublish.sphinx.gls.transforms.docutils_citation_node",
  "ipypublish.sphinx.gls.transforms.format_entries",
  "ipypublish.sphinx.gls.transforms.logger",
  "ipypublish.sphinx.gls.transforms.node_text_transform",
  "ipypublish.sphinx.gls.transforms.transform_url_command",
  "ipypublish.sphinx.notebook",
  "ipypublish.sphinx.notebook.css",
  "ipypublish.sphinx.notebook.directives",
  "ipypublish.sphinx.notebook.directives.AdmonitionNode",
  "ipypublish.sphinx.notebook.directives.CodeAreaNode",
  "ipypublish.sphinx.notebook.directives.FancyOutputNode",
  "ipypublish.sphinx.notebook.directives.NbAdmonition",
  "ipypublish.sphinx.notebook.directives.NbInfo",
  "ipypublish.sphinx.notebook.directives.NbInput",
  "ipypublish.sphinx.notebook.directives.NbOutput",
  "ipypublish.sphinx.notebook.directives.NbWarning",
  "ipypublish.sphinx.notebook.directives._create_nbcell_nodes",
  "ipypublish.sphinx.notebook.directives.container_wrapper",
  "ipypublish.sphinx.notebook.directives.import_sphinx",
  "ipypublish.sphinx.notebook.extension",
  "ipypublish.sphinx.notebook.extension.AdmonitionNode",
  "ipypublish.sphinx.notebook.extension.CodeAreaNode",
  "ipypublish.sphinx.notebook.extension.CreateDomainObjectLabels",
  "ipypublish.sphinx.notebook.extension.CreateSectionLabels",
  "ipypublish.sphinx.notebook.extension.FancyOutputNode",
  "ipypublish.sphinx.notebook.extension.NBParser",
  "ipypublish.sphinx.notebook.extension.NbInfo",
  "ipypublish.sphinx.notebook.extension.NbInput",
  "ipypublish.sphinx.notebook.extension.NbOutput",
  "ipypublish.sphinx.notebook.extension.NbWarning",
  "ipypublish.sphinx.notebook.extension.RewriteLocalLinks",
  "ipypublish.sphinx.notebook.extension.__version__",
  "ipypublish.sphinx.notebook.extension.associate_extensions",
  "ipypublish.sphinx.notebook.extension.associate_single_extension",
  "ipypublish.sphinx.notebook.extension.depart_codearea_html",
  "ipypublish.sphinx.notebook.extension.html_add_css",
  "ipypublish.sphinx.notebook.extension.import_sphinx",
  "ipypublish.sphinx.notebook.extension.read_css",
  "ipypublish.sphinx.notebook.extension.set_css_prompts",
  "ipypublish.sphinx.notebook.extension.setup",
  "ipypublish.sphinx.notebook.extension.visit_admonition_html",
  "ipypublish.sphinx.notebook.nodes",
  "ipypublish.sphinx.notebook.nodes.AdmonitionNode",
  "ipypublish.sphinx.notebook.nodes.CodeAreaNode",
  "ipypublish.sphinx.notebook.nodes.FancyOutputNode",
  "ipypublish.sphinx.notebook.parser",
  "ipypublish.sphinx.notebook.parser.IpyPubMain",
  "ipypublish.sphinx.notebook.parser.NBParser",
  "ipypublish.sphinx.notebook.parser.handle_error",
  "ipypublish.sphinx.notebook.parser.import_sphinx",
  "ipypublish.sphinx.notebook.setup",
  "ipypublish.sphinx.notebook.transforms",
  "ipypublish.sphinx.notebook.transforms.CreateDomainObjectLabels",
  "ipypublish.sphinx.notebook.transforms.CreateNotebookSectionAnchors",
  "ipypublish.sphinx.notebook.transforms.CreateSectionLabels",
  "ipypublish.sphinx.notebook.transforms.RewriteLocalLinks",
  "ipypublish.sphinx.notebook.transforms._local_file_from_reference",
  "ipypublish.sphinx.notebook.transforms.import_sphinx",
  "ipypublish.sphinx.tests",
  "ipypublish.sphinx.tests.conftest",
  "ipypublish.sphinx.tests.conftest.get_sphinx_app_output",
  "ipypublish.sphinx.tests.conftest.get_test_source_dir",
  "ipypublish.sphinx.tests.conftest.remove_sphinx_builds",
  "ipypublish.sphinx.tests.get_test_source_dir",
  "ipypublish.sphinx.tests.test_bibgloss",
  "ipypublish.sphinx.tests.test_bibgloss.get_test_source_dir",
  "ipypublish.sphinx.tests.test_bibgloss.test_basic",
  "ipypublish.sphinx.tests.test_bibgloss.test_duplicatekey",
  "ipypublish.sphinx.tests.test_bibgloss.test_load_tex",
  "ipypublish.sphinx.tests.test_bibgloss.test_missingref",
  "ipypublish.sphinx.tests.test_bibgloss.test_sortkeys",
  "ipypublish.sphinx.tests.test_bibgloss.test_unsorted",
  "ipypublish.sphinx.tests.test_notebook",
  "ipypublish.sphinx.tests.test_notebook.get_test_source_dir",
  "ipypublish.sphinx.tests.test_notebook.test_basic",
  "ipypublish.sphinx.utils",
  "ipypublish.sphinx.utils.import_sphinx",
  "ipypublish.templates",
  "ipypublish.templates.create_template",
  "ipypublish.templates.create_template._SEGMENT_SCHEMA_FILE",
  "ipypublish.templates.create_template._output_to_file",
  "ipypublish.templates.create_template.create_template",
  "ipypublish.templates.create_template.get_module_path",
  "ipypublish.templates.create_template.handle_error",
  "ipypublish.templates.create_template.logger",
  "ipypublish.templates.create_template.multireplace",
  "ipypublish.templates.create_template.read_file_from_directory",
  "ipypublish.templates.create_template.schema",
  "ipypublish.templates.outline_schemas",
  "ipypublish.templates.segments",
  "ipypublish.tests",
  "ipypublish.tests.TEST_FILES_DIR",
  "ipypublish.tests.TEST_PIC_PATH",
  "ipypublish.tests.conftest",
  "ipypublish.tests.conftest.IpyPubMain",
  "ipypublish.tests.conftest.IpyTestApp",
  "ipypublish.tests.conftest.TEST_FILES_DIR",
  "ipypublish.tests.conftest.compare_html_files",
  "ipypublish.tests.conftest.compare_rst_files",
  "ipypublish.tests.conftest.compare_tex_files",
  "ipypublish.tests.conftest.dont_open_webbrowser",
  "ipypublish.tests.conftest.external_export_plugin",
  "ipypublish.tests.conftest.ipynb_app",
  "ipypublish.tests.conftest.ipynb_params",
  "ipypublish.tests.conftest.logger",
  "ipypublish.tests.conftest.pathlib",
  "ipypublish.tests.conftest.temp_folder",
  "ipypublish.tests.convert_notebooks",
  "ipypublish.tests.convert_notebooks.IpyPubMain",
  "ipypublish.tests.convert_notebooks.TEST_FILES_DIR",
  "ipypublish.tests.convert_notebooks._inpath",
  "ipypublish.tests.convert_notebooks._outpath",
  "ipypublish.tests.convert_notebooks.convert_all",
  "ipypublish.tests.convert_notebooks.iter_all_export_paths",
  "ipypublish.tests.test_convert_all_plugins",
  "ipypublish.tests.test_convert_all_plugins.iter_all_export_paths",
  "ipypublish.tests.test_convert_all_plugins.test_basic_all_plugins",
  "ipypublish.tests.test_convert_basic",
  "ipypublish.tests.test_convert_basic.test_basic_html",
  "ipypublish.tests.test_convert_basic.test_basic_latex",
  "ipypublish.tests.test_convert_basic.test_basic_pdf",
  "ipypublish.tests.test_convert_basic.test_basic_slides",
  "ipypublish.tests.test_convert_bib_and_gloss",
  "ipypublish.tests.test_convert_bib_and_gloss.test_withbib_latex",
  "ipypublish.tests.test_convert_bib_and_gloss.test_withglossary_bib_latex",
  "ipypublish.tests.test_convert_bib_and_gloss.test_withglossary_tex_latex",
  "ipypublish.tests.test_convert_complex_outputs",
  "ipypublish.tests.test_convert_complex_outputs.test_complex_html",
  "ipypublish.tests.test_convert_complex_outputs.test_complex_latex",
  "ipypublish.tests.test_convert_complex_outputs.test_complex_slides",
  "ipypublish.tests.test_convert_complex_outputs.test_complex_sphinx_rst",
  "ipypublish.tests.test_convert_markdown_cells",
  "ipypublish.tests.test_convert_markdown_cells.test_latex_and_pdf",
  "ipypublish.tests.test_convert_markdown_cells.test_sphinx_rst",
  "ipypublish.tests.test_convert_with_cell_attachment",
  "ipypublish.tests.test_convert_with_cell_attachment.test_basic_pdf",
  "ipypublish.tests.test_files",
  "ipypublish.tests.test_frontend",
  "ipypublish.tests.test_frontend.nbpresent",
  "ipypublish.tests.test_frontend.nbpublish",
  "ipypublish.tests.test_frontend.pathlib",
  "ipypublish.tests.test_frontend.test_nbpresent_bad_exporter",
  "ipypublish.tests.test_frontend.test_nbpresent_dry_run",
  "ipypublish.tests.test_frontend.test_nbpresent_list_exports",
  "ipypublish.tests.test_frontend.test_nbpublish_bad_exporter",
  "ipypublish.tests.test_frontend.test_nbpublish_dry_run",
  "ipypublish.tests.test_frontend.test_nbpublish_list_exports",
  "ipypublish.tests.test_frontend.test_nbpublish_to_pdf",
  "ipypublish.tests.test_frontend.test_nbpublish_write",
  "ipypublish.tests.test_nbexport",
  "ipypublish.tests.test_nbexport.IpyPubMain",
  "ipypublish.tests.test_nbexport.create_exporter_cls",
  "ipypublish.tests.test_nbexport.dict_to_config",
  "ipypublish.tests.test_nbexport.nbmerge",
  "ipypublish.tests.test_nbexport.str_to_jinja",
  "ipypublish.tests.test_nbexport.test_nbexport_html_empty",
  "ipypublish.tests.test_nbexport.test_nbexport_html_mkdown1",
  "ipypublish.tests.test_nbexport.test_nbexport_html_mkdown2",
  "ipypublish.tests.test_nbexport.test_nbexport_latex_empty",
  "ipypublish.tests.test_nbexport.test_nbexport_latex_mkdown1",
  "ipypublish.tests.test_nbexport.test_nbexport_latex_mkdown2",
  "ipypublish.tests.test_nbmerge",
  "ipypublish.tests.test_nbmerge.nbmerge",
  "ipypublish.tests.test_nbmerge.test_merge_latex",
  "ipypublish.tests.test_nbmerge.test_nbmerge_one_notebook",
  "ipypublish.tests.test_nbmerge.test_nbmerge_two_notebooks",
  "ipypublish.tests.test_port_api",
  "ipypublish.tests.test_port_api.TEST_FILES_DIR",
  "ipypublish.tests.test_port_api.convert_format_str",
  "ipypublish.tests.test_port_api.convert_to_json",
  "ipypublish.tests.test_port_api.py_to_json",
  "ipypublish.tests.test_port_api.test_convert_format_str",
  "ipypublish.tests.test_port_api.test_plugin_to_json_html",
  "ipypublish.tests.test_port_api.test_plugin_to_json_latex",
  "ipypublish.tests.test_port_api.test_py_to_json",
  "ipypublish.tests.test_postprocessors",
  "ipypublish.tests.test_postprocessors.PDFExport",
  "ipypublish.tests.test_postprocessors.RevealServer",
  "ipypublish.tests.test_postprocessors.test_pdf_export",
  "ipypublish.tests.test_postprocessors.test_reveal_server",
  "ipypublish.utils",
  "ipypublish.utils.find_entry_point",
  "ipypublish.utils.get_module_path",
  "ipypublish.utils.get_valid_filename",
  "ipypublish.utils.handle_error",
  "ipypublish.utils.pathlib",
  "ipypublish.utils.read_file_from_directory",
  "ipypublish.utils.read_file_from_module"
 ]
}