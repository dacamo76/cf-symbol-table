{
 "errors": {
  "descarteslabs.scenes._display": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/numpy/ma/core.py')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/utils.py\", line 16, in wrapper",
    "    return list(func(*args, **kwargs))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 160, in _convert_names",
    "    for name in names:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 100, in _break_check",
    "    reachable = _check_if(context, flow_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 409, in _infer_expr_stmt",
    "    value_set = context.infer_node(rhs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 333, in infer_atom",
    "    return context.infer_node(c[1])",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 413, in _infer_expr_stmt",
    "    value_set = check_tuple_assignments(n, value_set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 839, in check_tuple_assignments",
    "    value_set = lazy_value.infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 79, in py__getattribute__",
    "    names = self.goto(name_or_str, name_context, analysis_errors)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 68, in goto",
    "    names = finder.filter_name(filters, name_or_str)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/finder.py\", line 35, in filter_name",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 58, in _get_value_filters",
    "    yield from self.get_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 71, in get_filters",
    "    yield from self.iter_star_filters()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 99, in iter_star_filters",
    "    for star_module in self.star_imports():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 119, in star_imports",
    "    level=i.level",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 456, in import_module",
    "    is_package=is_pkg,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 472, in _load_python_module",
    "    cache_path=settings.cache_directory,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "descarteslabs.AsyncTasks",
  "descarteslabs.Auth",
  "descarteslabs.Catalog",
  "descarteslabs.CloudFunction",
  "descarteslabs.FutureTask",
  "descarteslabs.Metadata",
  "descarteslabs.Places",
  "descarteslabs.Raster",
  "descarteslabs.Storage",
  "descarteslabs.Tasks",
  "descarteslabs.__all__",
  "descarteslabs.cached",
  "descarteslabs.client",
  "descarteslabs.client.addons",
  "descarteslabs.client.addons.ThirdParty",
  "descarteslabs.client.addons.blosc",
  "descarteslabs.client.addons.concurrent",
  "descarteslabs.client.addons.import_matplotlib_pyplot",
  "descarteslabs.client.addons.numpy",
  "descarteslabs.client.addons.shapely",
  "descarteslabs.client.auth",
  "descarteslabs.client.auth.Auth",
  "descarteslabs.client.auth.__all__",
  "descarteslabs.client.auth.auth",
  "descarteslabs.client.auth.auth.Auth",
  "descarteslabs.client.auth.auth.AuthError",
  "descarteslabs.client.auth.auth.DEFAULT_TOKEN_INFO_PATH",
  "descarteslabs.client.auth.auth.OauthError",
  "descarteslabs.client.auth.auth.auth",
  "descarteslabs.client.auth.auth.base64url_decode",
  "descarteslabs.client.auth.auth.makedirs_if_not_exists",
  "descarteslabs.client.auth.cli",
  "descarteslabs.client.auth.cli.Auth",
  "descarteslabs.client.auth.cli.DEFAULT_TOKEN_INFO_PATH",
  "descarteslabs.client.auth.cli.__version__",
  "descarteslabs.client.auth.cli.auth_handler",
  "descarteslabs.client.auth.cli.base64url_decode",
  "descarteslabs.client.auth.cli.makedirs_if_not_exists",
  "descarteslabs.client.auth.tests",
  "descarteslabs.client.auth.tests.test_auth",
  "descarteslabs.client.auth.tests.test_auth.Auth",
  "descarteslabs.client.auth.tests.test_auth.AuthError",
  "descarteslabs.client.auth.tests.test_auth.TestAuth",
  "descarteslabs.client.auth.tests.test_auth.to_bytes",
  "descarteslabs.client.auth.tests.test_auth.token_response_callback",
  "descarteslabs.client.exceptions",
  "descarteslabs.client.exceptions.AuthError",
  "descarteslabs.client.exceptions.BadRequestError",
  "descarteslabs.client.exceptions.ClientError",
  "descarteslabs.client.exceptions.ConflictError",
  "descarteslabs.client.exceptions.GatewayTimeoutError",
  "descarteslabs.client.exceptions.NotFoundError",
  "descarteslabs.client.exceptions.OauthError",
  "descarteslabs.client.exceptions.RateLimitError",
  "descarteslabs.client.exceptions.ServerError",
  "descarteslabs.client.scripts",
  "descarteslabs.client.scripts.__main__",
  "descarteslabs.client.scripts.__main__.handle",
  "descarteslabs.client.scripts.__main__.main",
  "descarteslabs.client.scripts.__main__.parser",
  "descarteslabs.client.scripts.cli",
  "descarteslabs.client.scripts.cli.auth_handler",
  "descarteslabs.client.scripts.cli.auth_parser",
  "descarteslabs.client.scripts.cli.handle",
  "descarteslabs.client.scripts.cli.metadata_handler",
  "descarteslabs.client.scripts.cli.metadata_parser",
  "descarteslabs.client.scripts.cli.parser",
  "descarteslabs.client.scripts.cli.places_handler",
  "descarteslabs.client.scripts.cli.places_parser",
  "descarteslabs.client.scripts.cli.raster_handler",
  "descarteslabs.client.scripts.cli.raster_parser",
  "descarteslabs.client.scripts.cli.scales",
  "descarteslabs.client.scripts.cli.subparsers",
  "descarteslabs.client.scripts.tests",
  "descarteslabs.client.scripts.tests.test_scripts",
  "descarteslabs.client.scripts.tests.test_scripts.TestScripts",
  "descarteslabs.client.scripts.tests.test_scripts.handle",
  "descarteslabs.client.scripts.tests.test_scripts.parser",
  "descarteslabs.client.services",
  "descarteslabs.client.services.AsyncTasks",
  "descarteslabs.client.services.Catalog",
  "descarteslabs.client.services.CloudFunction",
  "descarteslabs.client.services.FutureTask",
  "descarteslabs.client.services.Metadata",
  "descarteslabs.client.services.Places",
  "descarteslabs.client.services.Raster",
  "descarteslabs.client.services.Storage",
  "descarteslabs.client.services.Tasks",
  "descarteslabs.client.services.__all__",
  "descarteslabs.client.services.cached",
  "descarteslabs.client.services.catalog",
  "descarteslabs.client.services.catalog.Auth",
  "descarteslabs.client.services.catalog.Catalog",
  "descarteslabs.client.services.catalog.Metadata",
  "descarteslabs.client.services.catalog.ServerError",
  "descarteslabs.client.services.catalog.Service",
  "descarteslabs.client.services.catalog.ThirdPartyService",
  "descarteslabs.client.services.catalog.__all__",
  "descarteslabs.client.services.catalog.catalog",
  "descarteslabs.client.services.catalog.catalog.Auth",
  "descarteslabs.client.services.catalog.catalog.Catalog",
  "descarteslabs.client.services.catalog.catalog.Metadata",
  "descarteslabs.client.services.catalog.catalog.ServerError",
  "descarteslabs.client.services.catalog.catalog.Service",
  "descarteslabs.client.services.catalog.catalog.ThirdPartyService",
  "descarteslabs.client.services.catalog.catalog.catalog",
  "descarteslabs.client.services.catalog.catalog.numpy",
  "descarteslabs.client.services.catalog.numpy",
  "descarteslabs.client.services.catalog.tests",
  "descarteslabs.client.services.catalog.tests.test_catalog",
  "descarteslabs.client.services.catalog.tests.test_catalog.Auth",
  "descarteslabs.client.services.catalog.tests.test_catalog.Catalog",
  "descarteslabs.client.services.catalog.tests.test_catalog.TestCatalog",
  "descarteslabs.client.services.metadata",
  "descarteslabs.client.services.metadata.GLOBAL_PROPERTIES",
  "descarteslabs.client.services.metadata.Metadata",
  "descarteslabs.client.services.metadata.__all__",
  "descarteslabs.client.services.metadata.cli",
  "descarteslabs.client.services.metadata.cli.metadata_handler",
  "descarteslabs.client.services.metadata.metadata",
  "descarteslabs.client.services.metadata.metadata.ADAPTER",
  "descarteslabs.client.services.metadata.metadata.AndExpression",
  "descarteslabs.client.services.metadata.metadata.Auth",
  "descarteslabs.client.services.metadata.metadata.DotDict",
  "descarteslabs.client.services.metadata.metadata.DotList",
  "descarteslabs.client.services.metadata.metadata.GLOBAL_PROPERTIES",
  "descarteslabs.client.services.metadata.metadata.Metadata",
  "descarteslabs.client.services.metadata.metadata.OFFSET_DEPRECATION_MESSAGE",
  "descarteslabs.client.services.metadata.metadata.Places",
  "descarteslabs.client.services.metadata.metadata.RETRY_CONFIG",
  "descarteslabs.client.services.metadata.metadata.Raster",
  "descarteslabs.client.services.metadata.metadata.SAT_ID_DEPRECATION_MESSAGE",
  "descarteslabs.client.services.metadata.metadata.SOURCES_DEPRECATION_MESSAGE",
  "descarteslabs.client.services.metadata.metadata.Service",
  "descarteslabs.client.services.metadata.metadata.TIMEOUT",
  "descarteslabs.client.services.metadata.metadata.session",
  "descarteslabs.client.services.metadata.metadata_filtering",
  "descarteslabs.client.services.metadata.metadata_filtering.AndExpression",
  "descarteslabs.client.services.metadata.metadata_filtering.EqExpression",
  "descarteslabs.client.services.metadata.metadata_filtering.Expression",
  "descarteslabs.client.services.metadata.metadata_filtering.GLOBAL_PROPERTIES",
  "descarteslabs.client.services.metadata.metadata_filtering.NeExpression",
  "descarteslabs.client.services.metadata.metadata_filtering.OrExpression",
  "descarteslabs.client.services.metadata.metadata_filtering.Properties",
  "descarteslabs.client.services.metadata.metadata_filtering.Property",
  "descarteslabs.client.services.metadata.metadata_filtering.RangeExpression",
  "descarteslabs.client.services.metadata.metadata_filtering.range_expr",
  "descarteslabs.client.services.metadata.properties",
  "descarteslabs.client.services.metadata.tests",
  "descarteslabs.client.services.metadata.tests.test_metadata",
  "descarteslabs.client.services.metadata.tests.test_metadata.Metadata",
  "descarteslabs.client.services.metadata.tests.test_metadata.NotFoundError",
  "descarteslabs.client.services.metadata.tests.test_metadata.TestMetadata",
  "descarteslabs.client.services.places",
  "descarteslabs.client.services.places.Places",
  "descarteslabs.client.services.places.__all__",
  "descarteslabs.client.services.places.cli",
  "descarteslabs.client.services.places.cli.places_handler",
  "descarteslabs.client.services.places.places",
  "descarteslabs.client.services.places.places.ADAPTER",
  "descarteslabs.client.services.places.places.Auth",
  "descarteslabs.client.services.places.places.DotDict",
  "descarteslabs.client.services.places.places.DotList",
  "descarteslabs.client.services.places.places.Places",
  "descarteslabs.client.services.places.places.RETRY_CONFIG",
  "descarteslabs.client.services.places.places.Service",
  "descarteslabs.client.services.places.places.TIMEOUT",
  "descarteslabs.client.services.places.places.session",
  "descarteslabs.client.services.places.tests",
  "descarteslabs.client.services.places.tests.test_places",
  "descarteslabs.client.services.places.tests.test_places.Places",
  "descarteslabs.client.services.places.tests.test_places.TestPlaces",
  "descarteslabs.client.services.raster",
  "descarteslabs.client.services.raster.Raster",
  "descarteslabs.client.services.raster.__all__",
  "descarteslabs.client.services.raster.cli",
  "descarteslabs.client.services.raster.cli.raster_handler",
  "descarteslabs.client.services.raster.cli.scales",
  "descarteslabs.client.services.raster.raster",
  "descarteslabs.client.services.raster.raster.Auth",
  "descarteslabs.client.services.raster.raster.DEFAULT_MAX_WORKERS",
  "descarteslabs.client.services.raster.raster.DotDict",
  "descarteslabs.client.services.raster.raster.Places",
  "descarteslabs.client.services.raster.raster.Raster",
  "descarteslabs.client.services.raster.raster.ServerError",
  "descarteslabs.client.services.raster.raster.Service",
  "descarteslabs.client.services.raster.raster.ThirdParty",
  "descarteslabs.client.services.raster.raster.as_json_string",
  "descarteslabs.client.services.raster.raster.blosc",
  "descarteslabs.client.services.raster.raster.concurrent",
  "descarteslabs.client.services.raster.raster.numpy",
  "descarteslabs.client.services.raster.raster.read_blosc_array",
  "descarteslabs.client.services.raster.raster.read_blosc_buffer",
  "descarteslabs.client.services.raster.raster.read_blosc_string",
  "descarteslabs.client.services.raster.tests",
  "descarteslabs.client.services.raster.tests.test_raster",
  "descarteslabs.client.services.raster.tests.test_raster.Places",
  "descarteslabs.client.services.raster.tests.test_raster.Raster",
  "descarteslabs.client.services.raster.tests.test_raster.TestRaster",
  "descarteslabs.client.services.raster.tests.test_raster.addons",
  "descarteslabs.client.services.raster.tests.test_raster.numpy",
  "descarteslabs.client.services.raster.tests.test_utilities",
  "descarteslabs.client.services.raster.tests.test_utilities.TestUtilities",
  "descarteslabs.client.services.raster.tests.test_utilities.as_json_string",
  "descarteslabs.client.services.service",
  "descarteslabs.client.services.service.JsonApiService",
  "descarteslabs.client.services.service.NotFoundError",
  "descarteslabs.client.services.service.Service",
  "descarteslabs.client.services.service.ThirdPartyService",
  "descarteslabs.client.services.service.__all__",
  "descarteslabs.client.services.service.service",
  "descarteslabs.client.services.service.service.Auth",
  "descarteslabs.client.services.service.service.BadRequestError",
  "descarteslabs.client.services.service.service.ConflictError",
  "descarteslabs.client.services.service.service.GatewayTimeoutError",
  "descarteslabs.client.services.service.service.JsonApiService",
  "descarteslabs.client.services.service.service.NotFoundError",
  "descarteslabs.client.services.service.service.RateLimitError",
  "descarteslabs.client.services.service.service.ServerError",
  "descarteslabs.client.services.service.service.Service",
  "descarteslabs.client.services.service.service.Service.ADAPTER",
  "descarteslabs.client.services.service.service.Service.RETRY_CONFIG",
  "descarteslabs.client.services.service.service.Service.TIMEOUT",
  "descarteslabs.client.services.service.service.Service.session",
  "descarteslabs.client.services.service.service.ThirdPartyService",
  "descarteslabs.client.services.service.service.WrappedSession",
  "descarteslabs.client.services.service.service.__version__",
  "descarteslabs.client.services.service.tests",
  "descarteslabs.client.services.service.tests.test_service",
  "descarteslabs.client.services.service.tests.test_service.JsonApiService",
  "descarteslabs.client.services.service.tests.test_service.Service",
  "descarteslabs.client.services.service.tests.test_service.TestJsonApiService",
  "descarteslabs.client.services.service.tests.test_service.TestService",
  "descarteslabs.client.services.storage",
  "descarteslabs.client.services.storage.Storage",
  "descarteslabs.client.services.storage.__all__",
  "descarteslabs.client.services.storage.cache",
  "descarteslabs.client.services.storage.cache.cached",
  "descarteslabs.client.services.storage.cached",
  "descarteslabs.client.services.storage.storage",
  "descarteslabs.client.services.storage.storage.Auth",
  "descarteslabs.client.services.storage.storage.Service",
  "descarteslabs.client.services.storage.storage.Storage",
  "descarteslabs.client.services.storage.storage.ThirdPartyService",
  "descarteslabs.client.services.storage.storage.storage",
  "descarteslabs.client.services.storage.storage.storage_client",
  "descarteslabs.client.services.storage.tests",
  "descarteslabs.client.services.storage.tests.test_storage",
  "descarteslabs.client.services.storage.tests.test_storage.TestStorage",
  "descarteslabs.client.services.tasks",
  "descarteslabs.client.services.tasks.AsyncTasks",
  "descarteslabs.client.services.tasks.CloudFunction",
  "descarteslabs.client.services.tasks.FutureTask",
  "descarteslabs.client.services.tasks.Tasks",
  "descarteslabs.client.services.tasks.__all__",
  "descarteslabs.client.services.tasks.as_completed",
  "descarteslabs.client.services.tasks.tasks",
  "descarteslabs.client.services.tasks.tasks.AsyncTasks",
  "descarteslabs.client.services.tasks.tasks.Auth",
  "descarteslabs.client.services.tasks.tasks.CloudFunction",
  "descarteslabs.client.services.tasks.tasks.DotDict",
  "descarteslabs.client.services.tasks.tasks.DotList",
  "descarteslabs.client.services.tasks.tasks.FutureTask",
  "descarteslabs.client.services.tasks.tasks.NotFoundError",
  "descarteslabs.client.services.tasks.tasks.OFFSET_DEPRECATION_MESSAGE",
  "descarteslabs.client.services.tasks.tasks.ResultType",
  "descarteslabs.client.services.tasks.tasks.Service",
  "descarteslabs.client.services.tasks.tasks.Storage",
  "descarteslabs.client.services.tasks.tasks.Tasks",
  "descarteslabs.client.services.tasks.tasks.TransientResultException",
  "descarteslabs.client.services.tasks.tasks._serialize_function",
  "descarteslabs.client.services.tasks.tasks.as_completed",
  "descarteslabs.client.services.tasks.tests",
  "descarteslabs.client.services.tasks.tests.test_tasks",
  "descarteslabs.client.services.tasks.tests.test_tasks.Auth",
  "descarteslabs.client.services.tasks.tests.test_tasks.ClientTestCase",
  "descarteslabs.client.services.tasks.tests.test_tasks.CloudFunction",
  "descarteslabs.client.services.tasks.tests.test_tasks.CloudFunctionTest",
  "descarteslabs.client.services.tasks.tests.test_tasks.FutureTask",
  "descarteslabs.client.services.tasks.tests.test_tasks.FutureTaskTest",
  "descarteslabs.client.services.tasks.tests.test_tasks.Tasks",
  "descarteslabs.client.services.tasks.tests.test_tasks.TasksTest",
  "descarteslabs.client.services.tasks.tests.test_tasks.as_completed",
  "descarteslabs.client.services.tasks.tests.test_tasks.public_token",
  "descarteslabs.client.version",
  "descarteslabs.client.version.__version__",
  "descarteslabs.common",
  "descarteslabs.common.dotdict",
  "descarteslabs.common.dotdict.DotDict",
  "descarteslabs.common.dotdict.DotList",
  "descarteslabs.common.dotdict.__all__",
  "descarteslabs.common.dotdict.dotdict",
  "descarteslabs.common.dotdict.dotdict.DotDict",
  "descarteslabs.common.dotdict.dotdict.DotList",
  "descarteslabs.common.dotdict.dotdict.IndentedRepr",
  "descarteslabs.common.dotdict.dotdict._possibly_sorted",
  "descarteslabs.common.dotdict.dotdict.idr",
  "descarteslabs.common.dotdict.dotdict.untruncated_idr",
  "descarteslabs.descartes_auth",
  "descarteslabs.exceptions",
  "descarteslabs.ext",
  "descarteslabs.ext.__path__",
  "descarteslabs.metadata",
  "descarteslabs.places",
  "descarteslabs.raster",
  "descarteslabs.scenes",
  "descarteslabs.scenes.AOI",
  "descarteslabs.scenes.Collection",
  "descarteslabs.scenes.DLTile",
  "descarteslabs.scenes.GeoContext",
  "descarteslabs.scenes.Scene",
  "descarteslabs.scenes.__all__",
  "descarteslabs.scenes._display",
  "descarteslabs.scenes._search",
  "descarteslabs.scenes._search.Metadata",
  "descarteslabs.scenes._search.Raster",
  "descarteslabs.scenes._search.search",
  "descarteslabs.scenes.collection",
  "descarteslabs.scenes.collection.Collection",
  "descarteslabs.scenes.collection.Collection.each",
  "descarteslabs.scenes.collection.Eacher",
  "descarteslabs.scenes.display",
  "descarteslabs.scenes.geocontext",
  "descarteslabs.scenes.geocontext.AOI",
  "descarteslabs.scenes.geocontext.DLTile",
  "descarteslabs.scenes.geocontext.GeoContext",
  "descarteslabs.scenes.geocontext.Raster",
  "descarteslabs.scenes.geocontext.ThirdParty",
  "descarteslabs.scenes.geocontext.have_shapely",
  "descarteslabs.scenes.geocontext.shapely",
  "descarteslabs.scenes.scene",
  "descarteslabs.scenes.scene.BadRequestError",
  "descarteslabs.scenes.scene.DotDict",
  "descarteslabs.scenes.scene.Metadata",
  "descarteslabs.scenes.scene.NotFoundError",
  "descarteslabs.scenes.scene.Raster",
  "descarteslabs.scenes.scene.Scene",
  "descarteslabs.scenes.scene.ThirdParty",
  "descarteslabs.scenes.scene._strptime_helper",
  "descarteslabs.scenes.scene.numpy",
  "descarteslabs.scenes.scene.shapely",
  "descarteslabs.scenes.scenecollection",
  "descarteslabs.scenes.scenecollection.BadRequestError",
  "descarteslabs.scenes.scenecollection.NotFoundError",
  "descarteslabs.scenes.scenecollection.Raster",
  "descarteslabs.scenes.scenecollection.SceneCollection",
  "descarteslabs.scenes.scenecollection.ThirdParty",
  "descarteslabs.scenes.scenecollection.concurrent",
  "descarteslabs.scenes.scenecollection.each",
  "descarteslabs.scenes.scenecollection.have_shapely",
  "descarteslabs.scenes.scenecollection.numpy",
  "descarteslabs.scenes.scenecollection.shapely",
  "descarteslabs.scenes.search",
  "descarteslabs.services"
 ]
}