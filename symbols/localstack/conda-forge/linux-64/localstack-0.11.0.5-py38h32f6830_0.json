{
 "errors": {
  "localstack.utils.kinesis": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 487, in get_global_filters",
    "    origin_scope=origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 326, in get_filters",
    "    yield from filters",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 69, in get_filters",
    "    yield DictFilter(self.sub_modules_dict())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 47, in sub_modules_dict",
    "    self.py__path__()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "localstack.utils.kinesis.kinesis_connector": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/utils.py\", line 16, in wrapper",
    "    return list(func(*args, **kwargs))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 160, in _convert_names",
    "    for name in names:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 100, in _break_check",
    "    reachable = _check_if(context, flow_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 409, in _infer_expr_stmt",
    "    value_set = context.infer_node(rhs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 278, in infer_trailer",
    "    return atom_values.execute(args)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in execute",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in <genexpr>",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 134, in wrapper",
    "    return call()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 107, in call",
    "    return callback(value, arguments=arguments)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/pytest.py\", line 26, in wrapper",
    "    return callback(value, arguments)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 119, in execute",
    "    value_set = value.py__call__(arguments=arguments)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/function.py\", line 116, in py__call__",
    "    return function_execution.infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/function.py\", line 350, in infer",
    "    return self.get_return_values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/recursion.py\", line 87, in wrapper",
    "    result = func(self, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/function.py\", line 242, in get_return_values",
    "    value_set |= self.infer_node(children[1])",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 409, in _infer_expr_stmt",
    "    value_set = context.infer_node(rhs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 80, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 80, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 648, in infer",
    "    inferred = super().infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 66, in infer_import",
    "    values = importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 114, in wrapper",
    "    for n in ['posixpath', 'ntpath', 'macpath', 'os2emxpath']",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 114, in <genexpr>",
    "    for n in ['posixpath', 'ntpath', 'macpath', 'os2emxpath']",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "localstack.utils.server": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 487, in get_global_filters",
    "    origin_scope=origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 326, in get_filters",
    "    yield from filters",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 69, in get_filters",
    "    yield DictFilter(self.sub_modules_dict())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 47, in sub_modules_dict",
    "    self.py__path__()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "localstack.utils.server.multiserver": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  }
 },
 "symbols": [
  "localstack.config",
  "localstack.config.BUNDLE_API_PROCESSES",
  "localstack.config.CLI_COMMANDS",
  "localstack.config.CONFIG_ENV_VARS",
  "localstack.config.CONFIG_FILE_PATH",
  "localstack.config.DATA_DIR",
  "localstack.config.DEFAULT_ENCODING",
  "localstack.config.DEFAULT_LAMBDA_CONTAINER_REGISTRY",
  "localstack.config.DEFAULT_PORT_EDGE",
  "localstack.config.DEFAULT_PORT_WEB_UI",
  "localstack.config.DEFAULT_REGION",
  "localstack.config.DEFAULT_SERVICE_PORTS",
  "localstack.config.DISABLE_EVENTS",
  "localstack.config.DOCKER_BRIDGE_IP",
  "localstack.config.DOCKER_CMD",
  "localstack.config.DOCKER_FLAGS",
  "localstack.config.DOCKER_HOST_FROM_CONTAINER",
  "localstack.config.DOCKER_SOCK",
  "localstack.config.DYNAMODB_ERROR_PROBABILITY",
  "localstack.config.EDGE_PORT",
  "localstack.config.EDGE_PORT_HTTP",
  "localstack.config.EXTRA_CORS_ALLOWED_HEADERS",
  "localstack.config.EXTRA_CORS_EXPOSE_HEADERS",
  "localstack.config.FALSE_STRINGS",
  "localstack.config.HOSTNAME",
  "localstack.config.HOSTNAME_EXTERNAL",
  "localstack.config.HOST_TMP_FOLDER",
  "localstack.config.KINESIS_ERROR_PROBABILITY",
  "localstack.config.KINESIS_LATENCY",
  "localstack.config.KINESIS_SHARD_LIMIT",
  "localstack.config.LAMBDA_CONTAINER_REGISTRY",
  "localstack.config.LAMBDA_DOCKER_NETWORK",
  "localstack.config.LAMBDA_EXECUTOR",
  "localstack.config.LAMBDA_FALLBACK_URL",
  "localstack.config.LAMBDA_JAVA_OPTS",
  "localstack.config.LAMBDA_REMOTE_DOCKER",
  "localstack.config.LAMBDA_REMOVE_CONTAINERS",
  "localstack.config.LOCALHOST",
  "localstack.config.LOCALSTACK_HOSTNAME",
  "localstack.config.PORT_WEB_UI",
  "localstack.config.PORT_WEB_UI_SSL",
  "localstack.config.SERVICE_PORTS",
  "localstack.config.SQS_PORT_EXTERNAL",
  "localstack.config.START_WEB",
  "localstack.config.TEST_KINESIS_URL",
  "localstack.config.TEST_SQS_URL",
  "localstack.config.TMP_FOLDER",
  "localstack.config.TRUE_STRINGS",
  "localstack.config.USE_PROFILER",
  "localstack.config.USE_SSL",
  "localstack.config.VALID_REGIONS",
  "localstack.config.clean_key",
  "localstack.config.external_service_url",
  "localstack.config.folder",
  "localstack.config.has_docker",
  "localstack.config.in_docker",
  "localstack.config.is_in_docker",
  "localstack.config.is_in_linux",
  "localstack.config.is_linux",
  "localstack.config.key",
  "localstack.config.no_proxy",
  "localstack.config.parse_service_ports",
  "localstack.config.ping",
  "localstack.config.populate_configs",
  "localstack.config.service_port",
  "localstack.config.value",
  "localstack.constants",
  "localstack.constants.API_ENDPOINT",
  "localstack.constants.APPLICATION_AMZ_JSON_1_0",
  "localstack.constants.APPLICATION_AMZ_JSON_1_1",
  "localstack.constants.APPLICATION_JSON",
  "localstack.constants.APPLICATION_XML",
  "localstack.constants.APPLICATION_X_WWW_FORM_URLENCODED",
  "localstack.constants.BIND_HOST",
  "localstack.constants.CONFIG_UPDATE_PATH",
  "localstack.constants.DEFAULT_LAMBDA_CONTAINER_REGISTRY",
  "localstack.constants.DEFAULT_PORT_APIGATEWAY_BACKEND",
  "localstack.constants.DEFAULT_PORT_CLOUDFORMATION_BACKEND",
  "localstack.constants.DEFAULT_PORT_DYNAMODB_BACKEND",
  "localstack.constants.DEFAULT_PORT_EC2_BACKEND",
  "localstack.constants.DEFAULT_PORT_EDGE",
  "localstack.constants.DEFAULT_PORT_ELASTICSEARCH_BACKEND",
  "localstack.constants.DEFAULT_PORT_EVENTS_BACKEND",
  "localstack.constants.DEFAULT_PORT_IAM_BACKEND",
  "localstack.constants.DEFAULT_PORT_KINESIS_BACKEND",
  "localstack.constants.DEFAULT_PORT_KMS_BACKEND",
  "localstack.constants.DEFAULT_PORT_LOGS_BACKEND",
  "localstack.constants.DEFAULT_PORT_S3_BACKEND",
  "localstack.constants.DEFAULT_PORT_SNS_BACKEND",
  "localstack.constants.DEFAULT_PORT_SQS_BACKEND",
  "localstack.constants.DEFAULT_PORT_SSM_BACKEND",
  "localstack.constants.DEFAULT_PORT_STEPFUNCTIONS_BACKEND",
  "localstack.constants.DEFAULT_PORT_WEB_UI",
  "localstack.constants.DEFAULT_SERVICE_PORTS",
  "localstack.constants.DOCKER_IMAGE_NAME",
  "localstack.constants.DYNAMODB_JAR_URL",
  "localstack.constants.DYNAMODB_JAR_URL_ALPINE",
  "localstack.constants.ELASTICMQ_JAR_URL",
  "localstack.constants.ELASTICSEARCH_DELETE_MODULES",
  "localstack.constants.ELASTICSEARCH_JAR_URL",
  "localstack.constants.ELASTICSEARCH_PLUGIN_LIST",
  "localstack.constants.ENV_DEV",
  "localstack.constants.ENV_INTERNAL_TEST_RUN",
  "localstack.constants.FALSE_STRINGS",
  "localstack.constants.HEADER_LOCALSTACK_EDGE_URL",
  "localstack.constants.HEADER_LOCALSTACK_TARGET",
  "localstack.constants.KMS_URL_PATTERN",
  "localstack.constants.LAMBDA_TEST_ROLE",
  "localstack.constants.LOCALHOST",
  "localstack.constants.LOCALSTACK_INFRA_PROCESS",
  "localstack.constants.LOCALSTACK_MAVEN_VERSION",
  "localstack.constants.LOCALSTACK_ROOT_FOLDER",
  "localstack.constants.LOCALSTACK_VENV_FOLDER",
  "localstack.constants.LOCALSTACK_WEB_PROCESS",
  "localstack.constants.MOTO_ACCOUNT_ID",
  "localstack.constants.PATH_USER_REQUEST",
  "localstack.constants.REGION_LOCAL",
  "localstack.constants.STEPFUNCTIONS_ZIP_URL",
  "localstack.constants.STS_JAR_URL",
  "localstack.constants.TEST_AWS_ACCOUNT_ID",
  "localstack.constants.TRUE_STRINGS",
  "localstack.constants.VERSION",
  "localstack.dashboard",
  "localstack.dashboard.api",
  "localstack.dashboard.api.Environment",
  "localstack.dashboard.api.LOCALSTACK_WEB_PROCESS",
  "localstack.dashboard.api.VERSION",
  "localstack.dashboard.api.app",
  "localstack.dashboard.api.canonicalize_api_names",
  "localstack.dashboard.api.common",
  "localstack.dashboard.api.config",
  "localstack.dashboard.api.ensure_webapp_installed",
  "localstack.dashboard.api.generic_proxy",
  "localstack.dashboard.api.get_graph",
  "localstack.dashboard.api.get_health",
  "localstack.dashboard.api.get_kinesis_events",
  "localstack.dashboard.api.get_lambda_code",
  "localstack.dashboard.api.get_payload",
  "localstack.dashboard.api.get_status",
  "localstack.dashboard.api.hello",
  "localstack.dashboard.api.infra",
  "localstack.dashboard.api.load_plugins",
  "localstack.dashboard.api.plugins",
  "localstack.dashboard.api.put_health",
  "localstack.dashboard.api.root_path",
  "localstack.dashboard.api.send_static",
  "localstack.dashboard.api.serve",
  "localstack.dashboard.api.set_status",
  "localstack.dashboard.api.spec",
  "localstack.dashboard.api.web_dir",
  "localstack.dashboard.infra",
  "localstack.dashboard.infra.AWS_CACHE_TIMEOUT",
  "localstack.dashboard.infra.AWS_LAMBDA_CODE_CACHE_TIMEOUT",
  "localstack.dashboard.infra.DEFAULT_REGION",
  "localstack.dashboard.infra.DynamoDB",
  "localstack.dashboard.infra.ElasticSearch",
  "localstack.dashboard.infra.EventSource",
  "localstack.dashboard.infra.FirehoseStream",
  "localstack.dashboard.infra.KINESIS_RECENT_EVENTS_TIME_DIFF_SECS",
  "localstack.dashboard.infra.KinesisShard",
  "localstack.dashboard.infra.KinesisStream",
  "localstack.dashboard.infra.LOG",
  "localstack.dashboard.infra.LambdaFunction",
  "localstack.dashboard.infra.MOCK_OBJ",
  "localstack.dashboard.infra.S3Bucket",
  "localstack.dashboard.infra.S3Notification",
  "localstack.dashboard.infra.SqsQueue",
  "localstack.dashboard.infra.TMP_DOWNLOAD_CACHE_MAX_AGE",
  "localstack.dashboard.infra.TMP_DOWNLOAD_FILE_PATTERN",
  "localstack.dashboard.infra.aws_cmd",
  "localstack.dashboard.infra.aws_stack",
  "localstack.dashboard.infra.clean_cache",
  "localstack.dashboard.infra.cmd_dynamodb",
  "localstack.dashboard.infra.cmd_es",
  "localstack.dashboard.infra.cmd_firehose",
  "localstack.dashboard.infra.cmd_kinesis",
  "localstack.dashboard.infra.cmd_lambda",
  "localstack.dashboard.infra.cmd_s3api",
  "localstack.dashboard.infra.cmd_sqs",
  "localstack.dashboard.infra.download",
  "localstack.dashboard.infra.extract_endpoints",
  "localstack.dashboard.infra.get_dynamo_dbs",
  "localstack.dashboard.infra.get_elasticsearch_domains",
  "localstack.dashboard.infra.get_firehose_streams",
  "localstack.dashboard.infra.get_graph",
  "localstack.dashboard.infra.get_kinesis_events",
  "localstack.dashboard.infra.get_kinesis_shards",
  "localstack.dashboard.infra.get_kinesis_streams",
  "localstack.dashboard.infra.get_lambda_code",
  "localstack.dashboard.infra.get_lambda_event_sources",
  "localstack.dashboard.infra.get_lambda_functions",
  "localstack.dashboard.infra.get_s3_buckets",
  "localstack.dashboard.infra.get_sqs_queues",
  "localstack.dashboard.infra.is_port_open",
  "localstack.dashboard.infra.last_cache_cleanup_time",
  "localstack.dashboard.infra.load_file",
  "localstack.dashboard.infra.md5",
  "localstack.dashboard.infra.mkdir",
  "localstack.dashboard.infra.mktime",
  "localstack.dashboard.infra.new_tmp_file",
  "localstack.dashboard.infra.parallelize",
  "localstack.dashboard.infra.read_kinesis_iterator",
  "localstack.dashboard.infra.resolve_string_or_variable",
  "localstack.dashboard.infra.rm_rf",
  "localstack.dashboard.infra.run",
  "localstack.dashboard.infra.run_aws_cmd",
  "localstack.dashboard.infra.run_cached",
  "localstack.dashboard.infra.short_uid",
  "localstack.dashboard.infra.to_str",
  "localstack.dashboard.infra.unzip",
  "localstack.plugins",
  "localstack.plugins.ENV_SCRIPT_STARTING_DOCKER",
  "localstack.plugins.Plugin",
  "localstack.plugins.TRUE_STRINGS",
  "localstack.plugins.apigateway_listener",
  "localstack.plugins.apigateway_starter",
  "localstack.plugins.cloudformation_listener",
  "localstack.plugins.cloudformation_starter",
  "localstack.plugins.config",
  "localstack.plugins.do_register_localstack_plugins",
  "localstack.plugins.dynamodb_listener",
  "localstack.plugins.dynamodb_starter",
  "localstack.plugins.ec2_starter",
  "localstack.plugins.edge",
  "localstack.plugins.events_listener",
  "localstack.plugins.events_starter",
  "localstack.plugins.iam_listener",
  "localstack.plugins.iam_starter",
  "localstack.plugins.kinesis_listener",
  "localstack.plugins.kinesis_starter",
  "localstack.plugins.kms_starter",
  "localstack.plugins.logs_listener",
  "localstack.plugins.logs_starter",
  "localstack.plugins.register_localstack_plugins",
  "localstack.plugins.register_plugin",
  "localstack.plugins.s3_listener",
  "localstack.plugins.s3_starter",
  "localstack.plugins.secretsmanager_starter",
  "localstack.plugins.ses_starter",
  "localstack.plugins.sns_listener",
  "localstack.plugins.sqs_listener",
  "localstack.plugins.sqs_starter",
  "localstack.plugins.ssm_listener",
  "localstack.plugins.start_cloudwatch",
  "localstack.plugins.start_dynamodbstreams",
  "localstack.plugins.start_elasticsearch_service",
  "localstack.plugins.start_firehose",
  "localstack.plugins.start_lambda",
  "localstack.plugins.start_redshift",
  "localstack.plugins.start_route53",
  "localstack.plugins.start_sns",
  "localstack.plugins.start_ssm",
  "localstack.plugins.start_sts",
  "localstack.plugins.stepfunctions_listener",
  "localstack.plugins.stepfunctions_starter",
  "localstack.services",
  "localstack.services.apigateway",
  "localstack.services.apigateway.apigateway_listener",
  "localstack.services.apigateway.apigateway_listener.APPLICATION_JSON",
  "localstack.services.apigateway.apigateway_listener.AuthorizationError",
  "localstack.services.apigateway.apigateway_listener.GATEWAY_RESPONSES",
  "localstack.services.apigateway.apigateway_listener.LOGGER",
  "localstack.services.apigateway.apigateway_listener.PATH_REGEX_AUTHORIZERS",
  "localstack.services.apigateway.apigateway_listener.PATH_REGEX_RESPONSES",
  "localstack.services.apigateway.apigateway_listener.PATH_REGEX_USER_REQUEST",
  "localstack.services.apigateway.apigateway_listener.PATH_USER_REQUEST",
  "localstack.services.apigateway.apigateway_listener.ProxyListener",
  "localstack.services.apigateway.apigateway_listener.ProxyListenerApiGateway",
  "localstack.services.apigateway.apigateway_listener.TEST_KINESIS_URL",
  "localstack.services.apigateway.apigateway_listener.TEST_SQS_URL",
  "localstack.services.apigateway.apigateway_listener.UPDATE_APIGATEWAY",
  "localstack.services.apigateway.apigateway_listener.authorize_invocation",
  "localstack.services.apigateway.apigateway_listener.aws_stack",
  "localstack.services.apigateway.apigateway_listener.common",
  "localstack.services.apigateway.apigateway_listener.event_publisher",
  "localstack.services.apigateway.apigateway_listener.extract_path_params",
  "localstack.services.apigateway.apigateway_listener.extract_query_string_params",
  "localstack.services.apigateway.apigateway_listener.flask_to_requests_response",
  "localstack.services.apigateway.apigateway_listener.get_cors_response",
  "localstack.services.apigateway.apigateway_listener.get_gateway_responses",
  "localstack.services.apigateway.apigateway_listener.get_resource_for_path",
  "localstack.services.apigateway.apigateway_listener.handle_authorizers",
  "localstack.services.apigateway.apigateway_listener.helpers",
  "localstack.services.apigateway.apigateway_listener.invoke_rest_api",
  "localstack.services.apigateway.apigateway_listener.kinesis_listener",
  "localstack.services.apigateway.apigateway_listener.lambda_api",
  "localstack.services.apigateway.apigateway_listener.make_error_response",
  "localstack.services.apigateway.apigateway_listener.put_gateway_response",
  "localstack.services.apigateway.apigateway_listener.requests_response",
  "localstack.services.apigateway.apigateway_listener.run_authorizer",
  "localstack.services.apigateway.apigateway_listener.to_bytes",
  "localstack.services.apigateway.apigateway_listener.to_str",
  "localstack.services.apigateway.apigateway_starter",
  "localstack.services.apigateway.apigateway_starter.DEFAULT_PORT_APIGATEWAY_BACKEND",
  "localstack.services.apigateway.apigateway_starter.LOG",
  "localstack.services.apigateway.apigateway_starter.apply_patches",
  "localstack.services.apigateway.apigateway_starter.config",
  "localstack.services.apigateway.apigateway_starter.start_apigateway",
  "localstack.services.apigateway.apigateway_starter.start_moto_server",
  "localstack.services.apigateway.helpers",
  "localstack.services.apigateway.helpers.APIGATEWAY_SQS_DATA_INBOUND_TEMPLATE",
  "localstack.services.apigateway.helpers.APPLICATION_JSON",
  "localstack.services.apigateway.helpers.AUTHORIZERS",
  "localstack.services.apigateway.helpers.PATH_REGEX_AUTHORIZER",
  "localstack.services.apigateway.helpers.PATH_REGEX_MAIN",
  "localstack.services.apigateway.helpers.PATH_REGEX_SUB",
  "localstack.services.apigateway.helpers.TEST_AWS_ACCOUNT_ID",
  "localstack.services.apigateway.helpers._find_authorizer",
  "localstack.services.apigateway.helpers.add_authorizer",
  "localstack.services.apigateway.helpers.aws_stack",
  "localstack.services.apigateway.helpers.common",
  "localstack.services.apigateway.helpers.connect_api_gateway_to_sqs",
  "localstack.services.apigateway.helpers.delete_authorizer",
  "localstack.services.apigateway.helpers.extract_path_params",
  "localstack.services.apigateway.helpers.extract_query_string_params",
  "localstack.services.apigateway.helpers.get_api_id_from_path",
  "localstack.services.apigateway.helpers.get_authorizer_id_from_path",
  "localstack.services.apigateway.helpers.get_authorizers",
  "localstack.services.apigateway.helpers.get_cors_response",
  "localstack.services.apigateway.helpers.get_resource_for_path",
  "localstack.services.apigateway.helpers.get_rest_api_paths",
  "localstack.services.apigateway.helpers.handle_authorizers",
  "localstack.services.apigateway.helpers.make_accepted_response",
  "localstack.services.apigateway.helpers.make_error_response",
  "localstack.services.apigateway.helpers.make_json_response",
  "localstack.services.apigateway.helpers.normalize_authorizer",
  "localstack.services.apigateway.helpers.requests_response",
  "localstack.services.apigateway.helpers.to_authorizer_response_json",
  "localstack.services.apigateway.helpers.tokenize_path",
  "localstack.services.apigateway.helpers.update_authorizer",
  "localstack.services.awslambda",
  "localstack.services.awslambda.lambda_api",
  "localstack.services.awslambda.lambda_api.APP_NAME",
  "localstack.services.awslambda.lambda_api.ARCHIVE_FILE_PATTERN",
  "localstack.services.awslambda.lambda_api.BATCH_SIZE_RANGES",
  "localstack.services.awslambda.lambda_api.BUCKET_MARKER_LOCAL",
  "localstack.services.awslambda.lambda_api.ClientError",
  "localstack.services.awslambda.lambda_api.DO_USE_DOCKER",
  "localstack.services.awslambda.lambda_api.FuncThread",
  "localstack.services.awslambda.lambda_api.IAM_POLICY_VERSION",
  "localstack.services.awslambda.lambda_api.INVALID_PARAMETER_VALUE_EXCEPTION",
  "localstack.services.awslambda.lambda_api.JSON_START_CHARS",
  "localstack.services.awslambda.lambda_api.JSON_START_CHAR_MAP",
  "localstack.services.awslambda.lambda_api.JSON_START_TYPES",
  "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_HANDLER",
  "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_RUNTIME",
  "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_STARTING_POSITION",
  "localstack.services.awslambda.lambda_api.LAMBDA_DEFAULT_TIMEOUT",
  "localstack.services.awslambda.lambda_api.LAMBDA_EXECUTOR",
  "localstack.services.awslambda.lambda_api.LAMBDA_JAR_FILE_NAME",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIMES",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_DOTNETCORE2",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_DOTNETCORE21",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_GOLANG",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_JAVA11",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_JAVA8",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS610",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_NODEJS810",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PROVIDED",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON27",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON36",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON37",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_PYTHON38",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_RUBY",
  "localstack.services.awslambda.lambda_api.LAMBDA_RUNTIME_RUBY25",
  "localstack.services.awslambda.lambda_api.LAMBDA_SCRIPT_PATTERN",
  "localstack.services.awslambda.lambda_api.LAMBDA_ZIP_FILE_NAME",
  "localstack.services.awslambda.lambda_api.LOG",
  "localstack.services.awslambda.lambda_api.LambdaContext",
  "localstack.services.awslambda.lambda_api.LambdaFunction",
  "localstack.services.awslambda.lambda_api.PATH_ROOT",
  "localstack.services.awslambda.lambda_api.POLICY_NAME_PATTERN",
  "localstack.services.awslambda.lambda_api.POSSIBLE_JSON_TYPES",
  "localstack.services.awslambda.lambda_api.SQS_LISTENER_THREAD",
  "localstack.services.awslambda.lambda_api.SQS_POLL_INTERVAL_SEC",
  "localstack.services.awslambda.lambda_api.TEST_AWS_ACCOUNT_ID",
  "localstack.services.awslambda.lambda_api.TMP_FILES",
  "localstack.services.awslambda.lambda_api._arn_match",
  "localstack.services.awslambda.lambda_api.add_event_source",
  "localstack.services.awslambda.lambda_api.add_function_mapping",
  "localstack.services.awslambda.lambda_api.add_permission",
  "localstack.services.awslambda.lambda_api.app",
  "localstack.services.awslambda.lambda_api.arn_to_lambda",
  "localstack.services.awslambda.lambda_api.aws_responses",
  "localstack.services.awslambda.lambda_api.aws_stack",
  "localstack.services.awslambda.lambda_api.before_request",
  "localstack.services.awslambda.lambda_api.check_batch_size_range",
  "localstack.services.awslambda.lambda_api.cleanup",
  "localstack.services.awslambda.lambda_api.cloudwatched",
  "localstack.services.awslambda.lambda_api.config",
  "localstack.services.awslambda.lambda_api.create_alias",
  "localstack.services.awslambda.lambda_api.create_event_source_mapping",
  "localstack.services.awslambda.lambda_api.create_function",
  "localstack.services.awslambda.lambda_api.delete_event_source",
  "localstack.services.awslambda.lambda_api.delete_function",
  "localstack.services.awslambda.lambda_api.do_list_functions",
  "localstack.services.awslambda.lambda_api.do_list_versions",
  "localstack.services.awslambda.lambda_api.do_update_alias",
  "localstack.services.awslambda.lambda_api.ensure_readable",
  "localstack.services.awslambda.lambda_api.error_response",
  "localstack.services.awslambda.lambda_api.event_publisher",
  "localstack.services.awslambda.lambda_api.event_source_mappings",
  "localstack.services.awslambda.lambda_api.exec_lambda_code",
  "localstack.services.awslambda.lambda_api.exec_mutex",
  "localstack.services.awslambda.lambda_api.format_func_details",
  "localstack.services.awslambda.lambda_api.forward_to_fallback_url",
  "localstack.services.awslambda.lambda_api.func_arn",
  "localstack.services.awslambda.lambda_api.generic_proxy",
  "localstack.services.awslambda.lambda_api.get_alias",
  "localstack.services.awslambda.lambda_api.get_event_source_mapping",
  "localstack.services.awslambda.lambda_api.get_event_sources",
  "localstack.services.awslambda.lambda_api.get_function",
  "localstack.services.awslambda.lambda_api.get_handler_file_from_name",
  "localstack.services.awslambda.lambda_api.get_handler_function_from_name",
  "localstack.services.awslambda.lambda_api.get_java_handler",
  "localstack.services.awslambda.lambda_api.get_lambda_policy",
  "localstack.services.awslambda.lambda_api.get_policy",
  "localstack.services.awslambda.lambda_api.get_zip_bytes",
  "localstack.services.awslambda.lambda_api.invoke_function",
  "localstack.services.awslambda.lambda_api.is_zip_file",
  "localstack.services.awslambda.lambda_api.isoformat_milliseconds",
  "localstack.services.awslambda.lambda_api.lambda_executors",
  "localstack.services.awslambda.lambda_api.list_aliases",
  "localstack.services.awslambda.lambda_api.list_event_source_mappings",
  "localstack.services.awslambda.lambda_api.list_functions",
  "localstack.services.awslambda.lambda_api.list_tags",
  "localstack.services.awslambda.lambda_api.list_versions",
  "localstack.services.awslambda.lambda_api.load_file",
  "localstack.services.awslambda.lambda_api.mkdir",
  "localstack.services.awslambda.lambda_api.not_found_error",
  "localstack.services.awslambda.lambda_api.now_utc",
  "localstack.services.awslambda.lambda_api.parse_chunked_data",
  "localstack.services.awslambda.lambda_api.process_apigateway_invocation",
  "localstack.services.awslambda.lambda_api.process_kinesis_records",
  "localstack.services.awslambda.lambda_api.process_sns_notification",
  "localstack.services.awslambda.lambda_api.process_sqs_message",
  "localstack.services.awslambda.lambda_api.publish_new_function_version",
  "localstack.services.awslambda.lambda_api.publish_version",
  "localstack.services.awslambda.lambda_api.put_concurrency",
  "localstack.services.awslambda.lambda_api.put_function_event_invoke_config",
  "localstack.services.awslambda.lambda_api.remove_permission",
  "localstack.services.awslambda.lambda_api.run",
  "localstack.services.awslambda.lambda_api.run_lambda",
  "localstack.services.awslambda.lambda_api.safe_requests",
  "localstack.services.awslambda.lambda_api.save_file",
  "localstack.services.awslambda.lambda_api.serve",
  "localstack.services.awslambda.lambda_api.set_archive_code",
  "localstack.services.awslambda.lambda_api.set_function_code",
  "localstack.services.awslambda.lambda_api.short_uid",
  "localstack.services.awslambda.lambda_api.start_lambda_sqs_listener",
  "localstack.services.awslambda.lambda_api.tag_resource",
  "localstack.services.awslambda.lambda_api.timestamp_millis",
  "localstack.services.awslambda.lambda_api.to_str",
  "localstack.services.awslambda.lambda_api.untag_resource",
  "localstack.services.awslambda.lambda_api.unzip",
  "localstack.services.awslambda.lambda_api.update_alias",
  "localstack.services.awslambda.lambda_api.update_event_source",
  "localstack.services.awslambda.lambda_api.update_function_code",
  "localstack.services.awslambda.lambda_api.update_function_configuration",
  "localstack.services.awslambda.lambda_api.use_docker",
  "localstack.services.awslambda.lambda_api.zip_contains_jar_entries",
  "localstack.services.awslambda.lambda_executors",
  "localstack.services.awslambda.lambda_executors.AVAILABLE_EXECUTORS",
  "localstack.services.awslambda.lambda_executors.CaptureOutput",
  "localstack.services.awslambda.lambda_executors.ContainerInfo",
  "localstack.services.awslambda.lambda_executors.DEFAULT_EXECUTOR",
  "localstack.services.awslambda.lambda_executors.EVENT_FILE_PATTERN",
  "localstack.services.awslambda.lambda_executors.EVENT_SOURCE_SQS",
  "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_REUSE",
  "localstack.services.awslambda.lambda_executors.EXECUTOR_CONTAINERS_SEPARATE",
  "localstack.services.awslambda.lambda_executors.EXECUTOR_LOCAL",
  "localstack.services.awslambda.lambda_executors.FuncThread",
  "localstack.services.awslambda.lambda_executors.INSTALL_PATH_LOCALSTACK_FAT_JAR",
  "localstack.services.awslambda.lambda_executors.LAMBDA_API_PORT_OFFSET",
  "localstack.services.awslambda.lambda_executors.LAMBDA_API_UNIQUE_PORTS",
  "localstack.services.awslambda.lambda_executors.LAMBDA_EVENT_FILE",
  "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_CLASS",
  "localstack.services.awslambda.lambda_executors.LAMBDA_EXECUTOR_JAR",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE2",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_DOTNETCORE21",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_GOLANG",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA11",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_JAVA8",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS10X",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS12X",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS43",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS610",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_NODEJS810",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PROVIDED",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON27",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON36",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON37",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_PYTHON38",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY",
  "localstack.services.awslambda.lambda_executors.LAMBDA_RUNTIME_RUBY25",
  "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_PORT_OFFSET",
  "localstack.services.awslambda.lambda_executors.LAMBDA_SERVER_UNIQUE_PORTS",
  "localstack.services.awslambda.lambda_executors.LOG",
  "localstack.services.awslambda.lambda_executors.LambdaExecutor",
  "localstack.services.awslambda.lambda_executors.MAX_CONTAINER_IDLE_TIME_MS",
  "localstack.services.awslambda.lambda_executors.TMP_FILES",
  "localstack.services.awslambda.lambda_executors.Util",
  "localstack.services.awslambda.lambda_executors._store_logs",
  "localstack.services.awslambda.lambda_executors.config",
  "localstack.services.awslambda.lambda_executors.cp_r",
  "localstack.services.awslambda.lambda_executors.get_free_tcp_port",
  "localstack.services.awslambda.lambda_executors.get_from_event",
  "localstack.services.awslambda.lambda_executors.is_java_lambda",
  "localstack.services.awslambda.lambda_executors.is_nodejs_runtime",
  "localstack.services.awslambda.lambda_executors.json_safe",
  "localstack.services.awslambda.lambda_executors.lambda_error_to_dead_letter_queue",
  "localstack.services.awslambda.lambda_executors.run",
  "localstack.services.awslambda.lambda_executors.save_file",
  "localstack.services.awslambda.lambda_executors.short_uid",
  "localstack.services.awslambda.lambda_executors.sqs_error_to_dead_letter_queue",
  "localstack.services.awslambda.lambda_executors.store_cloudwatch_logs",
  "localstack.services.awslambda.lambda_executors.to_str",
  "localstack.services.cloudformation",
  "localstack.services.cloudformation.cloudformation_listener",
  "localstack.services.cloudformation.cloudformation_listener.LOG",
  "localstack.services.cloudformation.cloudformation_listener.MOTO_CLOUDFORMATION_ACCOUNT_ID",
  "localstack.services.cloudformation.cloudformation_listener.ProxyListener",
  "localstack.services.cloudformation.cloudformation_listener.ProxyListenerCloudFormation",
  "localstack.services.cloudformation.cloudformation_listener.TEST_AWS_ACCOUNT_ID",
  "localstack.services.cloudformation.cloudformation_listener.UPDATE_CLOUDFORMATION",
  "localstack.services.cloudformation.cloudformation_listener.XMLNS_CLOUDFORMATION",
  "localstack.services.cloudformation.cloudformation_listener.aws_stack",
  "localstack.services.cloudformation.cloudformation_listener.config",
  "localstack.services.cloudformation.cloudformation_listener.convert_s3_to_local_url",
  "localstack.services.cloudformation.cloudformation_listener.error_response",
  "localstack.services.cloudformation.cloudformation_listener.event_publisher",
  "localstack.services.cloudformation.cloudformation_listener.fix_hardcoded_creation_date",
  "localstack.services.cloudformation.cloudformation_listener.fix_in_response",
  "localstack.services.cloudformation.cloudformation_listener.fix_region_in_arns",
  "localstack.services.cloudformation.cloudformation_listener.get_template_body",
  "localstack.services.cloudformation.cloudformation_listener.is_local_service_url",
  "localstack.services.cloudformation.cloudformation_listener.is_real_s3_url",
  "localstack.services.cloudformation.cloudformation_listener.make_response",
  "localstack.services.cloudformation.cloudformation_listener.obj_to_xml",
  "localstack.services.cloudformation.cloudformation_listener.run_safe",
  "localstack.services.cloudformation.cloudformation_listener.s3_listener",
  "localstack.services.cloudformation.cloudformation_listener.safe_requests",
  "localstack.services.cloudformation.cloudformation_listener.template_deployer",
  "localstack.services.cloudformation.cloudformation_listener.timestamp_millis",
  "localstack.services.cloudformation.cloudformation_listener.to_str",
  "localstack.services.cloudformation.cloudformation_listener.transform_template",
  "localstack.services.cloudformation.cloudformation_listener.validate_template",
  "localstack.services.cloudformation.cloudformation_starter",
  "localstack.services.cloudformation.cloudformation_starter.CURRENTLY_UPDATING_RESOURCES",
  "localstack.services.cloudformation.cloudformation_starter.DEFAULT_PORT_CLOUDFORMATION_BACKEND",
  "localstack.services.cloudformation.cloudformation_starter.FuncThread",
  "localstack.services.cloudformation.cloudformation_starter.LOG",
  "localstack.services.cloudformation.cloudformation_starter.MAX_DEPENDENCY_DEPTH",
  "localstack.services.cloudformation.cloudformation_starter.MODEL_MAP",
  "localstack.services.cloudformation.cloudformation_starter.MOTO_ACCOUNT_ID",
  "localstack.services.cloudformation.cloudformation_starter.RUN_SERVER_IN_PROCESS",
  "localstack.services.cloudformation.cloudformation_starter.TEST_AWS_ACCOUNT_ID",
  "localstack.services.cloudformation.cloudformation_starter.apply_patches",
  "localstack.services.cloudformation.cloudformation_starter.aws_responses",
  "localstack.services.cloudformation.cloudformation_starter.aws_stack",
  "localstack.services.cloudformation.cloudformation_starter.canonicalize_api_names",
  "localstack.services.cloudformation.cloudformation_starter.clone",
  "localstack.services.cloudformation.cloudformation_starter.config",
  "localstack.services.cloudformation.cloudformation_starter.convert_objs_to_ids",
  "localstack.services.cloudformation.cloudformation_starter.do_run",
  "localstack.services.cloudformation.cloudformation_starter.get_entity_id",
  "localstack.services.cloudformation.cloudformation_starter.get_service_protocol",
  "localstack.services.cloudformation.cloudformation_starter.inject_stats_endpoint",
  "localstack.services.cloudformation.cloudformation_starter.json_safe",
  "localstack.services.cloudformation.cloudformation_starter.main",
  "localstack.services.cloudformation.cloudformation_starter.models",
  "localstack.services.cloudformation.cloudformation_starter.recurse_object",
  "localstack.services.cloudformation.cloudformation_starter.service_models",
  "localstack.services.cloudformation.cloudformation_starter.set_moto_account_ids",
  "localstack.services.cloudformation.cloudformation_starter.setup_logging",
  "localstack.services.cloudformation.cloudformation_starter.short_uid",
  "localstack.services.cloudformation.cloudformation_starter.start_cloudformation",
  "localstack.services.cloudformation.cloudformation_starter.start_proxy_for_service",
  "localstack.services.cloudformation.cloudformation_starter.start_up",
  "localstack.services.cloudformation.cloudformation_starter.template_deployer",
  "localstack.services.cloudformation.cloudformation_starter.update_physical_resource_id",
  "localstack.services.cloudformation.service_models",
  "localstack.services.cloudformation.service_models.BaseModel",
  "localstack.services.cloudformation.service_models.CloudFormationStack",
  "localstack.services.cloudformation.service_models.ElasticsearchDomain",
  "localstack.services.cloudformation.service_models.FirehoseDeliveryStream",
  "localstack.services.cloudformation.service_models.GatewayResponse",
  "localstack.services.cloudformation.service_models.LogsLogGroup",
  "localstack.services.cloudformation.service_models.SNSSubscription",
  "localstack.services.cloudformation.service_models.SSMParameter",
  "localstack.services.cloudformation.service_models.SecretsManagerSecret",
  "localstack.services.cloudformation.service_models.StepFunctionsActivity",
  "localstack.services.dynamodb",
  "localstack.services.dynamodb.dynamodb_listener",
  "localstack.services.dynamodb.dynamodb_listener.ACTION_PREFIX",
  "localstack.services.dynamodb.dynamodb_listener.LOGGER",
  "localstack.services.dynamodb.dynamodb_listener.ProxyListener",
  "localstack.services.dynamodb.dynamodb_listener.ProxyListenerDynamoDB",
  "localstack.services.dynamodb.dynamodb_listener.TABLE_DEFINITIONS",
  "localstack.services.dynamodb.dynamodb_listener.TABLE_TAGS",
  "localstack.services.dynamodb.dynamodb_listener.THROTTLED_ACTIONS",
  "localstack.services.dynamodb.dynamodb_listener.UPDATE_DYNAMODB",
  "localstack.services.dynamodb.dynamodb_listener.aws_responses",
  "localstack.services.dynamodb.dynamodb_listener.aws_stack",
  "localstack.services.dynamodb.dynamodb_listener.calculate_crc32",
  "localstack.services.dynamodb.dynamodb_listener.clone",
  "localstack.services.dynamodb.dynamodb_listener.config",
  "localstack.services.dynamodb.dynamodb_listener.create_dynamodb_stream",
  "localstack.services.dynamodb.dynamodb_listener.dynamodb_extract_keys",
  "localstack.services.dynamodb.dynamodb_listener.dynamodbstreams_api",
  "localstack.services.dynamodb.dynamodb_listener.error_response",
  "localstack.services.dynamodb.dynamodb_listener.event_publisher",
  "localstack.services.dynamodb.dynamodb_listener.find_existing_item",
  "localstack.services.dynamodb.dynamodb_listener.fix_headers_for_updated_response",
  "localstack.services.dynamodb.dynamodb_listener.forward_to_ddb_stream",
  "localstack.services.dynamodb.dynamodb_listener.forward_to_lambda",
  "localstack.services.dynamodb.dynamodb_listener.get_table_not_found_error",
  "localstack.services.dynamodb.dynamodb_listener.lambda_api",
  "localstack.services.dynamodb.dynamodb_listener.to_bytes",
  "localstack.services.dynamodb.dynamodb_listener.to_str",
  "localstack.services.dynamodb.dynamodb_starter",
  "localstack.services.dynamodb.dynamodb_starter.DEFAULT_PORT_DYNAMODB_BACKEND",
  "localstack.services.dynamodb.dynamodb_starter.LOGGER",
  "localstack.services.dynamodb.dynamodb_starter.MAX_HEAP_SIZE",
  "localstack.services.dynamodb.dynamodb_starter.ROOT_PATH",
  "localstack.services.dynamodb.dynamodb_starter.aws_stack",
  "localstack.services.dynamodb.dynamodb_starter.check_dynamodb",
  "localstack.services.dynamodb.dynamodb_starter.config",
  "localstack.services.dynamodb.dynamodb_starter.do_run",
  "localstack.services.dynamodb.dynamodb_starter.get_service_protocol",
  "localstack.services.dynamodb.dynamodb_starter.install",
  "localstack.services.dynamodb.dynamodb_starter.mkdir",
  "localstack.services.dynamodb.dynamodb_starter.start_dynamodb",
  "localstack.services.dynamodb.dynamodb_starter.start_proxy_for_service",
  "localstack.services.dynamodb.dynamodb_starter.wait_for_port_open",
  "localstack.services.dynamodbstreams",
  "localstack.services.dynamodbstreams.dynamodbstreams_api",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.ACTION_HEADER_PREFIX",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.APP_NAME",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_KINESIS_STREAM_NAME_PREFIX",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.DDB_STREAMS",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.SEQUENCE_NUMBER_COUNTER",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.add_dynamodb_stream",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.app",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.aws_stack",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.error_response",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.event_publisher",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.forward_events",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.generic_proxy",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.get_kinesis_stream_name",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.kinesis_shard_id",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.post_request",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.random_id",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.serve",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.shard_id",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.stream_name_from_stream_arn",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.table_name_from_stream_arn",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.to_bytes",
  "localstack.services.dynamodbstreams.dynamodbstreams_api.to_str",
  "localstack.services.ec2",
  "localstack.services.ec2.ec2_starter",
  "localstack.services.ec2.ec2_starter.DEFAULT_PORT_EC2_BACKEND",
  "localstack.services.ec2.ec2_starter.config",
  "localstack.services.ec2.ec2_starter.patch_ec2",
  "localstack.services.ec2.ec2_starter.start_ec2",
  "localstack.services.ec2.ec2_starter.start_moto_server",
  "localstack.services.edge",
  "localstack.services.edge.GenericProxy",
  "localstack.services.edge.HEADER_KILL_SIGNAL",
  "localstack.services.edge.HEADER_LOCALSTACK_EDGE_URL",
  "localstack.services.edge.HEADER_LOCALSTACK_TARGET",
  "localstack.services.edge.LOCALSTACK_ROOT_FOLDER",
  "localstack.services.edge.LOG",
  "localstack.services.edge.ProxyListener",
  "localstack.services.edge.ProxyListenerEdge",
  "localstack.services.edge.TMP_THREADS",
  "localstack.services.edge.can_use_sudo",
  "localstack.services.edge.config",
  "localstack.services.edge.do_start_edge",
  "localstack.services.edge.ensure_can_use_sudo",
  "localstack.services.edge.get_api_from_headers",
  "localstack.services.edge.is_root",
  "localstack.services.edge.run",
  "localstack.services.edge.safe_requests",
  "localstack.services.edge.start_edge",
  "localstack.services.es",
  "localstack.services.es.es_api",
  "localstack.services.es.es_api.API_PREFIX",
  "localstack.services.es.es_api.APP_NAME",
  "localstack.services.es.es_api.DEFAULT_ES_VERSION",
  "localstack.services.es.es_api.ES_DOMAINS",
  "localstack.services.es.es_api.Plugin",
  "localstack.services.es.es_api.TAGS",
  "localstack.services.es.es_api.TEST_AWS_ACCOUNT_ID",
  "localstack.services.es.es_api.TaggingService",
  "localstack.services.es.es_api.add_list_tags",
  "localstack.services.es.es_api.app",
  "localstack.services.es.es_api.aws_stack",
  "localstack.services.es.es_api.check_infra",
  "localstack.services.es.es_api.cleanup_elasticsearch_instance",
  "localstack.services.es.es_api.create_domain",
  "localstack.services.es.es_api.delete_domain",
  "localstack.services.es.es_api.describe_domain",
  "localstack.services.es.es_api.domain_config",
  "localstack.services.es.es_api.error_response",
  "localstack.services.es.es_api.event_publisher",
  "localstack.services.es.es_api.generic_proxy",
  "localstack.services.es.es_api.get_compatible_versions",
  "localstack.services.es.es_api.get_domain_config",
  "localstack.services.es.es_api.get_domain_status",
  "localstack.services.es.es_api.list_domain_names",
  "localstack.services.es.es_api.persistence",
  "localstack.services.es.es_api.serve",
  "localstack.services.es.es_api.start_elasticsearch_instance",
  "localstack.services.es.es_api.to_str",
  "localstack.services.es.es_starter",
  "localstack.services.es.es_starter.DEFAULT_PORT_ELASTICSEARCH_BACKEND",
  "localstack.services.es.es_starter.LOCALSTACK_ROOT_FOLDER",
  "localstack.services.es.es_starter.LOG",
  "localstack.services.es.es_starter.ROOT_PATH",
  "localstack.services.es.es_starter.STATE",
  "localstack.services.es.es_starter.aws_stack",
  "localstack.services.es.es_starter.check_elasticsearch",
  "localstack.services.es.es_starter.chmod_r",
  "localstack.services.es.es_starter.config",
  "localstack.services.es.es_starter.delete_all_elasticsearch_data",
  "localstack.services.es.es_starter.do_run",
  "localstack.services.es.es_starter.get_service_protocol",
  "localstack.services.es.es_starter.install",
  "localstack.services.es.es_starter.is_root",
  "localstack.services.es.es_starter.mkdir",
  "localstack.services.es.es_starter.rm_rf",
  "localstack.services.es.es_starter.start_elasticsearch",
  "localstack.services.es.es_starter.start_proxy_for_service",
  "localstack.services.es.es_starter.stop_elasticsearch",
  "localstack.services.events",
  "localstack.services.events.events_listener",
  "localstack.services.events.events_listener.APPLICATION_AMZ_JSON_1_1",
  "localstack.services.events.events_listener.EVENTS_TMP_DIR",
  "localstack.services.events.events_listener.MOTO_ACCOUNT_ID",
  "localstack.services.events.events_listener.ProxyListener",
  "localstack.services.events.events_listener.ProxyListenerEvents",
  "localstack.services.events.events_listener.TEST_AWS_ACCOUNT_ID",
  "localstack.services.events.events_listener.TMP_FILES",
  "localstack.services.events.events_listener.TaggingService",
  "localstack.services.events.events_listener.UPDATE_EVENTS",
  "localstack.services.events.events_listener.aws_stack",
  "localstack.services.events.events_listener.config",
  "localstack.services.events.events_listener.make_response",
  "localstack.services.events.events_listener.mkdir",
  "localstack.services.events.events_listener.save_file",
  "localstack.services.events.events_listener.short_uid",
  "localstack.services.events.events_listener.to_str",
  "localstack.services.events.events_starter",
  "localstack.services.events.events_starter.DEFAULT_PORT_EVENTS_BACKEND",
  "localstack.services.events.events_starter.apply_patches",
  "localstack.services.events.events_starter.config",
  "localstack.services.events.events_starter.start_events",
  "localstack.services.events.events_starter.start_moto_server",
  "localstack.services.firehose",
  "localstack.services.firehose.firehose_api",
  "localstack.services.firehose.firehose_api.ACTION_HEADER_PREFIX",
  "localstack.services.firehose.firehose_api.APP_NAME",
  "localstack.services.firehose.firehose_api.DELIVERY_STREAMS",
  "localstack.services.firehose.firehose_api.LOG",
  "localstack.services.firehose.firehose_api.TEST_AWS_ACCOUNT_ID",
  "localstack.services.firehose.firehose_api.app",
  "localstack.services.firehose.firehose_api.aws_responses",
  "localstack.services.firehose.firehose_api.bucket_name",
  "localstack.services.firehose.firehose_api.connect_elasticsearch",
  "localstack.services.firehose.firehose_api.create_stream",
  "localstack.services.firehose.firehose_api.delete_stream",
  "localstack.services.firehose.firehose_api.deser",
  "localstack.services.firehose.firehose_api.error_not_found",
  "localstack.services.firehose.firehose_api.error_response",
  "localstack.services.firehose.firehose_api.event_publisher",
  "localstack.services.firehose.firehose_api.extract_region_from_auth_header",
  "localstack.services.firehose.firehose_api.firehose_stream_arn",
  "localstack.services.firehose.firehose_api.generic_proxy",
  "localstack.services.firehose.firehose_api.get_delivery_stream_names",
  "localstack.services.firehose.firehose_api.get_delivery_stream_tags",
  "localstack.services.firehose.firehose_api.get_destination",
  "localstack.services.firehose.firehose_api.get_s3_client",
  "localstack.services.firehose.firehose_api.get_s3_object_path",
  "localstack.services.firehose.firehose_api.get_stream",
  "localstack.services.firehose.firehose_api.kinesis_connector",
  "localstack.services.firehose.firehose_api.post_request",
  "localstack.services.firehose.firehose_api.process_records",
  "localstack.services.firehose.firehose_api.put_record",
  "localstack.services.firehose.firehose_api.role_arn",
  "localstack.services.firehose.firehose_api.serve",
  "localstack.services.firehose.firehose_api.short_uid",
  "localstack.services.firehose.firehose_api.timestamp",
  "localstack.services.firehose.firehose_api.to_str",
  "localstack.services.firehose.firehose_api.update_destination",
  "localstack.services.generic_proxy",
  "localstack.services.generic_proxy.APPLICATION_JSON",
  "localstack.services.generic_proxy.CORS_ALLOWED_HEADERS",
  "localstack.services.generic_proxy.CORS_ALLOWED_METHODS",
  "localstack.services.generic_proxy.CORS_EXPOSE_HEADERS",
  "localstack.services.generic_proxy.DuplexSocket",
  "localstack.services.generic_proxy.ENV_INTERNAL_TEST_RUN",
  "localstack.services.generic_proxy.EXTRA_CORS_ALLOWED_HEADERS",
  "localstack.services.generic_proxy.EXTRA_CORS_EXPOSE_HEADERS",
  "localstack.services.generic_proxy.FuncThread",
  "localstack.services.generic_proxy.GenericProxy",
  "localstack.services.generic_proxy.LOG",
  "localstack.services.generic_proxy.ProxyListener",
  "localstack.services.generic_proxy.QUIET",
  "localstack.services.generic_proxy.SERVER_CERT_PEM_FILE",
  "localstack.services.generic_proxy.TMP_FOLDER",
  "localstack.services.generic_proxy.ThreadedHTTPServer",
  "localstack.services.generic_proxy.USE_SSL",
  "localstack.services.generic_proxy.generate_ssl_cert",
  "localstack.services.generic_proxy.serve_flask_app",
  "localstack.services.generic_proxy.to_bytes",
  "localstack.services.iam",
  "localstack.services.iam.iam_listener",
  "localstack.services.iam.iam_listener.MOTO_ACCOUNT_ID",
  "localstack.services.iam.iam_listener.ProxyListener",
  "localstack.services.iam.iam_listener.ProxyListenerIAM",
  "localstack.services.iam.iam_listener.TEST_AWS_ACCOUNT_ID",
  "localstack.services.iam.iam_listener.UPDATE_IAM",
  "localstack.services.iam.iam_listener.aws_stack",
  "localstack.services.iam.iam_listener.to_str",
  "localstack.services.iam.iam_starter",
  "localstack.services.iam.iam_starter.DEFAULT_PORT_IAM_BACKEND",
  "localstack.services.iam.iam_starter.USER_RESPONSE_TEMPLATE",
  "localstack.services.iam.iam_starter.apply_patches",
  "localstack.services.iam.iam_starter.config",
  "localstack.services.iam.iam_starter.start_iam",
  "localstack.services.iam.iam_starter.start_moto_server",
  "localstack.services.infra",
  "localstack.services.infra.ConfigUpdateProxyListener",
  "localstack.services.infra.DEFAULT_BACKEND_HOST",
  "localstack.services.infra.DEFAULT_PORT_APIGATEWAY_BACKEND",
  "localstack.services.infra.DEFAULT_PORT_EVENTS_BACKEND",
  "localstack.services.infra.DEFAULT_PORT_SNS_BACKEND",
  "localstack.services.infra.DEFAULT_PORT_SSM_BACKEND",
  "localstack.services.infra.DEFAULT_SERVICE_PORTS",
  "localstack.services.infra.ENV_DEV",
  "localstack.services.infra.ENV_INTERNAL_TEST_RUN",
  "localstack.services.infra.FuncThread",
  "localstack.services.infra.GenericProxy",
  "localstack.services.infra.LOCALSTACK_INFRA_PROCESS",
  "localstack.services.infra.LOCALSTACK_VENV_FOLDER",
  "localstack.services.infra.LOG",
  "localstack.services.infra.ProxyListener",
  "localstack.services.infra.SERVICE_PLUGINS",
  "localstack.services.infra.SIGNAL_HANDLERS_SETUP",
  "localstack.services.infra.ShellCommandThread",
  "localstack.services.infra.TMP_THREADS",
  "localstack.services.infra.canonicalize_api_names",
  "localstack.services.infra.check_aws_credentials",
  "localstack.services.infra.check_infra",
  "localstack.services.infra.common",
  "localstack.services.infra.config",
  "localstack.services.infra.constants",
  "localstack.services.infra.do_run",
  "localstack.services.infra.dynamodbstreams_api",
  "localstack.services.infra.es_api",
  "localstack.services.infra.event_publisher",
  "localstack.services.infra.firehose_api",
  "localstack.services.infra.generic_proxy",
  "localstack.services.infra.get_free_tcp_port",
  "localstack.services.infra.get_service_protocol",
  "localstack.services.infra.get_service_status",
  "localstack.services.infra.get_services_status",
  "localstack.services.infra.in_ci",
  "localstack.services.infra.in_docker",
  "localstack.services.infra.install",
  "localstack.services.infra.is_debug",
  "localstack.services.infra.is_linux",
  "localstack.services.infra.is_port_open",
  "localstack.services.infra.lambda_api",
  "localstack.services.infra.load_plugins",
  "localstack.services.infra.multiserver",
  "localstack.services.infra.patch_urllib3_connection_pool",
  "localstack.services.infra.persistence",
  "localstack.services.infra.record_service_health",
  "localstack.services.infra.register_signal_handlers",
  "localstack.services.infra.run",
  "localstack.services.infra.set_service_status",
  "localstack.services.infra.setup_logging",
  "localstack.services.infra.start_apigateway",
  "localstack.services.infra.start_cloudwatch",
  "localstack.services.infra.start_dynamodbstreams",
  "localstack.services.infra.start_elasticsearch_service",
  "localstack.services.infra.start_events",
  "localstack.services.infra.start_firehose",
  "localstack.services.infra.start_infra",
  "localstack.services.infra.start_lambda",
  "localstack.services.infra.start_local_api",
  "localstack.services.infra.start_moto_server",
  "localstack.services.infra.start_proxy",
  "localstack.services.infra.start_proxy_for_service",
  "localstack.services.infra.start_redshift",
  "localstack.services.infra.start_route53",
  "localstack.services.infra.start_secretsmanager",
  "localstack.services.infra.start_ses",
  "localstack.services.infra.start_sns",
  "localstack.services.infra.start_ssm",
  "localstack.services.infra.start_sts",
  "localstack.services.infra.stop_infra",
  "localstack.services.infra.update_config_variable",
  "localstack.services.install",
  "localstack.services.install.APPLY_DDB_ALPINE_FIX",
  "localstack.services.install.DEFAULT_SERVICE_PORTS",
  "localstack.services.install.DYNAMODB_JAR_URL",
  "localstack.services.install.DYNAMODB_JAR_URL_ALPINE",
  "localstack.services.install.ELASTICMQ_JAR_URL",
  "localstack.services.install.ELASTICSEARCH_DELETE_MODULES",
  "localstack.services.install.ELASTICSEARCH_JAR_URL",
  "localstack.services.install.ELASTICSEARCH_PLUGIN_LIST",
  "localstack.services.install.INSTALL_DIR_DDB",
  "localstack.services.install.INSTALL_DIR_ELASTICMQ",
  "localstack.services.install.INSTALL_DIR_ES",
  "localstack.services.install.INSTALL_DIR_INFRA",
  "localstack.services.install.INSTALL_DIR_KCL",
  "localstack.services.install.INSTALL_DIR_KMS",
  "localstack.services.install.INSTALL_DIR_NPM",
  "localstack.services.install.INSTALL_DIR_STEPFUNCTIONS",
  "localstack.services.install.INSTALL_PATH_KMS_BINARY_PATTERN",
  "localstack.services.install.INSTALL_PATH_LOCALSTACK_FAT_JAR",
  "localstack.services.install.JAVAC_TARGET_VERSION",
  "localstack.services.install.KMS_URL_PATTERN",
  "localstack.services.install.LOCALSTACK_INFRA_PROCESS",
  "localstack.services.install.LOCALSTACK_MAVEN_VERSION",
  "localstack.services.install.LOGGER",
  "localstack.services.install.OVERWRITE_DDB_FILES_IN_DOCKER",
  "localstack.services.install.ROOT_PATH",
  "localstack.services.install.STEPFUNCTIONS_ZIP_URL",
  "localstack.services.install.STS_JAR_URL",
  "localstack.services.install.THIS_PATH",
  "localstack.services.install.URL_LOCALSTACK_FAT_JAR",
  "localstack.services.install.bootstrap",
  "localstack.services.install.chmod_r",
  "localstack.services.install.download",
  "localstack.services.install.download_and_extract_with_retry",
  "localstack.services.install.get_arch",
  "localstack.services.install.in_docker",
  "localstack.services.install.install_all_components",
  "localstack.services.install.install_amazon_kinesis_client_libs",
  "localstack.services.install.install_component",
  "localstack.services.install.install_dynamodb_local",
  "localstack.services.install.install_elasticmq",
  "localstack.services.install.install_elasticsearch",
  "localstack.services.install.install_kinesalite",
  "localstack.services.install.install_lambda_java_libs",
  "localstack.services.install.install_local_kms",
  "localstack.services.install.install_stepfunctions_local",
  "localstack.services.install.is_alpine",
  "localstack.services.install.load_file",
  "localstack.services.install.log_install_msg",
  "localstack.services.install.mkdir",
  "localstack.services.install.parallelize",
  "localstack.services.install.rm_rf",
  "localstack.services.install.run",
  "localstack.services.install.save_file",
  "localstack.services.install.untar",
  "localstack.services.install.unzip",
  "localstack.services.kinesis",
  "localstack.services.kinesis.kinesis_listener",
  "localstack.services.kinesis.kinesis_listener.ACTION_CREATE_STREAM",
  "localstack.services.kinesis.kinesis_listener.ACTION_DELETE_STREAM",
  "localstack.services.kinesis.kinesis_listener.ACTION_LIST_STREAMS",
  "localstack.services.kinesis.kinesis_listener.ACTION_PREFIX",
  "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORD",
  "localstack.services.kinesis.kinesis_listener.ACTION_PUT_RECORDS",
  "localstack.services.kinesis.kinesis_listener.ACTION_UPDATE_SHARD_COUNT",
  "localstack.services.kinesis.kinesis_listener.ProxyListener",
  "localstack.services.kinesis.kinesis_listener.ProxyListenerKinesis",
  "localstack.services.kinesis.kinesis_listener.STREAM_CONSUMERS",
  "localstack.services.kinesis.kinesis_listener.UPDATE_KINESIS",
  "localstack.services.kinesis.kinesis_listener.clone",
  "localstack.services.kinesis.kinesis_listener.config",
  "localstack.services.kinesis.kinesis_listener.event_publisher",
  "localstack.services.kinesis.kinesis_listener.json_safe",
  "localstack.services.kinesis.kinesis_listener.kinesis_error_response",
  "localstack.services.kinesis.kinesis_listener.lambda_api",
  "localstack.services.kinesis.kinesis_listener.to_str",
  "localstack.services.kinesis.kinesis_starter",
  "localstack.services.kinesis.kinesis_starter.DEFAULT_PORT_KINESIS_BACKEND",
  "localstack.services.kinesis.kinesis_starter.LOGGER",
  "localstack.services.kinesis.kinesis_starter.ROOT_PATH",
  "localstack.services.kinesis.kinesis_starter.aws_stack",
  "localstack.services.kinesis.kinesis_starter.check_kinesis",
  "localstack.services.kinesis.kinesis_starter.config",
  "localstack.services.kinesis.kinesis_starter.do_run",
  "localstack.services.kinesis.kinesis_starter.get_service_protocol",
  "localstack.services.kinesis.kinesis_starter.install",
  "localstack.services.kinesis.kinesis_starter.mkdir",
  "localstack.services.kinesis.kinesis_starter.start_kinesis",
  "localstack.services.kinesis.kinesis_starter.start_proxy_for_service",
  "localstack.services.kms",
  "localstack.services.kms.kms_starter",
  "localstack.services.kms.kms_starter.DEFAULT_PORT_KMS_BACKEND",
  "localstack.services.kms.kms_starter.INSTALL_PATH_KMS_BINARY_PATTERN",
  "localstack.services.kms.kms_starter.LOG",
  "localstack.services.kms.kms_starter.TEST_AWS_ACCOUNT_ID",
  "localstack.services.kms.kms_starter.config",
  "localstack.services.kms.kms_starter.do_run",
  "localstack.services.kms.kms_starter.get_arch",
  "localstack.services.kms.kms_starter.get_service_protocol",
  "localstack.services.kms.kms_starter.start_kms",
  "localstack.services.kms.kms_starter.start_proxy_for_service",
  "localstack.services.logs",
  "localstack.services.logs.logs_listener",
  "localstack.services.logs.logs_listener.APPLICATION_AMZ_JSON_1_1",
  "localstack.services.logs.logs_listener.ProxyListener",
  "localstack.services.logs.logs_listener.ProxyListenerCloudWatchLogs",
  "localstack.services.logs.logs_listener.UPDATE_LOGS",
  "localstack.services.logs.logs_listener.to_str",
  "localstack.services.logs.logs_starter",
  "localstack.services.logs.logs_starter.DEFAULT_PORT_LOGS_BACKEND",
  "localstack.services.logs.logs_starter.config",
  "localstack.services.logs.logs_starter.start_cloudwatch_logs",
  "localstack.services.logs.logs_starter.start_moto_server",
  "localstack.services.plugins",
  "localstack.services.plugins.LOG",
  "localstack.services.plugins.Plugin",
  "localstack.services.plugins.SERVICE_PLUGINS",
  "localstack.services.plugins.STATUSES",
  "localstack.services.plugins.canonicalize_api_names",
  "localstack.services.plugins.check_infra",
  "localstack.services.plugins.check_service_health",
  "localstack.services.plugins.config",
  "localstack.services.plugins.get_service_protocol",
  "localstack.services.plugins.get_services_health",
  "localstack.services.plugins.record_service_health",
  "localstack.services.plugins.register_plugin",
  "localstack.services.plugins.reload_services_health",
  "localstack.services.plugins.set_services_health",
  "localstack.services.s3",
  "localstack.services.s3.multipart_content",
  "localstack.services.s3.multipart_content._iter_multipart_parts",
  "localstack.services.s3.multipart_content.expand_multipart_filename",
  "localstack.services.s3.multipart_content.find_multipart_key_value",
  "localstack.services.s3.multipart_content.to_bytes",
  "localstack.services.s3.s3_listener",
  "localstack.services.s3.s3_listener.ALLOWED_HEADER_OVERRIDES",
  "localstack.services.s3.s3_listener.BUCKET_CORS",
  "localstack.services.s3.s3_listener.BUCKET_ENCRYPTIONS",
  "localstack.services.s3.s3_listener.BUCKET_LIFECYCLE",
  "localstack.services.s3.s3_listener.BUCKET_NAME_REGEX",
  "localstack.services.s3.s3_listener.BUCKET_REPLICATIONS",
  "localstack.services.s3.s3_listener.CONTENT_SHA256_HEADER",
  "localstack.services.s3.s3_listener.HOSTNAME",
  "localstack.services.s3.s3_listener.HOSTNAME_EXTERNAL",
  "localstack.services.s3.s3_listener.LOGGER",
  "localstack.services.s3.s3_listener.NOTIFICATION_DESTINATION_TYPES",
  "localstack.services.s3.s3_listener.OBJECT_LOCK_CONFIGS",
  "localstack.services.s3.s3_listener.OBJECT_METADATA_KEY_PREFIX",
  "localstack.services.s3.s3_listener.ProxyListener",
  "localstack.services.s3.s3_listener.ProxyListenerS3",
  "localstack.services.s3.s3_listener.S3_NOTIFICATIONS",
  "localstack.services.s3.s3_listener.STREAMING_HMAC_PAYLOAD",
  "localstack.services.s3.s3_listener.UPDATE_S3",
  "localstack.services.s3.s3_listener.XMLNS_S3",
  "localstack.services.s3.s3_listener._get_s3_filter",
  "localstack.services.s3.s3_listener.append_cors_headers",
  "localstack.services.s3.s3_listener.append_last_modified_headers",
  "localstack.services.s3.s3_listener.append_list_objects_marker",
  "localstack.services.s3.s3_listener.append_metadata_headers",
  "localstack.services.s3.s3_listener.aws_stack",
  "localstack.services.s3.s3_listener.bucket_exists",
  "localstack.services.s3.s3_listener.check_content_md5",
  "localstack.services.s3.s3_listener.clone",
  "localstack.services.s3.s3_listener.config",
  "localstack.services.s3.s3_listener.constants",
  "localstack.services.s3.s3_listener.delete_cors",
  "localstack.services.s3.s3_listener.error_response",
  "localstack.services.s3.s3_listener.event_publisher",
  "localstack.services.s3.s3_listener.event_type_matches",
  "localstack.services.s3.s3_listener.expand_redirect_url",
  "localstack.services.s3.s3_listener.filter_rules_match",
  "localstack.services.s3.s3_listener.fix_creation_date",
  "localstack.services.s3.s3_listener.fix_delete_objects_response",
  "localstack.services.s3.s3_listener.fix_etag_for_multipart",
  "localstack.services.s3.s3_listener.fix_location_constraint",
  "localstack.services.s3.s3_listener.fix_metadata_key_underscores",
  "localstack.services.s3.s3_listener.fix_range_content_type",
  "localstack.services.s3.s3_listener.get_bucket_name",
  "localstack.services.s3.s3_listener.get_cors",
  "localstack.services.s3.s3_listener.get_encryption",
  "localstack.services.s3.s3_listener.get_event_message",
  "localstack.services.s3.s3_listener.get_key_name",
  "localstack.services.s3.s3_listener.get_lifecycle",
  "localstack.services.s3.s3_listener.get_object_lock",
  "localstack.services.s3.s3_listener.get_replication",
  "localstack.services.s3.s3_listener.get_service_protocol",
  "localstack.services.s3.s3_listener.handle_notification_request",
  "localstack.services.s3.s3_listener.is_bucket_specified_in_domain_name",
  "localstack.services.s3.s3_listener.is_object_specific_request",
  "localstack.services.s3.s3_listener.md5",
  "localstack.services.s3.s3_listener.multipart_content",
  "localstack.services.s3.s3_listener.normalize_bucket_name",
  "localstack.services.s3.s3_listener.persistence",
  "localstack.services.s3.s3_listener.prefix_with_slash",
  "localstack.services.s3.s3_listener.remove_xml_preamble",
  "localstack.services.s3.s3_listener.requests_response",
  "localstack.services.s3.s3_listener.send_notification_for_subscriber",
  "localstack.services.s3.s3_listener.send_notifications",
  "localstack.services.s3.s3_listener.set_cors",
  "localstack.services.s3.s3_listener.set_encryption",
  "localstack.services.s3.s3_listener.set_lifecycle",
  "localstack.services.s3.s3_listener.set_object_lock",
  "localstack.services.s3.s3_listener.set_replication",
  "localstack.services.s3.s3_listener.short_uid",
  "localstack.services.s3.s3_listener.strip_chunk_signatures",
  "localstack.services.s3.s3_listener.timestamp_millis",
  "localstack.services.s3.s3_listener.to_bytes",
  "localstack.services.s3.s3_listener.to_str",
  "localstack.services.s3.s3_listener.uses_path_addressing",
  "localstack.services.s3.s3_starter",
  "localstack.services.s3.s3_starter.BUCKET_MARKER_LOCAL",
  "localstack.services.s3.s3_starter.DEFAULT_PORT_S3_BACKEND",
  "localstack.services.s3.s3_starter.LOG",
  "localstack.services.s3.s3_starter.S3_MAX_FILE_SIZE_MB",
  "localstack.services.s3.s3_starter.TMP_STATE",
  "localstack.services.s3.s3_starter.apply_patches",
  "localstack.services.s3.s3_starter.aws_stack",
  "localstack.services.s3.s3_starter.check_s3",
  "localstack.services.s3.s3_starter.config",
  "localstack.services.s3.s3_starter.s3_listener",
  "localstack.services.s3.s3_starter.start_moto_server",
  "localstack.services.s3.s3_starter.start_s3",
  "localstack.services.s3.s3_starter.wait_for_port_open",
  "localstack.services.secretsmanager",
  "localstack.services.secretsmanager.secretsmanager_starter",
  "localstack.services.secretsmanager.secretsmanager_starter.SECRET_ARN_STORAGE",
  "localstack.services.secretsmanager.secretsmanager_starter.apply_patches",
  "localstack.services.secretsmanager.secretsmanager_starter.config",
  "localstack.services.secretsmanager.secretsmanager_starter.start_moto_server",
  "localstack.services.secretsmanager.secretsmanager_starter.start_secretsmanager",
  "localstack.services.ses",
  "localstack.services.ses.ses_starter",
  "localstack.services.ses.ses_starter.apply_patches",
  "localstack.services.ses.ses_starter.config",
  "localstack.services.ses.ses_starter.start_moto_server",
  "localstack.services.ses.ses_starter.start_ses",
  "localstack.services.ses.ses_starter.to_str",
  "localstack.services.sns",
  "localstack.services.sns.sns_listener",
  "localstack.services.sns.sns_listener.LOGGER",
  "localstack.services.sns.sns_listener.MOTO_ACCOUNT_ID",
  "localstack.services.sns.sns_listener.ProxyListener",
  "localstack.services.sns.sns_listener.ProxyListenerSNS",
  "localstack.services.sns.sns_listener.SNS_SUBSCRIPTIONS",
  "localstack.services.sns.sns_listener.SNS_TAGS",
  "localstack.services.sns.sns_listener.SUBSCRIPTION_STATUS",
  "localstack.services.sns.sns_listener.TEST_AWS_ACCOUNT_ID",
  "localstack.services.sns.sns_listener.UPDATE_SNS",
  "localstack.services.sns.sns_listener._get_tags",
  "localstack.services.sns.sns_listener.aws_stack",
  "localstack.services.sns.sns_listener.check_filter_policy",
  "localstack.services.sns.sns_listener.create_sns_message_body",
  "localstack.services.sns.sns_listener.create_sqs_message_attributes",
  "localstack.services.sns.sns_listener.do_confirm_subscription",
  "localstack.services.sns.sns_listener.do_create_topic",
  "localstack.services.sns.sns_listener.do_delete_topic",
  "localstack.services.sns.sns_listener.do_list_tags_for_resource",
  "localstack.services.sns.sns_listener.do_subscribe",
  "localstack.services.sns.sns_listener.do_tag_resource",
  "localstack.services.sns.sns_listener.do_unsubscribe",
  "localstack.services.sns.sns_listener.do_untag_resource",
  "localstack.services.sns.sns_listener.evaluate_condition",
  "localstack.services.sns.sns_listener.evaluate_filter_policy_conditions",
  "localstack.services.sns.sns_listener.evaluate_numeric_condition",
  "localstack.services.sns.sns_listener.event_publisher",
  "localstack.services.sns.sns_listener.external_service_url",
  "localstack.services.sns.sns_listener.get_message_attributes",
  "localstack.services.sns.sns_listener.get_subscribe_attributes",
  "localstack.services.sns.sns_listener.get_subscription_by_arn",
  "localstack.services.sns.sns_listener.get_topic_by_arn",
  "localstack.services.sns.sns_listener.is_number",
  "localstack.services.sns.sns_listener.is_raw_message_delivery",
  "localstack.services.sns.sns_listener.lambda_api",
  "localstack.services.sns.sns_listener.make_error",
  "localstack.services.sns.sns_listener.make_response",
  "localstack.services.sns.sns_listener.publish_message",
  "localstack.services.sns.sns_listener.response_regex_replace",
  "localstack.services.sns.sns_listener.short_uid",
  "localstack.services.sns.sns_listener.sns_error_to_dead_letter_queue",
  "localstack.services.sns.sns_listener.timestamp_millis",
  "localstack.services.sns.sns_listener.to_str",
  "localstack.services.sqs",
  "localstack.services.sqs.sqs_listener",
  "localstack.services.sqs.sqs_listener.HOSTNAME_EXTERNAL",
  "localstack.services.sqs.sqs_listener.ProxyListener",
  "localstack.services.sqs.sqs_listener.ProxyListenerSQS",
  "localstack.services.sqs.sqs_listener.QUEUE_ATTRIBUTES",
  "localstack.services.sqs.sqs_listener.SQS_PORT_EXTERNAL",
  "localstack.services.sqs.sqs_listener.UNSUPPORTED_ATTRIBUTE_NAMES",
  "localstack.services.sqs.sqs_listener.UPDATE_SQS",
  "localstack.services.sqs.sqs_listener.VALID_ATTRIBUTE_NAMES",
  "localstack.services.sqs.sqs_listener.XMLNS_SQS",
  "localstack.services.sqs.sqs_listener._add_queue_attributes",
  "localstack.services.sqs.sqs_listener._fire_event",
  "localstack.services.sqs.sqs_listener._format_attributes",
  "localstack.services.sqs.sqs_listener._get_attributes_forward_request",
  "localstack.services.sqs.sqs_listener._list_dead_letter_source_queues",
  "localstack.services.sqs.sqs_listener._process_sent_message",
  "localstack.services.sqs.sqs_listener._queue_url",
  "localstack.services.sqs.sqs_listener._set_queue_attributes",
  "localstack.services.sqs.sqs_listener.aws_stack",
  "localstack.services.sqs.sqs_listener.clone",
  "localstack.services.sqs.sqs_listener.config",
  "localstack.services.sqs.sqs_listener.event_publisher",
  "localstack.services.sqs.sqs_listener.format_list_dl_source_queues_response",
  "localstack.services.sqs.sqs_listener.get_external_port",
  "localstack.services.sqs.sqs_listener.lambda_api",
  "localstack.services.sqs.sqs_listener.parse_request_data",
  "localstack.services.sqs.sqs_listener.requests_response",
  "localstack.services.sqs.sqs_listener.to_str",
  "localstack.services.sqs.sqs_starter",
  "localstack.services.sqs.sqs_starter.DEFAULT_PORT_SQS_BACKEND",
  "localstack.services.sqs.sqs_starter.INSTALL_DIR_ELASTICMQ",
  "localstack.services.sqs.sqs_starter.LOCALSTACK_HOSTNAME",
  "localstack.services.sqs.sqs_starter.LOG",
  "localstack.services.sqs.sqs_starter.MAX_HEAP_SIZE",
  "localstack.services.sqs.sqs_starter.TMP_FILES",
  "localstack.services.sqs.sqs_starter.TMP_FOLDER",
  "localstack.services.sqs.sqs_starter.aws_stack",
  "localstack.services.sqs.sqs_starter.check_sqs",
  "localstack.services.sqs.sqs_starter.config",
  "localstack.services.sqs.sqs_starter.do_run",
  "localstack.services.sqs.sqs_starter.get_service_protocol",
  "localstack.services.sqs.sqs_starter.install_elasticmq",
  "localstack.services.sqs.sqs_starter.save_file",
  "localstack.services.sqs.sqs_starter.short_uid",
  "localstack.services.sqs.sqs_starter.start_proxy_for_service",
  "localstack.services.sqs.sqs_starter.start_sqs",
  "localstack.services.sqs.sqs_starter.wait_for_port_open",
  "localstack.services.ssm",
  "localstack.services.ssm.ssm_listener",
  "localstack.services.ssm.ssm_listener.ACTION_GET_PARAM",
  "localstack.services.ssm.ssm_listener.ACTION_GET_PARAMS",
  "localstack.services.ssm.ssm_listener.ACTION_PUT_PARAM",
  "localstack.services.ssm.ssm_listener.ProxyListener",
  "localstack.services.ssm.ssm_listener.ProxyListenerSSM",
  "localstack.services.ssm.ssm_listener.UPDATE_SSM",
  "localstack.services.ssm.ssm_listener.normalize_name",
  "localstack.services.ssm.ssm_listener.to_str",
  "localstack.services.stepfunctions",
  "localstack.services.stepfunctions.stepfunctions_listener",
  "localstack.services.stepfunctions.stepfunctions_listener.LOG",
  "localstack.services.stepfunctions.stepfunctions_listener.ProxyListener",
  "localstack.services.stepfunctions.stepfunctions_listener.ProxyListenerStepFunctions",
  "localstack.services.stepfunctions.stepfunctions_listener.UPDATE_STEPFUNCTIONS",
  "localstack.services.stepfunctions.stepfunctions_listener.event_publisher",
  "localstack.services.stepfunctions.stepfunctions_listener.to_str",
  "localstack.services.stepfunctions.stepfunctions_starter",
  "localstack.services.stepfunctions.stepfunctions_starter.DEFAULT_PORT_STEPFUNCTIONS_BACKEND",
  "localstack.services.stepfunctions.stepfunctions_starter.LOG",
  "localstack.services.stepfunctions.stepfunctions_starter.MAX_HEAP_SIZE",
  "localstack.services.stepfunctions.stepfunctions_starter.TEST_AWS_ACCOUNT_ID",
  "localstack.services.stepfunctions.stepfunctions_starter.aws_stack",
  "localstack.services.stepfunctions.stepfunctions_starter.config",
  "localstack.services.stepfunctions.stepfunctions_starter.do_run",
  "localstack.services.stepfunctions.stepfunctions_starter.get_command",
  "localstack.services.stepfunctions.stepfunctions_starter.get_service_protocol",
  "localstack.services.stepfunctions.stepfunctions_starter.install",
  "localstack.services.stepfunctions.stepfunctions_starter.start_proxy_for_service",
  "localstack.services.stepfunctions.stepfunctions_starter.start_stepfunctions",
  "localstack.stepfunctions",
  "localstack.stepfunctions.models",
  "localstack.stepfunctions.models.StateMachine",
  "localstack.utils",
  "localstack.utils.analytics",
  "localstack.utils.analytics.event_publisher",
  "localstack.utils.analytics.event_publisher.API_ENDPOINT",
  "localstack.utils.analytics.event_publisher.AnalyticsEvent",
  "localstack.utils.analytics.event_publisher.ENV_INTERNAL_TEST_RUN",
  "localstack.utils.analytics.event_publisher.EVENT_APIGW_CREATE_API",
  "localstack.utils.analytics.event_publisher.EVENT_APIGW_DELETE_API",
  "localstack.utils.analytics.event_publisher.EVENT_CLOUDFORMATION_CREATE_STACK",
  "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_STREAM",
  "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_CREATE_TABLE",
  "localstack.utils.analytics.event_publisher.EVENT_DYNAMODB_DELETE_TABLE",
  "localstack.utils.analytics.event_publisher.EVENT_ES_CREATE_DOMAIN",
  "localstack.utils.analytics.event_publisher.EVENT_ES_DELETE_DOMAIN",
  "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_CREATE_STREAM",
  "localstack.utils.analytics.event_publisher.EVENT_FIREHOSE_DELETE_STREAM",
  "localstack.utils.analytics.event_publisher.EVENT_KINESIS_CREATE_STREAM",
  "localstack.utils.analytics.event_publisher.EVENT_KINESIS_DELETE_STREAM",
  "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_CREATE_FUNC",
  "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_DELETE_FUNC",
  "localstack.utils.analytics.event_publisher.EVENT_LAMBDA_INVOKE_FUNC",
  "localstack.utils.analytics.event_publisher.EVENT_QUEUE",
  "localstack.utils.analytics.event_publisher.EVENT_S3_CREATE_BUCKET",
  "localstack.utils.analytics.event_publisher.EVENT_S3_DELETE_BUCKET",
  "localstack.utils.analytics.event_publisher.EVENT_SNS_CREATE_TOPIC",
  "localstack.utils.analytics.event_publisher.EVENT_SNS_DELETE_TOPIC",
  "localstack.utils.analytics.event_publisher.EVENT_SQS_CREATE_QUEUE",
  "localstack.utils.analytics.event_publisher.EVENT_SQS_DELETE_QUEUE",
  "localstack.utils.analytics.event_publisher.EVENT_START_INFRA",
  "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_CREATE_SM",
  "localstack.utils.analytics.event_publisher.EVENT_STEPFUNCTIONS_DELETE_SM",
  "localstack.utils.analytics.event_publisher.EVENT_STOP_INFRA",
  "localstack.utils.analytics.event_publisher.FuncThread",
  "localstack.utils.analytics.event_publisher.JsonObject",
  "localstack.utils.analytics.event_publisher.MACHINE_ID",
  "localstack.utils.analytics.event_publisher.PROCESS_ID",
  "localstack.utils.analytics.event_publisher.config",
  "localstack.utils.analytics.event_publisher.fire_event",
  "localstack.utils.analytics.event_publisher.get_config_file_homedir",
  "localstack.utils.analytics.event_publisher.get_config_file_tempdir",
  "localstack.utils.analytics.event_publisher.get_hash",
  "localstack.utils.analytics.event_publisher.get_machine_id",
  "localstack.utils.analytics.event_publisher.get_or_create_file",
  "localstack.utils.analytics.event_publisher.get_process_id",
  "localstack.utils.analytics.event_publisher.is_travis",
  "localstack.utils.analytics.event_publisher.load_file",
  "localstack.utils.analytics.event_publisher.poll_and_send_messages",
  "localstack.utils.analytics.event_publisher.read_api_key_safe",
  "localstack.utils.analytics.event_publisher.safe_requests",
  "localstack.utils.analytics.event_publisher.save_file",
  "localstack.utils.analytics.event_publisher.short_uid",
  "localstack.utils.analytics.event_publisher.timestamp",
  "localstack.utils.analytics.event_publisher.to_str",
  "localstack.utils.analytics.profiler",
  "localstack.utils.analytics.profiler.LOCALSTACK_ROOT_FOLDER",
  "localstack.utils.analytics.profiler.LOG",
  "localstack.utils.analytics.profiler.PROFILED_METHODS",
  "localstack.utils.analytics.profiler.profiled",
  "localstack.utils.aws",
  "localstack.utils.aws.aws_models",
  "localstack.utils.aws.aws_models.Component",
  "localstack.utils.aws.aws_models.DynamoDB",
  "localstack.utils.aws.aws_models.ElasticSearch",
  "localstack.utils.aws.aws_models.EventSource",
  "localstack.utils.aws.aws_models.FirehoseStream",
  "localstack.utils.aws.aws_models.KinesisShard",
  "localstack.utils.aws.aws_models.KinesisStream",
  "localstack.utils.aws.aws_models.LambdaFunction",
  "localstack.utils.aws.aws_models.S3Bucket",
  "localstack.utils.aws.aws_models.S3Notification",
  "localstack.utils.aws.aws_models.SqsQueue",
  "localstack.utils.aws.aws_models.isoformat_milliseconds",
  "localstack.utils.aws.aws_models.long",
  "localstack.utils.aws.aws_responses",
  "localstack.utils.aws.aws_responses.flask_error_response",
  "localstack.utils.aws.aws_responses.flask_to_requests_response",
  "localstack.utils.aws.aws_responses.requests_error_response",
  "localstack.utils.aws.aws_responses.requests_response",
  "localstack.utils.aws.aws_responses.requests_to_flask_response",
  "localstack.utils.aws.aws_responses.response_regex_replace",
  "localstack.utils.aws.aws_responses.to_str",
  "localstack.utils.aws.aws_stack",
  "localstack.utils.aws.aws_stack.APPLICATION_AMZ_JSON_1_0",
  "localstack.utils.aws.aws_stack.APPLICATION_AMZ_JSON_1_1",
  "localstack.utils.aws.aws_stack.APPLICATION_X_WWW_FORM_URLENCODED",
  "localstack.utils.aws.aws_stack.BOTO_CLIENTS_CACHE",
  "localstack.utils.aws.aws_stack.Boto3Session",
  "localstack.utils.aws.aws_stack.CREATE_NEW_SESSION_PER_BOTO3_CONNECTION",
  "localstack.utils.aws.aws_stack.CUSTOM_BOTO3_SESSION",
  "localstack.utils.aws.aws_stack.DEFAULT_TIMER_LOOP_SECONDS",
  "localstack.utils.aws.aws_stack.ENV_ACCESS_KEY",
  "localstack.utils.aws.aws_stack.ENV_DEV",
  "localstack.utils.aws.aws_stack.ENV_SECRET_KEY",
  "localstack.utils.aws.aws_stack.ENV_SESSION_TOKEN",
  "localstack.utils.aws.aws_stack.Environment",
  "localstack.utils.aws.aws_stack.INITIAL_BOTO3_SESSION",
  "localstack.utils.aws.aws_stack.KinesisStream",
  "localstack.utils.aws.aws_stack.LOCALHOST",
  "localstack.utils.aws.aws_stack.LOCAL_REGION",
  "localstack.utils.aws.aws_stack.LOG",
  "localstack.utils.aws.aws_stack.MOTO_ACCOUNT_ID",
  "localstack.utils.aws.aws_stack.PREDEFINED_ENVIRONMENTS",
  "localstack.utils.aws.aws_stack.REGION_LOCAL",
  "localstack.utils.aws.aws_stack.SQS_ARN_TO_URL_CACHE",
  "localstack.utils.aws.aws_stack.TEST_AWS_ACCOUNT_ID",
  "localstack.utils.aws.aws_stack.VelocityInput",
  "localstack.utils.aws.aws_stack.VelocityUtil",
  "localstack.utils.aws.aws_stack._resource_arn",
  "localstack.utils.aws.aws_stack.apigateway_invocations_arn",
  "localstack.utils.aws.aws_stack.apigateway_restapi_arn",
  "localstack.utils.aws.aws_stack.check_valid_region",
  "localstack.utils.aws.aws_stack.cloudformation_stack_arn",
  "localstack.utils.aws.aws_stack.cognito_user_pool_arn",
  "localstack.utils.aws.aws_stack.config",
  "localstack.utils.aws.aws_stack.connect_elasticsearch",
  "localstack.utils.aws.aws_stack.connect_to_resource",
  "localstack.utils.aws.aws_stack.connect_to_service",
  "localstack.utils.aws.aws_stack.create_api_gateway",
  "localstack.utils.aws.aws_stack.create_dynamodb_table",
  "localstack.utils.aws.aws_stack.create_kinesis_stream",
  "localstack.utils.aws.aws_stack.create_sqs_queue",
  "localstack.utils.aws.aws_stack.dynamodb_get_item_raw",
  "localstack.utils.aws.aws_stack.dynamodb_stream_arn",
  "localstack.utils.aws.aws_stack.dynamodb_table_arn",
  "localstack.utils.aws.aws_stack.es_domain_arn",
  "localstack.utils.aws.aws_stack.extract_region_from_arn",
  "localstack.utils.aws.aws_stack.extract_region_from_auth_header",
  "localstack.utils.aws.aws_stack.firehose_stream_arn",
  "localstack.utils.aws.aws_stack.fix_account_id_in_arns",
  "localstack.utils.aws.aws_stack.fix_arn",
  "localstack.utils.aws.aws_stack.get_account_id",
  "localstack.utils.aws.aws_stack.get_apigateway_integration",
  "localstack.utils.aws.aws_stack.get_apigateway_path_for_resource",
  "localstack.utils.aws.aws_stack.get_apigateway_resource_for_path",
  "localstack.utils.aws.aws_stack.get_boto3_credentials",
  "localstack.utils.aws.aws_stack.get_boto3_session",
  "localstack.utils.aws.aws_stack.get_elasticsearch_endpoint",
  "localstack.utils.aws.aws_stack.get_environment",
  "localstack.utils.aws.aws_stack.get_iam_role",
  "localstack.utils.aws.aws_stack.get_local_region",
  "localstack.utils.aws.aws_stack.get_local_service_url",
  "localstack.utils.aws.aws_stack.get_region",
  "localstack.utils.aws.aws_stack.get_s3_client",
  "localstack.utils.aws.aws_stack.get_service_protocol",
  "localstack.utils.aws.aws_stack.get_sqs_queue_url",
  "localstack.utils.aws.aws_stack.iam_resource_arn",
  "localstack.utils.aws.aws_stack.is_local_env",
  "localstack.utils.aws.aws_stack.is_port_open",
  "localstack.utils.aws.aws_stack.is_service_enabled",
  "localstack.utils.aws.aws_stack.is_string",
  "localstack.utils.aws.aws_stack.kinesis_get_latest_records",
  "localstack.utils.aws.aws_stack.kinesis_stream_arn",
  "localstack.utils.aws.aws_stack.lambda_function_arn",
  "localstack.utils.aws.aws_stack.lambda_function_name",
  "localstack.utils.aws.aws_stack.lambda_function_or_layer_arn",
  "localstack.utils.aws.aws_stack.lambda_layer_arn",
  "localstack.utils.aws.aws_stack.log_group_arn",
  "localstack.utils.aws.aws_stack.make_http_request",
  "localstack.utils.aws.aws_stack.mock_aws_request_headers",
  "localstack.utils.aws.aws_stack.render_velocity_template",
  "localstack.utils.aws.aws_stack.role_arn",
  "localstack.utils.aws.aws_stack.run_safe",
  "localstack.utils.aws.aws_stack.s3_bucket_arn",
  "localstack.utils.aws.aws_stack.secretsmanager_secret_arn",
  "localstack.utils.aws.aws_stack.set_default_region_in_headers",
  "localstack.utils.aws.aws_stack.sns_topic_arn",
  "localstack.utils.aws.aws_stack.sqs_queue_arn",
  "localstack.utils.aws.aws_stack.sqs_queue_name",
  "localstack.utils.aws.aws_stack.sqs_queue_url_for_arn",
  "localstack.utils.aws.aws_stack.sqs_receive_message",
  "localstack.utils.aws.aws_stack.state_machine_arn",
  "localstack.utils.aws.aws_stack.stepfunctions_activity_arn",
  "localstack.utils.aws.aws_stack.to_str",
  "localstack.utils.aws.dead_letter_queue",
  "localstack.utils.aws.dead_letter_queue.LOG",
  "localstack.utils.aws.dead_letter_queue._send_to_dead_letter_queue",
  "localstack.utils.aws.dead_letter_queue.aws_stack",
  "localstack.utils.aws.dead_letter_queue.lambda_error_to_dead_letter_queue",
  "localstack.utils.aws.dead_letter_queue.sns_error_to_dead_letter_queue",
  "localstack.utils.aws.dead_letter_queue.sqs_error_to_dead_letter_queue",
  "localstack.utils.bootstrap",
  "localstack.utils.bootstrap.API_COMPOSITES",
  "localstack.utils.bootstrap.API_DEPENDENCIES",
  "localstack.utils.bootstrap.BASIC_LIB_MARKER",
  "localstack.utils.bootstrap.DO_CHMOD_DOCKER_SOCK",
  "localstack.utils.bootstrap.ENV_SCRIPT_STARTING_DOCKER",
  "localstack.utils.bootstrap.FuncThread",
  "localstack.utils.bootstrap.IGNORED_LIB_MARKER",
  "localstack.utils.bootstrap.LOG",
  "localstack.utils.bootstrap.LOG_DATE_FORMAT",
  "localstack.utils.bootstrap.LOG_FORMAT",
  "localstack.utils.bootstrap.MAIN_CONTAINER_NAME",
  "localstack.utils.bootstrap.PLUGINS_LOADED",
  "localstack.utils.bootstrap.PLUGIN_MODULES",
  "localstack.utils.bootstrap.PLUGIN_SCOPE_COMMANDS",
  "localstack.utils.bootstrap.PLUGIN_SCOPE_SERVICES",
  "localstack.utils.bootstrap.PortMappings",
  "localstack.utils.bootstrap.bootstrap_installation",
  "localstack.utils.bootstrap.canonicalize_api_names",
  "localstack.utils.bootstrap.config",
  "localstack.utils.bootstrap.constants",
  "localstack.utils.bootstrap.docker_container_running",
  "localstack.utils.bootstrap.get_docker_container_names",
  "localstack.utils.bootstrap.in_ci",
  "localstack.utils.bootstrap.install_dependencies",
  "localstack.utils.bootstrap.is_api_enabled",
  "localstack.utils.bootstrap.is_debug",
  "localstack.utils.bootstrap.is_linux",
  "localstack.utils.bootstrap.is_mac_os",
  "localstack.utils.bootstrap.load_plugin_from_path",
  "localstack.utils.bootstrap.load_plugins",
  "localstack.utils.bootstrap.mkdir",
  "localstack.utils.bootstrap.mutex_popen",
  "localstack.utils.bootstrap.now_utc",
  "localstack.utils.bootstrap.run",
  "localstack.utils.bootstrap.setup_logging",
  "localstack.utils.bootstrap.start_infra_in_docker",
  "localstack.utils.bootstrap.start_infra_locally",
  "localstack.utils.bootstrap.to_str",
  "localstack.utils.cli",
  "localstack.utils.cli.MAIN_CONTAINER_NAME",
  "localstack.utils.cli.cmd_infra",
  "localstack.utils.cli.cmd_ssh",
  "localstack.utils.cli.cmd_web",
  "localstack.utils.cli.config",
  "localstack.utils.cli.docker_container_running",
  "localstack.utils.cli.run",
  "localstack.utils.cli.start_infra_in_docker",
  "localstack.utils.cli.start_infra_locally",
  "localstack.utils.cloudformation",
  "localstack.utils.cloudformation.template_deployer",
  "localstack.utils.cloudformation.template_deployer.ACTION_CREATE",
  "localstack.utils.cloudformation.template_deployer.ACTION_DELETE",
  "localstack.utils.cloudformation.template_deployer.LOG",
  "localstack.utils.cloudformation.template_deployer.NoDatesSafeLoader",
  "localstack.utils.cloudformation.template_deployer.PLACEHOLDER_RESOURCE_NAME",
  "localstack.utils.cloudformation.template_deployer.RESOURCE_TO_FUNCTION",
  "localstack.utils.cloudformation.template_deployer.STATIC_REFS",
  "localstack.utils.cloudformation.template_deployer.UPDATEABLE_RESOURCES",
  "localstack.utils.cloudformation.template_deployer.all_dependencies_satisfied",
  "localstack.utils.cloudformation.template_deployer.all_resource_dependencies_satisfied",
  "localstack.utils.cloudformation.template_deployer.aws_stack",
  "localstack.utils.cloudformation.template_deployer.check_not_found_exception",
  "localstack.utils.cloudformation.template_deployer.common",
  "localstack.utils.cloudformation.template_deployer.configure_resource_via_sdk",
  "localstack.utils.cloudformation.template_deployer.convert_acl_cf_to_s3",
  "localstack.utils.cloudformation.template_deployer.convert_data_types",
  "localstack.utils.cloudformation.template_deployer.create_zip_file",
  "localstack.utils.cloudformation.template_deployer.delete_resource",
  "localstack.utils.cloudformation.template_deployer.delete_stack",
  "localstack.utils.cloudformation.template_deployer.deploy_resource",
  "localstack.utils.cloudformation.template_deployer.deploy_template",
  "localstack.utils.cloudformation.template_deployer.describe_stack_resource",
  "localstack.utils.cloudformation.template_deployer.dump_json_params",
  "localstack.utils.cloudformation.template_deployer.es_add_tags_params",
  "localstack.utils.cloudformation.template_deployer.execute_resource_action",
  "localstack.utils.cloudformation.template_deployer.extract_resource_attribute",
  "localstack.utils.cloudformation.template_deployer.fix_account_id_in_arns",
  "localstack.utils.cloudformation.template_deployer.get_bucket_location_config",
  "localstack.utils.cloudformation.template_deployer.get_client",
  "localstack.utils.cloudformation.template_deployer.get_handler_file_from_name",
  "localstack.utils.cloudformation.template_deployer.get_lambda_code_param",
  "localstack.utils.cloudformation.template_deployer.get_nested_stack_params",
  "localstack.utils.cloudformation.template_deployer.get_resource_dependencies",
  "localstack.utils.cloudformation.template_deployer.get_resource_name",
  "localstack.utils.cloudformation.template_deployer.get_resource_type",
  "localstack.utils.cloudformation.template_deployer.get_role_arn",
  "localstack.utils.cloudformation.template_deployer.get_service_name",
  "localstack.utils.cloudformation.template_deployer.get_stack_parameter",
  "localstack.utils.cloudformation.template_deployer.is_deployable_resource",
  "localstack.utils.cloudformation.template_deployer.is_deployed",
  "localstack.utils.cloudformation.template_deployer.is_updateable",
  "localstack.utils.cloudformation.template_deployer.lambda_get_params",
  "localstack.utils.cloudformation.template_deployer.merge_parameters",
  "localstack.utils.cloudformation.template_deployer.param_defaults",
  "localstack.utils.cloudformation.template_deployer.params_dict_to_list",
  "localstack.utils.cloudformation.template_deployer.params_list_to_dict",
  "localstack.utils.cloudformation.template_deployer.params_select_attributes",
  "localstack.utils.cloudformation.template_deployer.parse_template",
  "localstack.utils.cloudformation.template_deployer.remove_none_values",
  "localstack.utils.cloudformation.template_deployer.rename_params",
  "localstack.utils.cloudformation.template_deployer.resolve_ref",
  "localstack.utils.cloudformation.template_deployer.resources_to_deploy_next",
  "localstack.utils.cloudformation.template_deployer.retrieve_resource_details",
  "localstack.utils.cloudformation.template_deployer.retrieve_topic_arn",
  "localstack.utils.cloudformation.template_deployer.s3_bucket_notification_config",
  "localstack.utils.cloudformation.template_deployer.s3_listener",
  "localstack.utils.cloudformation.template_deployer.select_parameters",
  "localstack.utils.cloudformation.template_deployer.should_be_deployed",
  "localstack.utils.cloudformation.template_deployer.sns_subscription_params",
  "localstack.utils.cloudformation.template_deployer.str_or_none",
  "localstack.utils.cloudformation.template_deployer.template_to_json",
  "localstack.utils.cloudformation.template_deployer.update_resource",
  "localstack.utils.cloudwatch",
  "localstack.utils.cloudwatch.cloudwatch_util",
  "localstack.utils.cloudwatch.cloudwatch_util.LOG",
  "localstack.utils.cloudwatch.cloudwatch_util._func_name",
  "localstack.utils.cloudwatch.cloudwatch_util.aws_stack",
  "localstack.utils.cloudwatch.cloudwatch_util.cloudwatched",
  "localstack.utils.cloudwatch.cloudwatch_util.config",
  "localstack.utils.cloudwatch.cloudwatch_util.dimension_lambda",
  "localstack.utils.cloudwatch.cloudwatch_util.event_publisher",
  "localstack.utils.cloudwatch.cloudwatch_util.now_utc",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_error",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_event",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_duration",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_error",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_metric",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_lambda_result",
  "localstack.utils.cloudwatch.cloudwatch_util.publish_result",
  "localstack.utils.cloudwatch.cloudwatch_util.store_cloudwatch_logs",
  "localstack.utils.cloudwatch.cloudwatch_util.to_str",
  "localstack.utils.common",
  "localstack.utils.common.CACHE",
  "localstack.utils.common.CACHE_CLEAN_TIMEOUT",
  "localstack.utils.common.CACHE_FILE_PATTERN",
  "localstack.utils.common.CACHE_MAX_AGE",
  "localstack.utils.common.CODEC_HANDLER_UNDERSCORE",
  "localstack.utils.common.CaptureOutput",
  "localstack.utils.common.CustomEncoder",
  "localstack.utils.common.DEFAULT_ENCODING",
  "localstack.utils.common.DOWNLOAD_CHUNK_SIZE",
  "localstack.utils.common.ENV_DEV",
  "localstack.utils.common.FuncThread",
  "localstack.utils.common.INFRA_STOPPED",
  "localstack.utils.common.JsonObject",
  "localstack.utils.common.LOG",
  "localstack.utils.common.NetrcBypassAuth",
  "localstack.utils.common.SSL_CERT_LOCK",
  "localstack.utils.common.SafeStringIO",
  "localstack.utils.common.ShellCommandThread",
  "localstack.utils.common.TIMESTAMP_FORMAT",
  "localstack.utils.common.TIMESTAMP_FORMAT_MICROS",
  "localstack.utils.common.TMP_FILES",
  "localstack.utils.common.TMP_PROCESSES",
  "localstack.utils.common.TMP_THREADS",
  "localstack.utils.common._RequestsSafe",
  "localstack.utils.common._unzip_file_entry",
  "localstack.utils.common.base64_to_hex",
  "localstack.utils.common.bootstrap",
  "localstack.utils.common.chmod_r",
  "localstack.utils.common.chown_r",
  "localstack.utils.common.clean_cache",
  "localstack.utils.common.cleanup",
  "localstack.utils.common.clear_list",
  "localstack.utils.common.clone",
  "localstack.utils.common.config",
  "localstack.utils.common.cp_r",
  "localstack.utils.common.download",
  "localstack.utils.common.dump_thread_info",
  "localstack.utils.common.ensure_readable",
  "localstack.utils.common.first_char_to_lower",
  "localstack.utils.common.fix_json_keys",
  "localstack.utils.common.generate_ssl_cert",
  "localstack.utils.common.get_arch",
  "localstack.utils.common.get_docker_container_names",
  "localstack.utils.common.get_free_tcp_port",
  "localstack.utils.common.get_service_protocol",
  "localstack.utils.common.has_docker",
  "localstack.utils.common.in_docker",
  "localstack.utils.common.is_alpine",
  "localstack.utils.common.is_base64",
  "localstack.utils.common.is_ip_address",
  "localstack.utils.common.is_jar_archive",
  "localstack.utils.common.is_linux",
  "localstack.utils.common.is_mac_os",
  "localstack.utils.common.is_number",
  "localstack.utils.common.is_port_open",
  "localstack.utils.common.is_root",
  "localstack.utils.common.is_string",
  "localstack.utils.common.is_zip_file",
  "localstack.utils.common.isoformat_milliseconds",
  "localstack.utils.common.json_safe",
  "localstack.utils.common.last_cache_clean_time",
  "localstack.utils.common.load_file",
  "localstack.utils.common.make_http_request",
  "localstack.utils.common.md5",
  "localstack.utils.common.merge_dicts",
  "localstack.utils.common.merge_recursive",
  "localstack.utils.common.mkdir",
  "localstack.utils.common.mktime",
  "localstack.utils.common.mutex_clean",
  "localstack.utils.common.new_tmp_dir",
  "localstack.utils.common.new_tmp_file",
  "localstack.utils.common.now",
  "localstack.utils.common.now_utc",
  "localstack.utils.common.obj_to_xml",
  "localstack.utils.common.parallelize",
  "localstack.utils.common.parse_chunked_data",
  "localstack.utils.common.recurse_object",
  "localstack.utils.common.remove_non_ascii",
  "localstack.utils.common.retry",
  "localstack.utils.common.rm_rf",
  "localstack.utils.common.run",
  "localstack.utils.common.run_safe",
  "localstack.utils.common.safe_requests",
  "localstack.utils.common.save_file",
  "localstack.utils.common.short_uid",
  "localstack.utils.common.synchronized",
  "localstack.utils.common.timestamp",
  "localstack.utils.common.timestamp_millis",
  "localstack.utils.common.to_bytes",
  "localstack.utils.common.to_str",
  "localstack.utils.common.truncate",
  "localstack.utils.common.untar",
  "localstack.utils.common.unzip",
  "localstack.utils.common.wait_for_port_open",
  "localstack.utils.common.zip_contains_jar_entries",
  "localstack.utils.kinesis",
  "localstack.utils.kinesis.kclipy_helper.aws_stack",
  "localstack.utils.kinesis.kclipy_helper.create_config_file",
  "localstack.utils.kinesis.kclipy_helper.get_dir_of_file",
  "localstack.utils.kinesis.kclipy_helper.get_kcl_app_command",
  "localstack.utils.kinesis.kclipy_helper.get_kcl_classpath",
  "localstack.utils.kinesis.kclipy_helper.get_kcl_dir",
  "localstack.utils.kinesis.kclipy_helper.get_kcl_jar_path",
  "localstack.utils.kinesis.kclipy_helper.save_file",
  "localstack.utils.kinesis.kinesis_connector",
  "localstack.utils.kinesis.kinesis_util.EventFileReaderThread",
  "localstack.utils.kinesis.kinesis_util.FuncThread",
  "localstack.utils.kinesis.kinesis_util.LOGGER",
  "localstack.utils.kinesis.kinesis_util.truncate",
  "localstack.utils.persistence",
  "localstack.utils.persistence.API_FILE_PATTERN",
  "localstack.utils.persistence.CURRENTLY_REPLAYING",
  "localstack.utils.persistence.DATA_DIR",
  "localstack.utils.persistence.LOG",
  "localstack.utils.persistence.USE_SINGLE_DUMP_FILE",
  "localstack.utils.persistence.aws_stack",
  "localstack.utils.persistence.get_file_path",
  "localstack.utils.persistence.prepare_replay_data",
  "localstack.utils.persistence.record",
  "localstack.utils.persistence.replay",
  "localstack.utils.persistence.restore_persisted_data",
  "localstack.utils.persistence.should_record",
  "localstack.utils.persistence.to_bytes",
  "localstack.utils.persistence.to_str",
  "localstack.utils.server",
  "localstack.utils.server.multiserver",
  "localstack.utils.tagging",
  "localstack.utils.tagging.TaggingService",
  "localstack.utils.testutil",
  "localstack.utils.testutil.ARCHIVE_DIR_PREFIX",
  "localstack.utils.testutil.DEFAULT_GET_LOG_EVENTS_DELAY",
  "localstack.utils.testutil.LAMBDA_DEFAULT_HANDLER",
  "localstack.utils.testutil.LAMBDA_DEFAULT_RUNTIME",
  "localstack.utils.testutil.LAMBDA_DEFAULT_STARTING_POSITION",
  "localstack.utils.testutil.LAMBDA_DEFAULT_TIMEOUT",
  "localstack.utils.testutil.LAMBDA_TEST_ROLE",
  "localstack.utils.testutil.LOCALSTACK_ROOT_FOLDER",
  "localstack.utils.testutil.LOCALSTACK_VENV_FOLDER",
  "localstack.utils.testutil.TEST_AWS_ACCOUNT_ID",
  "localstack.utils.testutil.TMP_FILES",
  "localstack.utils.testutil.assert_object",
  "localstack.utils.testutil.aws_stack",
  "localstack.utils.testutil.copy_dir",
  "localstack.utils.testutil.create_lambda_archive",
  "localstack.utils.testutil.create_lambda_function",
  "localstack.utils.testutil.create_sqs_queue",
  "localstack.utils.testutil.create_zip_file",
  "localstack.utils.testutil.delete_lambda_function",
  "localstack.utils.testutil.download_s3_object",
  "localstack.utils.testutil.find_object",
  "localstack.utils.testutil.find_recursive",
  "localstack.utils.testutil.get_handler_file_from_name",
  "localstack.utils.testutil.get_lambda_log_events",
  "localstack.utils.testutil.get_lambda_log_group_name",
  "localstack.utils.testutil.get_sample_arn",
  "localstack.utils.testutil.is_alpine",
  "localstack.utils.testutil.list_all_s3_objects",
  "localstack.utils.testutil.load_file",
  "localstack.utils.testutil.map_all_s3_objects",
  "localstack.utils.testutil.mkdir",
  "localstack.utils.testutil.rm_dir",
  "localstack.utils.testutil.run",
  "localstack.utils.testutil.save_file",
  "localstack.utils.testutil.send_describe_dynamodb_ttl_request",
  "localstack.utils.testutil.send_dynamodb_request",
  "localstack.utils.testutil.send_update_dynamodb_ttl_request",
  "localstack.utils.testutil.to_str"
 ]
}