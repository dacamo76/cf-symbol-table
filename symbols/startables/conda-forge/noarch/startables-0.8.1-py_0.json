{
 "errors": {},
 "symbols": [
  "pyscheme.Environment",
  "pyscheme.Expression",
  "pyscheme.atoms",
  "pyscheme.atoms.Symbol",
  "pyscheme.atoms.atom",
  "pyscheme.core",
  "pyscheme.core.Environment",
  "pyscheme.core.Expression",
  "pyscheme.core.Number",
  "pyscheme.core.Procedure",
  "pyscheme.core.atoms",
  "pyscheme.core.evaluate",
  "pyscheme.core.is_symbol",
  "pyscheme.make_root_environment",
  "pyscheme.parse",
  "pyscheme.parse.parse_algebra",
  "pyscheme.parse.parse_expression",
  "pyscheme.parse.parse_scheme",
  "pyscheme.parse_algebra",
  "pyscheme.parse_algebra.Expression",
  "pyscheme.parse_algebra.Number",
  "pyscheme.parse_algebra.Symbol",
  "pyscheme.parse_algebra.Token",
  "pyscheme.parse_algebra.TokenType",
  "pyscheme.parse_algebra._TOKEN_RE",
  "pyscheme.parse_algebra.atom",
  "pyscheme.parse_algebra.atoms",
  "pyscheme.parse_algebra.parse",
  "pyscheme.parse_algebra.tokenize",
  "pyscheme.parse_expression",
  "pyscheme.parse_scheme",
  "pyscheme.parse_scheme.Expression",
  "pyscheme.parse_scheme.LookaheadIterator",
  "pyscheme.parse_scheme.Number",
  "pyscheme.parse_scheme.Token",
  "pyscheme.parse_scheme.atom",
  "pyscheme.parse_scheme.atoms",
  "pyscheme.parse_scheme.parse",
  "pyscheme.parse_scheme.parse_expression",
  "pyscheme.parse_scheme.tokenize",
  "pyscheme.special_forms",
  "pyscheme.special_forms.Environment",
  "pyscheme.special_forms.Expression",
  "pyscheme.special_forms.Number",
  "pyscheme.special_forms.Symbol",
  "pyscheme.special_forms.atoms",
  "pyscheme.special_forms.make_root_environment",
  "pyscheme.test",
  "pyscheme.test.test_core",
  "pyscheme.test.test_core.Environment",
  "pyscheme.test.test_core.Symbol",
  "pyscheme.test.test_core.evaluate",
  "pyscheme.test.test_core.test_definitions",
  "pyscheme.test.test_core.test_eval",
  "pyscheme.test.test_core.test_lambda",
  "pyscheme.test.test_package",
  "pyscheme.test.test_package.make_root_environment",
  "pyscheme.test.test_package.parse_expression",
  "pyscheme.test.test_package.test_main_use_case",
  "pyscheme.test.test_parse_algebra",
  "pyscheme.test.test_parse_algebra.Symbol",
  "pyscheme.test.test_parse_algebra.parse",
  "pyscheme.test.test_parse_algebra.test_parse",
  "pyscheme.test.test_parse_algebra.test_tokenize",
  "pyscheme.test.test_parse_algebra.tokenize",
  "pyscheme.test.test_parse_scheme",
  "pyscheme.test.test_parse_scheme.Symbol",
  "pyscheme.test.test_parse_scheme.parse_expression",
  "pyscheme.test.test_parse_scheme.test_parse",
  "pyscheme.test.test_parse_scheme.test_tokenize",
  "pyscheme.test.test_parse_scheme.tokenize",
  "pyscheme.test.test_special_forms",
  "pyscheme.test.test_special_forms.Symbol",
  "pyscheme.test.test_special_forms.make_root_environment",
  "pyscheme.test.test_special_forms.test_algebra",
  "pyscheme.typing",
  "pyscheme.typing.Expression",
  "pyscheme.typing.Number",
  "startables.Bundle",
  "startables.ColumnMetadata",
  "startables.Table",
  "startables.__version__",
  "startables.read_csv",
  "startables.read_excel",
  "startables.startables",
  "startables.startables.Bundle",
  "startables.startables.ColumnMetadata",
  "startables.startables.DEFAULT_DESTINATION",
  "startables.startables.DEFAULT_UNIT_STR",
  "startables.startables.EXPRESSION_RE",
  "startables.startables.EvaluationContext",
  "startables.startables.ExpressionCell",
  "startables.startables.NO_DATA_MARKERS_ON_READ",
  "startables.startables.NO_DATA_MARKER_ON_WRITE",
  "startables.startables.Symbol",
  "startables.startables.TEXT_COL_UNIT_STR",
  "startables.startables.Table",
  "startables.startables.Unit",
  "startables.startables.UnitPolicy",
  "startables.startables.WHITESPACE_RE",
  "startables.startables._extract_bundle_from_df_entire_file",
  "startables.startables._extract_unparsed_tables_from_df_entire_file",
  "startables.startables._is_expression_str",
  "startables.startables._is_illegal_value_in_datetime_column",
  "startables.startables._is_illegal_value_in_numeric_column",
  "startables.startables._make_single_dataframe_from_excel_workbook",
  "startables.startables._parse_table_from_unparsed_table_dataframe",
  "startables.startables._strip_expression_markers",
  "startables.startables._to_datetime",
  "startables.startables.nan",
  "startables.startables.read_csv",
  "startables.startables.read_excel",
  "startables.units",
  "startables.units.AffineUnitConversion",
  "startables.units.CustomUnitConversion",
  "startables.units.CustomUnitPolicy",
  "startables.units.IdentityUnitConversion",
  "startables.units.ScaleUnitConversion",
  "startables.units.T",
  "startables.units.Unit",
  "startables.units.UnitConversion",
  "startables.units.UnitPolicy"
 ]
}