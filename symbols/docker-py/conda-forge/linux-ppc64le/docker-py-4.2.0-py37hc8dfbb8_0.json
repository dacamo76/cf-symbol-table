{
 "errors": {
  "docker.client": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "docker.constants": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "docker.errors": {
   "exception": "invalid load key, '\\x00'.",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "_pickle.UnpicklingError: invalid load key, '\\x00'.",
    ""
   ]
  },
  "docker.version": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "docker.APIClient",
  "docker.Context",
  "docker.DockerClient",
  "docker.TLSConfig",
  "docker.__title__",
  "docker.__version__",
  "docker.api",
  "docker.api.APIClient",
  "docker.api.build",
  "docker.api.build.BuildApiMixin",
  "docker.api.build.log",
  "docker.api.build.process_dockerfile",
  "docker.api.client",
  "docker.api.client.APIClient",
  "docker.api.config",
  "docker.api.config.ConfigApiMixin",
  "docker.api.container",
  "docker.api.container.ContainerApiMixin",
  "docker.api.daemon",
  "docker.api.daemon.DaemonApiMixin",
  "docker.api.exec_api",
  "docker.api.exec_api.ExecApiMixin",
  "docker.api.image",
  "docker.api.image.ImageApiMixin",
  "docker.api.image._import_image_params",
  "docker.api.image.is_file",
  "docker.api.image.log",
  "docker.api.network",
  "docker.api.network.NetworkApiMixin",
  "docker.api.plugin",
  "docker.api.plugin.PluginApiMixin",
  "docker.api.secret",
  "docker.api.secret.SecretApiMixin",
  "docker.api.service",
  "docker.api.service.ServiceApiMixin",
  "docker.api.service._check_api_features",
  "docker.api.service._merge_task_template",
  "docker.api.swarm",
  "docker.api.swarm.SwarmApiMixin",
  "docker.api.swarm.log",
  "docker.api.volume",
  "docker.api.volume.VolumeApiMixin",
  "docker.auth",
  "docker.auth.AuthConfig",
  "docker.auth.INDEX_NAME",
  "docker.auth.INDEX_URL",
  "docker.auth.TOKEN_USERNAME",
  "docker.auth._load_legacy_config",
  "docker.auth.convert_to_hostname",
  "docker.auth.decode_auth",
  "docker.auth.encode_header",
  "docker.auth.get_config_header",
  "docker.auth.get_credential_store",
  "docker.auth.load_config",
  "docker.auth.log",
  "docker.auth.parse_auth",
  "docker.auth.resolve_authconfig",
  "docker.auth.resolve_index_name",
  "docker.auth.resolve_repository_name",
  "docker.auth.split_repo_name",
  "docker.client",
  "docker.constants",
  "docker.constants.DEFAULT_UNIX_SOCKET",
  "docker.constants.IS_WINDOWS_PLATFORM",
  "docker.context",
  "docker.context.Context",
  "docker.context.api",
  "docker.context.api.Context",
  "docker.context.api.ContextAPI",
  "docker.context.api.METAFILE",
  "docker.context.api.errors",
  "docker.context.api.get_current_context_name",
  "docker.context.api.get_meta_dir",
  "docker.context.api.write_context_name_to_docker_config",
  "docker.context.config",
  "docker.context.config.DEFAULT_UNIX_SOCKET",
  "docker.context.config.IS_WINDOWS_PLATFORM",
  "docker.context.config.METAFILE",
  "docker.context.config.find_config_file",
  "docker.context.config.get_context_dir",
  "docker.context.config.get_context_host",
  "docker.context.config.get_context_id",
  "docker.context.config.get_current_context_name",
  "docker.context.config.get_meta_dir",
  "docker.context.config.get_meta_file",
  "docker.context.config.get_tls_dir",
  "docker.context.config.utils",
  "docker.context.config.write_context_name_to_docker_config",
  "docker.context.context",
  "docker.context.context.Context",
  "docker.context.context.ContextException",
  "docker.context.context.TLSConfig",
  "docker.context.context.get_context_host",
  "docker.context.context.get_meta_dir",
  "docker.context.context.get_meta_file",
  "docker.context.context.get_tls_dir",
  "docker.credentials",
  "docker.credentials.CredentialsNotFound",
  "docker.credentials.DEFAULT_LINUX_STORE",
  "docker.credentials.DEFAULT_OSX_STORE",
  "docker.credentials.DEFAULT_WIN32_STORE",
  "docker.credentials.PROGRAM_PREFIX",
  "docker.credentials.Store",
  "docker.credentials.constants",
  "docker.credentials.constants.DEFAULT_LINUX_STORE",
  "docker.credentials.constants.DEFAULT_OSX_STORE",
  "docker.credentials.constants.DEFAULT_WIN32_STORE",
  "docker.credentials.constants.PROGRAM_PREFIX",
  "docker.credentials.errors",
  "docker.credentials.errors.CredentialsNotFound",
  "docker.credentials.errors.InitializationError",
  "docker.credentials.errors.StoreError",
  "docker.credentials.errors.process_store_error",
  "docker.credentials.store",
  "docker.credentials.store.Store",
  "docker.credentials.utils",
  "docker.credentials.utils.create_environment_dict",
  "docker.credentials.utils.find_executable",
  "docker.errors",
  "docker.errors.APIError",
  "docker.errors.ContextException",
  "docker.errors.InvalidArgument",
  "docker.errors.create_unexpected_kwargs_error",
  "docker.from_env",
  "docker.models",
  "docker.models.configs",
  "docker.models.configs.Config",
  "docker.models.configs.model",
  "docker.models.containers",
  "docker.models.containers.Container",
  "docker.models.containers.ExecResult",
  "docker.models.containers.RUN_CREATE_KWARGS",
  "docker.models.containers.RUN_HOST_CONFIG_KWARGS",
  "docker.models.containers._create_container_args",
  "docker.models.containers._host_volume_from_bind",
  "docker.models.images",
  "docker.models.images.Image",
  "docker.models.images.RegistryData",
  "docker.models.images.normalize_platform",
  "docker.models.networks",
  "docker.models.networks.Network",
  "docker.models.nodes",
  "docker.models.nodes.Node",
  "docker.models.nodes.model",
  "docker.models.plugins",
  "docker.models.plugins.Plugin",
  "docker.models.plugins.model",
  "docker.models.resource",
  "docker.models.resource.Collection",
  "docker.models.resource.Collection.model",
  "docker.models.resource.Model",
  "docker.models.resource.Model.id_attribute",
  "docker.models.resource.Model.short_id",
  "docker.models.secrets",
  "docker.models.secrets.Secret",
  "docker.models.secrets.model",
  "docker.models.services",
  "docker.models.services.CONTAINER_SPEC_KWARGS",
  "docker.models.services.CREATE_SERVICE_KWARGS",
  "docker.models.services.ContainerSpec",
  "docker.models.services.InvalidArgument",
  "docker.models.services.PLACEMENT_KWARGS",
  "docker.models.services.Placement",
  "docker.models.services.Service",
  "docker.models.services.ServiceMode",
  "docker.models.services.TASK_TEMPLATE_KWARGS",
  "docker.models.services.TaskTemplate",
  "docker.models.services._get_create_service_kwargs",
  "docker.models.services.create_unexpected_kwargs_error",
  "docker.models.swarm",
  "docker.models.swarm.APIClient",
  "docker.models.swarm.APIError",
  "docker.models.swarm.Swarm",
  "docker.models.swarm.id_attribute",
  "docker.models.swarm.short_id",
  "docker.models.volumes",
  "docker.models.volumes.Volume",
  "docker.tls",
  "docker.tls.TLSConfig",
  "docker.transport",
  "docker.transport.NpipeHTTPAdapter",
  "docker.transport.NpipeSocket",
  "docker.transport.SSHHTTPAdapter",
  "docker.transport.SSLHTTPAdapter",
  "docker.transport.UnixHTTPAdapter",
  "docker.transport.basehttpadapter",
  "docker.transport.basehttpadapter.BaseHTTPAdapter",
  "docker.transport.npipeconn",
  "docker.transport.npipeconn.BaseHTTPAdapter",
  "docker.transport.npipeconn.NpipeHTTPAdapter",
  "docker.transport.npipeconn.NpipeHTTPConnection",
  "docker.transport.npipeconn.RecentlyUsedContainer",
  "docker.transport.npipesocket",
  "docker.transport.npipesocket.MAXIMUM_RETRY_COUNT",
  "docker.transport.npipesocket.NpipeFileIOBase",
  "docker.transport.npipesocket.NpipeSocket",
  "docker.transport.npipesocket.cERROR_PIPE_BUSY",
  "docker.transport.npipesocket.cSECURITY_ANONYMOUS",
  "docker.transport.npipesocket.cSECURITY_SQOS_PRESENT",
  "docker.transport.npipesocket.check_closed",
  "docker.transport.sshconn",
  "docker.transport.sshconn.BaseHTTPAdapter",
  "docker.transport.sshconn.RecentlyUsedContainer",
  "docker.transport.sshconn.SSHConnection",
  "docker.transport.sshconn.SSHHTTPAdapter",
  "docker.transport.ssladapter",
  "docker.transport.ssladapter.BaseHTTPAdapter",
  "docker.transport.ssladapter.PoolManager",
  "docker.transport.ssladapter.SSLHTTPAdapter",
  "docker.transport.unixconn",
  "docker.transport.unixconn.BaseHTTPAdapter",
  "docker.transport.unixconn.RecentlyUsedContainer",
  "docker.transport.unixconn.UnixHTTPAdapter",
  "docker.transport.unixconn.UnixHTTPConnection",
  "docker.transport.unixconn.UnixHTTPResponse",
  "docker.types",
  "docker.types.CancellableStream",
  "docker.types.ConfigReference",
  "docker.types.ContainerConfig",
  "docker.types.ContainerSpec",
  "docker.types.DNSConfig",
  "docker.types.DriverConfig",
  "docker.types.EndpointConfig",
  "docker.types.EndpointSpec",
  "docker.types.Healthcheck",
  "docker.types.HostConfig",
  "docker.types.IPAMConfig",
  "docker.types.IPAMPool",
  "docker.types.LogConfig",
  "docker.types.Mount",
  "docker.types.NetworkAttachmentConfig",
  "docker.types.NetworkingConfig",
  "docker.types.Placement",
  "docker.types.Privileges",
  "docker.types.Resources",
  "docker.types.RestartPolicy",
  "docker.types.RollbackConfig",
  "docker.types.SecretReference",
  "docker.types.ServiceMode",
  "docker.types.SwarmExternalCA",
  "docker.types.SwarmSpec",
  "docker.types.TaskTemplate",
  "docker.types.Ulimit",
  "docker.types.UpdateConfig",
  "docker.types.base",
  "docker.types.base.DictType",
  "docker.types.containers",
  "docker.types.containers.ContainerConfig",
  "docker.types.containers.HostConfig",
  "docker.types.containers.LogConfig",
  "docker.types.containers.Ulimit",
  "docker.types.containers.host_config_type_error",
  "docker.types.containers.host_config_value_error",
  "docker.types.containers.host_config_version_error",
  "docker.types.daemon",
  "docker.types.daemon.CancellableStream",
  "docker.types.healthcheck",
  "docker.types.healthcheck.Healthcheck",
  "docker.types.networks",
  "docker.types.networks.EndpointConfig",
  "docker.types.networks.IPAMConfig",
  "docker.types.networks.IPAMPool",
  "docker.types.networks.NetworkingConfig",
  "docker.types.services",
  "docker.types.services.ConfigReference",
  "docker.types.services.ContainerSpec",
  "docker.types.services.DNSConfig",
  "docker.types.services.DriverConfig",
  "docker.types.services.EndpointSpec",
  "docker.types.services.Mount",
  "docker.types.services.NetworkAttachmentConfig",
  "docker.types.services.Placement",
  "docker.types.services.Privileges",
  "docker.types.services.Resources",
  "docker.types.services.RestartConditionTypesEnum",
  "docker.types.services.RestartPolicy",
  "docker.types.services.RollbackConfig",
  "docker.types.services.SecretReference",
  "docker.types.services.ServiceMode",
  "docker.types.services.TaskTemplate",
  "docker.types.services.UpdateConfig",
  "docker.types.services._convert_generic_resources_dict",
  "docker.types.services.convert_service_ports",
  "docker.types.swarm",
  "docker.types.swarm.SwarmExternalCA",
  "docker.types.swarm.SwarmSpec",
  "docker.utils",
  "docker.utils.build",
  "docker.utils.build.Pattern",
  "docker.utils.build._SEP",
  "docker.utils.build.build_file_list",
  "docker.utils.build.create_archive",
  "docker.utils.build.exclude_paths",
  "docker.utils.build.mkbuildcontext",
  "docker.utils.build.normalize_slashes",
  "docker.utils.build.split_path",
  "docker.utils.build.tar",
  "docker.utils.build.walk",
  "docker.utils.check_resource",
  "docker.utils.compare_version",
  "docker.utils.config",
  "docker.utils.config.DOCKER_CONFIG_FILENAME",
  "docker.utils.config.LEGACY_DOCKER_CONFIG_FILENAME",
  "docker.utils.config.config_path_from_environment",
  "docker.utils.config.find_config_file",
  "docker.utils.config.home_dir",
  "docker.utils.config.load_general_config",
  "docker.utils.config.log",
  "docker.utils.convert_filters",
  "docker.utils.convert_port_bindings",
  "docker.utils.convert_service_networks",
  "docker.utils.convert_volume_binds",
  "docker.utils.create_archive",
  "docker.utils.create_host_config",
  "docker.utils.create_ipam_config",
  "docker.utils.create_ipam_pool",
  "docker.utils.datetime_to_timestamp",
  "docker.utils.decode_json_header",
  "docker.utils.decorators",
  "docker.utils.decorators.check_resource",
  "docker.utils.decorators.minimum_version",
  "docker.utils.decorators.update_headers",
  "docker.utils.exclude_paths",
  "docker.utils.fnmatch",
  "docker.utils.fnmatch._MAXCACHE",
  "docker.utils.fnmatch.__all__",
  "docker.utils.fnmatch._cache",
  "docker.utils.fnmatch._purge",
  "docker.utils.fnmatch.fnmatch",
  "docker.utils.fnmatch.translate",
  "docker.utils.format_environment",
  "docker.utils.format_extra_hosts",
  "docker.utils.json_stream",
  "docker.utils.json_stream.json_decoder",
  "docker.utils.json_stream.json_splitter",
  "docker.utils.json_stream.json_stream",
  "docker.utils.json_stream.line_splitter",
  "docker.utils.json_stream.split_buffer",
  "docker.utils.json_stream.stream_as_text",
  "docker.utils.kwargs_from_env",
  "docker.utils.minimum_version",
  "docker.utils.mkbuildcontext",
  "docker.utils.normalize_links",
  "docker.utils.parse_bytes",
  "docker.utils.parse_devices",
  "docker.utils.parse_env_file",
  "docker.utils.parse_host",
  "docker.utils.parse_repository_tag",
  "docker.utils.ports",
  "docker.utils.ports.PORT_SPEC",
  "docker.utils.ports._raise_invalid_port",
  "docker.utils.ports.add_port",
  "docker.utils.ports.build_port_bindings",
  "docker.utils.ports.port_range",
  "docker.utils.ports.split_port",
  "docker.utils.proxy",
  "docker.utils.proxy.ProxyConfig",
  "docker.utils.socket",
  "docker.utils.socket.NpipeSocket",
  "docker.utils.socket.STDERR",
  "docker.utils.socket.STDOUT",
  "docker.utils.socket.SocketError",
  "docker.utils.socket.consume_socket_output",
  "docker.utils.socket.demux_adaptor",
  "docker.utils.socket.frames_iter",
  "docker.utils.socket.next_frame_header",
  "docker.utils.socket.read",
  "docker.utils.split_command",
  "docker.utils.tar",
  "docker.utils.update_headers",
  "docker.utils.utils",
  "docker.utils.utils._convert_port_binding",
  "docker.utils.utils.compare_version",
  "docker.utils.utils.convert_filters",
  "docker.utils.utils.convert_port_bindings",
  "docker.utils.utils.convert_service_networks",
  "docker.utils.utils.convert_tmpfs_mounts",
  "docker.utils.utils.convert_volume_binds",
  "docker.utils.utils.create_host_config",
  "docker.utils.utils.create_ipam_config",
  "docker.utils.utils.create_ipam_pool",
  "docker.utils.utils.datetime_to_timestamp",
  "docker.utils.utils.decode_json_header",
  "docker.utils.utils.format_environment",
  "docker.utils.utils.format_extra_hosts",
  "docker.utils.utils.kwargs_from_env",
  "docker.utils.utils.normalize_links",
  "docker.utils.utils.parse_bytes",
  "docker.utils.utils.parse_devices",
  "docker.utils.utils.parse_env_file",
  "docker.utils.utils.parse_host",
  "docker.utils.utils.parse_repository_tag",
  "docker.utils.utils.split_command",
  "docker.utils.utils.version_gte",
  "docker.utils.utils.version_lt",
  "docker.utils.version_gte",
  "docker.utils.version_lt",
  "docker.version",
  "docker.version_info"
 ]
}