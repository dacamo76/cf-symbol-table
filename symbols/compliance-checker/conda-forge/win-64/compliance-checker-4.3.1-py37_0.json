{
 "errors": {},
 "symbols": [
  "compliance_checker.MemoizedDataset",
  "compliance_checker.__version__",
  "compliance_checker._version",
  "compliance_checker._version.get_versions",
  "compliance_checker._version.version_json",
  "compliance_checker.acdd",
  "compliance_checker.acdd.ACDD1_1Check",
  "compliance_checker.acdd.ACDD1_3Check",
  "compliance_checker.acdd.ACDDBaseCheck",
  "compliance_checker.acdd.ACDDNCCheck",
  "compliance_checker.acdd.BaseCheck",
  "compliance_checker.acdd.BaseNCCheck",
  "compliance_checker.acdd.Result",
  "compliance_checker.acdd._possiblexunits",
  "compliance_checker.acdd._possibleyunits",
  "compliance_checker.acdd.cfutil",
  "compliance_checker.acdd.check_has",
  "compliance_checker.acdd.dateparse",
  "compliance_checker.acdd.datetime_is_iso",
  "compliance_checker.acdd.kvp_convert",
  "compliance_checker.acdd.ratable_result",
  "compliance_checker.base",
  "compliance_checker.base.BaseCheck",
  "compliance_checker.base.BaseNCCheck",
  "compliance_checker.base.BaseSOSDSCheck",
  "compliance_checker.base.BaseSOSGCCheck",
  "compliance_checker.base.GenericFile",
  "compliance_checker.base.MemoizedDataset",
  "compliance_checker.base.Result",
  "compliance_checker.base.TestCtx",
  "compliance_checker.base.__version__",
  "compliance_checker.base.attr_check",
  "compliance_checker.base.check_has",
  "compliance_checker.base.fix_return_value",
  "compliance_checker.base.get_namespaces",
  "compliance_checker.base.kvp_convert",
  "compliance_checker.base.ratable_result",
  "compliance_checker.base.score_group",
  "compliance_checker.base.std_check",
  "compliance_checker.base.xpath_check",
  "compliance_checker.cf",
  "compliance_checker.cf.CF1_6Check",
  "compliance_checker.cf.CF1_7Check",
  "compliance_checker.cf.__all__",
  "compliance_checker.cf.appendix_a",
  "compliance_checker.cf.appendix_a.att_dict",
  "compliance_checker.cf.appendix_a.att_loc",
  "compliance_checker.cf.appendix_a.global_att",
  "compliance_checker.cf.appendix_a.global_att_name",
  "compliance_checker.cf.appendix_d",
  "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_6",
  "compliance_checker.cf.appendix_d.dimless_vertical_coordinates_1_7",
  "compliance_checker.cf.appendix_d.no_missing_terms",
  "compliance_checker.cf.appendix_d.ocean_computed_standard_names",
  "compliance_checker.cf.appendix_e",
  "compliance_checker.cf.appendix_e.cell_methods16",
  "compliance_checker.cf.appendix_e.cell_methods17",
  "compliance_checker.cf.appendix_f",
  "compliance_checker.cf.appendix_f.ellipsoid_names17",
  "compliance_checker.cf.appendix_f.grid_mapping_attr_types16",
  "compliance_checker.cf.appendix_f.grid_mapping_attr_types17",
  "compliance_checker.cf.appendix_f.grid_mapping_dict16",
  "compliance_checker.cf.appendix_f.grid_mapping_dict17",
  "compliance_checker.cf.appendix_f.horizontal_datum_names17",
  "compliance_checker.cf.appendix_f.prime_meridian_names17",
  "compliance_checker.cf.cf",
  "compliance_checker.cf.cf.BaseCheck",
  "compliance_checker.cf.cf.BaseNCCheck",
  "compliance_checker.cf.cf.CF1_6Check",
  "compliance_checker.cf.cf.CF1_7Check",
  "compliance_checker.cf.cf.CFBaseCheck",
  "compliance_checker.cf.cf.CFNCCheck",
  "compliance_checker.cf.cf.Result",
  "compliance_checker.cf.cf.TestCtx",
  "compliance_checker.cf.cf.appendix_a_base",
  "compliance_checker.cf.cf.basestring",
  "compliance_checker.cf.cf.cell_methods16",
  "compliance_checker.cf.cf.cell_methods17",
  "compliance_checker.cf.cf.cfutil",
  "compliance_checker.cf.cf.dimless_vertical_coordinates_1_6",
  "compliance_checker.cf.cf.dimless_vertical_coordinates_1_7",
  "compliance_checker.cf.cf.ellipsoid_names17",
  "compliance_checker.cf.cf.grid_mapping_attr_types16",
  "compliance_checker.cf.cf.grid_mapping_attr_types17",
  "compliance_checker.cf.cf.grid_mapping_dict16",
  "compliance_checker.cf.cf.grid_mapping_dict17",
  "compliance_checker.cf.cf.horizontal_datum_names17",
  "compliance_checker.cf.cf.is_likely_dsg",
  "compliance_checker.cf.cf.logger",
  "compliance_checker.cf.cf.no_missing_terms",
  "compliance_checker.cf.cf.prime_meridian_names17",
  "compliance_checker.cf.cf.print_exceptions",
  "compliance_checker.cf.cf.util",
  "compliance_checker.cf.dimless_vertical_coordinates_1_6",
  "compliance_checker.cf.dimless_vertical_coordinates_1_7",
  "compliance_checker.cf.util",
  "compliance_checker.cf.util.DotDict",
  "compliance_checker.cf.util.NCGraph",
  "compliance_checker.cf.util.StandardNameTable",
  "compliance_checker.cf.util._possibleaxis",
  "compliance_checker.cf.util._possibleaxisunits",
  "compliance_checker.cf.util._possiblet",
  "compliance_checker.cf.util._possibletunits",
  "compliance_checker.cf.util._possiblex",
  "compliance_checker.cf.util._possiblexunits",
  "compliance_checker.cf.util._possibley",
  "compliance_checker.cf.util._possibleyunits",
  "compliance_checker.cf.util._possiblez",
  "compliance_checker.cf.util.create_cached_data_dir",
  "compliance_checker.cf.util.download_cf_standard_name_table",
  "compliance_checker.cf.util.find_coord_vars",
  "compliance_checker.cf.util.get_safe",
  "compliance_checker.cf.util.is_time_variable",
  "compliance_checker.cf.util.is_vertical_coordinate",
  "compliance_checker.cf.util.map_axes",
  "compliance_checker.cf.util.units_convertible",
  "compliance_checker.cf.util.units_known",
  "compliance_checker.cf.util.units_temporal",
  "compliance_checker.cfutil",
  "compliance_checker.cfutil.DIMENSIONLESS_VERTICAL_COORDINATES",
  "compliance_checker.cfutil.VALID_LAT_UNITS",
  "compliance_checker.cfutil.VALID_LON_UNITS",
  "compliance_checker.cfutil._SEA_NAMES",
  "compliance_checker.cfutil._UNITLESS_DB",
  "compliance_checker.cfutil.attr_membership",
  "compliance_checker.cfutil.basestring",
  "compliance_checker.cfutil.coordinate_dimension_matrix",
  "compliance_checker.cfutil.get_auxiliary_coordinate_variables",
  "compliance_checker.cfutil.get_axis_map",
  "compliance_checker.cfutil.get_axis_variables",
  "compliance_checker.cfutil.get_cell_boundary_map",
  "compliance_checker.cfutil.get_cell_boundary_variables",
  "compliance_checker.cfutil.get_climatology_variable",
  "compliance_checker.cfutil.get_coordinate_variables",
  "compliance_checker.cfutil.get_flag_variables",
  "compliance_checker.cfutil.get_geophysical_variables",
  "compliance_checker.cfutil.get_grid_mapping_variables",
  "compliance_checker.cfutil.get_instrument_variables",
  "compliance_checker.cfutil.get_lat_variable",
  "compliance_checker.cfutil.get_latitude_variables",
  "compliance_checker.cfutil.get_lon_variable",
  "compliance_checker.cfutil.get_longitude_variables",
  "compliance_checker.cfutil.get_platform_variables",
  "compliance_checker.cfutil.get_sea_names",
  "compliance_checker.cfutil.get_time_variable",
  "compliance_checker.cfutil.get_true_latitude_variables",
  "compliance_checker.cfutil.get_true_longitude_variables",
  "compliance_checker.cfutil.get_z_variable",
  "compliance_checker.cfutil.guess_feature_type",
  "compliance_checker.cfutil.is_2d_regular_grid",
  "compliance_checker.cfutil.is_2d_static_grid",
  "compliance_checker.cfutil.is_3d_regular_grid",
  "compliance_checker.cfutil.is_3d_static_grid",
  "compliance_checker.cfutil.is_cf_trajectory",
  "compliance_checker.cfutil.is_compression_coordinate",
  "compliance_checker.cfutil.is_coordinate_variable",
  "compliance_checker.cfutil.is_dimensionless_standard_name",
  "compliance_checker.cfutil.is_geophysical",
  "compliance_checker.cfutil.is_mapped_grid",
  "compliance_checker.cfutil.is_multi_timeseries_incomplete",
  "compliance_checker.cfutil.is_multi_timeseries_orthogonal",
  "compliance_checker.cfutil.is_point",
  "compliance_checker.cfutil.is_profile_incomplete",
  "compliance_checker.cfutil.is_profile_orthogonal",
  "compliance_checker.cfutil.is_reduced_grid",
  "compliance_checker.cfutil.is_single_trajectory",
  "compliance_checker.cfutil.is_timeseries",
  "compliance_checker.cfutil.is_trajectory_profile_incomplete",
  "compliance_checker.cfutil.is_trajectory_profile_orthogonal",
  "compliance_checker.cfutil.is_unitless",
  "compliance_checker.cfutil.units_convertible",
  "compliance_checker.ioos",
  "compliance_checker.ioos.BaseCheck",
  "compliance_checker.ioos.BaseNCCheck",
  "compliance_checker.ioos.BaseSOSDSCheck",
  "compliance_checker.ioos.BaseSOSGCCheck",
  "compliance_checker.ioos.CF1_6Check",
  "compliance_checker.ioos.IOOS0_1Check",
  "compliance_checker.ioos.IOOS1_1Check",
  "compliance_checker.ioos.IOOSBaseCheck",
  "compliance_checker.ioos.IOOSBaseSOSCheck",
  "compliance_checker.ioos.IOOSNCCheck",
  "compliance_checker.ioos.IOOSSOSDSCheck",
  "compliance_checker.ioos.IOOSSOSGCCheck",
  "compliance_checker.ioos.Result",
  "compliance_checker.ioos.check_has",
  "compliance_checker.ioos.get_geophysical_variables",
  "compliance_checker.protocols",
  "compliance_checker.protocols.cdl",
  "compliance_checker.protocols.cdl.is_cdl",
  "compliance_checker.protocols.netcdf",
  "compliance_checker.protocols.netcdf.is_classic_netcdf",
  "compliance_checker.protocols.netcdf.is_hdf5",
  "compliance_checker.protocols.netcdf.is_netcdf",
  "compliance_checker.protocols.opendap",
  "compliance_checker.protocols.opendap.is_opendap",
  "compliance_checker.runner",
  "compliance_checker.runner.CheckSuite",
  "compliance_checker.runner.ComplianceChecker",
  "compliance_checker.runner.stdout_redirector",
  "compliance_checker.suite",
  "compliance_checker.suite.BaseCheck",
  "compliance_checker.suite.CFBaseCheck",
  "compliance_checker.suite.CheckSuite",
  "compliance_checker.suite.GenericFile",
  "compliance_checker.suite.MemoizedDataset",
  "compliance_checker.suite.Result",
  "compliance_checker.suite.cdl",
  "compliance_checker.suite.extract_docstring_summary",
  "compliance_checker.suite.fix_return_value",
  "compliance_checker.suite.netcdf",
  "compliance_checker.suite.opendap",
  "compliance_checker.tests",
  "compliance_checker.tests.BaseTestCase",
  "compliance_checker.tests.helpers",
  "compliance_checker.tests.helpers.MockNetCDF",
  "compliance_checker.tests.helpers.MockTimeSeries",
  "compliance_checker.tests.helpers.MockVariable",
  "compliance_checker.tests.resources",
  "compliance_checker.tests.resources.STATIC_FILES",
  "compliance_checker.tests.resources.generate_dataset",
  "compliance_checker.tests.resources.get_filename",
  "compliance_checker.tests.test_acdd",
  "compliance_checker.tests.test_acdd.ACDD1_1Check",
  "compliance_checker.tests.test_acdd.ACDD1_3Check",
  "compliance_checker.tests.test_acdd.BaseTestCase",
  "compliance_checker.tests.test_acdd.MockTimeSeries",
  "compliance_checker.tests.test_acdd.MockVariable",
  "compliance_checker.tests.test_acdd.STATIC_FILES",
  "compliance_checker.tests.test_acdd.TestACDD1_1",
  "compliance_checker.tests.test_acdd.TestACDD1_3",
  "compliance_checker.tests.test_acdd.check_varset_nonintersect",
  "compliance_checker.tests.test_acdd.to_singleton_var",
  "compliance_checker.tests.test_base",
  "compliance_checker.tests.test_base.TestBase",
  "compliance_checker.tests.test_base.TestGenericFile",
  "compliance_checker.tests.test_base.base",
  "compliance_checker.tests.test_cf",
  "compliance_checker.tests.test_cf.BaseTestCase",
  "compliance_checker.tests.test_cf.CF1_6Check",
  "compliance_checker.tests.test_cf.CF1_7Check",
  "compliance_checker.tests.test_cf.CheckSuite",
  "compliance_checker.tests.test_cf.MockTimeSeries",
  "compliance_checker.tests.test_cf.MockVariable",
  "compliance_checker.tests.test_cf.STATIC_FILES",
  "compliance_checker.tests.test_cf.StandardNameTable",
  "compliance_checker.tests.test_cf.TestCF1_6",
  "compliance_checker.tests.test_cf.TestCF1_7",
  "compliance_checker.tests.test_cf.cfutil",
  "compliance_checker.tests.test_cf.create_cached_data_dir",
  "compliance_checker.tests.test_cf.dimless_vertical_coordinates_1_6",
  "compliance_checker.tests.test_cf.dimless_vertical_coordinates_1_7",
  "compliance_checker.tests.test_cf.download_cf_standard_name_table",
  "compliance_checker.tests.test_cf.get_results",
  "compliance_checker.tests.test_cf.is_time_variable",
  "compliance_checker.tests.test_cf.is_vertical_coordinate",
  "compliance_checker.tests.test_cf.no_missing_terms",
  "compliance_checker.tests.test_cf.units_convertible",
  "compliance_checker.tests.test_cf.units_temporal",
  "compliance_checker.tests.test_cf_integration",
  "compliance_checker.tests.test_cf_integration.BaseTestCase",
  "compliance_checker.tests.test_cf_integration.CheckSuite",
  "compliance_checker.tests.test_cf_integration.STATIC_FILES",
  "compliance_checker.tests.test_cf_integration.TestCFIntegration",
  "compliance_checker.tests.test_cf_integration.util",
  "compliance_checker.tests.test_cli",
  "compliance_checker.tests.test_cli.CheckSuite",
  "compliance_checker.tests.test_cli.ComplianceChecker",
  "compliance_checker.tests.test_cli.STATIC_FILES",
  "compliance_checker.tests.test_cli.TestCLI",
  "compliance_checker.tests.test_feature_detection",
  "compliance_checker.tests.test_feature_detection.TestFeatureDetection",
  "compliance_checker.tests.test_feature_detection.cfutil",
  "compliance_checker.tests.test_feature_detection.resources",
  "compliance_checker.tests.test_ioos_profile",
  "compliance_checker.tests.test_ioos_profile.BaseTestCase",
  "compliance_checker.tests.test_ioos_profile.IOOS0_1Check",
  "compliance_checker.tests.test_ioos_profile.IOOS1_1Check",
  "compliance_checker.tests.test_ioos_profile.STATIC_FILES",
  "compliance_checker.tests.test_ioos_profile.TestIOOS0_1",
  "compliance_checker.tests.test_ioos_profile.TestIOOS1_1",
  "compliance_checker.tests.test_ioos_sos",
  "compliance_checker.tests.test_ioos_sos.CheckSuite",
  "compliance_checker.tests.test_ioos_sos.ComplianceChecker",
  "compliance_checker.tests.test_ioos_sos.TestIOOSSOSDescribeSensor",
  "compliance_checker.tests.test_ioos_sos.TestIOOSSOSGetCapabilities",
  "compliance_checker.tests.test_ioos_sos.httpretty",
  "compliance_checker.tests.test_protocols",
  "compliance_checker.tests.test_protocols.CheckSuite",
  "compliance_checker.tests.test_protocols.TestProtocols",
  "compliance_checker.tests.test_suite",
  "compliance_checker.tests.test_suite.BaseCheck",
  "compliance_checker.tests.test_suite.CheckSuite",
  "compliance_checker.tests.test_suite.GenericFile",
  "compliance_checker.tests.test_suite.Result",
  "compliance_checker.tests.test_suite.TestSuite",
  "compliance_checker.tests.test_suite.static_files",
  "compliance_checker.tests.test_util",
  "compliance_checker.tests.test_util.TestUtils",
  "compliance_checker.tests.test_util.util",
  "compliance_checker.util",
  "compliance_checker.util.dateparse",
  "compliance_checker.util.datetime_is_iso",
  "compliance_checker.util.isstring",
  "compliance_checker.util.kvp_convert"
 ]
}