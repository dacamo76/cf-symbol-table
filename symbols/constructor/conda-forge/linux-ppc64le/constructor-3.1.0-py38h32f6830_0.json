{
 "errors": {
  "constructor.winexe": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "constructor.__main__",
  "constructor.__main__.main",
  "constructor.__version__",
  "constructor._version",
  "constructor._version.get_versions",
  "constructor._version.version_json",
  "constructor.conda_interface",
  "constructor.conda_interface.CONDA_MAJOR_MINOR",
  "constructor.conda_interface.Dist",
  "constructor.conda_interface.MatchSpec",
  "constructor.conda_interface.NAV_APPS",
  "constructor.conda_interface.PackageCacheData",
  "constructor.conda_interface.PackageCacheRecord",
  "constructor.conda_interface.PrefixData",
  "constructor.conda_interface.Solver",
  "constructor.conda_interface.all_channel_urls",
  "constructor.conda_interface.cc_platform",
  "constructor.conda_interface.concatv",
  "constructor.conda_interface.conda_context",
  "constructor.conda_interface.conda_interface_type",
  "constructor.conda_interface.conda_replace_context_default",
  "constructor.conda_interface.default_prefix",
  "constructor.conda_interface.download",
  "constructor.conda_interface.env_vars",
  "constructor.conda_interface.get",
  "constructor.conda_interface.get_repodata",
  "constructor.conda_interface.groupby",
  "constructor.conda_interface.read_paths_json",
  "constructor.conda_interface.write_repodata",
  "constructor.construct",
  "constructor.construct.KEYS",
  "constructor.construct.UnableToParse",
  "constructor.construct.YamlParsingError",
  "constructor.construct.generate_doc",
  "constructor.construct.ns_platform",
  "constructor.construct.parse",
  "constructor.construct.sel_pat",
  "constructor.construct.select_lines",
  "constructor.construct.verify",
  "constructor.construct.yamlize",
  "constructor.exceptions",
  "constructor.exceptions.SEPARATOR",
  "constructor.exceptions.UnableToParse",
  "constructor.exceptions.YamlParsingError",
  "constructor.exceptions.indent",
  "constructor.fcp",
  "constructor.fcp._fetch",
  "constructor.fcp._find_out_of_date_precs",
  "constructor.fcp._main",
  "constructor.fcp._precs_from_environment",
  "constructor.fcp._show",
  "constructor.fcp.check_duplicates",
  "constructor.fcp.exclude_packages",
  "constructor.fcp.getsize",
  "constructor.fcp.main",
  "constructor.fcp.md5_files",
  "constructor.fcp.warn_menu_packages_missing",
  "constructor.imaging",
  "constructor.imaging.add_color_info",
  "constructor.imaging.add_text",
  "constructor.imaging.header_size",
  "constructor.imaging.icon_size",
  "constructor.imaging.info",
  "constructor.imaging.mk_header_image",
  "constructor.imaging.mk_icon_image",
  "constructor.imaging.mk_welcome_image",
  "constructor.imaging.new_background",
  "constructor.imaging.ttf_path",
  "constructor.imaging.welcome_size",
  "constructor.imaging.white",
  "constructor.imaging.write_images",
  "constructor.jinja",
  "constructor.jinja.FilteredLoader",
  "constructor.jinja.UnableToParse",
  "constructor.jinja.render_jinja",
  "constructor.main",
  "constructor.main.DEFAULT_CACHE_DIR",
  "constructor.main.get_installer_type",
  "constructor.main.get_output_filename",
  "constructor.main.main",
  "constructor.nsis",
  "constructor.nsis._nsis.NSISReg",
  "constructor.nsis._nsis.OutputDebugString",
  "constructor.nsis._nsis.PATH_SUFFIXES",
  "constructor.nsis._nsis.ROOT_PREFIX",
  "constructor.nsis._nsis.add_to_path",
  "constructor.nsis._nsis.allusers",
  "constructor.nsis._nsis.ensure_comspec_set",
  "constructor.nsis._nsis.err",
  "constructor.nsis._nsis.get_conda_envs",
  "constructor.nsis._nsis.get_conda_envs_from_python_api",
  "constructor.nsis._nsis.gui_excepthook",
  "constructor.nsis._nsis.main",
  "constructor.nsis._nsis.mk_dirs",
  "constructor.nsis._nsis.mk_menus",
  "constructor.nsis._nsis.old_excepthook",
  "constructor.nsis._nsis.out",
  "constructor.nsis._nsis.remove_from_path",
  "constructor.nsis._nsis.rm_menus",
  "constructor.nsis._nsis.rm_regkeys",
  "constructor.nsis._nsis.run_post_install",
  "constructor.nsis._nsis.run_pre_uninstall",
  "constructor.nsis._nsis.win_del",
  "constructor.nsis._system_path.HWND_BROADCAST",
  "constructor.nsis._system_path.OutputDebugString",
  "constructor.nsis._system_path.SMTO_ABORTIFHUNG",
  "constructor.nsis._system_path.SendMessageTimeout",
  "constructor.nsis._system_path.WM_SETTINGCHANGE",
  "constructor.nsis._system_path.__all__",
  "constructor.nsis._system_path._reg_query_sub_keys",
  "constructor.nsis._system_path.add_to_system_path",
  "constructor.nsis._system_path.broadcast_environment_settings_change",
  "constructor.nsis._system_path.err",
  "constructor.nsis._system_path.get_previous_install_prefixes",
  "constructor.nsis._system_path.out",
  "constructor.nsis._system_path.remove_from_system_path",
  "constructor.nsis._system_path.sz_expand",
  "constructor.osxpkg",
  "constructor.osxpkg.OSX_DIR",
  "constructor.osxpkg.add_condarc",
  "constructor.osxpkg.create",
  "constructor.osxpkg.fresh_dir",
  "constructor.osxpkg.get_final_channels",
  "constructor.osxpkg.modify_xml",
  "constructor.osxpkg.move_script",
  "constructor.osxpkg.pkgbuild",
  "constructor.osxpkg.preconda",
  "constructor.osxpkg.rm_rf",
  "constructor.osxpkg.write_readme",
  "constructor.preconda",
  "constructor.preconda.files",
  "constructor.preconda.system_info",
  "constructor.preconda.write_conda_meta",
  "constructor.preconda.write_env_txt",
  "constructor.preconda.write_files",
  "constructor.preconda.write_index_cache",
  "constructor.preconda.write_repodata_record",
  "constructor.shar",
  "constructor.shar.THIS_DIR",
  "constructor.shar.create",
  "constructor.shar.get_header",
  "constructor.shar.has_shebang",
  "constructor.shar.make_executable",
  "constructor.shar.read_header_template",
  "constructor.utils",
  "constructor.utils.add_condarc",
  "constructor.utils.filename_dist",
  "constructor.utils.fill_template",
  "constructor.utils.get_final_channels",
  "constructor.utils.get_final_url",
  "constructor.utils.if_pat",
  "constructor.utils.make_VIProductVersion",
  "constructor.utils.md5_files",
  "constructor.utils.normalize_path",
  "constructor.utils.preprocess",
  "constructor.utils.read_ascii_only",
  "constructor.utils.rm_rf",
  "constructor.utils.yield_lines",
  "constructor.winexe"
 ]
}