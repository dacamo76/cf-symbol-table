{
 "errors": {
  "gsw._utilities": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "gsw._wrapped_ufuncs": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "gsw.density": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "gsw.energy": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "gsw.CT_first_derivatives",
  "gsw.CT_freezing",
  "gsw.CT_from_enthalpy",
  "gsw.CT_from_entropy",
  "gsw.CT_from_pt",
  "gsw.CT_from_rho",
  "gsw.CT_from_t",
  "gsw.CT_maxdensity",
  "gsw.CT_second_derivatives",
  "gsw.C_from_SP",
  "gsw.Fdelta",
  "gsw.Helmholtz_energy_ice",
  "gsw.Hill_ratio_at_SP2",
  "gsw.IPV_vs_fNsquared_ratio",
  "gsw.Nsquared",
  "gsw.SAAR",
  "gsw.SA_freezing_from_CT",
  "gsw.SA_freezing_from_t",
  "gsw.SA_from_SP",
  "gsw.SA_from_Sstar",
  "gsw.SA_from_rho",
  "gsw.SP_from_C",
  "gsw.SP_from_SA",
  "gsw.SP_from_SK",
  "gsw.SP_from_SR",
  "gsw.SP_from_Sstar",
  "gsw.SR_from_SP",
  "gsw.Sstar_from_SA",
  "gsw.Sstar_from_SP",
  "gsw.Turner_Rsubrho",
  "gsw.__all__",
  "gsw.__version__",
  "gsw._utilities",
  "gsw._wrapped_ufuncs",
  "gsw._wrapped_ufuncs.CT_first_derivatives",
  "gsw._wrapped_ufuncs.CT_freezing",
  "gsw._wrapped_ufuncs.CT_from_enthalpy",
  "gsw._wrapped_ufuncs.CT_from_entropy",
  "gsw._wrapped_ufuncs.CT_from_pt",
  "gsw._wrapped_ufuncs.CT_from_rho",
  "gsw._wrapped_ufuncs.CT_from_t",
  "gsw._wrapped_ufuncs.CT_maxdensity",
  "gsw._wrapped_ufuncs.CT_second_derivatives",
  "gsw._wrapped_ufuncs.C_from_SP",
  "gsw._wrapped_ufuncs.Fdelta",
  "gsw._wrapped_ufuncs.Helmholtz_energy_ice",
  "gsw._wrapped_ufuncs.Hill_ratio_at_SP2",
  "gsw._wrapped_ufuncs.SAAR",
  "gsw._wrapped_ufuncs.SA_freezing_from_CT",
  "gsw._wrapped_ufuncs.SA_freezing_from_t",
  "gsw._wrapped_ufuncs.SA_from_SP",
  "gsw._wrapped_ufuncs.SA_from_Sstar",
  "gsw._wrapped_ufuncs.SA_from_rho",
  "gsw._wrapped_ufuncs.SP_from_C",
  "gsw._wrapped_ufuncs.SP_from_SA",
  "gsw._wrapped_ufuncs.SP_from_SK",
  "gsw._wrapped_ufuncs.SP_from_SR",
  "gsw._wrapped_ufuncs.SP_from_Sstar",
  "gsw._wrapped_ufuncs.SR_from_SP",
  "gsw._wrapped_ufuncs.Sstar_from_SA",
  "gsw._wrapped_ufuncs.Sstar_from_SP",
  "gsw._wrapped_ufuncs.adiabatic_lapse_rate_from_CT",
  "gsw._wrapped_ufuncs.adiabatic_lapse_rate_ice",
  "gsw._wrapped_ufuncs.alpha",
  "gsw._wrapped_ufuncs.beta",
  "gsw._wrapped_ufuncs.cabbeling",
  "gsw._wrapped_ufuncs.chem_potential_water_ice",
  "gsw._wrapped_ufuncs.chem_potential_water_t_exact",
  "gsw._wrapped_ufuncs.cp_ice",
  "gsw._wrapped_ufuncs.cp_t_exact",
  "gsw._wrapped_ufuncs.deltaSA_atlas",
  "gsw._wrapped_ufuncs.deltaSA_from_SP",
  "gsw._wrapped_ufuncs.dilution_coefficient_t_exact",
  "gsw._wrapped_ufuncs.dynamic_enthalpy",
  "gsw._wrapped_ufuncs.enthalpy",
  "gsw._wrapped_ufuncs.entropy_first_derivatives",
  "gsw._wrapped_ufuncs.entropy_from_CT",
  "gsw._wrapped_ufuncs.entropy_from_pt",
  "gsw._wrapped_ufuncs.entropy_from_t",
  "gsw._wrapped_ufuncs.entropy_ice",
  "gsw._wrapped_ufuncs.entropy_second_derivatives",
  "gsw._wrapped_ufuncs.frazil_properties",
  "gsw._wrapped_ufuncs.frazil_ratios_adiabatic",
  "gsw._wrapped_ufuncs.gibbs_ice_part_t",
  "gsw._wrapped_ufuncs.gibbs_ice_pt0",
  "gsw._wrapped_ufuncs.grav",
  "gsw._wrapped_ufuncs.ice_fraction_to_freeze_seawater",
  "gsw._wrapped_ufuncs.internal_energy",
  "gsw._wrapped_ufuncs.kappa",
  "gsw._wrapped_ufuncs.latentheat_evap_CT",
  "gsw._wrapped_ufuncs.latentheat_evap_t",
  "gsw._wrapped_ufuncs.latentheat_melting",
  "gsw._wrapped_ufuncs.melting_ice_SA_CT_ratio",
  "gsw._wrapped_ufuncs.melting_ice_equilibrium_SA_CT_ratio",
  "gsw._wrapped_ufuncs.melting_ice_into_seawater",
  "gsw._wrapped_ufuncs.melting_seaice_SA_CT_ratio",
  "gsw._wrapped_ufuncs.melting_seaice_equilibrium_SA_CT_ratio",
  "gsw._wrapped_ufuncs.melting_seaice_into_seawater",
  "gsw._wrapped_ufuncs.p_from_z",
  "gsw._wrapped_ufuncs.pot_enthalpy_from_pt_ice",
  "gsw._wrapped_ufuncs.pot_enthalpy_ice_freezing",
  "gsw._wrapped_ufuncs.pot_rho_t_exact",
  "gsw._wrapped_ufuncs.pressure_coefficient_ice",
  "gsw._wrapped_ufuncs.pressure_freezing_CT",
  "gsw._wrapped_ufuncs.pt0_from_t",
  "gsw._wrapped_ufuncs.pt_first_derivatives",
  "gsw._wrapped_ufuncs.pt_from_CT",
  "gsw._wrapped_ufuncs.pt_from_entropy",
  "gsw._wrapped_ufuncs.pt_from_pot_enthalpy_ice",
  "gsw._wrapped_ufuncs.pt_from_t",
  "gsw._wrapped_ufuncs.pt_second_derivatives",
  "gsw._wrapped_ufuncs.rho",
  "gsw._wrapped_ufuncs.seaice_fraction_to_freeze_seawater",
  "gsw._wrapped_ufuncs.sigma0",
  "gsw._wrapped_ufuncs.sigma1",
  "gsw._wrapped_ufuncs.sigma2",
  "gsw._wrapped_ufuncs.sigma3",
  "gsw._wrapped_ufuncs.sigma4",
  "gsw._wrapped_ufuncs.sound_speed",
  "gsw._wrapped_ufuncs.specvol",
  "gsw._wrapped_ufuncs.spiciness0",
  "gsw._wrapped_ufuncs.spiciness1",
  "gsw._wrapped_ufuncs.spiciness2",
  "gsw._wrapped_ufuncs.t_deriv_chem_potential_water_t_exact",
  "gsw._wrapped_ufuncs.t_freezing",
  "gsw._wrapped_ufuncs.t_from_CT",
  "gsw._wrapped_ufuncs.t_from_pt0_ice",
  "gsw._wrapped_ufuncs.thermobaric",
  "gsw._wrapped_ufuncs.z_from_p",
  "gsw.adiabatic_lapse_rate_from_CT",
  "gsw.adiabatic_lapse_rate_ice",
  "gsw.alpha",
  "gsw.beta",
  "gsw.cabbeling",
  "gsw.chem_potential_water_ice",
  "gsw.chem_potential_water_t_exact",
  "gsw.conversions",
  "gsw.conversions.t90_from_t68",
  "gsw.cp_ice",
  "gsw.cp_t_exact",
  "gsw.deltaSA_atlas",
  "gsw.deltaSA_from_SP",
  "gsw.density",
  "gsw.dilution_coefficient_t_exact",
  "gsw.distance",
  "gsw.dynamic_enthalpy",
  "gsw.energy",
  "gsw.enthalpy",
  "gsw.entropy_first_derivatives",
  "gsw.entropy_from_CT",
  "gsw.entropy_from_pt",
  "gsw.entropy_from_t",
  "gsw.entropy_ice",
  "gsw.entropy_second_derivatives",
  "gsw.f",
  "gsw.frazil_properties",
  "gsw.frazil_ratios_adiabatic",
  "gsw.freezing",
  "gsw.geo_strf_dyn_height",
  "gsw.geostrophic_velocity",
  "gsw.geostrophy",
  "gsw.geostrophy.__all__",
  "gsw.geostrophy.distance",
  "gsw.geostrophy.f",
  "gsw.geostrophy.geo_strf_dyn_height",
  "gsw.geostrophy.geostrophic_velocity",
  "gsw.geostrophy.unwrap",
  "gsw.gibbs_ice_part_t",
  "gsw.gibbs_ice_pt0",
  "gsw.grav",
  "gsw.ice",
  "gsw.ice_fraction_to_freeze_seawater",
  "gsw.internal_energy",
  "gsw.kappa",
  "gsw.latentheat_evap_CT",
  "gsw.latentheat_evap_t",
  "gsw.latentheat_melting",
  "gsw.melting_ice_SA_CT_ratio",
  "gsw.melting_ice_equilibrium_SA_CT_ratio",
  "gsw.melting_ice_into_seawater",
  "gsw.melting_seaice_SA_CT_ratio",
  "gsw.melting_seaice_equilibrium_SA_CT_ratio",
  "gsw.melting_seaice_into_seawater",
  "gsw.p_from_z",
  "gsw.pot_enthalpy_from_pt_ice",
  "gsw.pot_enthalpy_ice_freezing",
  "gsw.pot_rho_t_exact",
  "gsw.pressure_coefficient_ice",
  "gsw.pressure_freezing_CT",
  "gsw.pt0_from_t",
  "gsw.pt_first_derivatives",
  "gsw.pt_from_CT",
  "gsw.pt_from_entropy",
  "gsw.pt_from_pot_enthalpy_ice",
  "gsw.pt_from_t",
  "gsw.pt_second_derivatives",
  "gsw.rho",
  "gsw.seaice_fraction_to_freeze_seawater",
  "gsw.sigma0",
  "gsw.sigma1",
  "gsw.sigma2",
  "gsw.sigma3",
  "gsw.sigma4",
  "gsw.sound_speed",
  "gsw.specvol",
  "gsw.spiciness0",
  "gsw.spiciness1",
  "gsw.spiciness2",
  "gsw.stability",
  "gsw.stability.CT",
  "gsw.stability.CT_mid",
  "gsw.stability.IPV_vs_fNsquared_ratio",
  "gsw.stability.IPV_vs_fNsquared_ratio.CT",
  "gsw.stability.IPV_vs_fNsquared_ratio.CT_mid",
  "gsw.stability.IPV_vs_fNsquared_ratio.IPV_vs_fNsquared_ratio",
  "gsw.stability.IPV_vs_fNsquared_ratio.SA",
  "gsw.stability.IPV_vs_fNsquared_ratio.SA_mid",
  "gsw.stability.IPV_vs_fNsquared_ratio._",
  "gsw.stability.IPV_vs_fNsquared_ratio.alpha",
  "gsw.stability.IPV_vs_fNsquared_ratio.alpha_pref",
  "gsw.stability.IPV_vs_fNsquared_ratio.beta",
  "gsw.stability.IPV_vs_fNsquared_ratio.beta_pref",
  "gsw.stability.IPV_vs_fNsquared_ratio.dCT",
  "gsw.stability.IPV_vs_fNsquared_ratio.dSA",
  "gsw.stability.IPV_vs_fNsquared_ratio.deep",
  "gsw.stability.IPV_vs_fNsquared_ratio.den",
  "gsw.stability.IPV_vs_fNsquared_ratio.igood",
  "gsw.stability.IPV_vs_fNsquared_ratio.num",
  "gsw.stability.IPV_vs_fNsquared_ratio.p",
  "gsw.stability.IPV_vs_fNsquared_ratio.p_mid",
  "gsw.stability.IPV_vs_fNsquared_ratio.shallow",
  "gsw.stability.Nsquared",
  "gsw.stability.SA",
  "gsw.stability.SA_mid",
  "gsw.stability.Turner_Rsubrho",
  "gsw.stability._",
  "gsw.stability.__all__",
  "gsw.stability.alpha",
  "gsw.stability.alpha_pref",
  "gsw.stability.beta",
  "gsw.stability.beta_pref",
  "gsw.stability.dCT",
  "gsw.stability.dSA",
  "gsw.stability.deep",
  "gsw.stability.den",
  "gsw.stability.igood",
  "gsw.stability.num",
  "gsw.stability.p",
  "gsw.stability.p_mid",
  "gsw.stability.shallow",
  "gsw.t90_from_t68",
  "gsw.t_deriv_chem_potential_water_t_exact",
  "gsw.t_freezing",
  "gsw.t_from_CT",
  "gsw.t_from_pt0_ice",
  "gsw.thermobaric",
  "gsw.unwrap",
  "gsw.z_from_p"
 ]
}