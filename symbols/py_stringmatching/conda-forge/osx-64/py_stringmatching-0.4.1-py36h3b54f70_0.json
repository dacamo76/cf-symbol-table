{
 "errors": {},
 "symbols": [
  "py_stringmatching.Affine",
  "py_stringmatching.AlphabeticTokenizer",
  "py_stringmatching.AlphanumericTokenizer",
  "py_stringmatching.BagDistance",
  "py_stringmatching.Cosine",
  "py_stringmatching.DelimiterTokenizer",
  "py_stringmatching.Dice",
  "py_stringmatching.Editex",
  "py_stringmatching.GeneralizedJaccard",
  "py_stringmatching.HammingDistance",
  "py_stringmatching.Jaccard",
  "py_stringmatching.Jaro",
  "py_stringmatching.JaroWinkler",
  "py_stringmatching.Levenshtein",
  "py_stringmatching.MongeElkan",
  "py_stringmatching.NeedlemanWunsch",
  "py_stringmatching.OverlapCoefficient",
  "py_stringmatching.QgramTokenizer",
  "py_stringmatching.SmithWaterman",
  "py_stringmatching.SoftTfIdf",
  "py_stringmatching.Soundex",
  "py_stringmatching.TfIdf",
  "py_stringmatching.TverskyIndex",
  "py_stringmatching.WhitespaceTokenizer",
  "py_stringmatching.__version__",
  "py_stringmatching.similarity_measure",
  "py_stringmatching.similarity_measure.affine",
  "py_stringmatching.similarity_measure.affine.Affine",
  "py_stringmatching.similarity_measure.affine.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.affine.affine",
  "py_stringmatching.similarity_measure.affine.cython_sim_ident",
  "py_stringmatching.similarity_measure.affine.utils",
  "py_stringmatching.similarity_measure.bag_distance",
  "py_stringmatching.similarity_measure.bag_distance.BagDistance",
  "py_stringmatching.similarity_measure.bag_distance.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.bag_distance.utils",
  "py_stringmatching.similarity_measure.cosine",
  "py_stringmatching.similarity_measure.cosine.Cosine",
  "py_stringmatching.similarity_measure.cosine.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.cosine.utils",
  "py_stringmatching.similarity_measure.cython",
  "py_stringmatching.similarity_measure.cython.cython_affine.affine",
  "py_stringmatching.similarity_measure.cython.cython_jaro.jaro",
  "py_stringmatching.similarity_measure.cython.cython_jaro_winkler.jaro_winkler",
  "py_stringmatching.similarity_measure.cython.cython_levenshtein.levenshtein",
  "py_stringmatching.similarity_measure.cython.cython_needleman_wunsch.needleman_wunsch",
  "py_stringmatching.similarity_measure.cython.cython_smith_waterman.smith_waterman",
  "py_stringmatching.similarity_measure.cython.cython_utils.cython_sim_ident",
  "py_stringmatching.similarity_measure.dice",
  "py_stringmatching.similarity_measure.dice.Dice",
  "py_stringmatching.similarity_measure.dice.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.dice.utils",
  "py_stringmatching.similarity_measure.editex",
  "py_stringmatching.similarity_measure.editex.Editex",
  "py_stringmatching.similarity_measure.editex.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.editex.utils",
  "py_stringmatching.similarity_measure.generalized_jaccard",
  "py_stringmatching.similarity_measure.generalized_jaccard.GeneralizedJaccard",
  "py_stringmatching.similarity_measure.generalized_jaccard.HybridSimilarityMeasure",
  "py_stringmatching.similarity_measure.generalized_jaccard.Jaro",
  "py_stringmatching.similarity_measure.generalized_jaccard.utils",
  "py_stringmatching.similarity_measure.hamming_distance",
  "py_stringmatching.similarity_measure.hamming_distance.HammingDistance",
  "py_stringmatching.similarity_measure.hamming_distance.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.hamming_distance.utils",
  "py_stringmatching.similarity_measure.hybrid_similarity_measure",
  "py_stringmatching.similarity_measure.hybrid_similarity_measure.HybridSimilarityMeasure",
  "py_stringmatching.similarity_measure.hybrid_similarity_measure.SimilarityMeasure",
  "py_stringmatching.similarity_measure.jaccard",
  "py_stringmatching.similarity_measure.jaccard.Jaccard",
  "py_stringmatching.similarity_measure.jaccard.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.jaccard.utils",
  "py_stringmatching.similarity_measure.jaro",
  "py_stringmatching.similarity_measure.jaro.Jaro",
  "py_stringmatching.similarity_measure.jaro.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.jaro.jaro",
  "py_stringmatching.similarity_measure.jaro.utils",
  "py_stringmatching.similarity_measure.jaro_winkler",
  "py_stringmatching.similarity_measure.jaro_winkler.JaroWinkler",
  "py_stringmatching.similarity_measure.jaro_winkler.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.jaro_winkler.jaro_winkler",
  "py_stringmatching.similarity_measure.jaro_winkler.utils",
  "py_stringmatching.similarity_measure.levenshtein",
  "py_stringmatching.similarity_measure.levenshtein.Levenshtein",
  "py_stringmatching.similarity_measure.levenshtein.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.levenshtein.levenshtein",
  "py_stringmatching.similarity_measure.levenshtein.utils",
  "py_stringmatching.similarity_measure.monge_elkan",
  "py_stringmatching.similarity_measure.monge_elkan.HybridSimilarityMeasure",
  "py_stringmatching.similarity_measure.monge_elkan.JaroWinkler",
  "py_stringmatching.similarity_measure.monge_elkan.MongeElkan",
  "py_stringmatching.similarity_measure.monge_elkan.utils",
  "py_stringmatching.similarity_measure.needleman_wunsch",
  "py_stringmatching.similarity_measure.needleman_wunsch.NeedlemanWunsch",
  "py_stringmatching.similarity_measure.needleman_wunsch.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.needleman_wunsch.cython_sim_ident",
  "py_stringmatching.similarity_measure.needleman_wunsch.needleman_wunsch",
  "py_stringmatching.similarity_measure.needleman_wunsch.utils",
  "py_stringmatching.similarity_measure.overlap_coefficient",
  "py_stringmatching.similarity_measure.overlap_coefficient.OverlapCoefficient",
  "py_stringmatching.similarity_measure.overlap_coefficient.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.overlap_coefficient.utils",
  "py_stringmatching.similarity_measure.partial_ratio",
  "py_stringmatching.similarity_measure.partial_ratio.PartialRatio",
  "py_stringmatching.similarity_measure.partial_ratio.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.partial_ratio.utils",
  "py_stringmatching.similarity_measure.partial_token_sort",
  "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort",
  "py_stringmatching.similarity_measure.partial_token_sort.PartialTokenSort.get_sim_score.sim_score",
  "py_stringmatching.similarity_measure.partial_token_sort.sim_score",
  "py_stringmatching.similarity_measure.phonetic_similarity_measure",
  "py_stringmatching.similarity_measure.phonetic_similarity_measure.PhoneticSimilarityMeasure",
  "py_stringmatching.similarity_measure.phonetic_similarity_measure.SimilarityMeasure",
  "py_stringmatching.similarity_measure.ratio",
  "py_stringmatching.similarity_measure.ratio.Ratio",
  "py_stringmatching.similarity_measure.ratio.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.ratio.utils",
  "py_stringmatching.similarity_measure.sequence_similarity_measure",
  "py_stringmatching.similarity_measure.sequence_similarity_measure.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.sequence_similarity_measure.SimilarityMeasure",
  "py_stringmatching.similarity_measure.similarity_measure",
  "py_stringmatching.similarity_measure.similarity_measure.SimilarityMeasure",
  "py_stringmatching.similarity_measure.smith_waterman",
  "py_stringmatching.similarity_measure.smith_waterman.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.smith_waterman.SmithWaterman",
  "py_stringmatching.similarity_measure.smith_waterman.cython_sim_ident",
  "py_stringmatching.similarity_measure.smith_waterman.smith_waterman",
  "py_stringmatching.similarity_measure.smith_waterman.utils",
  "py_stringmatching.similarity_measure.soft_tfidf",
  "py_stringmatching.similarity_measure.soft_tfidf.HybridSimilarityMeasure",
  "py_stringmatching.similarity_measure.soft_tfidf.Jaro",
  "py_stringmatching.similarity_measure.soft_tfidf.SoftTfIdf",
  "py_stringmatching.similarity_measure.soft_tfidf.utils",
  "py_stringmatching.similarity_measure.soundex",
  "py_stringmatching.similarity_measure.soundex.PhoneticSimilarityMeasure",
  "py_stringmatching.similarity_measure.soundex.Soundex",
  "py_stringmatching.similarity_measure.soundex.utils",
  "py_stringmatching.similarity_measure.tfidf",
  "py_stringmatching.similarity_measure.tfidf.TfIdf",
  "py_stringmatching.similarity_measure.tfidf.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.tfidf.utils",
  "py_stringmatching.similarity_measure.token_similarity_measure",
  "py_stringmatching.similarity_measure.token_similarity_measure.SimilarityMeasure",
  "py_stringmatching.similarity_measure.token_similarity_measure.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.token_sort",
  "py_stringmatching.similarity_measure.token_sort.Ratio",
  "py_stringmatching.similarity_measure.token_sort.SequenceSimilarityMeasure",
  "py_stringmatching.similarity_measure.token_sort.TokenSort",
  "py_stringmatching.similarity_measure.token_sort.utils",
  "py_stringmatching.similarity_measure.tversky_index",
  "py_stringmatching.similarity_measure.tversky_index.TokenSimilarityMeasure",
  "py_stringmatching.similarity_measure.tversky_index.TverskyIndex",
  "py_stringmatching.similarity_measure.tversky_index.utils",
  "py_stringmatching.tests",
  "py_stringmatching.tests.test_sim_Soundex",
  "py_stringmatching.tests.test_simfunctions",
  "py_stringmatching.tests.test_simfunctions.Affine",
  "py_stringmatching.tests.test_simfunctions.AffineTestCases",
  "py_stringmatching.tests.test_simfunctions.BagDistance",
  "py_stringmatching.tests.test_simfunctions.BagDistanceTestCases",
  "py_stringmatching.tests.test_simfunctions.Cosine",
  "py_stringmatching.tests.test_simfunctions.CosineTestCases",
  "py_stringmatching.tests.test_simfunctions.Dice",
  "py_stringmatching.tests.test_simfunctions.DiceTestCases",
  "py_stringmatching.tests.test_simfunctions.Editex",
  "py_stringmatching.tests.test_simfunctions.EditexTestCases",
  "py_stringmatching.tests.test_simfunctions.GeneralizedJaccard",
  "py_stringmatching.tests.test_simfunctions.GeneralizedJaccardTestCases",
  "py_stringmatching.tests.test_simfunctions.HammingDistance",
  "py_stringmatching.tests.test_simfunctions.HammingDistanceTestCases",
  "py_stringmatching.tests.test_simfunctions.Jaccard",
  "py_stringmatching.tests.test_simfunctions.JaccardTestCases",
  "py_stringmatching.tests.test_simfunctions.Jaro",
  "py_stringmatching.tests.test_simfunctions.JaroTestCases",
  "py_stringmatching.tests.test_simfunctions.JaroWinkler",
  "py_stringmatching.tests.test_simfunctions.JaroWinklerTestCases",
  "py_stringmatching.tests.test_simfunctions.Levenshtein",
  "py_stringmatching.tests.test_simfunctions.LevenshteinTestCases",
  "py_stringmatching.tests.test_simfunctions.MongeElkan",
  "py_stringmatching.tests.test_simfunctions.MongeElkanTestCases",
  "py_stringmatching.tests.test_simfunctions.NUMBER_OF_DECIMAL_PLACES",
  "py_stringmatching.tests.test_simfunctions.NeedlemanWunsch",
  "py_stringmatching.tests.test_simfunctions.NeedlemanWunschTestCases",
  "py_stringmatching.tests.test_simfunctions.OverlapCoefficient",
  "py_stringmatching.tests.test_simfunctions.OverlapCoefficientTestCases",
  "py_stringmatching.tests.test_simfunctions.PartialRatio",
  "py_stringmatching.tests.test_simfunctions.PartialRatioTestCases",
  "py_stringmatching.tests.test_simfunctions.PartialTokenSort",
  "py_stringmatching.tests.test_simfunctions.PartialTokenSortTestCases",
  "py_stringmatching.tests.test_simfunctions.Ratio",
  "py_stringmatching.tests.test_simfunctions.RatioTestCases",
  "py_stringmatching.tests.test_simfunctions.SmithWaterman",
  "py_stringmatching.tests.test_simfunctions.SmithWatermanTestCases",
  "py_stringmatching.tests.test_simfunctions.SoftTfIdf",
  "py_stringmatching.tests.test_simfunctions.Soft_TfidfTestCases",
  "py_stringmatching.tests.test_simfunctions.Soundex",
  "py_stringmatching.tests.test_simfunctions.SoundexTestCases",
  "py_stringmatching.tests.test_simfunctions.TfIdf",
  "py_stringmatching.tests.test_simfunctions.TfidfTestCases",
  "py_stringmatching.tests.test_simfunctions.TokenSort",
  "py_stringmatching.tests.test_simfunctions.TokenSortTestCases",
  "py_stringmatching.tests.test_simfunctions.TverskyIndex",
  "py_stringmatching.tests.test_simfunctions.TverskyIndexTestCases",
  "py_stringmatching.tests.test_tokenizers",
  "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizer",
  "py_stringmatching.tests.test_tokenizers.AlphabeticTokenizerTestCases",
  "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizer",
  "py_stringmatching.tests.test_tokenizers.AlphanumericTokenizerTestCases",
  "py_stringmatching.tests.test_tokenizers.DelimiterTokenizer",
  "py_stringmatching.tests.test_tokenizers.DelimiterTokenizerTestCases",
  "py_stringmatching.tests.test_tokenizers.QgramTokenizer",
  "py_stringmatching.tests.test_tokenizers.QgramTokenizerTestCases",
  "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizer",
  "py_stringmatching.tests.test_tokenizers.WhitespaceTokenizerTestCases",
  "py_stringmatching.tokenizer",
  "py_stringmatching.tokenizer.alphabetic_tokenizer",
  "py_stringmatching.tokenizer.alphabetic_tokenizer.AlphabeticTokenizer",
  "py_stringmatching.tokenizer.alphabetic_tokenizer.DefinitionTokenizer",
  "py_stringmatching.tokenizer.alphabetic_tokenizer.utils",
  "py_stringmatching.tokenizer.alphanumeric_tokenizer",
  "py_stringmatching.tokenizer.alphanumeric_tokenizer.AlphanumericTokenizer",
  "py_stringmatching.tokenizer.alphanumeric_tokenizer.DefinitionTokenizer",
  "py_stringmatching.tokenizer.alphanumeric_tokenizer.utils",
  "py_stringmatching.tokenizer.definition_tokenizer",
  "py_stringmatching.tokenizer.definition_tokenizer.DefinitionTokenizer",
  "py_stringmatching.tokenizer.definition_tokenizer.Tokenizer",
  "py_stringmatching.tokenizer.delimiter_tokenizer",
  "py_stringmatching.tokenizer.delimiter_tokenizer.DelimiterTokenizer",
  "py_stringmatching.tokenizer.delimiter_tokenizer.Tokenizer",
  "py_stringmatching.tokenizer.delimiter_tokenizer.utils",
  "py_stringmatching.tokenizer.qgram_tokenizer",
  "py_stringmatching.tokenizer.qgram_tokenizer.DefinitionTokenizer",
  "py_stringmatching.tokenizer.qgram_tokenizer.QgramTokenizer",
  "py_stringmatching.tokenizer.qgram_tokenizer.utils",
  "py_stringmatching.tokenizer.tokenizer",
  "py_stringmatching.tokenizer.tokenizer.Tokenizer",
  "py_stringmatching.tokenizer.whitespace_tokenizer",
  "py_stringmatching.tokenizer.whitespace_tokenizer.DelimiterTokenizer",
  "py_stringmatching.tokenizer.whitespace_tokenizer.WhitespaceTokenizer",
  "py_stringmatching.tokenizer.whitespace_tokenizer.utils",
  "py_stringmatching.utils",
  "py_stringmatching.utils.PY3",
  "py_stringmatching.utils._remove_non_ascii_chars",
  "py_stringmatching.utils.convert_bag_to_set",
  "py_stringmatching.utils.convert_to_unicode",
  "py_stringmatching.utils.process_string",
  "py_stringmatching.utils.remove_non_ascii_chars",
  "py_stringmatching.utils.sim_check_for_empty",
  "py_stringmatching.utils.sim_check_for_exact_match",
  "py_stringmatching.utils.sim_check_for_list_or_set_inputs",
  "py_stringmatching.utils.sim_check_for_none",
  "py_stringmatching.utils.sim_check_for_same_len",
  "py_stringmatching.utils.sim_check_for_string_inputs",
  "py_stringmatching.utils.sim_check_for_zero_len",
  "py_stringmatching.utils.sim_check_tversky_parameters",
  "py_stringmatching.utils.string",
  "py_stringmatching.utils.tok_check_for_none",
  "py_stringmatching.utils.tok_check_for_string_input",
  "py_stringmatching.utils.unicode"
 ]
}