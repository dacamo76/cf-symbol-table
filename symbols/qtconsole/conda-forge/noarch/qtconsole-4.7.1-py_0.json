{
 "errors": {
  "qtconsole.frontend_widget": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "qtconsole.history_console_widget": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "qtconsole.inprocess": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "qtconsole.jupyter_widget": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "qtconsole.rich_jupyter_widget": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  }
 },
 "symbols": [
  "qtconsole.__main__",
  "qtconsole.__main__.main",
  "qtconsole.__version__",
  "qtconsole._version",
  "qtconsole._version.__version__",
  "qtconsole._version.version_info",
  "qtconsole.ansi_code_processor",
  "qtconsole.ansi_code_processor.ANSI_OR_SPECIAL_PATTERN",
  "qtconsole.ansi_code_processor.ANSI_PATTERN",
  "qtconsole.ansi_code_processor.AnsiCodeProcessor",
  "qtconsole.ansi_code_processor.BackSpaceAction",
  "qtconsole.ansi_code_processor.BeepAction",
  "qtconsole.ansi_code_processor.CSI_COMMANDS",
  "qtconsole.ansi_code_processor.CSI_SUBPATTERN",
  "qtconsole.ansi_code_processor.CarriageReturnAction",
  "qtconsole.ansi_code_processor.EraseAction",
  "qtconsole.ansi_code_processor.MoveAction",
  "qtconsole.ansi_code_processor.NewLineAction",
  "qtconsole.ansi_code_processor.OSC_SUBPATTERN",
  "qtconsole.ansi_code_processor.QtAnsiCodeProcessor",
  "qtconsole.ansi_code_processor.SPECIAL_PATTERN",
  "qtconsole.ansi_code_processor.ScrollAction",
  "qtconsole.ansi_code_processor.dark_style",
  "qtconsole.base_frontend_mixin",
  "qtconsole.base_frontend_mixin.BaseFrontendMixin",
  "qtconsole.bracket_matcher",
  "qtconsole.bracket_matcher.BracketMatcher",
  "qtconsole.call_tip_widget",
  "qtconsole.call_tip_widget.CallTipWidget",
  "qtconsole.client",
  "qtconsole.client.QtHBChannel",
  "qtconsole.client.QtKernelClient",
  "qtconsole.client.QtZMQSocketChannel",
  "qtconsole.client.major_protocol_version",
  "qtconsole.client.started_channels",
  "qtconsole.client.stopped_channels",
  "qtconsole.comms",
  "qtconsole.comms.Comm",
  "qtconsole.comms.MetaQObjectHasTraits",
  "qtconsole.comms.SuperQObject",
  "qtconsole.comms.__all__",
  "qtconsole.completion_html",
  "qtconsole.completion_html.CompletionHtml",
  "qtconsole.completion_html.SlidingInterval",
  "qtconsole.completion_html.html_tableify",
  "qtconsole.completion_plain",
  "qtconsole.completion_plain.CompletionPlain",
  "qtconsole.completion_widget",
  "qtconsole.completion_widget.CompletionWidget",
  "qtconsole.console_widget",
  "qtconsole.console_widget.ConsoleWidget",
  "qtconsole.console_widget.HtmlExporter",
  "qtconsole.console_widget.MetaQObjectHasTraits",
  "qtconsole.console_widget.get_font",
  "qtconsole.console_widget.is_letter_or_number",
  "qtconsole.console_widget.is_whitespace",
  "qtconsole.console_widget.superQ",
  "qtconsole.frontend_widget",
  "qtconsole.frontend_widget.FrontendWidget",
  "qtconsole.history_console_widget",
  "qtconsole.inprocess",
  "qtconsole.ipython_widget",
  "qtconsole.ipython_widget.IPythonWidget",
  "qtconsole.ipython_widget.JupyterWidget",
  "qtconsole.ipython_widget.__version__",
  "qtconsole.ipython_widget.default_editor",
  "qtconsole.ipython_widget.default_in_prompt",
  "qtconsole.ipython_widget.default_input_sep",
  "qtconsole.ipython_widget.default_out_prompt",
  "qtconsole.ipython_widget.default_output_sep",
  "qtconsole.ipython_widget.default_output_sep2",
  "qtconsole.ipython_widget.zmq_shell_source",
  "qtconsole.jupyter_widget",
  "qtconsole.jupyter_widget.IPythonWidget",
  "qtconsole.jupyter_widget.JupyterWidget",
  "qtconsole.jupyter_widget.default_editor",
  "qtconsole.jupyter_widget.default_in_prompt",
  "qtconsole.jupyter_widget.default_input_sep",
  "qtconsole.jupyter_widget.default_out_prompt",
  "qtconsole.jupyter_widget.default_output_sep",
  "qtconsole.jupyter_widget.default_output_sep2",
  "qtconsole.jupyter_widget.zmq_shell_source",
  "qtconsole.kernel_mixins",
  "qtconsole.kernel_mixins.QtKernelClientMixin",
  "qtconsole.kernel_mixins.QtKernelClientMixin.started_channels",
  "qtconsole.kernel_mixins.QtKernelClientMixin.stopped_channels",
  "qtconsole.kernel_mixins.QtKernelManagerMixin",
  "qtconsole.kernel_mixins.QtKernelManagerMixin.kernel_restarted",
  "qtconsole.kernel_mixins.QtKernelRestarterMixin",
  "qtconsole.kill_ring",
  "qtconsole.kill_ring.KillRing",
  "qtconsole.kill_ring.QtKillRing",
  "qtconsole.mainwindow",
  "qtconsole.mainwindow.JupyterWidget",
  "qtconsole.mainwindow.MainWindow",
  "qtconsole.mainwindow.background",
  "qtconsole.mainwindow.gui_reference",
  "qtconsole.mainwindow.styles",
  "qtconsole.manager",
  "qtconsole.manager.QtKernelManager",
  "qtconsole.manager.QtKernelRestarter",
  "qtconsole.manager.kernel_restarted",
  "qtconsole.pygments_highlighter",
  "qtconsole.pygments_highlighter.PygmentsBlockUserData",
  "qtconsole.pygments_highlighter.PygmentsHighlighter",
  "qtconsole.pygments_highlighter.get_tokens_unprocessed",
  "qtconsole.pygments_highlighter.qstring_length",
  "qtconsole.qstringhelpers",
  "qtconsole.qstringhelpers.PY2",
  "qtconsole.qstringhelpers.qstring_length",
  "qtconsole.qtconsoleapp",
  "qtconsole.qtconsoleapp.IPythonQtConsoleApp",
  "qtconsole.qtconsoleapp.JupyterQtConsoleApp",
  "qtconsole.qtconsoleapp.JupyterWidget",
  "qtconsole.qtconsoleapp.MainWindow",
  "qtconsole.qtconsoleapp.QtKernelClient",
  "qtconsole.qtconsoleapp.QtKernelManager",
  "qtconsole.qtconsoleapp.RichJupyterWidget",
  "qtconsole.qtconsoleapp.__version__",
  "qtconsole.qtconsoleapp._examples",
  "qtconsole.qtconsoleapp.aliases",
  "qtconsole.qtconsoleapp.flags",
  "qtconsole.qtconsoleapp.gui_excepthook",
  "qtconsole.qtconsoleapp.main",
  "qtconsole.qtconsoleapp.old_excepthook",
  "qtconsole.qtconsoleapp.qt_aliases",
  "qtconsole.qtconsoleapp.qt_flags",
  "qtconsole.qtconsoleapp.styles",
  "qtconsole.qtconsoleapp.undoc",
  "qtconsole.rich_ipython_widget",
  "qtconsole.rich_ipython_widget.LatexError",
  "qtconsole.rich_ipython_widget.RichIPythonWidget",
  "qtconsole.rich_ipython_widget.RichJupyterWidget",
  "qtconsole.rich_ipython_widget.latex_to_png",
  "qtconsole.rich_ipython_widget.save_svg",
  "qtconsole.rich_ipython_widget.svg_to_clipboard",
  "qtconsole.rich_ipython_widget.svg_to_image",
  "qtconsole.rich_jupyter_widget",
  "qtconsole.rich_jupyter_widget.LatexError",
  "qtconsole.rich_jupyter_widget.RichIPythonWidget",
  "qtconsole.rich_jupyter_widget.RichJupyterWidget",
  "qtconsole.rich_jupyter_widget.latex_to_png",
  "qtconsole.rich_text",
  "qtconsole.rich_text.EMPTY_P_RE",
  "qtconsole.rich_text.HtmlExporter",
  "qtconsole.rich_text.IMG_RE",
  "qtconsole.rich_text.default_image_tag",
  "qtconsole.rich_text.export_html",
  "qtconsole.rich_text.export_xhtml",
  "qtconsole.rich_text.fix_html",
  "qtconsole.styles",
  "qtconsole.styles.dark_color",
  "qtconsole.styles.dark_style",
  "qtconsole.styles.default_bw_style_sheet",
  "qtconsole.styles.default_bw_syntax_style",
  "qtconsole.styles.default_dark_style_sheet",
  "qtconsole.styles.default_dark_style_template",
  "qtconsole.styles.default_dark_syntax_style",
  "qtconsole.styles.default_light_style_sheet",
  "qtconsole.styles.default_light_style_template",
  "qtconsole.styles.default_light_syntax_style",
  "qtconsole.styles.default_template",
  "qtconsole.styles.get_colors",
  "qtconsole.styles.hex_to_rgb",
  "qtconsole.styles.sheet_from_template",
  "qtconsole.svg",
  "qtconsole.svg.save_svg",
  "qtconsole.svg.svg_to_clipboard",
  "qtconsole.svg.svg_to_image",
  "qtconsole.tests",
  "qtconsole.tests.no_display",
  "qtconsole.tests.test_00_console_widget",
  "qtconsole.tests.test_00_console_widget.ConsoleWidget",
  "qtconsole.tests.test_00_console_widget.JupyterQtConsoleApp",
  "qtconsole.tests.test_00_console_widget.SHELL_TIMEOUT",
  "qtconsole.tests.test_00_console_widget.TestConsoleWidget",
  "qtconsole.tests.test_00_console_widget.qtconsole",
  "qtconsole.tests.test_00_console_widget.test_debug",
  "qtconsole.tests.test_00_console_widget.test_input",
  "qtconsole.tests.test_00_console_widget.test_scroll",
  "qtconsole.tests.test_ansi_code_processor",
  "qtconsole.tests.test_ansi_code_processor.AnsiCodeProcessor",
  "qtconsole.tests.test_ansi_code_processor.TestAnsiCodeProcessor",
  "qtconsole.tests.test_app",
  "qtconsole.tests.test_app.test_generate_config",
  "qtconsole.tests.test_app.test_help_output",
  "qtconsole.tests.test_comms",
  "qtconsole.tests.test_comms.PY2",
  "qtconsole.tests.test_comms.QtKernelManager",
  "qtconsole.tests.test_comms.Tests",
  "qtconsole.tests.test_comms.TimeoutError",
  "qtconsole.tests.test_completion_widget",
  "qtconsole.tests.test_completion_widget.CompletionWidget",
  "qtconsole.tests.test_completion_widget.ConsoleWidget",
  "qtconsole.tests.test_completion_widget.TestCompletionWidget",
  "qtconsole.tests.test_frontend_widget",
  "qtconsole.tests.test_frontend_widget.FrontendWidget",
  "qtconsole.tests.test_frontend_widget.TestFrontendWidget",
  "qtconsole.tests.test_jupyter_widget",
  "qtconsole.tests.test_jupyter_widget.JupyterWidget",
  "qtconsole.tests.test_jupyter_widget.QtKernelClient",
  "qtconsole.tests.test_jupyter_widget.TestJupyterWidget",
  "qtconsole.tests.test_kill_ring",
  "qtconsole.tests.test_kill_ring.KillRing",
  "qtconsole.tests.test_kill_ring.QtKillRing",
  "qtconsole.tests.test_kill_ring.TestKillRing",
  "qtconsole.tests.test_styles",
  "qtconsole.tests.test_styles.TestStyles",
  "qtconsole.tests.test_styles.dark_color",
  "qtconsole.tests.test_styles.dark_style",
  "qtconsole.usage",
  "qtconsole.usage.gui_reference",
  "qtconsole.util",
  "qtconsole.util.MetaHasTraits",
  "qtconsole.util.MetaQObject",
  "qtconsole.util.MetaQObjectHasTraits",
  "qtconsole.util.SuperQObject",
  "qtconsole.util.get_font",
  "qtconsole.util.superQ",
  "qtconsole.version_info"
 ]
}