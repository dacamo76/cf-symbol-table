{
 "errors": {},
 "symbols": [
  "textblob.Blobber",
  "textblob.PACKAGE_DIR",
  "textblob.Sentence",
  "textblob.TextBlob",
  "textblob.Word",
  "textblob.__all__",
  "textblob.__author__",
  "textblob.__license__",
  "textblob.__version__",
  "textblob._text",
  "textblob._text.ABBREVIATIONS",
  "textblob._text.ADJ",
  "textblob._text.ADJECTIVE",
  "textblob._text.ADP",
  "textblob._text.ADV",
  "textblob._text.ADVERB",
  "textblob._text.ANCHOR",
  "textblob._text.CD",
  "textblob._text.CHUNK",
  "textblob._text.CHUNKS",
  "textblob._text.CONJ",
  "textblob._text.Context",
  "textblob._text.DET",
  "textblob._text.EMOTICONS",
  "textblob._text.EOS",
  "textblob._text.Entities",
  "textblob._text.INTJ",
  "textblob._text.IRONY",
  "textblob._text.JJ",
  "textblob._text.LEMMA",
  "textblob._text.Lexicon",
  "textblob._text.MODULE",
  "textblob._text.MOOD",
  "textblob._text.Morphology",
  "textblob._text.NN",
  "textblob._text.NOUN",
  "textblob._text.NUM",
  "textblob._text.PENN",
  "textblob._text.PNP",
  "textblob._text.POS",
  "textblob._text.PREP",
  "textblob._text.PRON",
  "textblob._text.PRT",
  "textblob._text.PTB",
  "textblob._text.PUNC",
  "textblob._text.PUNCTUATION",
  "textblob._text.Parser",
  "textblob._text.RB",
  "textblob._text.REL",
  "textblob._text.RE_ABBR1",
  "textblob._text.RE_ABBR2",
  "textblob._text.RE_ABBR3",
  "textblob._text.RE_EMOTICONS",
  "textblob._text.RE_ENTITY1",
  "textblob._text.RE_ENTITY2",
  "textblob._text.RE_ENTITY3",
  "textblob._text.RE_SARCASM",
  "textblob._text.RE_SYNSET",
  "textblob._text.Rules",
  "textblob._text.SEPARATOR",
  "textblob._text.SLASH",
  "textblob._text.Score",
  "textblob._text.Sentiment",
  "textblob._text.Spelling",
  "textblob._text.TOKEN",
  "textblob._text.TOKENS",
  "textblob._text.TaggedString",
  "textblob._text.UNIVERSAL",
  "textblob._text.VB",
  "textblob._text.VERB",
  "textblob._text.WORD",
  "textblob._text.X",
  "textblob._text._read",
  "textblob._text._suffix_rules",
  "textblob._text.abbreviations",
  "textblob._text.avg",
  "textblob._text.decode_string",
  "textblob._text.decode_utf8",
  "textblob._text.encode_string",
  "textblob._text.encode_utf8",
  "textblob._text.find_chunks",
  "textblob._text.find_prepositions",
  "textblob._text.find_tags",
  "textblob._text.find_tokens",
  "textblob._text.isnumeric",
  "textblob._text.lazydict",
  "textblob._text.lazylist",
  "textblob._text.penntreebank2universal",
  "textblob._text.punctuation",
  "textblob._text.replacements",
  "textblob.base",
  "textblob.base.BaseNPExtractor",
  "textblob.base.BaseParser",
  "textblob.base.BaseSentimentAnalyzer",
  "textblob.base.BaseTagger",
  "textblob.base.BaseTokenizer",
  "textblob.base.CONTINUOUS",
  "textblob.base.DISCRETE",
  "textblob.base.with_metaclass",
  "textblob.blob",
  "textblob.blob.BaseBlob",
  "textblob.blob.BaseNPExtractor",
  "textblob.blob.BaseParser",
  "textblob.blob.BaseSentimentAnalyzer",
  "textblob.blob.BaseTagger",
  "textblob.blob.BaseTokenizer",
  "textblob.blob.BlobComparableMixin",
  "textblob.blob.Blobber",
  "textblob.blob.FastNPExtractor",
  "textblob.blob.NLTKTagger",
  "textblob.blob.PUNCTUATION_REGEX",
  "textblob.blob.PatternAnalyzer",
  "textblob.blob.PatternParser",
  "textblob.blob.Sentence",
  "textblob.blob.StringlikeMixin",
  "textblob.blob.TextBlob",
  "textblob.blob.Translator",
  "textblob.blob.Word",
  "textblob.blob.WordTokenizer",
  "textblob.blob._initialize_models",
  "textblob.blob._penn_to_wordnet",
  "textblob.blob._validated_param",
  "textblob.blob._wordnet",
  "textblob.blob.basestring",
  "textblob.blob.cached_property",
  "textblob.blob.lowerstrip",
  "textblob.blob.pluralize",
  "textblob.blob.requires_nltk_corpus",
  "textblob.blob.sent_tokenize",
  "textblob.blob.singularize",
  "textblob.blob.suggest",
  "textblob.blob.unicode",
  "textblob.blob.word_tokenize",
  "textblob.classifiers",
  "textblob.classifiers.BaseClassifier",
  "textblob.classifiers.DecisionTreeClassifier",
  "textblob.classifiers.FormatError",
  "textblob.classifiers.MaxEntClassifier",
  "textblob.classifiers.NLTKClassifier",
  "textblob.classifiers.NaiveBayesClassifier",
  "textblob.classifiers.PositiveNaiveBayesClassifier",
  "textblob.classifiers._get_document_tokens",
  "textblob.classifiers._get_words_from_dataset",
  "textblob.classifiers.basestring",
  "textblob.classifiers.basic_extractor",
  "textblob.classifiers.cached_property",
  "textblob.classifiers.contains_extractor",
  "textblob.classifiers.formats",
  "textblob.classifiers.is_filelike",
  "textblob.classifiers.strip_punc",
  "textblob.classifiers.word_tokenize",
  "textblob.compat",
  "textblob.compat.OrderedDict",
  "textblob.compat.PY2",
  "textblob.compat.PY26",
  "textblob.compat.basestring",
  "textblob.compat.binary_type",
  "textblob.compat.csv",
  "textblob.compat.imap",
  "textblob.compat.implements_to_string",
  "textblob.compat.izip",
  "textblob.compat.request",
  "textblob.compat.string_types",
  "textblob.compat.text_type",
  "textblob.compat.unicode",
  "textblob.compat.urlencode",
  "textblob.compat.with_metaclass",
  "textblob.decorators",
  "textblob.decorators.MissingCorpusError",
  "textblob.decorators.cached_property",
  "textblob.decorators.requires_nltk_corpus",
  "textblob.download_corpora",
  "textblob.download_corpora.ADDITIONAL_CORPORA",
  "textblob.download_corpora.ALL_CORPORA",
  "textblob.download_corpora.MIN_CORPORA",
  "textblob.download_corpora.download_all",
  "textblob.download_corpora.download_lite",
  "textblob.download_corpora.main",
  "textblob.en",
  "textblob.en.CHUNK",
  "textblob.en.Lexicon",
  "textblob.en.MODULE",
  "textblob.en.PENN",
  "textblob.en.PNP",
  "textblob.en.POS",
  "textblob.en.Parser",
  "textblob.en.Sentiment",
  "textblob.en.Spelling",
  "textblob.en.UNIVERSAL",
  "textblob.en.WORD",
  "textblob.en.find_lemmata",
  "textblob.en.inflect",
  "textblob.en.inflect.ADJECTIVE",
  "textblob.en.inflect.ADVERB",
  "textblob.en.inflect.NOUN",
  "textblob.en.inflect.VERB",
  "textblob.en.inflect.plural_categories",
  "textblob.en.inflect.plural_prepositions",
  "textblob.en.inflect.plural_rules",
  "textblob.en.inflect.pluralize",
  "textblob.en.inflect.ruleset",
  "textblob.en.inflect.singular_ie",
  "textblob.en.inflect.singular_irregular",
  "textblob.en.inflect.singular_rules",
  "textblob.en.inflect.singular_s",
  "textblob.en.inflect.singular_uncountable",
  "textblob.en.inflect.singular_uninflected",
  "textblob.en.inflect.singularize",
  "textblob.en.lexicon",
  "textblob.en.np_extractors",
  "textblob.en.np_extractors.BaseNPExtractor",
  "textblob.en.np_extractors.ChunkParser",
  "textblob.en.np_extractors.ConllExtractor",
  "textblob.en.np_extractors.FastNPExtractor",
  "textblob.en.np_extractors.PatternTagger",
  "textblob.en.np_extractors._is_match",
  "textblob.en.np_extractors._normalize_tags",
  "textblob.en.np_extractors.filter_insignificant",
  "textblob.en.np_extractors.requires_nltk_corpus",
  "textblob.en.np_extractors.tree2str",
  "textblob.en.parse",
  "textblob.en.parsers.BaseParser",
  "textblob.en.parsers.PatternParser",
  "textblob.en.parsers.parse",
  "textblob.en.polarity",
  "textblob.en.positive",
  "textblob.en.sentiment",
  "textblob.en.sentiments",
  "textblob.en.sentiments.BaseSentimentAnalyzer",
  "textblob.en.sentiments.CONTINUOUS",
  "textblob.en.sentiments.DISCRETE",
  "textblob.en.sentiments.NaiveBayesAnalyzer",
  "textblob.en.sentiments.PatternAnalyzer",
  "textblob.en.sentiments._default_feature_extractor",
  "textblob.en.sentiments.requires_nltk_corpus",
  "textblob.en.sentiments.sentiment",
  "textblob.en.sentiments.word_tokenize",
  "textblob.en.spelling",
  "textblob.en.split",
  "textblob.en.subjectivity",
  "textblob.en.suggest",
  "textblob.en.tag",
  "textblob.en.taggers.BaseTagger",
  "textblob.en.taggers.NLTKTagger",
  "textblob.en.taggers.PatternTagger",
  "textblob.en.taggers.requires_nltk_corpus",
  "textblob.en.taggers.tag",
  "textblob.en.taggers.word_tokenize",
  "textblob.en.text_type",
  "textblob.en.tokenize",
  "textblob.en.unicode",
  "textblob.exceptions",
  "textblob.exceptions.DeprecationError",
  "textblob.exceptions.FormatError",
  "textblob.exceptions.MISSING_CORPUS_MESSAGE",
  "textblob.exceptions.MissingCorpusError",
  "textblob.exceptions.MissingCorpusException",
  "textblob.exceptions.NotTranslated",
  "textblob.exceptions.TextBlobError",
  "textblob.exceptions.TextBlobException",
  "textblob.exceptions.TranslatorError",
  "textblob.formats",
  "textblob.formats.BaseFormat",
  "textblob.formats.CSV",
  "textblob.formats.DEFAULT_ENCODING",
  "textblob.formats.DelimitedFormat",
  "textblob.formats.JSON",
  "textblob.formats.OrderedDict",
  "textblob.formats.PY2",
  "textblob.formats.TSV",
  "textblob.formats._registry",
  "textblob.formats.csv",
  "textblob.formats.detect",
  "textblob.formats.get_registry",
  "textblob.formats.is_filelike",
  "textblob.formats.register",
  "textblob.inflect",
  "textblob.inflect.__all__",
  "textblob.inflect.pluralize",
  "textblob.inflect.singularize",
  "textblob.mixins",
  "textblob.mixins.BlobComparableMixin",
  "textblob.mixins.ComparableMixin",
  "textblob.mixins.PY2",
  "textblob.mixins.StringlikeMixin",
  "textblob.mixins.basestring",
  "textblob.mixins.binary_type",
  "textblob.mixins.implements_to_string",
  "textblob.np_extractors",
  "textblob.np_extractors.BaseNPExtractor",
  "textblob.np_extractors.ConllExtractor",
  "textblob.np_extractors.FastNPExtractor",
  "textblob.np_extractors.__all__",
  "textblob.ordereddict",
  "textblob.ordereddict.OrderedDict",
  "textblob.parsers",
  "textblob.parsers.BaseParser",
  "textblob.parsers.PatternParser",
  "textblob.parsers.__all__",
  "textblob.sentiments",
  "textblob.sentiments.BaseSentimentAnalyzer",
  "textblob.sentiments.CONTINUOUS",
  "textblob.sentiments.DISCRETE",
  "textblob.sentiments.NaiveBayesAnalyzer",
  "textblob.sentiments.PatternAnalyzer",
  "textblob.sentiments.__all__",
  "textblob.taggers",
  "textblob.taggers.BaseTagger",
  "textblob.taggers.NLTKTagger",
  "textblob.taggers.PatternTagger",
  "textblob.taggers.__all__",
  "textblob.tokenizers",
  "textblob.tokenizers.BaseTokenizer",
  "textblob.tokenizers.SentenceTokenizer",
  "textblob.tokenizers.WordTokenizer",
  "textblob.tokenizers._word_tokenizer",
  "textblob.tokenizers.requires_nltk_corpus",
  "textblob.tokenizers.sent_tokenize",
  "textblob.tokenizers.strip_punc",
  "textblob.tokenizers.word_tokenize",
  "textblob.translate",
  "textblob.translate.NotTranslated",
  "textblob.translate.PY2",
  "textblob.translate.Translator",
  "textblob.translate.TranslatorError",
  "textblob.translate._calculate_tk",
  "textblob.translate._unescape",
  "textblob.translate.request",
  "textblob.translate.urlencode",
  "textblob.unicodecsv",
  "textblob.unicodecsv.DictReader",
  "textblob.unicodecsv.DictWriter",
  "textblob.unicodecsv.UnicodeReader",
  "textblob.unicodecsv.UnicodeWriter",
  "textblob.unicodecsv.VERSION",
  "textblob.unicodecsv.__all__",
  "textblob.unicodecsv.__version__",
  "textblob.unicodecsv._stringify",
  "textblob.unicodecsv._unicodify",
  "textblob.unicodecsv.izip",
  "textblob.unicodecsv.pass_throughs",
  "textblob.unicodecsv.prop",
  "textblob.unicodecsv.reader",
  "textblob.unicodecsv.writer",
  "textblob.utils",
  "textblob.utils.PUNCTUATION_REGEX",
  "textblob.utils.filter_insignificant",
  "textblob.utils.is_filelike",
  "textblob.utils.lowerstrip",
  "textblob.utils.strip_punc",
  "textblob.utils.tree2str",
  "textblob.wordnet",
  "textblob.wordnet.ADJ",
  "textblob.wordnet.ADV",
  "textblob.wordnet.Lemma",
  "textblob.wordnet.NOUN",
  "textblob.wordnet.Synset",
  "textblob.wordnet.VERB",
  "textblob.wordnet.wordnet"
 ]
}