{
 "errors": {
  "neuron.crxd": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/__init__.py'",
    ""
   ]
  },
  "neuron.crxd.dimension3": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/dimension3.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/dimension3.py'",
    ""
   ]
  },
  "neuron.crxd.geometry": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/__init__.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.scalarField": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/scalarField.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/scalarField.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.setup": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/setup.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/setup.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.setup_local": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/setup_local.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/setup_local.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.surface": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/surface.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/surface.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.triangularMesh": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/triangularMesh.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/triangularMesh.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.voxelize": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/voxelize.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/voxelize.py'",
    ""
   ]
  },
  "neuron.crxd.geometry3d.voxelize2": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/voxelize2.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/geometry3d/voxelize2.py'",
    ""
   ]
  },
  "neuron.crxd.multiCompartmentReaction": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/multiCompartmentReaction.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/multiCompartmentReaction.py'",
    ""
   ]
  },
  "neuron.crxd.node": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/cache.py\", line 110, in wrapper",
    "    return dct[key]",
    "KeyError: (('py__file__',), frozenset())",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in _convert_names",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in <listcomp>",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 93, in _break_check",
    "    reachable = _check_if(context, check_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 197, in _try_to_load_stub",
    "    file_path = method()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/value.py\", line 313, in py__file__",
    "    path = cast_path(self.access_handle.py__file__())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 386, in _workaround",
    "    return self._cached_results(name, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/cache.py\", line 112, in wrapper",
    "    result = method(self, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 390, in _cached_results",
    "    return self._subprocess.get_compiled_method_return(self.id, name, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "neuron.crxd.plugins": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/plugins.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/plugins.py'",
    ""
   ]
  },
  "neuron.crxd.rate": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/rate.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/rate.py'",
    ""
   ]
  },
  "neuron.crxd.rxdsection": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/rxdsection.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpiqw6jq_x/lib/python3.7/site-packages/neuron/crxd/rxdsection.py'",
    ""
   ]
  }
 },
 "symbols": [
  "neuron.HocError",
  "neuron.Wrapper",
  "neuron.__version__",
  "neuron._connect_sections_in_obj",
  "neuron._create_all_list",
  "neuron._create_sections_in_obj",
  "neuron._declare_contour",
  "neuron._double_ptr",
  "neuron._double_size",
  "neuron._has_rxd",
  "neuron._has_scipy",
  "neuron._nrn_dll",
  "neuron._nrn_hocobj_ptr",
  "neuron._original_hoc_file",
  "neuron._parse_import3d_name",
  "neuron._pkl",
  "neuron._pt3dadd_in_obj",
  "neuron._pt3dstyle_in_obj",
  "neuron._sec_db",
  "neuron.crxd",
  "neuron.crxd.generalizedReaction.GeneralizedReaction",
  "neuron.crxd.generalizedReaction._itertools_chain",
  "neuron.crxd.generalizedReaction._numpy_array",
  "neuron.crxd.generalizedReaction._weakref_ref",
  "neuron.crxd.generalizedReaction.get_scheme_rate1_rate2_regions_custom_dynamics_mass_action",
  "neuron.crxd.generalizedReaction.molecules_per_mM_um3",
  "neuron.crxd.generalizedReaction.ref_list_with_mult",
  "neuron.crxd.gui.ConstAreaOptions",
  "neuron.crxd.gui.ConstVolOptions",
  "neuron.crxd.gui.FractionalVolumeOptions",
  "neuron.crxd.gui.GeoSelector",
  "neuron.crxd.gui.InsideOptions",
  "neuron.crxd.gui.InstantiatePane",
  "neuron.crxd.gui.LRHSSelector",
  "neuron.crxd.gui.MembraneOptions",
  "neuron.crxd.gui.MembraneSelector",
  "neuron.crxd.gui.MorphologyPane",
  "neuron.crxd.gui.NrnRegionSelector",
  "neuron.crxd.gui.ReactionEditor",
  "neuron.crxd.gui.ReactionPane",
  "neuron.crxd.gui.RegionList",
  "neuron.crxd.gui.RegionPane",
  "neuron.crxd.gui.RegionSelector",
  "neuron.crxd.gui.RxDBuilder",
  "neuron.crxd.gui.SectionListSelector",
  "neuron.crxd.gui.ShellOptions",
  "neuron.crxd.gui.SpeciesEditor",
  "neuron.crxd.gui.SpeciesLocator",
  "neuron.crxd.gui.SpeciesMultiSelector",
  "neuron.crxd.gui.SpeciesPane",
  "neuron.crxd.gui.SpeciesSelectorWithRegions",
  "neuron.crxd.gui.SpecificMultiCompartmentReactionEditor",
  "neuron.crxd.gui.SpecificRateEditor",
  "neuron.crxd.gui.SpecificReactionEditor",
  "neuron.crxd.gui._MorphologyPane",
  "neuron.crxd.gui._PartialSelector",
  "neuron.crxd.gui._ReactionEditor",
  "neuron.crxd.gui._ReactionPane",
  "neuron.crxd.gui._RxDBuilder",
  "neuron.crxd.gui._SpeciesEditor",
  "neuron.crxd.gui._SpeciesPane",
  "neuron.crxd.gui._construct_schema",
  "neuron.crxd.gui._construct_side",
  "neuron.crxd.gui._do_nothing",
  "neuron.crxd.gui._instantiate",
  "neuron.crxd.gui._the_morphology_pane",
  "neuron.crxd.gui._the_reaction_pane",
  "neuron.crxd.gui._the_rxd_builder",
  "neuron.crxd.gui._the_species_editor",
  "neuron.crxd.gui._the_species_pane",
  "neuron.crxd.gui.all_reactions",
  "neuron.crxd.gui.default_region",
  "neuron.crxd.gui.get_sectionlists",
  "neuron.crxd.gui.h",
  "neuron.crxd.gui.has_instantiated",
  "neuron.crxd.gui.hoc",
  "neuron.crxd.gui.regions",
  "neuron.crxd.gui.rxd_builder_height",
  "neuron.crxd.gui.rxd_builder_left",
  "neuron.crxd.gui.rxd_builder_tab",
  "neuron.crxd.gui.rxd_builder_top",
  "neuron.crxd.gui.rxd_builder_width",
  "neuron.crxd.gui.species",
  "neuron.crxd.gui.species_pane_update",
  "neuron.crxd.initializer._do_init",
  "neuron.crxd.initializer._do_ion_register",
  "neuron.crxd.initializer.assert_initialized",
  "neuron.crxd.initializer.has_initialized",
  "neuron.crxd.initializer.is_initialized",
  "neuron.crxd.nodelist.NodeList",
  "neuron.crxd.options._OverrideLockouts",
  "neuron.crxd.options.enable",
  "neuron.crxd.options.fixed_step_factor",
  "neuron.crxd.options.use_reaction_contribution_to_jacobian",
  "neuron.crxd.rangevar.RangeVar",
  "neuron.crxd.rangevar._donothing",
  "neuron.crxd.rangevar._h_ptrvector",
  "neuron.crxd.rangevar._h_vector",
  "neuron.crxd.rangevar._numpy_zeros",
  "neuron.crxd.rangevar.h",
  "neuron.crxd.reaction.Reaction",
  "neuron.crxd.region.Extracellular",
  "neuron.crxd.region.Region",
  "neuron.crxd.region._all_regions",
  "neuron.crxd.region._c_region",
  "neuron.crxd.region._region_count",
  "neuron.crxd.region._sort_secs",
  "neuron.crxd.region.h",
  "neuron.crxd.rxd.FARADAY",
  "neuron.crxd.rxd._after_advance",
  "neuron.crxd.rxd._all_reactions",
  "neuron.crxd.rxd._atolscale",
  "neuron.crxd.rxd._c_compile",
  "neuron.crxd.rxd._c_headers",
  "neuron.crxd.rxd._compile_reactions",
  "neuron.crxd.rxd._conductance",
  "neuron.crxd.rxd._conversion_factor",
  "neuron.crxd.rxd._ctypes_c_int",
  "neuron.crxd.rxd._cur_map",
  "neuron.crxd.rxd._cur_node_indices",
  "neuron.crxd.rxd._curr_indices",
  "neuron.crxd.rxd._curr_ptr_storage",
  "neuron.crxd.rxd._curr_ptr_storage_nrn",
  "neuron.crxd.rxd._curr_ptr_vector",
  "neuron.crxd.rxd._curr_ptrs",
  "neuron.crxd.rxd._curr_scales",
  "neuron.crxd.rxd._currents",
  "neuron.crxd.rxd._cvode_object",
  "neuron.crxd.rxd._default_dx",
  "neuron.crxd.rxd._default_method",
  "neuron.crxd.rxd._diam_change_count",
  "neuron.crxd.rxd._diffusion_a",
  "neuron.crxd.rxd._diffusion_a_ptr",
  "neuron.crxd.rxd._diffusion_b",
  "neuron.crxd.rxd._diffusion_b_ptr",
  "neuron.crxd.rxd._diffusion_d",
  "neuron.crxd.rxd._diffusion_matrix",
  "neuron.crxd.rxd._diffusion_p",
  "neuron.crxd.rxd._diffusion_p_ptr",
  "neuron.crxd.rxd._dimensions",
  "neuron.crxd.rxd._do_nbs_register",
  "neuron.crxd.rxd._donothing",
  "neuron.crxd.rxd._double_ptr",
  "neuron.crxd.rxd._dptr",
  "neuron.crxd.rxd._euler_matrix",
  "neuron.crxd.rxd._external_solver",
  "neuron.crxd.rxd._external_solver_initialized",
  "neuron.crxd.rxd._fih",
  "neuron.crxd.rxd._fih2",
  "neuron.crxd.rxd._fih3",
  "neuron.crxd.rxd._fih_transfer_ecs",
  "neuron.crxd.rxd._find_librxdmath",
  "neuron.crxd.rxd._fixed_step_count",
  "neuron.crxd.rxd._get_node_indices",
  "neuron.crxd.rxd._get_num_threads",
  "neuron.crxd.rxd._h_ptrvector",
  "neuron.crxd.rxd._h_vector",
  "neuron.crxd.rxd._has_nbs_registered",
  "neuron.crxd.rxd._init",
  "neuron.crxd.rxd._int_ptr",
  "neuron.crxd.rxd._invalidate_matrices",
  "neuron.crxd.rxd._last_dt",
  "neuron.crxd.rxd._last_m",
  "neuron.crxd.rxd._last_preconditioner",
  "neuron.crxd.rxd._last_preconditioner_dt",
  "neuron.crxd.rxd._linmodadd_c",
  "neuron.crxd.rxd._list_to_cdouble_array",
  "neuron.crxd.rxd._list_to_cint_array",
  "neuron.crxd.rxd._list_to_clong_array",
  "neuron.crxd.rxd._list_to_pyobject_array",
  "neuron.crxd.rxd._long_ptr",
  "neuron.crxd.rxd._matrix_to_rxd_sparse",
  "neuron.crxd.rxd._memb_cur_ptrs",
  "neuron.crxd.rxd._nbs",
  "neuron.crxd.rxd._node_get_states",
  "neuron.crxd.rxd._nonzero_volume_indices",
  "neuron.crxd.rxd._numpy_array",
  "neuron.crxd.rxd._numpy_zeros",
  "neuron.crxd.rxd._ode_count",
  "neuron.crxd.rxd._ode_fun",
  "neuron.crxd.rxd._ode_jacobian",
  "neuron.crxd.rxd._ode_reinit",
  "neuron.crxd.rxd._react_matrix_solver",
  "neuron.crxd.rxd._register_reaction",
  "neuron.crxd.rxd._rxd_induced_currents",
  "neuron.crxd.rxd._rxd_offset",
  "neuron.crxd.rxd._rxd_reaction",
  "neuron.crxd.rxd._section1d_transfer_to_legacy",
  "neuron.crxd.rxd._set_num_threads",
  "neuron.crxd.rxd._setup",
  "neuron.crxd.rxd._species_get_all_species",
  "neuron.crxd.rxd._structure_change_count",
  "neuron.crxd.rxd._unregister_reaction",
  "neuron.crxd.rxd._update_node_data",
  "neuron.crxd.rxd._weakref_ref",
  "neuron.crxd.rxd._windows_dll",
  "neuron.crxd.rxd._windows_dll_files",
  "neuron.crxd.rxd._windows_remove_dlls",
  "neuron.crxd.rxd._zero_volume_indices",
  "neuron.crxd.rxd.byeworld",
  "neuron.crxd.rxd.clear_rates",
  "neuron.crxd.rxd.do_initialize_fptr",
  "neuron.crxd.rxd.do_setup_fptr",
  "neuron.crxd.rxd.do_setup_matrices_fptr",
  "neuron.crxd.rxd.ecs_register_reaction",
  "neuron.crxd.rxd.fptr_prototype",
  "neuron.crxd.rxd.h",
  "neuron.crxd.rxd.last_diam_change_cnt",
  "neuron.crxd.rxd.last_structure_change_cnt",
  "neuron.crxd.rxd.make_time_ptr",
  "neuron.crxd.rxd.nrn",
  "neuron.crxd.rxd.nrn_dll_sym",
  "neuron.crxd.rxd.nrn_tree_solve",
  "neuron.crxd.rxd.nthread",
  "neuron.crxd.rxd.pinverse",
  "neuron.crxd.rxd.re_init",
  "neuron.crxd.rxd.register_rate",
  "neuron.crxd.rxd.rxd_set_no_diffusion",
  "neuron.crxd.rxd.rxd_setup_conc_ptrs",
  "neuron.crxd.rxd.rxd_setup_curr_ptrs",
  "neuron.crxd.rxd.scatter_concentrations",
  "neuron.crxd.rxd.set_euler_matrix",
  "neuron.crxd.rxd.set_initialize",
  "neuron.crxd.rxd.set_nonvint_block",
  "neuron.crxd.rxd.set_reaction_indices",
  "neuron.crxd.rxd.set_setup",
  "neuron.crxd.rxd.set_solve_type",
  "neuron.crxd.rxd.setup_currents",
  "neuron.crxd.rxd.setup_solver",
  "neuron.crxd.rxdException.RxDException",
  "neuron.crxd.rxdmath._Arithmeticed",
  "neuron.crxd.rxdmath._Function",
  "neuron.crxd.rxdmath._Product",
  "neuron.crxd.rxdmath._Quotient",
  "neuron.crxd.rxdmath._Reaction",
  "neuron.crxd.rxdmath._compile",
  "neuron.crxd.rxdmath._ensure_arithmeticed",
  "neuron.crxd.rxdmath._erf",
  "neuron.crxd.rxdmath._factorial",
  "neuron.crxd.rxdmath._gamma",
  "neuron.crxd.rxdmath._lgamma",
  "neuron.crxd.rxdmath._neg",
  "neuron.crxd.rxdmath._power",
  "neuron.crxd.rxdmath._validate_reaction_terms",
  "neuron.crxd.rxdmath._vectorized",
  "neuron.crxd.rxdmath.acos",
  "neuron.crxd.rxdmath.analyze_reaction",
  "neuron.crxd.rxdmath.asin",
  "neuron.crxd.rxdmath.atan",
  "neuron.crxd.rxdmath.ceil",
  "neuron.crxd.rxdmath.copysign",
  "neuron.crxd.rxdmath.cos",
  "neuron.crxd.rxdmath.degrees",
  "neuron.crxd.rxdmath.erf",
  "neuron.crxd.rxdmath.exp",
  "neuron.crxd.rxdmath.fabs",
  "neuron.crxd.rxdmath.factorial",
  "neuron.crxd.rxdmath.floor",
  "neuron.crxd.rxdmath.fmod",
  "neuron.crxd.rxdmath.frexp",
  "neuron.crxd.rxdmath.fsum",
  "neuron.crxd.rxdmath.gamma",
  "neuron.crxd.rxdmath.hypot",
  "neuron.crxd.rxdmath.isinf",
  "neuron.crxd.rxdmath.isnan",
  "neuron.crxd.rxdmath.ldexp",
  "neuron.crxd.rxdmath.lgamma",
  "neuron.crxd.rxdmath.log",
  "neuron.crxd.rxdmath.modf",
  "neuron.crxd.rxdmath.pow",
  "neuron.crxd.rxdmath.radians",
  "neuron.crxd.rxdmath.sin",
  "neuron.crxd.rxdmath.sqrt",
  "neuron.crxd.rxdmath.tan",
  "neuron.crxd.rxdmath.trunc",
  "neuron.crxd.section1d.Section1D",
  "neuron.crxd.section1d._all_cindices",
  "neuron.crxd.section1d._all_cptrs",
  "neuron.crxd.section1d._c_ptr_vector",
  "neuron.crxd.section1d._c_ptr_vector_storage",
  "neuron.crxd.section1d._c_ptr_vector_storage_nrn",
  "neuron.crxd.section1d._donothing",
  "neuron.crxd.section1d._last_c_ptr_length",
  "neuron.crxd.section1d._parent",
  "neuron.crxd.section1d._purge_cptrs",
  "neuron.crxd.section1d._rxd_sec_lookup",
  "neuron.crxd.section1d._transfer_to_legacy",
  "neuron.crxd.section1d.add_values",
  "neuron.crxd.section1d.h",
  "neuron.crxd.section1d.replace",
  "neuron.crxd.species.Species",
  "neuron.crxd.species._1d_submatrix_n",
  "neuron.crxd.species._ExtracellularSpecies",
  "neuron.crxd.species._SpeciesMathable",
  "neuron.crxd.species._all_species",
  "neuron.crxd.species._defined_species",
  "neuron.crxd.species._delete_by_id",
  "neuron.crxd.species._ensure_extracellular",
  "neuron.crxd.species._extracellular_diffusion_objects",
  "neuron.crxd.species._extracellular_do_initialize",
  "neuron.crxd.species._extracellular_do_setup",
  "neuron.crxd.species._extracellular_exists",
  "neuron.crxd.species._extracellular_has_setup",
  "neuron.crxd.species._extracellular_set_initialize",
  "neuron.crxd.species._extracellular_set_setup",
  "neuron.crxd.species._get_all_species",
  "neuron.crxd.species._has_1d",
  "neuron.crxd.species._has_3d",
  "neuron.crxd.species._set_grid_concentrations",
  "neuron.crxd.species._set_grid_currents",
  "neuron.crxd.species._setup_matrices_process_neighbors",
  "neuron.crxd.species._species_count",
  "neuron.crxd.species._species_on_regions",
  "neuron.crxd.species._xyz",
  "neuron.crxd.species.do_initialize_fptr",
  "neuron.crxd.species.do_setup_fptr",
  "neuron.crxd.species.fptr_prototype",
  "neuron.crxd.species.h",
  "neuron.crxd.species.insert",
  "neuron.crxd.species.nrn",
  "neuron.crxd.species.nrn_dll_sym",
  "neuron.crxd.species.set_initialize",
  "neuron.crxd.species.set_setup",
  "neuron.crxd.species.species_atolscale",
  "neuron.crxd.species.xyz_by_index",
  "neuron.doc",
  "neuron.doc.NRNPyHelper",
  "neuron.doc._get_class_from_help_dict",
  "neuron.doc._get_from_help_dict",
  "neuron.doc._help_dict",
  "neuron.doc.default_class_doc_template",
  "neuron.doc.default_member_doc_template",
  "neuron.doc.default_object_doc_template",
  "neuron.doc.doc_asstring",
  "neuron.doc.doc_h",
  "neuron.doc.get_docstring",
  "neuron.doc.h",
  "neuron.doc.header",
  "neuron.doc.help",
  "neuron.embedded",
  "neuron.gui",
  "neuron.gui.LoopTimer",
  "neuron.gui.Timer",
  "neuron.gui._lock",
  "neuron.gui.h",
  "neuron.gui.process_events",
  "neuron.gui.start",
  "neuron.gui.stop",
  "neuron.gui.timer",
  "neuron.gui2",
  "neuron.gui2.PlotShape",
  "neuron.gui2.config",
  "neuron.gui2.config.options",
  "neuron.gui2.plotshape",
  "neuron.gui2.plotshape.GUIWidget",
  "neuron.gui2.plotshape.HTML",
  "neuron.gui2.plotshape.Javascript",
  "neuron.gui2.plotshape.PlotShape",
  "neuron.gui2.plotshape._active_container",
  "neuron.gui2.plotshape._diam_change_count",
  "neuron.gui2.plotshape._do_reset_geometry",
  "neuron.gui2.plotshape._do_updates",
  "neuron.gui2.plotshape._ensure_setup",
  "neuron.gui2.plotshape._ensure_update_thread",
  "neuron.gui2.plotshape._get_ptrs",
  "neuron.gui2.plotshape._gui_widgets",
  "neuron.gui2.plotshape._has_setup",
  "neuron.gui2.plotshape._last_diam_change_count",
  "neuron.gui2.plotshape._last_structure_change_count",
  "neuron.gui2.plotshape._segment_3d_pts",
  "neuron.gui2.plotshape._shape_plot_list",
  "neuron.gui2.plotshape._structure_change_count",
  "neuron.gui2.plotshape._update_thread",
  "neuron.gui2.plotshape.display",
  "neuron.gui2.plotshape.h",
  "neuron.gui2.plotshape.javascript_embedder",
  "neuron.gui2.plotshape.rangevars_present",
  "neuron.gui2.plotshape.setup_threejs",
  "neuron.gui2.plotshape.update_interval",
  "neuron.gui2.plotshape.widgets",
  "neuron.gui2.rangevar",
  "neuron.gui2.rangevar._get_ptrs",
  "neuron.gui2.rangevar._has_rxd",
  "neuron.gui2.rangevar._neuron_var",
  "neuron.gui2.rangevar._section_var",
  "neuron.gui2.rangevar.get_mech_names",
  "neuron.gui2.rangevar.get_rangevars",
  "neuron.gui2.rangevar.get_rxd_vars",
  "neuron.gui2.rangevar.h",
  "neuron.gui2.rangevar.have_rxd",
  "neuron.gui2.rangevar.rangevars_present",
  "neuron.gui2.rangevar.species",
  "neuron.gui2.set_backend",
  "neuron.gui2.setup_threejs",
  "neuron.gui2.setup_threejs.everything",
  "neuron.gui2.setup_threejs.javascript_embedder",
  "neuron.gui2.setup_threejs.setup_threejs",
  "neuron.gui2.utilities",
  "neuron.gui2.utilities._segment_3d_pts",
  "neuron.gui2.utilities._values_between",
  "neuron.gui2.utilities._values_strictly_between",
  "neuron.h",
  "neuron.hclass",
  "neuron.hclass2",
  "neuron.hclass2.h",
  "neuron.hclass2.hoc",
  "neuron.hclass3",
  "neuron.hclass3.h",
  "neuron.hclass3.hclass",
  "neuron.hclass3.hoc",
  "neuron.help",
  "neuron.hoc",
  "neuron.hoc_comment",
  "neuron.hoc_execute",
  "neuron.init",
  "neuron.load_mechanisms",
  "neuron.neuroml",
  "neuron.neuroml.FileWrapper",
  "neuron.neuroml.biophysics",
  "neuron.neuroml.biophysics.BioMech",
  "neuron.neuroml.biophysics.BioParm",
  "neuron.neuroml.biophysics.Cable",
  "neuron.neuroml.biophysics.LineNo",
  "neuron.neuroml.biophysics.Point",
  "neuron.neuroml.biophysics.XML2Nrn",
  "neuron.neuroml.biophysics.debug",
  "neuron.neuroml.biophysics.group",
  "neuron.neuroml.biophysics.mechanism",
  "neuron.neuroml.biophysics.parameter",
  "neuron.neuroml.biophysics.spec_axial_resistance",
  "neuron.neuroml.biophysics.spec_capacitance",
  "neuron.neuroml.handle",
  "neuron.neuroml.metadata",
  "neuron.neuroml.metadata.notes",
  "neuron.neuroml.metadata.properties",
  "neuron.neuroml.metadata.property",
  "neuron.neuroml.metadata.tag",
  "neuron.neuroml.metadata.value",
  "neuron.neuroml.morphml",
  "neuron.neuroml.morphml.BioMech",
  "neuron.neuroml.morphml.BioParm",
  "neuron.neuroml.morphml.Cable",
  "neuron.neuroml.morphml.LineNo",
  "neuron.neuroml.morphml.Point",
  "neuron.neuroml.morphml.XML2Nrn",
  "neuron.neuroml.morphml.cable",
  "neuron.neuroml.morphml.debug",
  "neuron.neuroml.morphml.distal",
  "neuron.neuroml.morphml.proximal",
  "neuron.neuroml.morphml.segment",
  "neuron.neuroml.neuroml",
  "neuron.neuroml.neuroml.BioMech",
  "neuron.neuroml.neuroml.BioParm",
  "neuron.neuroml.neuroml.Cable",
  "neuron.neuroml.neuroml.LineNo",
  "neuron.neuroml.neuroml.Point",
  "neuron.neuroml.neuroml.XML2Nrn",
  "neuron.neuroml.neuroml.biophysics",
  "neuron.neuroml.neuroml.cell",
  "neuron.neuroml.neuroml.debug",
  "neuron.neuroml.neuroml.neuroml",
  "neuron.neuroml.rdxml",
  "neuron.neuroml.rdxml.FileWrapper",
  "neuron.neuroml.rdxml.handle",
  "neuron.neuroml.rdxml.rdxml",
  "neuron.neuroml.xml2nrn",
  "neuron.neuroml.xml2nrn.BioMech",
  "neuron.neuroml.xml2nrn.BioParm",
  "neuron.neuroml.xml2nrn.Cable",
  "neuron.neuroml.xml2nrn.LineNo",
  "neuron.neuroml.xml2nrn.Point",
  "neuron.neuroml.xml2nrn.XML2Nrn",
  "neuron.neuroml.xml2nrn.debug",
  "neuron.new_hoc_class",
  "neuron.new_point_process",
  "neuron.nonvint_block_supervisor",
  "neuron.nonvint_block_supervisor._callback",
  "neuron.nonvint_block_supervisor._ctypes_addressof",
  "neuron.nonvint_block_supervisor._empty_array",
  "neuron.nonvint_block_supervisor._float_size",
  "neuron.nonvint_block_supervisor._no_args",
  "neuron.nonvint_block_supervisor._numpy_array",
  "neuron.nonvint_block_supervisor._numpy_core_multiarray_int_asbuffer",
  "neuron.nonvint_block_supervisor._numpy_frombuffer",
  "neuron.nonvint_block_supervisor._pc_dt",
  "neuron.nonvint_block_supervisor._pc_t",
  "neuron.nonvint_block_supervisor._pd1_arg",
  "neuron.nonvint_block_supervisor.call",
  "neuron.nonvint_block_supervisor.h",
  "neuron.nonvint_block_supervisor.nonvint_block",
  "neuron.nonvint_block_supervisor.nrn_dll_sym",
  "neuron.nonvint_block_supervisor.numpy_from_pointer",
  "neuron.nonvint_block_supervisor.ode_count_all",
  "neuron.nonvint_block_supervisor.ode_count_method_index",
  "neuron.nonvint_block_supervisor.pc",
  "neuron.nonvint_block_supervisor.register",
  "neuron.nonvint_block_supervisor.s",
  "neuron.nonvint_block_supervisor.set_nonvint_block",
  "neuron.nonvint_block_supervisor.test",
  "neuron.nonvint_block_supervisor.unregister",
  "neuron.nonvint_block_supervisor.v_structure_change",
  "neuron.nrn",
  "neuron.nrn_dll",
  "neuron.nrn_dll_sym",
  "neuron.nrn_nmodl_path",
  "neuron.nrnpy_pass",
  "neuron.nrnpy_pr",
  "neuron.nrnpy_set_pr_etal",
  "neuron.nt_dlls",
  "neuron.numpy_element_ref",
  "neuron.numpy_from_pointer",
  "neuron.p",
  "neuron.phoc",
  "neuron.psection",
  "neuron.psection.ca",
  "neuron.psection.cyt",
  "neuron.psection.dend",
  "neuron.psection.er",
  "neuron.psection.gaba",
  "neuron.psection.h",
  "neuron.psection.iclamp",
  "neuron.psection.na",
  "neuron.psection.psection",
  "neuron.psection.rxd",
  "neuron.psection.soma",
  "neuron.quit",
  "neuron.run",
  "neuron.rxd",
  "neuron.rxd.DistributedBoundary",
  "neuron.rxd.FixedCrossSection",
  "neuron.rxd.FixedPerimeter",
  "neuron.rxd.FractionalVolume",
  "neuron.rxd.MultiCompartmentReaction",
  "neuron.rxd.Parameter",
  "neuron.rxd.RangeVar",
  "neuron.rxd.Rate",
  "neuron.rxd.Reaction",
  "neuron.rxd.Region",
  "neuron.rxd.RxDException",
  "neuron.rxd.ScalableBorder",
  "neuron.rxd.Shell",
  "neuron.rxd.Species",
  "neuron.rxd.State",
  "neuron.rxd._curr_ptr_storage_nrn",
  "neuron.rxd._curr_ptr_vector",
  "neuron.rxd._has_rxd",
  "neuron.rxd._model_view",
  "neuron.rxd.dimension3",
  "neuron.rxd.dimension3._values_between",
  "neuron.rxd.dimension3._values_strictly_between",
  "neuron.rxd.dimension3.centroids_by_segment",
  "neuron.rxd.dimension3.h",
  "neuron.rxd.dimension3.objects_by_segment",
  "neuron.rxd.generalizedReaction",
  "neuron.rxd.generalizedReaction.GeneralizedReaction",
  "neuron.rxd.generalizedReaction._itertools_chain",
  "neuron.rxd.generalizedReaction._numpy_array",
  "neuron.rxd.generalizedReaction._scipy_sparse_coo_matrix",
  "neuron.rxd.generalizedReaction._weakref_ref",
  "neuron.rxd.generalizedReaction.get_scheme_rate1_rate2_regions_custom_dynamics_mass_action",
  "neuron.rxd.generalizedReaction.molecules_per_mM_um3",
  "neuron.rxd.generalizedReaction.ref_list_with_mult",
  "neuron.rxd.geometry",
  "neuron.rxd.geometry.ConstantArea",
  "neuron.rxd.geometry.ConstantVolume",
  "neuron.rxd.geometry.DistributedBoundary",
  "neuron.rxd.geometry.Enum",
  "neuron.rxd.geometry.FixedCrossSection",
  "neuron.rxd.geometry.FixedPerimeter",
  "neuron.rxd.geometry.FractionalVolume",
  "neuron.rxd.geometry.RxDGeometry",
  "neuron.rxd.geometry.ScalableBorder",
  "neuron.rxd.geometry.Shell",
  "neuron.rxd.geometry._always_0",
  "neuron.rxd.geometry._always_false",
  "neuron.rxd.geometry._always_true",
  "neuron.rxd.geometry._lo_hi_shell",
  "neuron.rxd.geometry._make_perimeter_function",
  "neuron.rxd.geometry._make_surfacearea1d_function",
  "neuron.rxd.geometry._neighbor_areas1d",
  "neuron.rxd.geometry._perimeter1d",
  "neuron.rxd.geometry._surface_areas1d",
  "neuron.rxd.geometry._volumes1d",
  "neuron.rxd.geometry.constant_everywhere_1d",
  "neuron.rxd.geometry.constant_everywhere_plus_one_1d",
  "neuron.rxd.geometry.constant_function",
  "neuron.rxd.geometry.geometry3d",
  "neuron.rxd.geometry.h",
  "neuron.rxd.geometry.has_geometry3d",
  "neuron.rxd.geometry.inside",
  "neuron.rxd.geometry.membrane",
  "neuron.rxd.geometry.nrn",
  "neuron.rxd.geometry.scale_by_constant",
  "neuron.rxd.geometry3d",
  "neuron.rxd.geometry3d.ScalarField",
  "neuron.rxd.geometry3d.TriangularMesh",
  "neuron.rxd.geometry3d.scalarField",
  "neuron.rxd.geometry3d.scalarField.ScalarField",
  "neuron.rxd.geometry3d.setup",
  "neuron.rxd.geometry3d.setup.define_macros",
  "neuron.rxd.geometry3d.setup.have_vc",
  "neuron.rxd.geometry3d.setup.include_dirs",
  "neuron.rxd.geometry3d.setup.instdir",
  "neuron.rxd.geometry3d.setup.mingw",
  "neuron.rxd.geometry3d.setup.mpicc_bin",
  "neuron.rxd.geometry3d.setup.mpicxx_bin",
  "neuron.rxd.geometry3d.setup.nrn_srcdir",
  "neuron.rxd.geometry3d.setup.srcdir",
  "neuron.rxd.geometry3d.setup.use_vc",
  "neuron.rxd.geometry3d.setup_local",
  "neuron.rxd.geometry3d.surface",
  "neuron.rxd.geometry3d.surface.surface",
  "neuron.rxd.geometry3d.triangularMesh",
  "neuron.rxd.geometry3d.triangularMesh.TriangularMesh",
  "neuron.rxd.geometry3d.triangularMesh._register_on_neighbor_map",
  "neuron.rxd.geometry3d.voxelize",
  "neuron.rxd.geometry3d.voxelize._max_chunks",
  "neuron.rxd.geometry3d.voxelize.is_inside",
  "neuron.rxd.geometry3d.voxelize.voxelize",
  "neuron.rxd.geometry3d.voxelize2._max_chunks",
  "neuron.rxd.geometry3d.voxelize2.is_inside",
  "neuron.rxd.geometry3d.voxelize2.voxelize2",
  "neuron.rxd.gui",
  "neuron.rxd.gui.ConstAreaOptions",
  "neuron.rxd.gui.ConstVolOptions",
  "neuron.rxd.gui.FractionalVolumeOptions",
  "neuron.rxd.gui.GeoSelector",
  "neuron.rxd.gui.InsideOptions",
  "neuron.rxd.gui.InstantiatePane",
  "neuron.rxd.gui.LRHSSelector",
  "neuron.rxd.gui.MembraneOptions",
  "neuron.rxd.gui.MembraneSelector",
  "neuron.rxd.gui.MorphologyPane",
  "neuron.rxd.gui.NrnRegionSelector",
  "neuron.rxd.gui.ReactionEditor",
  "neuron.rxd.gui.ReactionPane",
  "neuron.rxd.gui.RegionList",
  "neuron.rxd.gui.RegionPane",
  "neuron.rxd.gui.RegionSelector",
  "neuron.rxd.gui.RxDBuilder",
  "neuron.rxd.gui.SectionListSelector",
  "neuron.rxd.gui.ShellOptions",
  "neuron.rxd.gui.SpeciesEditor",
  "neuron.rxd.gui.SpeciesLocator",
  "neuron.rxd.gui.SpeciesMultiSelector",
  "neuron.rxd.gui.SpeciesPane",
  "neuron.rxd.gui.SpeciesSelectorWithRegions",
  "neuron.rxd.gui.SpecificMultiCompartmentReactionEditor",
  "neuron.rxd.gui.SpecificRateEditor",
  "neuron.rxd.gui.SpecificReactionEditor",
  "neuron.rxd.gui._MorphologyPane",
  "neuron.rxd.gui._PartialSelector",
  "neuron.rxd.gui._ReactionEditor",
  "neuron.rxd.gui._ReactionPane",
  "neuron.rxd.gui._RxDBuilder",
  "neuron.rxd.gui._SpeciesEditor",
  "neuron.rxd.gui._SpeciesPane",
  "neuron.rxd.gui._construct_schema",
  "neuron.rxd.gui._construct_side",
  "neuron.rxd.gui._do_nothing",
  "neuron.rxd.gui._instantiate",
  "neuron.rxd.gui._the_morphology_pane",
  "neuron.rxd.gui._the_reaction_pane",
  "neuron.rxd.gui._the_rxd_builder",
  "neuron.rxd.gui._the_species_editor",
  "neuron.rxd.gui._the_species_pane",
  "neuron.rxd.gui.all_reactions",
  "neuron.rxd.gui.default_region",
  "neuron.rxd.gui.get_sectionlists",
  "neuron.rxd.gui.h",
  "neuron.rxd.gui.has_instantiated",
  "neuron.rxd.gui.hoc",
  "neuron.rxd.gui.regions",
  "neuron.rxd.gui.rxd_builder_height",
  "neuron.rxd.gui.rxd_builder_left",
  "neuron.rxd.gui.rxd_builder_tab",
  "neuron.rxd.gui.rxd_builder_top",
  "neuron.rxd.gui.rxd_builder_width",
  "neuron.rxd.gui.species",
  "neuron.rxd.gui.species_pane_update",
  "neuron.rxd.initializer",
  "neuron.rxd.initializer._do_init",
  "neuron.rxd.initializer._do_ion_register",
  "neuron.rxd.initializer.assert_initialized",
  "neuron.rxd.initializer.has_initialized",
  "neuron.rxd.initializer.is_initialized",
  "neuron.rxd.inside",
  "neuron.rxd.membrane",
  "neuron.rxd.morphology",
  "neuron.rxd.morphology.MorphologyDB",
  "neuron.rxd.morphology._h_allsec",
  "neuron.rxd.morphology._h_parent_connection",
  "neuron.rxd.morphology._h_section_orientation",
  "neuron.rxd.morphology._h_section_ref",
  "neuron.rxd.morphology._itertools_combinations",
  "neuron.rxd.morphology.h",
  "neuron.rxd.morphology.main",
  "neuron.rxd.morphology.parent",
  "neuron.rxd.multiCompartmentReaction",
  "neuron.rxd.multiCompartmentReaction.FARADAY",
  "neuron.rxd.multiCompartmentReaction.MultiCompartmentReaction",
  "neuron.rxd.multiCompartmentReaction._ref_list_with_mult",
  "neuron.rxd.multiCompartmentReaction.h",
  "neuron.rxd.node",
  "neuron.rxd.node.Node",
  "neuron.rxd.node._allocate",
  "neuron.rxd.node._apply_node_fluxes",
  "neuron.rxd.node._concentration_node",
  "neuron.rxd.node._diffs",
  "neuron.rxd.node._get_data",
  "neuron.rxd.node._get_states",
  "neuron.rxd.node._h_arc3d",
  "neuron.rxd.node._h_n3d",
  "neuron.rxd.node._h_x3d",
  "neuron.rxd.node._h_y3d",
  "neuron.rxd.node._h_z3d",
  "neuron.rxd.node._has_node_fluxes",
  "neuron.rxd.node._molecule_node",
  "neuron.rxd.node._node_fluxes",
  "neuron.rxd.node._numpy_element_ref",
  "neuron.rxd.node._surface_area",
  "neuron.rxd.node._volumes",
  "neuron.rxd.node.h",
  "neuron.rxd.node.hoc",
  "neuron.rxd.node.nrn",
  "neuron.rxd.nodelist",
  "neuron.rxd.nodelist.NodeList",
  "neuron.rxd.options",
  "neuron.rxd.options.fixed_step_factor",
  "neuron.rxd.options.scipy_number_parts",
  "neuron.rxd.options.scipy_version",
  "neuron.rxd.options.use_reaction_contribution_to_jacobian",
  "neuron.rxd.plugins",
  "neuron.rxd.plugins.SharedMemorySolverPlugin",
  "neuron.rxd.plugins.SolverPlugin",
  "neuron.rxd.plugins._cvode_error",
  "neuron.rxd.plugins._default_solver",
  "neuron.rxd.plugins._fixed_step_advance",
  "neuron.rxd.plugins._initialize",
  "neuron.rxd.plugins._invalidate_plugin",
  "neuron.rxd.plugins.set_solver",
  "neuron.rxd.plugins.store_simple_3d_mesh",
  "neuron.rxd.rangevar",
  "neuron.rxd.rangevar.RangeVar",
  "neuron.rxd.rangevar._donothing",
  "neuron.rxd.rangevar._h_ptrvector",
  "neuron.rxd.rangevar._h_vector",
  "neuron.rxd.rangevar._numpy_zeros",
  "neuron.rxd.rangevar.h",
  "neuron.rxd.rate",
  "neuron.rxd.rate.Rate",
  "neuron.rxd.rate._itertools_chain",
  "neuron.rxd.re_init",
  "neuron.rxd.reaction",
  "neuron.rxd.reaction.Reaction",
  "neuron.rxd.region",
  "neuron.rxd.region.Region",
  "neuron.rxd.region._all_regions",
  "neuron.rxd.region._region_count",
  "neuron.rxd.region._sort_secs",
  "neuron.rxd.region.h",
  "neuron.rxd.rxd",
  "neuron.rxd.rxd.FARADAY",
  "neuron.rxd.rxd._after_advance",
  "neuron.rxd.rxd._all_reactions",
  "neuron.rxd.rxd._atolscale",
  "neuron.rxd.rxd._c_diagonal",
  "neuron.rxd.rxd._callbacks",
  "neuron.rxd.rxd._conductance",
  "neuron.rxd.rxd._conversion_factor",
  "neuron.rxd.rxd._ctypes_c_int",
  "neuron.rxd.rxd._cur_map",
  "neuron.rxd.rxd._cur_node_indices",
  "neuron.rxd.rxd._curr_indices",
  "neuron.rxd.rxd._curr_ptr_storage",
  "neuron.rxd.rxd._curr_ptr_storage_nrn",
  "neuron.rxd.rxd._curr_ptr_vector",
  "neuron.rxd.rxd._curr_ptrs",
  "neuron.rxd.rxd._curr_scales",
  "neuron.rxd.rxd._currents",
  "neuron.rxd.rxd._cvode_object",
  "neuron.rxd.rxd._default_dx",
  "neuron.rxd.rxd._default_method",
  "neuron.rxd.rxd._diam_change_count",
  "neuron.rxd.rxd._diffusion_a",
  "neuron.rxd.rxd._diffusion_a_base",
  "neuron.rxd.rxd._diffusion_a_ptr",
  "neuron.rxd.rxd._diffusion_b",
  "neuron.rxd.rxd._diffusion_b_base",
  "neuron.rxd.rxd._diffusion_b_ptr",
  "neuron.rxd.rxd._diffusion_d",
  "neuron.rxd.rxd._diffusion_d_base",
  "neuron.rxd.rxd._diffusion_matrix",
  "neuron.rxd.rxd._diffusion_matrix_solve",
  "neuron.rxd.rxd._diffusion_p",
  "neuron.rxd.rxd._diffusion_p_ptr",
  "neuron.rxd.rxd._dimensions",
  "neuron.rxd.rxd._do_nbs_register",
  "neuron.rxd.rxd._donothing",
  "neuron.rxd.rxd._double_ptr",
  "neuron.rxd.rxd._dptr",
  "neuron.rxd.rxd._euler_matrix",
  "neuron.rxd.rxd._external_solver",
  "neuron.rxd.rxd._external_solver_initialized",
  "neuron.rxd.rxd._fih",
  "neuron.rxd.rxd._fih2",
  "neuron.rxd.rxd._fixed_step_count",
  "neuron.rxd.rxd._fixed_step_solve",
  "neuron.rxd.rxd._get_jac",
  "neuron.rxd.rxd._get_node_indices",
  "neuron.rxd.rxd._h_ptrvector",
  "neuron.rxd.rxd._h_vector",
  "neuron.rxd.rxd._has_nbs_registered",
  "neuron.rxd.rxd._init",
  "neuron.rxd.rxd._int_ptr",
  "neuron.rxd.rxd._invalidate_matrices",
  "neuron.rxd.rxd._last_dt",
  "neuron.rxd.rxd._last_m",
  "neuron.rxd.rxd._last_preconditioner",
  "neuron.rxd.rxd._last_preconditioner_dt",
  "neuron.rxd.rxd._linmodadd",
  "neuron.rxd.rxd._linmodadd_b",
  "neuron.rxd.rxd._linmodadd_c",
  "neuron.rxd.rxd._mat_for_zero_volume_nodes",
  "neuron.rxd.rxd._nbs",
  "neuron.rxd.rxd._node_get_states",
  "neuron.rxd.rxd._nonzero_volume_indices",
  "neuron.rxd.rxd._numpy_array",
  "neuron.rxd.rxd._numpy_zeros",
  "neuron.rxd.rxd._ode_count",
  "neuron.rxd.rxd._ode_fun",
  "neuron.rxd.rxd._ode_jacobian",
  "neuron.rxd.rxd._ode_reinit",
  "neuron.rxd.rxd._ode_solve",
  "neuron.rxd.rxd._orig_currents",
  "neuron.rxd.rxd._orig_fixed_step_solve",
  "neuron.rxd.rxd._orig_ode_count",
  "neuron.rxd.rxd._orig_ode_fun",
  "neuron.rxd.rxd._orig_ode_jacobian",
  "neuron.rxd.rxd._orig_ode_reinit",
  "neuron.rxd.rxd._orig_ode_solve",
  "neuron.rxd.rxd._orig_setup",
  "neuron.rxd.rxd._react_matrix_solver",
  "neuron.rxd.rxd._reaction_matrix_setup",
  "neuron.rxd.rxd._reaction_matrix_solve",
  "neuron.rxd.rxd._register_reaction",
  "neuron.rxd.rxd._rxd_induced_currents",
  "neuron.rxd.rxd._rxd_offset",
  "neuron.rxd.rxd._rxd_reaction",
  "neuron.rxd.rxd._scipy_sparse_coo_matrix",
  "neuron.rxd.rxd._scipy_sparse_dok_matrix",
  "neuron.rxd.rxd._scipy_sparse_eye",
  "neuron.rxd.rxd._scipy_sparse_linalg_bicgstab",
  "neuron.rxd.rxd._scipy_sparse_linalg_factorized",
  "neuron.rxd.rxd._scipy_sparse_linalg_spsolve",
  "neuron.rxd.rxd._section1d_transfer_to_legacy",
  "neuron.rxd.rxd._setup",
  "neuron.rxd.rxd._species_get_all_species",
  "neuron.rxd.rxd._structure_change_count",
  "neuron.rxd.rxd._unregister_reaction",
  "neuron.rxd.rxd._update_node_data",
  "neuron.rxd.rxd._w_atolscale",
  "neuron.rxd.rxd._w_conductance",
  "neuron.rxd.rxd._w_currents",
  "neuron.rxd.rxd._w_fixed_step_solve",
  "neuron.rxd.rxd._w_ode_count",
  "neuron.rxd.rxd._w_ode_fun",
  "neuron.rxd.rxd._w_ode_jacobian",
  "neuron.rxd.rxd._w_ode_reinit",
  "neuron.rxd.rxd._w_ode_solve",
  "neuron.rxd.rxd._w_setup",
  "neuron.rxd.rxd._weakref_ref",
  "neuron.rxd.rxd._zero_volume_indices",
  "neuron.rxd.rxd.byeworld",
  "neuron.rxd.rxd.eye_minus_dt_J",
  "neuron.rxd.rxd.h",
  "neuron.rxd.rxd.last_diam_change_cnt",
  "neuron.rxd.rxd.last_structure_change_cnt",
  "neuron.rxd.rxd.nrn",
  "neuron.rxd.rxd.nrn_tree_solve",
  "neuron.rxd.rxd.pinverse",
  "neuron.rxd.rxd.re_init",
  "neuron.rxd.rxd.set_solve_type",
  "neuron.rxd.rxdException",
  "neuron.rxd.rxdException.RxDException",
  "neuron.rxd.rxdmath",
  "neuron.rxd.rxdmath._Arithmeticed",
  "neuron.rxd.rxdmath._Function",
  "neuron.rxd.rxdmath._Product",
  "neuron.rxd.rxdmath._Quotient",
  "neuron.rxd.rxdmath._Reaction",
  "neuron.rxd.rxdmath._compile",
  "neuron.rxd.rxdmath._ensure_arithmeticed",
  "neuron.rxd.rxdmath._erf",
  "neuron.rxd.rxdmath._factorial",
  "neuron.rxd.rxdmath._gamma",
  "neuron.rxd.rxdmath._lgamma",
  "neuron.rxd.rxdmath._neg",
  "neuron.rxd.rxdmath._power",
  "neuron.rxd.rxdmath._validate_reaction_terms",
  "neuron.rxd.rxdmath._vectorized",
  "neuron.rxd.rxdmath.acos",
  "neuron.rxd.rxdmath.analyze_reaction",
  "neuron.rxd.rxdmath.asin",
  "neuron.rxd.rxdmath.atan",
  "neuron.rxd.rxdmath.ceil",
  "neuron.rxd.rxdmath.copysign",
  "neuron.rxd.rxdmath.cos",
  "neuron.rxd.rxdmath.degrees",
  "neuron.rxd.rxdmath.erf",
  "neuron.rxd.rxdmath.exp",
  "neuron.rxd.rxdmath.fabs",
  "neuron.rxd.rxdmath.factorial",
  "neuron.rxd.rxdmath.floor",
  "neuron.rxd.rxdmath.fmod",
  "neuron.rxd.rxdmath.frexp",
  "neuron.rxd.rxdmath.fsum",
  "neuron.rxd.rxdmath.gamma",
  "neuron.rxd.rxdmath.hypot",
  "neuron.rxd.rxdmath.isinf",
  "neuron.rxd.rxdmath.isnan",
  "neuron.rxd.rxdmath.ldexp",
  "neuron.rxd.rxdmath.lgamma",
  "neuron.rxd.rxdmath.log",
  "neuron.rxd.rxdmath.modf",
  "neuron.rxd.rxdmath.pow",
  "neuron.rxd.rxdmath.radians",
  "neuron.rxd.rxdmath.sin",
  "neuron.rxd.rxdmath.sqrt",
  "neuron.rxd.rxdmath.tan",
  "neuron.rxd.rxdmath.trunc",
  "neuron.rxd.rxdsection",
  "neuron.rxd.rxdsection.RxDSection",
  "neuron.rxd.rxdsection.h",
  "neuron.rxd.section1d",
  "neuron.rxd.section1d.Section1D",
  "neuron.rxd.section1d._all_cindices",
  "neuron.rxd.section1d._all_cptrs",
  "neuron.rxd.section1d._c_ptr_vector",
  "neuron.rxd.section1d._c_ptr_vector_storage",
  "neuron.rxd.section1d._c_ptr_vector_storage_nrn",
  "neuron.rxd.section1d._donothing",
  "neuron.rxd.section1d._last_c_ptr_length",
  "neuron.rxd.section1d._purge_cptrs",
  "neuron.rxd.section1d._transfer_to_legacy",
  "neuron.rxd.section1d.h",
  "neuron.rxd.set_solve_type",
  "neuron.rxd.set_solver",
  "neuron.rxd.species",
  "neuron.rxd.species.Species",
  "neuron.rxd.species._1d_submatrix_n",
  "neuron.rxd.species._SpeciesMathable",
  "neuron.rxd.species._all_species",
  "neuron.rxd.species._defined_species",
  "neuron.rxd.species._get_all_species",
  "neuron.rxd.species._has_1d",
  "neuron.rxd.species._has_3d",
  "neuron.rxd.species._setup_matrices_process_neighbors",
  "neuron.rxd.species._species_count",
  "neuron.rxd.species.h",
  "neuron.rxd.species.nrn",
  "neuron.sections",
  "neuron.sections.AllSegments",
  "neuron.sections.ExtendedSection",
  "neuron.sections.nrn",
  "neuron.set_vec_as_numpy",
  "neuron.test",
  "neuron.tests._subclass",
  "neuron.tests._subclass.HocError",
  "neuron.tests._subclass.Wrapper",
  "neuron.tests._subclass.__version__",
  "neuron.tests._subclass._connect_sections_in_obj",
  "neuron.tests._subclass._create_all_list",
  "neuron.tests._subclass._create_sections_in_obj",
  "neuron.tests._subclass._declare_contour",
  "neuron.tests._subclass._double_ptr",
  "neuron.tests._subclass._double_size",
  "neuron.tests._subclass._has_rxd",
  "neuron.tests._subclass._has_scipy",
  "neuron.tests._subclass._nrn_dll",
  "neuron.tests._subclass._nrn_hocobj_ptr",
  "neuron.tests._subclass._original_hoc_file",
  "neuron.tests._subclass._parse_import3d_name",
  "neuron.tests._subclass._pkl",
  "neuron.tests._subclass._pt3dadd_in_obj",
  "neuron.tests._subclass._pt3dstyle_in_obj",
  "neuron.tests._subclass._sec_db",
  "neuron.tests._subclass.embedded",
  "neuron.tests._subclass.h",
  "neuron.tests._subclass.hclass",
  "neuron.tests._subclass.help",
  "neuron.tests._subclass.hoc_comment",
  "neuron.tests._subclass.hoc_execute",
  "neuron.tests._subclass.init",
  "neuron.tests._subclass.load_mechanisms",
  "neuron.tests._subclass.new_hoc_class",
  "neuron.tests._subclass.new_point_process",
  "neuron.tests._subclass.nrn_dll",
  "neuron.tests._subclass.nrn_nmodl_path",
  "neuron.tests._subclass.nrnpy_pass",
  "neuron.tests._subclass.nrnpy_pr",
  "neuron.tests._subclass.nrnpy_set_pr_etal",
  "neuron.tests._subclass.nt_dlls",
  "neuron.tests._subclass.numpy_element_ref",
  "neuron.tests._subclass.numpy_from_pointer",
  "neuron.tests._subclass.p",
  "neuron.tests._subclass.phoc",
  "neuron.tests._subclass.psection",
  "neuron.tests._subclass.quit",
  "neuron.tests._subclass.run",
  "neuron.tests._subclass.set_vec_as_numpy",
  "neuron.tests._subclass.test",
  "neuron.tests._subclass.vec2numpy",
  "neuron.tests._subclass.vec_to_numpy_callback",
  "neuron.tests._subclass.vec_to_numpy_prototype",
  "neuron.tests._subclass.version",
  "neuron.tests._subclass.x",
  "neuron.tests._subclass.xopen",
  "neuron.tests.suite",
  "neuron.tests.test_all",
  "neuron.tests.test_all.runner",
  "neuron.tests.test_all.suite",
  "neuron.tests.test_all.test_neuron",
  "neuron.tests.test_all.test_vector",
  "neuron.tests.test_neuron",
  "neuron.tests.test_neuron.NeuronTestCase",
  "neuron.tests.test_neuron.basicRxD3D",
  "neuron.tests.test_neuron.h",
  "neuron.tests.test_neuron.runner",
  "neuron.tests.test_neuron.suite",
  "neuron.tests.test_rxd",
  "neuron.tests.test_rxd.RxDTestCase",
  "neuron.tests.test_rxd.h",
  "neuron.tests.test_rxd.scalar_bistable",
  "neuron.tests.test_rxd.suite",
  "neuron.tests.test_rxd.test",
  "neuron.tests.test_rxd.trivial_ecs",
  "neuron.tests.test_vector",
  "neuron.tests.test_vector.Bench",
  "neuron.tests.test_vector.VectorTestCase",
  "neuron.tests.test_vector.h",
  "neuron.tests.test_vector.runner",
  "neuron.tests.test_vector.suite",
  "neuron.vec2numpy",
  "neuron.vec_to_numpy_callback",
  "neuron.vec_to_numpy_prototype",
  "neuron.version",
  "neuron.x",
  "neuron.xopen"
 ]
}