{
 "errors": {
  "fiona.logutils": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "fiona.rfc3339": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "fiona.BytesCollection",
  "fiona.Collection",
  "fiona.Env",
  "fiona.FIELD_TYPES_MAP",
  "fiona.FionaDeprecationWarning",
  "fiona.MemoryFile",
  "fiona.OrderedDict",
  "fiona.ParsedPath",
  "fiona.Path",
  "fiona.__all__",
  "fiona.__gdal_version__",
  "fiona.__version__",
  "fiona._bounds",
  "fiona._env.GDALDataFinder",
  "fiona._env.GDALEnv",
  "fiona._env.PROJDataFinder",
  "fiona._env.calc_gdal_version_num",
  "fiona._env.driver_count",
  "fiona._env.get_gdal_config",
  "fiona._env.get_gdal_release_name",
  "fiona._env.get_gdal_version_num",
  "fiona._env.get_gdal_version_tuple",
  "fiona._env.set_gdal_config",
  "fiona._err",
  "fiona._geometry",
  "fiona._listlayers",
  "fiona._remove",
  "fiona._remove_layer",
  "fiona._transform._transform",
  "fiona._transform._transform_geom",
  "fiona.bounds",
  "fiona.calc_gdal_version_num",
  "fiona.collection",
  "fiona.collection.ALL_GEOMETRY_TYPES",
  "fiona.collection.BytesCollection",
  "fiona.collection.CRSError",
  "fiona.collection.Collection",
  "fiona.collection.DriverError",
  "fiona.collection.DriverSupportError",
  "fiona.collection.FieldSkipLogFilter",
  "fiona.collection.FionaDeprecationWarning",
  "fiona.collection.GEOMETRY_TYPES",
  "fiona.collection.ItemsIterator",
  "fiona.collection.Iterator",
  "fiona.collection.KeysIterator",
  "fiona.collection.Path",
  "fiona.collection.SchemaError",
  "fiona.collection.Session",
  "fiona.collection.UnsupportedGeometryTypeError",
  "fiona.collection.WritingSession",
  "fiona.collection._get_valid_geom_types",
  "fiona.collection.buffer_to_virtual_file",
  "fiona.collection.compat",
  "fiona.collection.env_ctx_if_needed",
  "fiona.collection.get_filetype",
  "fiona.collection.get_gdal_release_name",
  "fiona.collection.get_gdal_version_tuple",
  "fiona.collection.log",
  "fiona.collection.parse_path",
  "fiona.collection.remove_virtual_file",
  "fiona.collection.supported_drivers",
  "fiona.collection.vfs",
  "fiona.collection.vsi_path",
  "fiona.compat",
  "fiona.compat.DICT_TYPES",
  "fiona.compat.OrderedDict",
  "fiona.compat.getargspec",
  "fiona.compat.urlparse",
  "fiona.crs",
  "fiona.crs._lines",
  "fiona.crs._param_data",
  "fiona.crs.all_proj_keys",
  "fiona.crs.from_epsg",
  "fiona.crs.from_string",
  "fiona.crs.to_string",
  "fiona.driver_count",
  "fiona.drivers",
  "fiona.drvsupport",
  "fiona.drvsupport.Env",
  "fiona.drvsupport._filter_supported_drivers",
  "fiona.drvsupport.supported_drivers",
  "fiona.ensure_env_with_credentials",
  "fiona.env",
  "fiona.env.DummySession",
  "fiona.env.Env",
  "fiona.env.EnvError",
  "fiona.env.GDALDataFinder",
  "fiona.env.GDALEnv",
  "fiona.env.GDALVersion",
  "fiona.env.GDALVersionError",
  "fiona.env.NullContextManager",
  "fiona.env.PROJDataFinder",
  "fiona.env.Session",
  "fiona.env.ThreadEnv",
  "fiona.env.calc_gdal_version_num",
  "fiona.env.defenv",
  "fiona.env.delenv",
  "fiona.env.ensure_env",
  "fiona.env.ensure_env_with_credentials",
  "fiona.env.env_ctx_if_needed",
  "fiona.env.get_gdal_config",
  "fiona.env.get_gdal_release_name",
  "fiona.env.get_gdal_version_num",
  "fiona.env.getargspec",
  "fiona.env.getenv",
  "fiona.env.hascreds",
  "fiona.env.hasenv",
  "fiona.env.local",
  "fiona.env.log",
  "fiona.env.path",
  "fiona.env.require_gdal_version",
  "fiona.env.set_gdal_config",
  "fiona.env.setenv",
  "fiona.errors",
  "fiona.errors.CRSError",
  "fiona.errors.DataIOError",
  "fiona.errors.DatasetDeleteError",
  "fiona.errors.DriverError",
  "fiona.errors.DriverIOError",
  "fiona.errors.DriverSupportError",
  "fiona.errors.EnvError",
  "fiona.errors.FieldNameEncodeError",
  "fiona.errors.FionaDeprecationWarning",
  "fiona.errors.FionaError",
  "fiona.errors.FionaValueError",
  "fiona.errors.GDALVersionError",
  "fiona.errors.GeometryTypeValidationError",
  "fiona.errors.SchemaError",
  "fiona.errors.TransactionError",
  "fiona.errors.UnsupportedGeometryTypeError",
  "fiona.fio",
  "fiona.fio.bounds",
  "fiona.fio.bounds.bounds",
  "fiona.fio.bounds.obj_gen",
  "fiona.fio.bounds.with_context_env",
  "fiona.fio.calc",
  "fiona.fio.calc.calc",
  "fiona.fio.calc.with_context_env",
  "fiona.fio.cat",
  "fiona.fio.cat.cat",
  "fiona.fio.cat.options",
  "fiona.fio.cat.transform_geom",
  "fiona.fio.cat.with_context_env",
  "fiona.fio.collect",
  "fiona.fio.collect.collect",
  "fiona.fio.collect.helpers",
  "fiona.fio.collect.options",
  "fiona.fio.collect.transform_geom",
  "fiona.fio.collect.with_context_env",
  "fiona.fio.distrib",
  "fiona.fio.distrib.distrib",
  "fiona.fio.distrib.helpers",
  "fiona.fio.distrib.with_context_env",
  "fiona.fio.dump",
  "fiona.fio.dump.dump",
  "fiona.fio.dump.helpers",
  "fiona.fio.dump.options",
  "fiona.fio.dump.transform_geom",
  "fiona.fio.dump.with_context_env",
  "fiona.fio.env",
  "fiona.fio.env.GDALDataFinder",
  "fiona.fio.env.PROJDataFinder",
  "fiona.fio.env.env",
  "fiona.fio.env.env.env",
  "fiona.fio.env.env.k",
  "fiona.fio.env.env.modes",
  "fiona.fio.env.env.stdout",
  "fiona.fio.env.env.v",
  "fiona.fio.env.k",
  "fiona.fio.env.modes",
  "fiona.fio.env.stdout",
  "fiona.fio.env.v",
  "fiona.fio.filter",
  "fiona.fio.filter.eval_feature_expression",
  "fiona.fio.filter.filter",
  "fiona.fio.filter.obj_gen",
  "fiona.fio.filter.with_context_env",
  "fiona.fio.helpers",
  "fiona.fio.helpers.eval_feature_expression",
  "fiona.fio.helpers.id_record",
  "fiona.fio.helpers.make_ld_context",
  "fiona.fio.helpers.nullable",
  "fiona.fio.helpers.obj_gen",
  "fiona.fio.info",
  "fiona.fio.info.info",
  "fiona.fio.info.info.info",
  "fiona.fio.info.info.logger",
  "fiona.fio.info.info.proj4",
  "fiona.fio.info.info.src",
  "fiona.fio.info.logger",
  "fiona.fio.info.options",
  "fiona.fio.info.proj4",
  "fiona.fio.info.src",
  "fiona.fio.info.with_context_env",
  "fiona.fio.insp",
  "fiona.fio.insp.insp",
  "fiona.fio.insp.with_context_env",
  "fiona.fio.load",
  "fiona.fio.load.FIELD_TYPES_MAP_REV",
  "fiona.fio.load.load",
  "fiona.fio.load.options",
  "fiona.fio.load.transform_geom",
  "fiona.fio.load.with_context_env",
  "fiona.fio.ls",
  "fiona.fio.ls.ls",
  "fiona.fio.ls.with_context_env",
  "fiona.fio.main",
  "fiona.fio.main.AWSSession",
  "fiona.fio.main.DummySession",
  "fiona.fio.main.__version__",
  "fiona.fio.main.configure_logging",
  "fiona.fio.main.main_group",
  "fiona.fio.options",
  "fiona.fio.options.cb_layer",
  "fiona.fio.options.cb_multilayer",
  "fiona.fio.options.dst_crs_opt",
  "fiona.fio.options.src_crs_opt",
  "fiona.fio.options.validate_multilayer_file_index",
  "fiona.fio.rm",
  "fiona.fio.rm.logger",
  "fiona.fio.rm.rm",
  "fiona.fio.rm.with_context_env",
  "fiona.fio.with_context_env",
  "fiona.gdal_version",
  "fiona.get_gdal_release_name",
  "fiona.get_gdal_version_num",
  "fiona.get_gdal_version_tuple",
  "fiona.inspector",
  "fiona.inspector.args",
  "fiona.inspector.logger",
  "fiona.inspector.main",
  "fiona.inspector.parser",
  "fiona.io",
  "fiona.io.Collection",
  "fiona.io.MemoryFile",
  "fiona.io.MemoryFileBase",
  "fiona.io.ZipMemoryFile",
  "fiona.io.log",
  "fiona.libdir",
  "fiona.listlayers",
  "fiona.log",
  "fiona.logutils",
  "fiona.logutils.FieldSkipLogFilter",
  "fiona.ogrext.FIELD_TYPES_MAP",
  "fiona.ogrext.GEOMETRY_TYPES",
  "fiona.ogrext.ItemsIterator",
  "fiona.ogrext.Iterator",
  "fiona.ogrext.KeysIterator",
  "fiona.ogrext.MemoryFileBase",
  "fiona.ogrext.Session",
  "fiona.ogrext.WritingSession",
  "fiona.ogrext._bounds",
  "fiona.ogrext._listlayers",
  "fiona.ogrext._remove",
  "fiona.ogrext._remove_layer",
  "fiona.ogrext.buffer_to_virtual_file",
  "fiona.ogrext.remove_virtual_file",
  "fiona.open",
  "fiona.parse_path",
  "fiona.parse_paths",
  "fiona.path",
  "fiona.path.CURLSCHEMES",
  "fiona.path.ParsedPath",
  "fiona.path.Path",
  "fiona.path.REMOTESCHEMES",
  "fiona.path.SCHEMES",
  "fiona.path.UnparsedPath",
  "fiona.path.parse_path",
  "fiona.path.urlparse",
  "fiona.path.vsi_path",
  "fiona.prop_type",
  "fiona.prop_width",
  "fiona.remove",
  "fiona.rfc3339",
  "fiona.schema.FIELD_TYPES_MAP_REV",
  "fiona.session",
  "fiona.session.AWSSession",
  "fiona.session.DummySession",
  "fiona.session.GSSession",
  "fiona.session.Session",
  "fiona.session.UnparsedPath",
  "fiona.session.parse_path",
  "fiona.supported_drivers",
  "fiona.transform",
  "fiona.transform._transform",
  "fiona.transform._transform_geom",
  "fiona.transform.transform",
  "fiona.transform.transform_geom",
  "fiona.vfs",
  "fiona.vfs.CURLSCHEMES",
  "fiona.vfs.REMOTESCHEMES",
  "fiona.vfs.SCHEMES",
  "fiona.vfs.is_remote",
  "fiona.vfs.parse_paths",
  "fiona.vfs.urlparse",
  "fiona.vfs.valid_vsi",
  "fiona.vfs.vsi_path",
  "fiona.vsi_path"
 ]
}