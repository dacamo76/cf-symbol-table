{
 "errors": {},
 "symbols": [
  "transonic.Array",
  "transonic.Dict",
  "transonic.List",
  "transonic.NDim",
  "transonic.Optional",
  "transonic.Set",
  "transonic.Transonic",
  "transonic.Tuple",
  "transonic.Type",
  "transonic.Union",
  "transonic.__all__",
  "transonic.__version__",
  "transonic._version",
  "transonic._version.__about__",
  "transonic._version.__version__",
  "transonic.aheadoftime",
  "transonic.aheadoftime.CheckCompiling",
  "transonic.aheadoftime.Path",
  "transonic.aheadoftime.Transonic",
  "transonic.aheadoftime.TransonicTemporaryJITMethod",
  "transonic.aheadoftime._get_module_jit",
  "transonic.aheadoftime._get_transonic_calling_module",
  "transonic.aheadoftime.backend_default",
  "transonic.aheadoftime.backends",
  "transonic.aheadoftime.boost",
  "transonic.aheadoftime.find_module_name_from_path",
  "transonic.aheadoftime.get_backend_name_module",
  "transonic.aheadoftime.get_module_name",
  "transonic.aheadoftime.has_to_build",
  "transonic.aheadoftime.has_to_compile_at_import",
  "transonic.aheadoftime.has_to_replace",
  "transonic.aheadoftime.import_from_path",
  "transonic.aheadoftime.is_method",
  "transonic.aheadoftime.is_transpiling",
  "transonic.aheadoftime.jit_class",
  "transonic.aheadoftime.logger",
  "transonic.aheadoftime.modification_date",
  "transonic.aheadoftime.modules",
  "transonic.aheadoftime.modules_backends",
  "transonic.aheadoftime.mpi",
  "transonic.aheadoftime.write_if_has_to_write",
  "transonic.analyses",
  "transonic.analyses.CaptureX",
  "transonic.analyses.__all__",
  "transonic.analyses.aheadoftime",
  "transonic.analyses.analyse_aot",
  "transonic.analyses.beniget",
  "transonic.analyses.beniget.CommentLine",
  "transonic.analyses.beniget.DefUseChains",
  "transonic.analyses.beniget.__all__",
  "transonic.analyses.blocks_if",
  "transonic.analyses.blocks_if.BlockDefinition",
  "transonic.analyses.blocks_if.CaptureX",
  "transonic.analyses.blocks_if.extast",
  "transonic.analyses.blocks_if.find_def_code",
  "transonic.analyses.blocks_if.find_index_closing_parenthesis",
  "transonic.analyses.blocks_if.find_last_def_node",
  "transonic.analyses.blocks_if.gather_rawcode_comments",
  "transonic.analyses.blocks_if.get_block_definitions",
  "transonic.analyses.blocks_if.get_signatures_from_comments",
  "transonic.analyses.capturex.CaptureX",
  "transonic.analyses.capturex.beniget",
  "transonic.analyses.capturex.capturex",
  "transonic.analyses.capturex.code",
  "transonic.analyses.capturex.extast",
  "transonic.analyses.capturex.function",
  "transonic.analyses.capturex.module",
  "transonic.analyses.compute_ancestors_chains",
  "transonic.analyses.extast",
  "transonic.analyses.extast.CommentInserter",
  "transonic.analyses.extast.CommentLine",
  "transonic.analyses.extast.Constant",
  "transonic.analyses.extast.FunctionDef",
  "transonic.analyses.extast.Name",
  "transonic.analyses.extast.UnparserExtended",
  "transonic.analyses.extast.ast",
  "transonic.analyses.extast.beniget",
  "transonic.analyses.extast.code",
  "transonic.analyses.extast.compute_ancestors_chains",
  "transonic.analyses.extast.parse",
  "transonic.analyses.extast.tree",
  "transonic.analyses.extast.unparse",
  "transonic.analyses.extract_returns_annotation",
  "transonic.analyses.extract_variable_annotations",
  "transonic.analyses.filter_code_typevars",
  "transonic.analyses.find_decorated_function",
  "transonic.analyses.find_path",
  "transonic.analyses.get_annotations",
  "transonic.analyses.get_block_definitions",
  "transonic.analyses.get_decorated_dicts",
  "transonic.analyses.get_exterior_code",
  "transonic.analyses.get_types_from_transonic_signature",
  "transonic.analyses.justintime",
  "transonic.analyses.justintime.CaptureX",
  "transonic.analyses.justintime.analysis_jit",
  "transonic.analyses.justintime.compute_ancestors_chains",
  "transonic.analyses.justintime.extast",
  "transonic.analyses.justintime.get_decorated_dicts",
  "transonic.analyses.justintime.get_exterior_code",
  "transonic.analyses.justintime.logger",
  "transonic.analyses.logger",
  "transonic.analyses.parse_transonic_def_commands",
  "transonic.analyses.parser",
  "transonic.analyses.parser.parse_transonic_def_commands",
  "transonic.analyses.print_dumped",
  "transonic.analyses.print_unparsed",
  "transonic.analyses.test_analyses",
  "transonic.analyses.test_analyses.assert_types_from_sig",
  "transonic.analyses.test_analyses.get_types_from_transonic_signature",
  "transonic.analyses.test_analyses.test_c_style",
  "transonic.analyses.test_analyses.test_cython_style",
  "transonic.analyses.test_analyses.test_simple",
  "transonic.analyses.test_util",
  "transonic.analyses.test_util.parse",
  "transonic.analyses.test_util.print_dumped",
  "transonic.analyses.test_util.print_unparsed",
  "transonic.analyses.test_util.source",
  "transonic.analyses.test_util.test_print_dumped",
  "transonic.analyses.test_util.test_print_unparsed",
  "transonic.analyses.util",
  "transonic.analyses.util.AnalyseLines",
  "transonic.analyses.util.CaptureX",
  "transonic.analyses.util._fill_ast_annotations_class",
  "transonic.analyses.util._fill_ast_annotations_function",
  "transonic.analyses.util.adapt_code_dependance",
  "transonic.analyses.util.beniget",
  "transonic.analyses.util.change_import_name",
  "transonic.analyses.util.code_ext",
  "transonic.analyses.util.extast",
  "transonic.analyses.util.extract_returns_annotation",
  "transonic.analyses.util.extract_variable_annotations",
  "transonic.analyses.util.filter_code_typevars",
  "transonic.analyses.util.filter_external_code",
  "transonic.analyses.util.find_path",
  "transonic.analyses.util.gather_rawcode_comments",
  "transonic.analyses.util.get_annotations",
  "transonic.analyses.util.get_exterior_code",
  "transonic.analyses.util.packages_supported_by_pythran",
  "transonic.analyses.util.print_dumped",
  "transonic.analyses.util.print_unparsed",
  "transonic.backends",
  "transonic.backends.CythonBackend",
  "transonic.backends.NumbaBackend",
  "transonic.backends.PythonBackend",
  "transonic.backends.PythranBackend",
  "transonic.backends.backend_default",
  "transonic.backends.backend_default_modules",
  "transonic.backends.backends",
  "transonic.backends.base",
  "transonic.backends.base.Backend",
  "transonic.backends.base.Backend._SubBackendJIT",
  "transonic.backends.base.Backend._TypeFormatter",
  "transonic.backends.base.Backend.backend_name",
  "transonic.backends.base.Backend.keyword_export",
  "transonic.backends.base.Backend.needs_compilation",
  "transonic.backends.base.Backend.suffix_backend",
  "transonic.backends.base.Backend.suffix_extension",
  "transonic.backends.base.Backend.suffix_header",
  "transonic.backends.base.BackendJIT.needs_compilation",
  "transonic.backends.base.BackendJIT.suffix_extension",
  "transonic.backends.base.PathSeq",
  "transonic.backends.base.TypeHintRemover",
  "transonic.backends.base.analyse_aot",
  "transonic.backends.base.compile_extension",
  "transonic.backends.base.compute_signatures_from_typeobjects",
  "transonic.backends.base.ext_suffix",
  "transonic.backends.base.extast",
  "transonic.backends.base.format_str",
  "transonic.backends.base.has_to_build",
  "transonic.backends.base.logger",
  "transonic.backends.base.make_hex",
  "transonic.backends.base.mpi",
  "transonic.backends.base.write_if_has_to_write",
  "transonic.backends.base_jit",
  "transonic.backends.base_jit.SubBackendJIT",
  "transonic.backends.base_jit.extast",
  "transonic.backends.base_jit.format_type_as_backend_type",
  "transonic.backends.base_jit.get_source_without_decorator",
  "transonic.backends.base_jit.logger",
  "transonic.backends.base_jit.make_signatures_from_typehinted_func",
  "transonic.backends.base_jit.mpi",
  "transonic.backends.base_jit.np",
  "transonic.backends.base_jit.path_root",
  "transonic.backends.base_jit.typeof",
  "transonic.backends.cython",
  "transonic.backends.cython.CythonBackend",
  "transonic.backends.cython.FunctionDef",
  "transonic.backends.cython.HeaderFunction",
  "transonic.backends.cython.MemLayout",
  "transonic.backends.cython.Name",
  "transonic.backends.cython.SubBackendJITCython",
  "transonic.backends.cython.TypeFormatterCython",
  "transonic.backends.cython._SubBackendJIT",
  "transonic.backends.cython._TypeFormatter",
  "transonic.backends.cython.ast",
  "transonic.backends.cython.backend_name",
  "transonic.backends.cython.format_type_as_backend_type",
  "transonic.backends.cython.keyword_export",
  "transonic.backends.cython.make_signatures_from_typehinted_func",
  "transonic.backends.cython.memoryview_type",
  "transonic.backends.cython.needs_compilation",
  "transonic.backends.cython.normalize_type_name_for_array",
  "transonic.backends.cython.np_ndarray_type",
  "transonic.backends.cython.suffix_backend",
  "transonic.backends.cython.suffix_extension",
  "transonic.backends.cython.suffix_header",
  "transonic.backends.cython.unparse",
  "transonic.backends.for_classes",
  "transonic.backends.for_classes.compute_signatures_from_typeobjects",
  "transonic.backends.for_classes.format_str",
  "transonic.backends.for_classes.get_source_without_decorator",
  "transonic.backends.for_classes.make_code_from_fdef_node",
  "transonic.backends.for_classes.make_code_method_jit",
  "transonic.backends.for_classes.make_new_code_method_from_nodes",
  "transonic.backends.for_classes.make_new_code_method_from_objects",
  "transonic.backends.for_classes.make_new_code_method_from_source",
  "transonic.backends.for_classes.produce_code_class",
  "transonic.backends.for_test_set_backend",
  "transonic.backends.for_test_set_backend.Transonic",
  "transonic.backends.for_test_set_backend.boost",
  "transonic.backends.for_test_set_backend.func",
  "transonic.backends.for_test_set_backend.jit",
  "transonic.backends.for_test_set_backend.set_backend_for_this_module",
  "transonic.backends.for_test_set_backend.ts",
  "transonic.backends.get_backend_name_module",
  "transonic.backends.get_module_name",
  "transonic.backends.make_backend_files",
  "transonic.backends.numba",
  "transonic.backends.numba.CommentLine",
  "transonic.backends.numba.NumbaBackend",
  "transonic.backends.numba.SubBackendJITNumba",
  "transonic.backends.numba._SubBackendJIT",
  "transonic.backends.numba._TypeFormatter",
  "transonic.backends.numba.add_numba_comments",
  "transonic.backends.numba.ast",
  "transonic.backends.numba.backend_name",
  "transonic.backends.numba.format_str",
  "transonic.backends.numba.keyword_export",
  "transonic.backends.numba.needs_compilation",
  "transonic.backends.numba.parse",
  "transonic.backends.numba.suffix_backend",
  "transonic.backends.numba.suffix_extension",
  "transonic.backends.numba.suffix_header",
  "transonic.backends.numba.unparse",
  "transonic.backends.py",
  "transonic.backends.py.PythonBackend",
  "transonic.backends.py.PythonBackend._SubBackendJIT",
  "transonic.backends.py.PythonBackend.backend_name",
  "transonic.backends.py.SubBackendJITPython",
  "transonic.backends.py._SubBackendJIT",
  "transonic.backends.py._TypeFormatter",
  "transonic.backends.py.backend_name",
  "transonic.backends.py.keyword_export",
  "transonic.backends.py.needs_compilation",
  "transonic.backends.py.suffix_backend",
  "transonic.backends.py.suffix_extension",
  "transonic.backends.py.suffix_header",
  "transonic.backends.pythran",
  "transonic.backends.pythran.PythranBackend",
  "transonic.backends.pythran._SubBackendJIT",
  "transonic.backends.pythran._TypeFormatter",
  "transonic.backends.pythran.backend_name",
  "transonic.backends.pythran.keyword_export",
  "transonic.backends.pythran.needs_compilation",
  "transonic.backends.pythran.suffix_backend",
  "transonic.backends.pythran.suffix_extension",
  "transonic.backends.pythran.suffix_header",
  "transonic.backends.set_backend_for_this_module",
  "transonic.backends.test_backends",
  "transonic.backends.test_backends.backend_default",
  "transonic.backends.test_backends.modules_backends",
  "transonic.backends.test_backends.test_set_backend_for_this_module",
  "transonic.backends.test_cython",
  "transonic.backends.test_cython.Array",
  "transonic.backends.test_cython.backend",
  "transonic.backends.test_cython.backends",
  "transonic.backends.test_cython.compare",
  "transonic.backends.test_cython.test_array",
  "transonic.backends.test_cython.test_memview",
  "transonic.backends.test_cython.type_formatter",
  "transonic.backends.test_typing",
  "transonic.backends.test_typing.Array",
  "transonic.backends.test_typing.compare",
  "transonic.backends.test_typing.test_array",
  "transonic.backends.typing",
  "transonic.backends.typing.MemLayout",
  "transonic.backends.typing.TypeFormatter",
  "transonic.backends.typing.base_type_formatter",
  "transonic.backends.typing.format_type_as_backend_type",
  "transonic.backends.typing.normalized_types",
  "transonic.boost",
  "transonic.compiler",
  "transonic.compiler.Path",
  "transonic.compiler.SchedulerPopen",
  "transonic.compiler.compile_extension",
  "transonic.compiler.ext_suffix",
  "transonic.compiler.has_to_build",
  "transonic.compiler.logger",
  "transonic.compiler.make_hex",
  "transonic.compiler.modification_date",
  "transonic.compiler.mpi",
  "transonic.compiler.scheduler",
  "transonic.compiler.wait_for_all_extensions",
  "transonic.config",
  "transonic.config._backend",
  "transonic.config.backend_default",
  "transonic.config.backend_set_by_user",
  "transonic.config.has_to_replace",
  "transonic.config.path_root",
  "transonic.config.set_backend",
  "transonic.dist",
  "transonic.dist.ParallelBuildExt",
  "transonic.dist.PythranBuildExt",
  "transonic.dist.PythranExtension",
  "transonic.dist.__all__",
  "transonic.dist.backend_default",
  "transonic.dist.backends",
  "transonic.dist.build_ext_classes",
  "transonic.dist.can_import_accelerator",
  "transonic.dist.can_import_cython",
  "transonic.dist.can_import_pythran",
  "transonic.dist.detect_transonic_extensions",
  "transonic.dist.get_logger",
  "transonic.dist.init_pythran_extensions",
  "transonic.dist.init_transonic_extensions",
  "transonic.dist.make_backend_files",
  "transonic.dist.modification_date",
  "transonic.jit",
  "transonic.justintime",
  "transonic.justintime.JIT",
  "transonic.justintime.ModuleJIT",
  "transonic.justintime.TransonicTemporaryJITMethod",
  "transonic.justintime._COMPILE_JIT",
  "transonic.justintime._get_module_jit",
  "transonic.justintime.analysis_jit",
  "transonic.justintime.backend_default",
  "transonic.justintime.backends",
  "transonic.justintime.can_import_accelerator",
  "transonic.justintime.format_str",
  "transonic.justintime.get_backend_name_module",
  "transonic.justintime.get_info_from_ipython",
  "transonic.justintime.get_module_name",
  "transonic.justintime.has_to_build",
  "transonic.justintime.has_to_compile_at_import",
  "transonic.justintime.has_to_replace",
  "transonic.justintime.import_from_path",
  "transonic.justintime.is_method",
  "transonic.justintime.jit",
  "transonic.justintime.logger",
  "transonic.justintime.make_hex",
  "transonic.justintime.modules",
  "transonic.justintime.modules_backends",
  "transonic.justintime.mpi",
  "transonic.justintime.path_root",
  "transonic.justintime.set_compile_jit",
  "transonic.justintime.write_if_has_to_write",
  "transonic.log",
  "transonic.log._get_level_number",
  "transonic.log.formatter",
  "transonic.log.get_level",
  "transonic.log.is_enable_for",
  "transonic.log.level",
  "transonic.log.logger",
  "transonic.log.set_level",
  "transonic.log.stream",
  "transonic.mpi",
  "transonic.mpi.Path",
  "transonic.mpi.PathSeq",
  "transonic.mpi.ShellProcessMPI",
  "transonic.mpi.barrier",
  "transonic.mpi.bcast",
  "transonic.mpi.comm",
  "transonic.mpi.nb_proc",
  "transonic.mpi.p",
  "transonic.mpi.rank",
  "transonic.path_data_tests",
  "transonic.path_data_tests.here",
  "transonic.path_data_tests.path_data_tests",
  "transonic.run",
  "transonic.run.__version__",
  "transonic.run.analyse_aot",
  "transonic.run.backend_default",
  "transonic.run.can_import_accelerator",
  "transonic.run.clear_cached_extensions",
  "transonic.run.doc",
  "transonic.run.has_to_build",
  "transonic.run.logger",
  "transonic.run.parse_args",
  "transonic.run.run",
  "transonic.run.wait_for_all_extensions",
  "transonic.set_backend",
  "transonic.set_backend_for_this_module",
  "transonic.set_compile_at_import",
  "transonic.set_compile_jit",
  "transonic.signatures",
  "transonic.signatures._format_types_as_backend_types",
  "transonic.signatures._make_signature_from_template_variables",
  "transonic.signatures.compute_signatures_from_typeobjects",
  "transonic.signatures.format_type_as_backend_type",
  "transonic.signatures.make_signatures_from_typehinted_func",
  "transonic.signatures.str2type",
  "transonic.str2type",
  "transonic.test_build_ext",
  "transonic.test_build_ext.backend_default",
  "transonic.test_build_ext.cwd",
  "transonic.test_build_ext.make_backend_files",
  "transonic.test_build_ext.nb_proc",
  "transonic.test_build_ext.path_data_tests",
  "transonic.test_build_ext.setup_dir",
  "transonic.test_build_ext.setup_module",
  "transonic.test_build_ext.teardown_module",
  "transonic.test_build_ext.test_buildext",
  "transonic.test_dist",
  "transonic.test_dist.ParallelBuildExt",
  "transonic.test_dist.backend_default",
  "transonic.test_dist.can_import_accelerator",
  "transonic.test_dist.detect_transonic_extensions",
  "transonic.test_dist.get_logger",
  "transonic.test_dist.make_backend_files",
  "transonic.test_dist.modification_date",
  "transonic.test_dist.nb_proc",
  "transonic.test_dist.path_data_tests",
  "transonic.test_dist.test_build_ext",
  "transonic.test_dist.test_detect_backend_extensions",
  "transonic.test_dist.test_modification_date",
  "transonic.test_init",
  "transonic.test_init.Path",
  "transonic.test_init.Transonic",
  "transonic.test_init.backend_default",
  "transonic.test_init.mpi",
  "transonic.test_init.test_assign_boosted_func",
  "transonic.test_init.test_not_transonified",
  "transonic.test_init.test_use_pythran_false",
  "transonic.test_init.wait_for_all_extensions",
  "transonic.test_init_transonified",
  "transonic.test_init_transonified.TestsInit",
  "transonic.test_init_transonified.backend",
  "transonic.test_init_transonified.backend_default",
  "transonic.test_init_transonified.backends",
  "transonic.test_init_transonified.can_import_accelerator",
  "transonic.test_init_transonified.ext_suffix",
  "transonic.test_init_transonified.has_to_compile_at_import",
  "transonic.test_init_transonified.module_name",
  "transonic.test_init_transonified.mpi",
  "transonic.test_justintime",
  "transonic.test_justintime.backend",
  "transonic.test_justintime.backend_default",
  "transonic.test_justintime.backends",
  "transonic.test_justintime.can_import_accelerator",
  "transonic.test_justintime.module_name",
  "transonic.test_justintime.modules",
  "transonic.test_justintime.mpi",
  "transonic.test_justintime.path_classes_dir",
  "transonic.test_justintime.path_classes_dir1",
  "transonic.test_justintime.path_jit",
  "transonic.test_justintime.path_jit_classes",
  "transonic.test_justintime.path_jit_dir",
  "transonic.test_justintime.scheduler",
  "transonic.test_justintime.str_relative_path",
  "transonic.test_justintime.test_fib",
  "transonic.test_justintime.test_func0",
  "transonic.test_justintime.test_jit",
  "transonic.test_justintime.test_main",
  "transonic.test_justintime.wait_for_all_extensions",
  "transonic.test_run",
  "transonic.test_run.backend_default",
  "transonic.test_run.header_suffixes",
  "transonic.test_run.nb_proc",
  "transonic.test_run.path_data_tests",
  "transonic.test_run.path_dir_out",
  "transonic.test_run.run",
  "transonic.test_run.test_create_pythran_files",
  "transonic.test_run.test_create_pythran_simple",
  "transonic.test_run.test_create_trans_classic",
  "transonic.test_run.util",
  "transonic.test_typing",
  "transonic.test_typing.Array",
  "transonic.test_typing.Dict",
  "transonic.test_typing.List",
  "transonic.test_typing.MemLayout",
  "transonic.test_typing.NDim",
  "transonic.test_typing.Optional",
  "transonic.test_typing.Set",
  "transonic.test_typing.UnionMeta",
  "transonic.test_typing.base_type_formatter",
  "transonic.test_typing.compare_array_types",
  "transonic.test_typing.str2shape",
  "transonic.test_typing.str2type",
  "transonic.test_typing.test_NDim",
  "transonic.test_typing.test_dict",
  "transonic.test_typing.test_list",
  "transonic.test_typing.test_optional",
  "transonic.test_typing.test_set",
  "transonic.test_typing.test_shape",
  "transonic.test_typing.test_str2type_arrays",
  "transonic.test_typing.test_str2type_or",
  "transonic.test_typing.test_str2type_simple",
  "transonic.test_typing.test_tuple",
  "transonic.test_typing.test_typeof_array",
  "transonic.test_typing.test_typeof_dict",
  "transonic.test_typing.test_typeof_list",
  "transonic.test_typing.test_typeof_np_scalar",
  "transonic.test_typing.test_typeof_set",
  "transonic.test_typing.test_typeof_simple",
  "transonic.test_typing.typeof",
  "transonic.test_util",
  "transonic.test_util.query_yes_no",
  "transonic.test_util.test_query_yes_no",
  "transonic.test_util.test_timeit",
  "transonic.test_util.timeit",
  "transonic.test_util.util",
  "transonic.typeof",
  "transonic.typing",
  "transonic.typing.Array",
  "transonic.typing.Dict",
  "transonic.typing.FusedType",
  "transonic.typing.List",
  "transonic.typing.MemLayout",
  "transonic.typing.Meta",
  "transonic.typing.NDim",
  "transonic.typing.Optional",
  "transonic.typing.Set",
  "transonic.typing.TemplateVar",
  "transonic.typing.Tuple",
  "transonic.typing.Type",
  "transonic.typing.Union",
  "transonic.typing.UnionMeta",
  "transonic.typing._simple_types",
  "transonic.typing.format_type_as_backend_type",
  "transonic.typing.get_name_calling_module",
  "transonic.typing.names_template_variables",
  "transonic.typing.shape2str",
  "transonic.typing.str2shape",
  "transonic.typing.str2type",
  "transonic.typing.typeof",
  "transonic.util",
  "transonic.util.TypeHintRemover",
  "transonic.util._PYTHRANIZE_AT_IMPORT",
  "transonic.util.__all__",
  "transonic.util._mode",
  "transonic.util.backend_default",
  "transonic.util.can_import_accelerator",
  "transonic.util.clear_cached_extensions",
  "transonic.util.ext_suffix",
  "transonic.util.extast",
  "transonic.util.find_module_name_from_path",
  "transonic.util.format_str",
  "transonic.util.get_info_from_ipython",
  "transonic.util.get_ipython_input",
  "transonic.util.get_module_name",
  "transonic.util.get_name_calling_module",
  "transonic.util.get_source_without_decorator",
  "transonic.util.has_to_build",
  "transonic.util.has_to_compile_at_import",
  "transonic.util.has_to_write",
  "transonic.util.import_from_path",
  "transonic.util.is_method",
  "transonic.util.make_code_from_fdef_node",
  "transonic.util.make_hex",
  "transonic.util.modification_date",
  "transonic.util.path_root",
  "transonic.util.query_yes_no",
  "transonic.util.set_compile_at_import",
  "transonic.util.strip_typehints",
  "transonic.util.timeit",
  "transonic.util.write_if_has_to_write",
  "transonic.wait_for_all_extensions",
  "transonic_cl.cython",
  "transonic_cl.cython.boundscheck",
  "transonic_cl.cython.cdivision",
  "transonic_cl.cython.decor_1_value",
  "transonic_cl.cython.nogil",
  "transonic_cl.cython.nonecheck",
  "transonic_cl.cython.wraparound",
  "transonic_cl.cythonize",
  "transonic_cl.cythonize.path",
  "transonic_cl.run_backend",
  "transonic_cl.run_backend.ext_suffix",
  "transonic_cl.run_backend.logger",
  "transonic_cl.run_backend.main"
 ]
}