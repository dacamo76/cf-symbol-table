{
 "errors": {},
 "symbols": [
  "gridData.CCP4",
  "gridData.CCP4.CCP4",
  "gridData.Grid",
  "gridData.OpenDX",
  "gridData.OpenDX.DXInitObject",
  "gridData.OpenDX.DXParseError",
  "gridData.OpenDX.DXParser",
  "gridData.OpenDX.DXclass",
  "gridData.OpenDX.Token",
  "gridData.OpenDX.array",
  "gridData.OpenDX.field",
  "gridData.OpenDX.gridconnections",
  "gridData.OpenDX.gridpositions",
  "gridData.__all__",
  "gridData.__version__",
  "gridData._version",
  "gridData._version.get_versions",
  "gridData._version.version_json",
  "gridData.core",
  "gridData.core.Grid",
  "gridData.core._grid",
  "gridData.core.ndmeshgrid",
  "gridData.gOpenMol",
  "gridData.gOpenMol.Plt",
  "gridData.gOpenMol.Record",
  "gridData.testing",
  "gridData.testing.tempdir",
  "gridData.testing.tempdir.TempDir",
  "gridData.testing.tempdir.in_tempdir",
  "gridData.testing.tempdir.run_in_tempdir",
  "gridData.tests",
  "gridData.tests.module_not_found",
  "gridData.tests.test_ccp4",
  "gridData.tests.test_ccp4.Grid",
  "gridData.tests.test_ccp4.test_ccp4",
  "gridData.tests.test_dx",
  "gridData.tests.test_dx.Grid",
  "gridData.tests.test_dx._test_write_dx",
  "gridData.tests.test_dx.tempdir",
  "gridData.tests.test_dx.test_read_dx",
  "gridData.tests.test_dx.test_write_dx_ValueError",
  "gridData.tests.test_dx.test_write_dx_byte",
  "gridData.tests.test_dx.test_write_dx_double_float64",
  "gridData.tests.test_dx.test_write_dx_float_float16",
  "gridData.tests.test_dx.test_write_dx_float_float32",
  "gridData.tests.test_dx.test_write_dx_int_int32",
  "gridData.tests.test_dx.test_write_dx_int_int64",
  "gridData.tests.test_dx.test_write_dx_short_int16",
  "gridData.tests.test_dx.test_write_dx_signed_byte",
  "gridData.tests.test_dx.test_write_dx_unsigned_int_uint32",
  "gridData.tests.test_dx.test_write_dx_unsigned_int_uint64",
  "gridData.tests.test_dx.test_write_dx_unsigned_short_uint16",
  "gridData.tests.test_grid",
  "gridData.tests.test_grid.Grid",
  "gridData.tests.test_grid.TestGrid",
  "gridData.tests.test_grid.module_not_found"
 ]
}