{
 "errors": {
  "pymunk.tests.test_bb": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/unittest/case.py')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 424, in _complete_inherited",
    "    next(filters)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 206, in get_filters",
    "    metaclasses = self.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 394, in get_metaclasses",
    "    for value in lazy_base.infer():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 79, in py__getattribute__",
    "    names = self.goto(name_or_str, name_context, analysis_errors)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 68, in goto",
    "    names = finder.filter_name(filters, name_or_str)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/finder.py\", line 35, in filter_name",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 58, in _get_value_filters",
    "    yield from self.get_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/stub_value.py\", line 45, in get_filters",
    "    stub_filters = self._get_stub_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/stub_value.py\", line 40, in _get_stub_filters",
    "    )] + list(self.iter_star_filters())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 99, in iter_star_filters",
    "    for star_module in self.star_imports():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 119, in star_imports",
    "    level=i.level",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 456, in import_module",
    "    is_package=is_pkg,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 472, in _load_python_module",
    "    cache_path=settings.cache_directory,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "pymunk.tests.test_shape_filter": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/unittest/case.py')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 424, in _complete_inherited",
    "    next(filters)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 206, in get_filters",
    "    metaclasses = self.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 394, in get_metaclasses",
    "    for value in lazy_base.infer():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 79, in py__getattribute__",
    "    names = self.goto(name_or_str, name_context, analysis_errors)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 68, in goto",
    "    names = finder.filter_name(filters, name_or_str)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/finder.py\", line 35, in filter_name",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 58, in _get_value_filters",
    "    yield from self.get_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/stub_value.py\", line 45, in get_filters",
    "    stub_filters = self._get_stub_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/stub_value.py\", line 40, in _get_stub_filters",
    "    )] + list(self.iter_star_filters())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 99, in iter_star_filters",
    "    for star_module in self.star_imports():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/module.py\", line 119, in star_imports",
    "    level=i.level",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 456, in import_module",
    "    is_package=is_pkg,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 472, in _load_python_module",
    "    cache_path=settings.cache_directory,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "pymunk.Arbiter",
  "pymunk.BB",
  "pymunk.Body",
  "pymunk.Circle",
  "pymunk.CollisionHandler",
  "pymunk.Constraint",
  "pymunk.ContactPoint",
  "pymunk.DampedRotarySpring",
  "pymunk.DampedSpring",
  "pymunk.GearJoint",
  "pymunk.GrooveJoint",
  "pymunk.PinJoint",
  "pymunk.PivotJoint",
  "pymunk.PointQueryInfo",
  "pymunk.Poly",
  "pymunk.RatchetJoint",
  "pymunk.RotaryLimitJoint",
  "pymunk.Segment",
  "pymunk.Shape",
  "pymunk.SimpleMotor",
  "pymunk.SlideJoint",
  "pymunk.Space",
  "pymunk.Transform",
  "pymunk.Vec2d",
  "pymunk.__all__",
  "pymunk.__docformat__",
  "pymunk._chipmunk_cffi",
  "pymunk._chipmunk_cffi.ffi",
  "pymunk._chipmunk_cffi.lib",
  "pymunk._chipmunk_cffi.lib_path",
  "pymunk._chipmunk_cffi_abi",
  "pymunk._chipmunk_cffi_abi._lib_debug",
  "pymunk._chipmunk_cffi_abi.ffi",
  "pymunk._chipmunk_cffi_abi.h",
  "pymunk._chipmunk_cffi_abi.lib",
  "pymunk._chipmunk_cffi_abi.lib_path",
  "pymunk._libload",
  "pymunk._libload.load_library",
  "pymunk._pickle",
  "pymunk._pickle.PickleMixin",
  "pymunk.arbiter",
  "pymunk.arbiter.Arbiter",
  "pymunk.arbiter.__docformat__",
  "pymunk.arbiter.cp",
  "pymunk.arbiter.ffi",
  "pymunk.area_for_circle",
  "pymunk.area_for_poly",
  "pymunk.area_for_segment",
  "pymunk.autogeometry",
  "pymunk.autogeometry.PolylineSet",
  "pymunk.autogeometry.__all__",
  "pymunk.autogeometry.__docformat__",
  "pymunk.autogeometry._from_polyline_set",
  "pymunk.autogeometry._to_chipmunk",
  "pymunk.autogeometry.convex_decomposition",
  "pymunk.autogeometry.is_closed",
  "pymunk.autogeometry.march_hard",
  "pymunk.autogeometry.march_soft",
  "pymunk.autogeometry.simplify_curves",
  "pymunk.autogeometry.simplify_vertexes",
  "pymunk.autogeometry.to_convex_hull",
  "pymunk.bb",
  "pymunk.bb.BB",
  "pymunk.bb.__docformat__",
  "pymunk.bb.ffi",
  "pymunk.bb.lib",
  "pymunk.body",
  "pymunk.body.Body",
  "pymunk.body.__docformat__",
  "pymunk.body.cp",
  "pymunk.body.ffi",
  "pymunk.chipmunk_path",
  "pymunk.chipmunk_version",
  "pymunk.collision_handler",
  "pymunk.collision_handler.CollisionHandler",
  "pymunk.collision_handler.__docformat__",
  "pymunk.collision_handler.__version__",
  "pymunk.collision_handler.cp",
  "pymunk.collision_handler.ffi",
  "pymunk.constraint",
  "pymunk.constraint.Constraint",
  "pymunk.constraint.DampedRotarySpring",
  "pymunk.constraint.DampedSpring",
  "pymunk.constraint.GearJoint",
  "pymunk.constraint.GrooveJoint",
  "pymunk.constraint.PinJoint",
  "pymunk.constraint.PivotJoint",
  "pymunk.constraint.RatchetJoint",
  "pymunk.constraint.RotaryLimitJoint",
  "pymunk.constraint.SimpleMotor",
  "pymunk.constraint.SlideJoint",
  "pymunk.constraint.__all__",
  "pymunk.constraint.__docformat__",
  "pymunk.constraint.cp",
  "pymunk.constraint.ffi",
  "pymunk.contact_point_set",
  "pymunk.contact_point_set.ContactPoint",
  "pymunk.contact_point_set.__docformat__",
  "pymunk.cp",
  "pymunk.ffi",
  "pymunk.inf",
  "pymunk.matplotlib_util",
  "pymunk.matplotlib_util.DRAW_COLLISION_POINTS",
  "pymunk.matplotlib_util.DRAW_CONSTRAINTS",
  "pymunk.matplotlib_util.DRAW_SHAPES",
  "pymunk.matplotlib_util.DrawOptions",
  "pymunk.matplotlib_util.Vec2d",
  "pymunk.matplotlib_util.__all__",
  "pymunk.matplotlib_util.__docformat__",
  "pymunk.matplotlib_util.collision_point_color",
  "pymunk.matplotlib_util.constraint_color",
  "pymunk.matplotlib_util.flags",
  "pymunk.matplotlib_util.shape_dynamic_color",
  "pymunk.matplotlib_util.shape_kinematic_color",
  "pymunk.matplotlib_util.shape_outline_color",
  "pymunk.matplotlib_util.shape_sleeping_color",
  "pymunk.matplotlib_util.shape_static_color",
  "pymunk.moment_for_box",
  "pymunk.moment_for_circle",
  "pymunk.moment_for_poly",
  "pymunk.moment_for_segment",
  "pymunk.pygame_util",
  "pymunk.pygame_util.DrawOptions",
  "pymunk.pygame_util.Vec2d",
  "pymunk.pygame_util.__all__",
  "pymunk.pygame_util.__docformat__",
  "pymunk.pygame_util._rndint",
  "pymunk.pygame_util.from_pygame",
  "pymunk.pygame_util.get_mouse_pos",
  "pymunk.pygame_util.positive_y_is_up",
  "pymunk.pygame_util.to_pygame",
  "pymunk.pyglet_util",
  "pymunk.query_info",
  "pymunk.query_info.PointQueryInfo",
  "pymunk.query_info.SegmentQueryInfo",
  "pymunk.query_info.ShapeQueryInfo",
  "pymunk.query_info.__docformat__",
  "pymunk.shape_filter",
  "pymunk.shape_filter.ShapeFilter.__new__.self",
  "pymunk.shape_filter.self",
  "pymunk.shapes",
  "pymunk.shapes.Circle",
  "pymunk.shapes.Poly",
  "pymunk.shapes.Segment",
  "pymunk.shapes.Shape",
  "pymunk.shapes.__docformat__",
  "pymunk.shapes.cp",
  "pymunk.shapes.ffi",
  "pymunk.space",
  "pymunk.space.Constraint",
  "pymunk.space.Space",
  "pymunk.space.__docformat__",
  "pymunk.space.cp",
  "pymunk.space.ffi",
  "pymunk.space_debug_draw_options",
  "pymunk.space_debug_draw_options.SpaceDebugColor",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.DRAW_COLLISION_POINTS",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.DRAW_CONSTRAINTS",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.DRAW_SHAPES",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.collision_point_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.constraint_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.flags",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.shape_dynamic_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.shape_kinematic_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.shape_outline_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.shape_sleeping_color",
  "pymunk.space_debug_draw_options.SpaceDebugDrawOptions.shape_static_color",
  "pymunk.space_debug_draw_options.__docformat__",
  "pymunk.tests",
  "pymunk.tests.doctests.load_tests",
  "pymunk.tests.doctests.res",
  "pymunk.tests.doctests.suite",
  "pymunk.tests.test_body.UnitTestBody",
  "pymunk.tests.test_body.Vec2d",
  "pymunk.tests.test_body.pf",
  "pymunk.tests.test_body.vf",
  "pymunk.tests.test_common.UnitTestBugs",
  "pymunk.tests.test_common.UnitTestGeneral",
  "pymunk.tests.test_common.Vec2d",
  "pymunk.tests.test_constraint.UnitTestConstraint",
  "pymunk.tests.test_constraint.UnitTestDampedRotarySpring",
  "pymunk.tests.test_constraint.UnitTestDampedSpring",
  "pymunk.tests.test_constraint.UnitTestGearJoint",
  "pymunk.tests.test_constraint.UnitTestGrooveJoint",
  "pymunk.tests.test_constraint.UnitTestPinJoint",
  "pymunk.tests.test_constraint.UnitTestPivotJoint",
  "pymunk.tests.test_constraint.UnitTestRatchetJoint",
  "pymunk.tests.test_constraint.UnitTestRotaryLimitJoint",
  "pymunk.tests.test_constraint.UnitTestSimleMotor",
  "pymunk.tests.test_constraint.UnitTestSlideJoint",
  "pymunk.tests.test_constraint.Vec2d",
  "pymunk.tests.test_shape.UnitTestCircle",
  "pymunk.tests.test_shape.UnitTestPoly",
  "pymunk.tests.test_shape.UnitTestSegment",
  "pymunk.tests.test_shape.UnitTestShape",
  "pymunk.tests.test_shape.Vec2d",
  "pymunk.tests.test_space.Arbiter",
  "pymunk.tests.test_space.BB",
  "pymunk.tests.test_space.Body",
  "pymunk.tests.test_space.Circle",
  "pymunk.tests.test_space.CollisionHandler",
  "pymunk.tests.test_space.Constraint",
  "pymunk.tests.test_space.ContactPoint",
  "pymunk.tests.test_space.DampedRotarySpring",
  "pymunk.tests.test_space.DampedSpring",
  "pymunk.tests.test_space.GearJoint",
  "pymunk.tests.test_space.GrooveJoint",
  "pymunk.tests.test_space.PinJoint",
  "pymunk.tests.test_space.PivotJoint",
  "pymunk.tests.test_space.PointQueryInfo",
  "pymunk.tests.test_space.Poly",
  "pymunk.tests.test_space.RatchetJoint",
  "pymunk.tests.test_space.RotaryLimitJoint",
  "pymunk.tests.test_space.Segment",
  "pymunk.tests.test_space.Shape",
  "pymunk.tests.test_space.SimpleMotor",
  "pymunk.tests.test_space.SlideJoint",
  "pymunk.tests.test_space.Space",
  "pymunk.tests.test_space.Transform",
  "pymunk.tests.test_space.UnitTestSpace",
  "pymunk.tests.test_space.Vec2d",
  "pymunk.tests.test_space.__all__",
  "pymunk.tests.test_space.__docformat__",
  "pymunk.tests.test_space.area_for_circle",
  "pymunk.tests.test_space.area_for_poly",
  "pymunk.tests.test_space.area_for_segment",
  "pymunk.tests.test_space.chipmunk_path",
  "pymunk.tests.test_space.chipmunk_version",
  "pymunk.tests.test_space.cp",
  "pymunk.tests.test_space.f1",
  "pymunk.tests.test_space.ffi",
  "pymunk.tests.test_space.inf",
  "pymunk.tests.test_space.moment_for_box",
  "pymunk.tests.test_space.moment_for_circle",
  "pymunk.tests.test_space.moment_for_poly",
  "pymunk.tests.test_space.moment_for_segment",
  "pymunk.tests.test_space.version",
  "pymunk.tests.test_transform.UnitTestTransform",
  "pymunk.tests.test_transform.Vec2d",
  "pymunk.transform",
  "pymunk.transform.Transform",
  "pymunk.util",
  "pymunk.util.X",
  "pymunk.util.Y",
  "pymunk.util.__all__",
  "pymunk.util.__docformat__",
  "pymunk.util._attempt_reduction",
  "pymunk.util._cmp_to_key",
  "pymunk.util._get_ear",
  "pymunk.util._is_corner",
  "pymunk.util._point_in_triangle",
  "pymunk.util._reduce_hulls",
  "pymunk.util.calc_area",
  "pymunk.util.calc_center",
  "pymunk.util.calc_perimeter",
  "pymunk.util.convex_hull",
  "pymunk.util.convexise",
  "pymunk.util.is_clockwise",
  "pymunk.util.is_convex",
  "pymunk.util.is_left",
  "pymunk.util.partial",
  "pymunk.util.poly_vectors_around_center",
  "pymunk.util.reduce_poly",
  "pymunk.util.sign",
  "pymunk.util.triangulate",
  "pymunk.vec2d",
  "pymunk.vec2d.Vec2d",
  "pymunk.vec2d.__all__",
  "pymunk.vec2d.__docformat__",
  "pymunk.version",
  "pymunkoptions.__docformat__",
  "pymunkoptions.__version__",
  "pymunkoptions.options"
 ]
}