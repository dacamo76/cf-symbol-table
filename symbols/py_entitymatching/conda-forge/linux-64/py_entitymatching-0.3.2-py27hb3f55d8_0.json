{
 "errors": {},
 "symbols": [
  "benchmarks.benchmark_attr_equiv_blocker",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockCandsetAnime",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockCandsetBikes",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockCandsetBooks",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesAnime",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesBikes",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesBooks",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesCitations",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesElectronics",
  "benchmarks.benchmark_attr_equiv_blocker.TimeBlockTablesRestaurants",
  "benchmarks.benchmark_attr_equiv_blocker.ab",
  "benchmarks.benchmark_attr_equiv_blocker.datasets_path",
  "benchmarks.benchmark_attr_equiv_blocker.p",
  "benchmarks.benchmark_blackbox_blocker",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockCandsetBikes",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockCandsetElectronics",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockCandsetRestaurants",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockTablesBeer",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockTablesBikes",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockTablesElectronics",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockTablesMusic",
  "benchmarks.benchmark_blackbox_blocker.TimeBlockTablesRestaurants",
  "benchmarks.benchmark_blackbox_blocker._beer_function",
  "benchmarks.benchmark_blackbox_blocker._bikes_function",
  "benchmarks.benchmark_blackbox_blocker._electronics_function",
  "benchmarks.benchmark_blackbox_blocker._music_function",
  "benchmarks.benchmark_blackbox_blocker._restaurants_function",
  "benchmarks.benchmark_blackbox_blocker.ab",
  "benchmarks.benchmark_blackbox_blocker.bb",
  "benchmarks.benchmark_blackbox_blocker.datasets_path",
  "benchmarks.benchmark_blackbox_blocker.ob",
  "benchmarks.benchmark_blackbox_blocker.p",
  "benchmarks.benchmark_debugblocker",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingAnime",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingBeer",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingBikes",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingBooks",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingCitations",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingCosmetics",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingEbooks",
  "benchmarks.benchmark_debugblocker.TimeDebugBlockingElectronics",
  "benchmarks.benchmark_debugblocker.ab",
  "benchmarks.benchmark_debugblocker.datasets_path",
  "benchmarks.benchmark_debugblocker.p",
  "benchmarks.benchmark_down_sample_sampler",
  "benchmarks.benchmark_down_sample_sampler.TimeDownSampleCitation2.setup.y_param",
  "benchmarks.benchmark_down_sample_sampler.y_param",
  "benchmarks.benchmark_overlap_blocker",
  "benchmarks.benchmark_overlap_blocker.TimeBlockCandsetEbooks",
  "benchmarks.benchmark_overlap_blocker.TimeBlockCandsetMusic",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesBeer",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesBooks",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesCitations",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesEbooks",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesMusic",
  "benchmarks.benchmark_overlap_blocker.TimeBlockTablesRestaurants",
  "benchmarks.benchmark_overlap_blocker.datasets_path",
  "benchmarks.benchmark_overlap_blocker.ob",
  "benchmarks.benchmark_overlap_blocker.p",
  "benchmarks.benchmark_rule_based_blocker",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockCandsetEbooks",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockCandsetRestaurants",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockTablesAnime",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockTablesBooks",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockTablesElectronics",
  "benchmarks.benchmark_rule_based_blocker.TimeBlockTablesMovies",
  "benchmarks.benchmark_rule_based_blocker.datasets_path",
  "benchmarks.benchmark_rule_based_blocker.p",
  "benchmarks.benchmark_sn_blocker",
  "benchmarks.benchmark_sn_blocker.TimeBlockCandsetAnime",
  "benchmarks.benchmark_sn_blocker.TimeBlockCandsetBikes",
  "benchmarks.benchmark_sn_blocker.TimeBlockCandsetBooks",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesAnime",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesBikes",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesBooks",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesCitations",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesElectronics",
  "benchmarks.benchmark_sn_blocker.TimeBlockTablesRestaurants",
  "benchmarks.benchmark_sn_blocker.datasets_path",
  "benchmarks.benchmark_sn_blocker.p",
  "benchmarks.benchmark_sn_blocker.snb",
  "py_entitymatching.AttrEquivalenceBlocker",
  "py_entitymatching.BlackBoxBlocker",
  "py_entitymatching.BooleanRuleMatcher",
  "py_entitymatching.Catalog",
  "py_entitymatching.DTMatcher",
  "py_entitymatching.LinRegMatcher",
  "py_entitymatching.LogRegMatcher",
  "py_entitymatching.MatchTrigger",
  "py_entitymatching.NBMatcher",
  "py_entitymatching.OverlapBlocker",
  "py_entitymatching.RFMatcher",
  "py_entitymatching.RuleBasedBlocker",
  "py_entitymatching.SVMMatcher",
  "py_entitymatching.SortedNeighborhoodBlocker",
  "py_entitymatching.XGBoostMatcher",
  "py_entitymatching.__version__",
  "py_entitymatching._atypes1",
  "py_entitymatching._atypes2",
  "py_entitymatching._block_c",
  "py_entitymatching._block_s",
  "py_entitymatching._block_t",
  "py_entitymatching._catalog",
  "py_entitymatching._get_single_arg_tokenizers",
  "py_entitymatching._global_sim_fns",
  "py_entitymatching._global_tokenizers",
  "py_entitymatching._make_tok_delim",
  "py_entitymatching._make_tok_qgram",
  "py_entitymatching._match_c",
  "py_entitymatching._match_s",
  "py_entitymatching._match_t",
  "py_entitymatching._viewapp",
  "py_entitymatching.abbreviations",
  "py_entitymatching.abs_norm",
  "py_entitymatching.add_blackbox_feature",
  "py_entitymatching.add_feature",
  "py_entitymatching.add_output_attributes",
  "py_entitymatching.affine",
  "py_entitymatching.backup_debug_blocker",
  "py_entitymatching.blocker",
  "py_entitymatching.blocker.attr_equiv_blocker",
  "py_entitymatching.blocker.attr_equiv_blocker.AttrEquivalenceBlocker",
  "py_entitymatching.blocker.attr_equiv_blocker.Blocker",
  "py_entitymatching.blocker.attr_equiv_blocker._block_candset_split",
  "py_entitymatching.blocker.attr_equiv_blocker._block_tables_split",
  "py_entitymatching.blocker.attr_equiv_blocker._final_names",
  "py_entitymatching.blocker.attr_equiv_blocker._output_columns",
  "py_entitymatching.blocker.attr_equiv_blocker._retain_names",
  "py_entitymatching.blocker.attr_equiv_blocker.add_key_column",
  "py_entitymatching.blocker.attr_equiv_blocker.catalog_manager",
  "py_entitymatching.blocker.attr_equiv_blocker.get_name_for_key",
  "py_entitymatching.blocker.attr_equiv_blocker.log_info",
  "py_entitymatching.blocker.attr_equiv_blocker.logger",
  "py_entitymatching.blocker.attr_equiv_blocker.rem_nan",
  "py_entitymatching.blocker.attr_equiv_blocker.validate_object_type",
  "py_entitymatching.blocker.black_box_blocker",
  "py_entitymatching.blocker.black_box_blocker.BlackBoxBlocker",
  "py_entitymatching.blocker.black_box_blocker.Blocker",
  "py_entitymatching.blocker.black_box_blocker._block_candset_split",
  "py_entitymatching.blocker.black_box_blocker._block_tables_split",
  "py_entitymatching.blocker.black_box_blocker.add_key_column",
  "py_entitymatching.blocker.black_box_blocker.catalog_manager",
  "py_entitymatching.blocker.black_box_blocker.get_name_for_key",
  "py_entitymatching.blocker.black_box_blocker.log_info",
  "py_entitymatching.blocker.black_box_blocker.logger",
  "py_entitymatching.blocker.blocker",
  "py_entitymatching.blocker.blocker.Blocker",
  "py_entitymatching.blocker.blocker.logger",
  "py_entitymatching.blocker.blocker.validate_object_type",
  "py_entitymatching.blocker.overlap_blocker",
  "py_entitymatching.blocker.overlap_blocker.Blocker",
  "py_entitymatching.blocker.overlap_blocker.OverlapBlocker",
  "py_entitymatching.blocker.overlap_blocker.add_key_column",
  "py_entitymatching.blocker.overlap_blocker.catalog_manager",
  "py_entitymatching.blocker.overlap_blocker.get_name_for_key",
  "py_entitymatching.blocker.overlap_blocker.log_info",
  "py_entitymatching.blocker.overlap_blocker.logger",
  "py_entitymatching.blocker.overlap_blocker.remove_non_ascii",
  "py_entitymatching.blocker.overlap_blocker.validate_object_type",
  "py_entitymatching.blocker.rule_based_blocker",
  "py_entitymatching.blocker.rule_based_blocker.Blocker",
  "py_entitymatching.blocker.rule_based_blocker.RuleBasedBlocker",
  "py_entitymatching.blocker.rule_based_blocker._block_candset_excluding_rule_split",
  "py_entitymatching.blocker.rule_based_blocker._block_tables_split",
  "py_entitymatching.blocker.rule_based_blocker.add_key_column",
  "py_entitymatching.blocker.rule_based_blocker.catalog_manager",
  "py_entitymatching.blocker.rule_based_blocker.get_name_for_key",
  "py_entitymatching.blocker.rule_based_blocker.log_info",
  "py_entitymatching.blocker.rule_based_blocker.logger",
  "py_entitymatching.blocker.rule_based_blocker.parse_conjunct",
  "py_entitymatching.blocker.sn_blocker",
  "py_entitymatching.blocker.sn_blocker.Blocker",
  "py_entitymatching.blocker.sn_blocker.SortedNeighborhoodBlocker",
  "py_entitymatching.blocker.sn_blocker._final_names",
  "py_entitymatching.blocker.sn_blocker._gen_iter_merge",
  "py_entitymatching.blocker.sn_blocker._get_attrs_to_project",
  "py_entitymatching.blocker.sn_blocker._output_columns",
  "py_entitymatching.blocker.sn_blocker._prefix_columns",
  "py_entitymatching.blocker.sn_blocker._retain_names",
  "py_entitymatching.blocker.sn_blocker._sn_block_tables_split",
  "py_entitymatching.blocker.sn_blocker.add_key_column",
  "py_entitymatching.blocker.sn_blocker.catalog_manager",
  "py_entitymatching.blocker.sn_blocker.get_name_for_key",
  "py_entitymatching.blocker.sn_blocker.log_info",
  "py_entitymatching.blocker.sn_blocker.logger",
  "py_entitymatching.blocker.sn_blocker.rem_nan",
  "py_entitymatching.blockercombiner",
  "py_entitymatching.blockercombiner.blockercombiner",
  "py_entitymatching.blockercombiner.blockercombiner._get_col",
  "py_entitymatching.blockercombiner.blockercombiner._lr_cols",
  "py_entitymatching.blockercombiner.blockercombiner._validate_lr_tables",
  "py_entitymatching.blockercombiner.blockercombiner.catalog_helper",
  "py_entitymatching.blockercombiner.blockercombiner.catalog_manager",
  "py_entitymatching.blockercombiner.blockercombiner.combine_blocker_outputs_via_union",
  "py_entitymatching.blockercombiner.blockercombiner.generic_helper",
  "py_entitymatching.blockercombiner.blockercombiner.logger",
  "py_entitymatching.catalog",
  "py_entitymatching.catalog.catalog",
  "py_entitymatching.catalog.catalog.Catalog",
  "py_entitymatching.catalog.catalog.Singleton",
  "py_entitymatching.catalog.catalog.logger",
  "py_entitymatching.catalog.catalog_manager",
  "py_entitymatching.catalog.catalog_manager.Catalog",
  "py_entitymatching.catalog.catalog_manager._validate_metadata_for_candset",
  "py_entitymatching.catalog.catalog_manager._validate_metadata_for_table",
  "py_entitymatching.catalog.catalog_manager.catalog_helper",
  "py_entitymatching.catalog.catalog_manager.copy_properties",
  "py_entitymatching.catalog.catalog_manager.del_all_properties",
  "py_entitymatching.catalog.catalog_manager.del_catalog",
  "py_entitymatching.catalog.catalog_manager.del_property",
  "py_entitymatching.catalog.catalog_manager.get_all_properties",
  "py_entitymatching.catalog.catalog_manager.get_catalog",
  "py_entitymatching.catalog.catalog_manager.get_fk_ltable",
  "py_entitymatching.catalog.catalog_manager.get_fk_rtable",
  "py_entitymatching.catalog.catalog_manager.get_key",
  "py_entitymatching.catalog.catalog_manager.get_ltable",
  "py_entitymatching.catalog.catalog_manager.get_metadata_for_candset",
  "py_entitymatching.catalog.catalog_manager.get_property",
  "py_entitymatching.catalog.catalog_manager.get_rtable",
  "py_entitymatching.catalog.catalog_manager.init_properties",
  "py_entitymatching.catalog.catalog_manager.is_catalog_empty",
  "py_entitymatching.catalog.catalog_manager.is_dfinfo_present",
  "py_entitymatching.catalog.catalog_manager.is_property_present_for_df",
  "py_entitymatching.catalog.catalog_manager.logger",
  "py_entitymatching.catalog.catalog_manager.set_candset_properties",
  "py_entitymatching.catalog.catalog_manager.set_fk_ltable",
  "py_entitymatching.catalog.catalog_manager.set_fk_rtable",
  "py_entitymatching.catalog.catalog_manager.set_key",
  "py_entitymatching.catalog.catalog_manager.set_ltable",
  "py_entitymatching.catalog.catalog_manager.set_properties",
  "py_entitymatching.catalog.catalog_manager.set_property",
  "py_entitymatching.catalog.catalog_manager.set_rtable",
  "py_entitymatching.catalog.catalog_manager.show_properties",
  "py_entitymatching.catalog.catalog_manager.validate_and_set_fk_ltable",
  "py_entitymatching.catalog.catalog_manager.validate_and_set_fk_rtable",
  "py_entitymatching.catalog.catalog_manager.validate_object_type",
  "py_entitymatching.combine_blocker_outputs_via_union",
  "py_entitymatching.copy_properties",
  "py_entitymatching.cosine",
  "py_entitymatching.create_feature_table",
  "py_entitymatching.dask",
  "py_entitymatching.dask.dask_attr_equiv_blocker",
  "py_entitymatching.dask.dask_attr_equiv_blocker.Blocker",
  "py_entitymatching.dask.dask_attr_equiv_blocker.DaskAttrEquivalenceBlocker",
  "py_entitymatching.dask.dask_attr_equiv_blocker._block_candset_split",
  "py_entitymatching.dask.dask_attr_equiv_blocker._block_tables_split",
  "py_entitymatching.dask.dask_attr_equiv_blocker._final_names",
  "py_entitymatching.dask.dask_attr_equiv_blocker._output_columns",
  "py_entitymatching.dask.dask_attr_equiv_blocker._retain_names",
  "py_entitymatching.dask.dask_attr_equiv_blocker.add_key_column",
  "py_entitymatching.dask.dask_attr_equiv_blocker.catalog_manager",
  "py_entitymatching.dask.dask_attr_equiv_blocker.get_name_for_key",
  "py_entitymatching.dask.dask_attr_equiv_blocker.get_num_cores",
  "py_entitymatching.dask.dask_attr_equiv_blocker.get_num_partitions",
  "py_entitymatching.dask.dask_attr_equiv_blocker.log_info",
  "py_entitymatching.dask.dask_attr_equiv_blocker.logger",
  "py_entitymatching.dask.dask_attr_equiv_blocker.rem_nan",
  "py_entitymatching.dask.dask_attr_equiv_blocker.validate_chunks",
  "py_entitymatching.dask.dask_attr_equiv_blocker.validate_object_type",
  "py_entitymatching.dask.dask_attr_equiv_blocker.wrap",
  "py_entitymatching.dask.dask_black_box_blocker",
  "py_entitymatching.dask.dask_black_box_blocker._block_candset_split.valid",
  "py_entitymatching.dask.dask_black_box_blocker.valid",
  "py_entitymatching.dask.dask_black_box_blocker.validate_chunks",
  "py_entitymatching.dask.dask_black_box_blocker.validate_object_type",
  "py_entitymatching.dask.dask_down_sample",
  "py_entitymatching.dask.dask_down_sample._get_stop_words",
  "py_entitymatching.dask.dask_down_sample._get_str_cols_list",
  "py_entitymatching.dask.dask_down_sample.build_inverted_index",
  "py_entitymatching.dask.dask_down_sample.catalog_manager",
  "py_entitymatching.dask.dask_down_sample.dask_down_sample",
  "py_entitymatching.dask.dask_down_sample.get_install_path",
  "py_entitymatching.dask.dask_down_sample.get_num_cores",
  "py_entitymatching.dask.dask_down_sample.logger",
  "py_entitymatching.dask.dask_down_sample.probe",
  "py_entitymatching.dask.dask_down_sample.process_tokenize_concat_strings",
  "py_entitymatching.dask.dask_down_sample.regex",
  "py_entitymatching.dask.dask_down_sample.remove_punctuations",
  "py_entitymatching.dask.dask_down_sample.sample_right_table",
  "py_entitymatching.dask.dask_down_sample.validate_object_type",
  "py_entitymatching.dask.dask_down_sample.wrap",
  "py_entitymatching.dask.dask_dtmatcher",
  "py_entitymatching.dask.dask_extract_features",
  "py_entitymatching.dask.dask_extract_features.catalog_helper",
  "py_entitymatching.dask.dask_extract_features.catalog_manager",
  "py_entitymatching.dask.dask_extract_features.dask_extract_feature_vecs",
  "py_entitymatching.dask.dask_extract_features.generic_helper",
  "py_entitymatching.dask.dask_extract_features.get_feature_vals_by_cand_split",
  "py_entitymatching.dask.dask_extract_features.get_num_cores",
  "py_entitymatching.dask.dask_extract_features.get_num_partitions",
  "py_entitymatching.dask.dask_extract_features.logger",
  "py_entitymatching.dask.dask_extract_features.validate_chunks",
  "py_entitymatching.dask.dask_extract_features.validate_object_type",
  "py_entitymatching.dask.dask_extract_features.wrap",
  "py_entitymatching.dask.dask_logregmatcher",
  "py_entitymatching.dask.dask_nbmatcher",
  "py_entitymatching.dask.dask_overlap_blocker",
  "py_entitymatching.dask.dask_overlap_blocker.Blocker",
  "py_entitymatching.dask.dask_overlap_blocker.DaskOverlapBlocker",
  "py_entitymatching.dask.dask_overlap_blocker.add_key_column",
  "py_entitymatching.dask.dask_overlap_blocker.catalog_manager",
  "py_entitymatching.dask.dask_overlap_blocker.generic_helper",
  "py_entitymatching.dask.dask_overlap_blocker.get_name_for_key",
  "py_entitymatching.dask.dask_overlap_blocker.get_num_cores",
  "py_entitymatching.dask.dask_overlap_blocker.get_num_partitions",
  "py_entitymatching.dask.dask_overlap_blocker.log_info",
  "py_entitymatching.dask.dask_overlap_blocker.logger",
  "py_entitymatching.dask.dask_overlap_blocker.validate_chunks",
  "py_entitymatching.dask.dask_overlap_blocker.validate_object_type",
  "py_entitymatching.dask.dask_overlap_blocker.wrap",
  "py_entitymatching.dask.dask_rfmatcher",
  "py_entitymatching.dask.dask_rule_based_blocker",
  "py_entitymatching.dask.dask_rule_based_blocker.Blocker",
  "py_entitymatching.dask.dask_rule_based_blocker.DaskRuleBasedBlocker",
  "py_entitymatching.dask.dask_rule_based_blocker._block_candset_excluding_rule_split",
  "py_entitymatching.dask.dask_rule_based_blocker._block_tables_split",
  "py_entitymatching.dask.dask_rule_based_blocker.add_key_column",
  "py_entitymatching.dask.dask_rule_based_blocker.catalog_manager",
  "py_entitymatching.dask.dask_rule_based_blocker.get_name_for_key",
  "py_entitymatching.dask.dask_rule_based_blocker.get_num_cores",
  "py_entitymatching.dask.dask_rule_based_blocker.get_num_partitions",
  "py_entitymatching.dask.dask_rule_based_blocker.log_info",
  "py_entitymatching.dask.dask_rule_based_blocker.logger",
  "py_entitymatching.dask.dask_rule_based_blocker.parse_conjunct",
  "py_entitymatching.dask.dask_rule_based_blocker.validate_chunks",
  "py_entitymatching.dask.dask_rule_based_blocker.validate_object_type",
  "py_entitymatching.dask.dask_rule_based_blocker.wrap",
  "py_entitymatching.dask.dask_svm_matcher",
  "py_entitymatching.dask.dask_xgboost_matcher",
  "py_entitymatching.dask.dask_xgboost_matcher.DaskMLMatcher",
  "py_entitymatching.dask.dask_xgboost_matcher.DaskXGBoostMatcher",
  "py_entitymatching.dask.dask_xgboost_matcher.get_ts",
  "py_entitymatching.dask.daskmlmatcher",
  "py_entitymatching.dask.daskmlmatcher.DaskMLMatcher",
  "py_entitymatching.dask.daskmlmatcher.DaskMLMatcher._get_data_for_sklearn.x",
  "py_entitymatching.dask.daskmlmatcher.x",
  "py_entitymatching.dask.utils",
  "py_entitymatching.dask.utils.get_num_cores",
  "py_entitymatching.dask.utils.get_num_partitions",
  "py_entitymatching.dask.utils.validate_chunks",
  "py_entitymatching.dask.utils.wrap",
  "py_entitymatching.data_explore_openrefine",
  "py_entitymatching.data_explore_pandastable",
  "py_entitymatching.datasets",
  "py_entitymatching.datasets.end-to-end.profiler.profile_table",
  "py_entitymatching.debug_blocker",
  "py_entitymatching.debug_decisiontree_matcher",
  "py_entitymatching.debug_randomforest_matcher",
  "py_entitymatching.debugblocker",
  "py_entitymatching.debugblocker.backup_debugblocker",
  "py_entitymatching.debugblocker.backup_debugblocker._assemble_topk_table",
  "py_entitymatching.debugblocker.backup_debugblocker._build_col_name_index_dict",
  "py_entitymatching.debugblocker.backup_debugblocker._build_global_token_order",
  "py_entitymatching.debugblocker.backup_debugblocker._calc_threshold",
  "py_entitymatching.debugblocker.backup_debugblocker._check_input_field_correspondence_list",
  "py_entitymatching.debugblocker.backup_debugblocker._filter_corres_list",
  "py_entitymatching.debugblocker.backup_debugblocker._generate_prefix_events",
  "py_entitymatching.debugblocker.backup_debugblocker._get_feature_weight",
  "py_entitymatching.debugblocker.backup_debugblocker._get_field_correspondence_list",
  "py_entitymatching.debugblocker.backup_debugblocker._get_filtered_table",
  "py_entitymatching.debugblocker.backup_debugblocker._get_record_id_to_index_map",
  "py_entitymatching.debugblocker.backup_debugblocker._get_tokenized_column",
  "py_entitymatching.debugblocker.backup_debugblocker._get_tokenized_table",
  "py_entitymatching.debugblocker.backup_debugblocker._index_candidate_set",
  "py_entitymatching.debugblocker.backup_debugblocker._jaccard_sim",
  "py_entitymatching.debugblocker.backup_debugblocker._replace_nan_to_empty",
  "py_entitymatching.debugblocker.backup_debugblocker._select_features",
  "py_entitymatching.debugblocker.backup_debugblocker._sort_record_tokens_by_global_order",
  "py_entitymatching.debugblocker.backup_debugblocker._topk_sim_join",
  "py_entitymatching.debugblocker.backup_debugblocker._validate_types",
  "py_entitymatching.debugblocker.backup_debugblocker.backup_debug_blocker",
  "py_entitymatching.debugblocker.backup_debugblocker.catalog_manager",
  "py_entitymatching.debugblocker.backup_debugblocker.logger",
  "py_entitymatching.debugblocker.backup_debugblocker.validate_object_type",
  "py_entitymatching.debugblocker.debugblocker",
  "py_entitymatching.debugblocker.debugblocker.SELECTED_FIELDS_UPPER_BOUND",
  "py_entitymatching.debugblocker.debugblocker._assemble_topk_table",
  "py_entitymatching.debugblocker.debugblocker._build_col_name_index_dict",
  "py_entitymatching.debugblocker.debugblocker._build_global_token_order",
  "py_entitymatching.debugblocker.debugblocker._build_id_to_index_map",
  "py_entitymatching.debugblocker.debugblocker._calc_table_field_length",
  "py_entitymatching.debugblocker.debugblocker._calc_table_field_token_sum",
  "py_entitymatching.debugblocker.debugblocker._check_input_field_correspondence_list",
  "py_entitymatching.debugblocker.debugblocker._filter_corres_list",
  "py_entitymatching.debugblocker.debugblocker._get_config_num",
  "py_entitymatching.debugblocker.debugblocker._get_feature_weight",
  "py_entitymatching.debugblocker.debugblocker._get_field_correspondence_list",
  "py_entitymatching.debugblocker.debugblocker._get_filtered_table",
  "py_entitymatching.debugblocker.debugblocker._get_tokenized_column",
  "py_entitymatching.debugblocker.debugblocker._get_tokenized_table",
  "py_entitymatching.debugblocker.debugblocker._index_candidate_set",
  "py_entitymatching.debugblocker.debugblocker._replace_nan_to_empty",
  "py_entitymatching.debugblocker.debugblocker._replace_token_with_numeric_index",
  "py_entitymatching.debugblocker.debugblocker._select_features",
  "py_entitymatching.debugblocker.debugblocker._sort_record_tokens_by_global_order",
  "py_entitymatching.debugblocker.debugblocker._split_record_token_and_index",
  "py_entitymatching.debugblocker.debugblocker._validate_types",
  "py_entitymatching.debugblocker.debugblocker.cand_set",
  "py_entitymatching.debugblocker.debugblocker.catalog_manager",
  "py_entitymatching.debugblocker.debugblocker.debug_blocker",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_config_cython",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_cython",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_cython_parallel",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_merge_topk_cython",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_topk_cython",
  "py_entitymatching.debugblocker.debugblocker.debugblocker_topk_cython_wrapper",
  "py_entitymatching.debugblocker.debugblocker.lkey",
  "py_entitymatching.debugblocker.debugblocker.logger",
  "py_entitymatching.debugblocker.debugblocker.ltable",
  "py_entitymatching.debugblocker.debugblocker.output_path",
  "py_entitymatching.debugblocker.debugblocker.output_size",
  "py_entitymatching.debugblocker.debugblocker.rkey",
  "py_entitymatching.debugblocker.debugblocker.rtable",
  "py_entitymatching.debugblocker.debugblocker.validate_object_type",
  "py_entitymatching.debugblocker.debugblocker_cython.debugblocker_config_cython",
  "py_entitymatching.debugblocker.debugblocker_cython.debugblocker_cython",
  "py_entitymatching.debugblocker.debugblocker_cython.debugblocker_merge_topk_cython",
  "py_entitymatching.debugblocker.debugblocker_cython.debugblocker_topk_cython",
  "py_entitymatching.debugmatcher",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.DTMatcher",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher._debug_decisiontree_matcher",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher._get_code",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher._get_dbg_fn",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher._get_prob",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.apply_feat_fns",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.debug_decisiontree_matcher",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.logger",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.validate_object_type",
  "py_entitymatching.debugmatcher.debug_decisiontree_matcher.visualize_tree",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.DTMatcher",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher._get_code_vis",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher._get_dataframe",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher._get_dbg_fn_vis",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher._get_metric",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher._vis_debug_dt",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.catalog_helper",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.eval_matches",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.generic_helper",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.get_name_for_predict_column",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.logger",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.validate_object_type",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.vis_debug_dt",
  "py_entitymatching.debugmatcher.debug_gui_decisiontree_matcher.vis_tuple_debug_dt_matcher",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.RFMatcher",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher._get_dataframe",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher._get_metric",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher._vis_debug_rf",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.check_attrs_present",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.get_name_for_predict_column",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.list_drop_duplicates",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.logger",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.validate_object_type",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.vis_debug_rf",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.vis_tuple_debug_dt_matcher",
  "py_entitymatching.debugmatcher.debug_gui_randomforest_matcher.vis_tuple_debug_rf_matcher",
  "py_entitymatching.debugmatcher.debug_gui_utils",
  "py_entitymatching.debugmatcher.debug_gui_utils._get_code_vis",
  "py_entitymatching.debugmatcher.debug_gui_utils._get_dataframe",
  "py_entitymatching.debugmatcher.debug_gui_utils._get_dbg_fn_vis",
  "py_entitymatching.debugmatcher.debug_gui_utils._get_metric",
  "py_entitymatching.debugmatcher.debug_gui_utils.catalog_manager",
  "py_entitymatching.debugmatcher.debug_gui_utils.get_name_for_predict_column",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher.RFMatcher",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher._debug_decisiontree_matcher",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher._get_prob",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher.debug_randomforest_matcher",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher.logger",
  "py_entitymatching.debugmatcher.debug_randomforest_matcher.validate_object_type",
  "py_entitymatching.del_all_properties",
  "py_entitymatching.del_catalog",
  "py_entitymatching.del_property",
  "py_entitymatching.dice",
  "py_entitymatching.down_sample",
  "py_entitymatching.drop_cols",
  "py_entitymatching.edit_table",
  "py_entitymatching.eval_matches",
  "py_entitymatching.evaluation",
  "py_entitymatching.evaluation.evaluation",
  "py_entitymatching.evaluation.evaluation._get_dataframe",
  "py_entitymatching.evaluation.evaluation._get_metric",
  "py_entitymatching.evaluation.evaluation.catalog_helper",
  "py_entitymatching.evaluation.evaluation.catalog_manager",
  "py_entitymatching.evaluation.evaluation.eval_matches",
  "py_entitymatching.evaluation.evaluation.get_false_negatives_as_df",
  "py_entitymatching.evaluation.evaluation.get_false_positives_as_df",
  "py_entitymatching.evaluation.evaluation.logger",
  "py_entitymatching.evaluation.evaluation.print_eval_summary",
  "py_entitymatching.evaluation.evaluation.validate_object_type",
  "py_entitymatching.exact_match",
  "py_entitymatching.experimental",
  "py_entitymatching.explorer",
  "py_entitymatching.explorer.openrefine",
  "py_entitymatching.explorer.openrefine.openrefine_wrapper",
  "py_entitymatching.explorer.openrefine.openrefine_wrapper.DataExploreOpenRefine",
  "py_entitymatching.explorer.openrefine.openrefine_wrapper.data_explore_openrefine",
  "py_entitymatching.explorer.openrefine.openrefine_wrapper.validate_object_type",
  "py_entitymatching.explorer.pandastable",
  "py_entitymatching.explorer.pandastable.pandastable_wrapper",
  "py_entitymatching.explorer.pandastable.pandastable_wrapper.DataExplorePandastable",
  "py_entitymatching.explorer.pandastable.pandastable_wrapper.data_explore_pandastable",
  "py_entitymatching.explorer.pandastable.pandastable_wrapper.e",
  "py_entitymatching.explorer.pandastable.pandastable_wrapper.validate_object_type",
  "py_entitymatching.extract_feature_vecs",
  "py_entitymatching.feature",
  "py_entitymatching.feature.addfeatures",
  "py_entitymatching.feature.addfeatures._parse_feat_str",
  "py_entitymatching.feature.addfeatures.add_blackbox_feature",
  "py_entitymatching.feature.addfeatures.add_feature",
  "py_entitymatching.feature.addfeatures.create_feature_table",
  "py_entitymatching.feature.addfeatures.get_feature_fn",
  "py_entitymatching.feature.addfeatures.get_missing_column_values",
  "py_entitymatching.feature.addfeatures.logger",
  "py_entitymatching.feature.addfeatures.validate_object_type",
  "py_entitymatching.feature.attributeutils",
  "py_entitymatching.feature.attributeutils._get_type",
  "py_entitymatching.feature.attributeutils._len_handle_nan",
  "py_entitymatching.feature.attributeutils.get_attr_corres",
  "py_entitymatching.feature.attributeutils.get_attr_types",
  "py_entitymatching.feature.attributeutils.logger",
  "py_entitymatching.feature.attributeutils.validate_object_type",
  "py_entitymatching.feature.autofeaturegen",
  "py_entitymatching.feature.autofeaturegen._check_table_order",
  "py_entitymatching.feature.autofeaturegen._conv_func_objs",
  "py_entitymatching.feature.autofeaturegen._get_feat_lkp_tbl",
  "py_entitymatching.feature.autofeaturegen._get_feature_name_lkp_tbl",
  "py_entitymatching.feature.autofeaturegen._get_features_for_type",
  "py_entitymatching.feature.autofeaturegen._get_readable_feature_name",
  "py_entitymatching.feature.autofeaturegen._get_readable_type_name",
  "py_entitymatching.feature.autofeaturegen._get_type_name_lkp_tbl",
  "py_entitymatching.feature.autofeaturegen.attributeutils",
  "py_entitymatching.feature.autofeaturegen.check_valid_tok_sim",
  "py_entitymatching.feature.autofeaturegen.conv_fn_str_to_obj",
  "py_entitymatching.feature.autofeaturegen.fill_fn_template",
  "py_entitymatching.feature.autofeaturegen.flatten_list",
  "py_entitymatching.feature.autofeaturegen.get_features",
  "py_entitymatching.feature.autofeaturegen.get_features_for_blocking",
  "py_entitymatching.feature.autofeaturegen.get_features_for_matching",
  "py_entitymatching.feature.autofeaturegen.get_fn_name",
  "py_entitymatching.feature.autofeaturegen.get_fn_str",
  "py_entitymatching.feature.autofeaturegen.get_magellan_str_types",
  "py_entitymatching.feature.autofeaturegen.logger",
  "py_entitymatching.feature.autofeaturegen.simfunctions",
  "py_entitymatching.feature.autofeaturegen.tokenizers",
  "py_entitymatching.feature.autofeaturegen.validate_attr_types",
  "py_entitymatching.feature.autofeaturegen.validate_object_type",
  "py_entitymatching.feature.extractfeatures",
  "py_entitymatching.feature.extractfeatures.apply_feat_fns",
  "py_entitymatching.feature.extractfeatures.catalog_helper",
  "py_entitymatching.feature.extractfeatures.catalog_manager",
  "py_entitymatching.feature.extractfeatures.extract_feature_vecs",
  "py_entitymatching.feature.extractfeatures.generic_helper",
  "py_entitymatching.feature.extractfeatures.get_feature_vals_by_cand_split",
  "py_entitymatching.feature.extractfeatures.get_num_procs",
  "py_entitymatching.feature.extractfeatures.load_object",
  "py_entitymatching.feature.extractfeatures.logger",
  "py_entitymatching.feature.extractfeatures.save_object",
  "py_entitymatching.feature.extractfeatures.validate_object_type",
  "py_entitymatching.feature.simfunctions",
  "py_entitymatching.feature.simfunctions._global_sim_fns",
  "py_entitymatching.feature.simfunctions.abbreviations",
  "py_entitymatching.feature.simfunctions.abs_norm",
  "py_entitymatching.feature.simfunctions.affine",
  "py_entitymatching.feature.simfunctions.cosine",
  "py_entitymatching.feature.simfunctions.dice",
  "py_entitymatching.feature.simfunctions.exact_match",
  "py_entitymatching.feature.simfunctions.generic_helper",
  "py_entitymatching.feature.simfunctions.get_sim_funs",
  "py_entitymatching.feature.simfunctions.get_sim_funs_for_blocking",
  "py_entitymatching.feature.simfunctions.get_sim_funs_for_matching",
  "py_entitymatching.feature.simfunctions.hamming_dist",
  "py_entitymatching.feature.simfunctions.hamming_sim",
  "py_entitymatching.feature.simfunctions.jaccard",
  "py_entitymatching.feature.simfunctions.jaro",
  "py_entitymatching.feature.simfunctions.lev_dist",
  "py_entitymatching.feature.simfunctions.lev_sim",
  "py_entitymatching.feature.simfunctions.monge_elkan",
  "py_entitymatching.feature.simfunctions.needleman_wunsch",
  "py_entitymatching.feature.simfunctions.overlap_coeff",
  "py_entitymatching.feature.simfunctions.rel_diff",
  "py_entitymatching.feature.simfunctions.sim_function_names",
  "py_entitymatching.feature.simfunctions.smith_waterman",
  "py_entitymatching.feature.tokenizers",
  "py_entitymatching.feature.tokenizers._get_single_arg_tokenizers",
  "py_entitymatching.feature.tokenizers._global_tokenizers",
  "py_entitymatching.feature.tokenizers._make_tok_delim",
  "py_entitymatching.feature.tokenizers._make_tok_qgram",
  "py_entitymatching.feature.tokenizers.generic_helper",
  "py_entitymatching.feature.tokenizers.get_tokenizers_for_blocking",
  "py_entitymatching.feature.tokenizers.get_tokenizers_for_matching",
  "py_entitymatching.feature.tokenizers.logger",
  "py_entitymatching.feature.tokenizers.tok_alphabetic",
  "py_entitymatching.feature.tokenizers.tok_alphanumeric",
  "py_entitymatching.feature.tokenizers.tok_delim",
  "py_entitymatching.feature.tokenizers.tok_qgram",
  "py_entitymatching.feature.tokenizers.tok_wspace",
  "py_entitymatching.filter_rows",
  "py_entitymatching.generic_helper",
  "py_entitymatching.get_all_properties",
  "py_entitymatching.get_attr_corres",
  "py_entitymatching.get_attr_types",
  "py_entitymatching.get_catalog",
  "py_entitymatching.get_false_negatives_as_df",
  "py_entitymatching.get_false_positives_as_df",
  "py_entitymatching.get_feature_fn",
  "py_entitymatching.get_features",
  "py_entitymatching.get_fk_ltable",
  "py_entitymatching.get_fk_rtable",
  "py_entitymatching.get_install_path",
  "py_entitymatching.get_key",
  "py_entitymatching.get_ltable",
  "py_entitymatching.get_property",
  "py_entitymatching.get_rtable",
  "py_entitymatching.get_sim_funs",
  "py_entitymatching.get_tokenizers_for_blocking",
  "py_entitymatching.get_tokenizers_for_matching",
  "py_entitymatching.gui",
  "py_entitymatching.gui.debug_gui_base",
  "py_entitymatching.gui.debug_gui_base.DataFrameTableViewWithLabel",
  "py_entitymatching.gui.debug_gui_base.DebugWindowManager",
  "py_entitymatching.gui.debug_gui_base.DictTableViewWithLabel",
  "py_entitymatching.gui.debug_gui_base.MainWindowManager",
  "py_entitymatching.gui.debug_gui_base.ShowWindowManager",
  "py_entitymatching.gui.debug_gui_base.TreeViewWithLabel",
  "py_entitymatching.gui.debug_gui_base.catalog_manager",
  "py_entitymatching.gui.gui_utils",
  "py_entitymatching.gui.gui_utils.DataFrameTableView",
  "py_entitymatching.gui.gui_utils.DataFrameTableViewWithLabel",
  "py_entitymatching.gui.gui_utils.DictTableView",
  "py_entitymatching.gui.gui_utils.DictTableViewWithLabel",
  "py_entitymatching.gui.gui_utils.TreeView",
  "py_entitymatching.gui.gui_utils.TreeViewWithLabel",
  "py_entitymatching.gui.table_gui",
  "py_entitymatching.gui.table_gui._cast_val",
  "py_entitymatching.gui.table_gui.edit_table",
  "py_entitymatching.gui.table_gui.logger",
  "py_entitymatching.gui.table_gui.remove_non_ascii",
  "py_entitymatching.gui.table_gui.view_table",
  "py_entitymatching.hamming_dist",
  "py_entitymatching.hamming_sim",
  "py_entitymatching.impute_table",
  "py_entitymatching.init_properties",
  "py_entitymatching.io",
  "py_entitymatching.io.parsers",
  "py_entitymatching.io.parsers._check_file_path",
  "py_entitymatching.io.parsers._check_metadata_for_read_cmd",
  "py_entitymatching.io.parsers._get_metadata_from_file",
  "py_entitymatching.io.parsers._is_metadata_file_present",
  "py_entitymatching.io.parsers._update_metadata_for_read_cmd",
  "py_entitymatching.io.parsers._write_metadata",
  "py_entitymatching.io.parsers.catalog_manager",
  "py_entitymatching.io.parsers.logger",
  "py_entitymatching.io.parsers.read_csv_metadata",
  "py_entitymatching.io.parsers.to_csv_metadata",
  "py_entitymatching.io.parsers.validate_object_type",
  "py_entitymatching.io.pickles",
  "py_entitymatching.io.pickles.catalog_manager",
  "py_entitymatching.io.pickles.load_object",
  "py_entitymatching.io.pickles.load_table",
  "py_entitymatching.io.pickles.logger",
  "py_entitymatching.io.pickles.parsers",
  "py_entitymatching.io.pickles.save_object",
  "py_entitymatching.io.pickles.save_table",
  "py_entitymatching.io.pickles.validate_object_type",
  "py_entitymatching.is_catalog_empty",
  "py_entitymatching.is_dfinfo_present",
  "py_entitymatching.is_property_present_for_df",
  "py_entitymatching.jaccard",
  "py_entitymatching.jaro",
  "py_entitymatching.label_table",
  "py_entitymatching.labeler",
  "py_entitymatching.labeler.labeler",
  "py_entitymatching.labeler.labeler._init_label_table",
  "py_entitymatching.labeler.labeler._post_process_labelled_table",
  "py_entitymatching.labeler.labeler._validate_inputs",
  "py_entitymatching.labeler.labeler.catalog_helper",
  "py_entitymatching.labeler.labeler.catalog_manager",
  "py_entitymatching.labeler.labeler.label_table",
  "py_entitymatching.labeler.labeler.logger",
  "py_entitymatching.labeler.labeler.validate_object_type",
  "py_entitymatching.lev_dist",
  "py_entitymatching.lev_sim",
  "py_entitymatching.load_dataset",
  "py_entitymatching.load_object",
  "py_entitymatching.load_table",
  "py_entitymatching.logger",
  "py_entitymatching.matcher",
  "py_entitymatching.matcher.booleanrulematcher",
  "py_entitymatching.matcher.booleanrulematcher.BooleanRuleMatcher",
  "py_entitymatching.matcher.booleanrulematcher.RuleMatcher",
  "py_entitymatching.matcher.booleanrulematcher.catalog_manager",
  "py_entitymatching.matcher.booleanrulematcher.get_ts",
  "py_entitymatching.matcher.booleanrulematcher.logger",
  "py_entitymatching.matcher.booleanrulematcher.parse_conjunct",
  "py_entitymatching.matcher.booleanrulematcher.validate_object_type",
  "py_entitymatching.matcher.dtmatcher",
  "py_entitymatching.matcher.dtmatcher.DTMatcher",
  "py_entitymatching.matcher.dtmatcher.MLMatcher",
  "py_entitymatching.matcher.dtmatcher.get_ts",
  "py_entitymatching.matcher.ensemblematcher",
  "py_entitymatching.matcher.ensemblematcher.EnsembleMatcher.__init__.names",
  "py_entitymatching.matcher.ensemblematcher.names",
  "py_entitymatching.matcher.linregmatcher",
  "py_entitymatching.matcher.linregmatcher.LinRegClassifierSKLearn",
  "py_entitymatching.matcher.linregmatcher.LinRegMatcher",
  "py_entitymatching.matcher.linregmatcher.MLMatcher",
  "py_entitymatching.matcher.linregmatcher.get_ts",
  "py_entitymatching.matcher.linregmatcher.logger",
  "py_entitymatching.matcher.logregmatcher",
  "py_entitymatching.matcher.logregmatcher.LogRegMatcher",
  "py_entitymatching.matcher.matcher",
  "py_entitymatching.matcher.matcher.Matcher",
  "py_entitymatching.matcher.matcherutils",
  "py_entitymatching.matcher.matcherutils.catalog_helper",
  "py_entitymatching.matcher.matcherutils.catalog_manager",
  "py_entitymatching.matcher.matcherutils.generic_helper",
  "py_entitymatching.matcher.matcherutils.get_false_lbl_index",
  "py_entitymatching.matcher.matcherutils.get_preds_probs",
  "py_entitymatching.matcher.matcherutils.get_true_lbl_index",
  "py_entitymatching.matcher.matcherutils.get_ts",
  "py_entitymatching.matcher.matcherutils.impute_table",
  "py_entitymatching.matcher.matcherutils.logger",
  "py_entitymatching.matcher.matcherutils.process_preds_probs",
  "py_entitymatching.matcher.matcherutils.split_train_test",
  "py_entitymatching.matcher.matcherutils.unpack_preds",
  "py_entitymatching.matcher.matcherutils.unpack_probs",
  "py_entitymatching.matcher.mlmatcher",
  "py_entitymatching.matcher.mlmatcher.MLMatcher",
  "py_entitymatching.matcher.mlmatcher.Matcher",
  "py_entitymatching.matcher.mlmatcher.catalog_helper",
  "py_entitymatching.matcher.mlmatcher.catalog_manager",
  "py_entitymatching.matcher.mlmatcher.generic_helper",
  "py_entitymatching.matcher.mlmatcher.get_true_lbl_index",
  "py_entitymatching.matcher.mlmatcher.logger",
  "py_entitymatching.matcher.nbmatcher",
  "py_entitymatching.matcher.nbmatcher.NBMatcher",
  "py_entitymatching.matcher.rfmatcher",
  "py_entitymatching.matcher.rfmatcher.MLMatcher",
  "py_entitymatching.matcher.rfmatcher.RFMatcher",
  "py_entitymatching.matcher.rfmatcher.get_ts",
  "py_entitymatching.matcher.rulematcher",
  "py_entitymatching.matcher.rulematcher.Matcher",
  "py_entitymatching.matcher.rulematcher.RuleMatcher",
  "py_entitymatching.matcher.svmmatcher",
  "py_entitymatching.matcher.svmmatcher.SVMMatcher",
  "py_entitymatching.matcher.xgboostmatcher",
  "py_entitymatching.matcher.xgboostmatcher.MLMatcher",
  "py_entitymatching.matcher.xgboostmatcher.XGBoostMatcher",
  "py_entitymatching.matcher.xgboostmatcher.get_ts",
  "py_entitymatching.matchercombiner",
  "py_entitymatching.matchercombiner.matchercombiner",
  "py_entitymatching.matchercombiner.matchercombiner.MajorityVote",
  "py_entitymatching.matchercombiner.matchercombiner.WeightedVote",
  "py_entitymatching.matcherselector",
  "py_entitymatching.matcherselector.mlmatchercombinerselection",
  "py_entitymatching.matcherselector.mlmatchercombinerselection.get_matcher_list.matcher_list",
  "py_entitymatching.matcherselector.mlmatchercombinerselection.matcher_list",
  "py_entitymatching.matcherselector.mlmatcherselection",
  "py_entitymatching.matcherselector.mlmatcherselection._get_xy_data",
  "py_entitymatching.matcherselector.mlmatcherselection.check_attrs_present",
  "py_entitymatching.matcherselector.mlmatcherselection.cross_validation",
  "py_entitymatching.matcherselector.mlmatcherselection.list_diff",
  "py_entitymatching.matcherselector.mlmatcherselection.list_drop_duplicates",
  "py_entitymatching.matcherselector.mlmatcherselection.logger",
  "py_entitymatching.matcherselector.mlmatcherselection.select_matcher",
  "py_entitymatching.matcherselector.mlmatcherselection.validate_object_type",
  "py_entitymatching.monge_elkan",
  "py_entitymatching.mutate_col",
  "py_entitymatching.needleman_wunsch",
  "py_entitymatching.overlap_coeff",
  "py_entitymatching.preserve_metadata",
  "py_entitymatching.print_eval_summary",
  "py_entitymatching.project_cols",
  "py_entitymatching.read_csv_metadata",
  "py_entitymatching.rel_diff",
  "py_entitymatching.rename_col",
  "py_entitymatching.sample_table",
  "py_entitymatching.sampler",
  "py_entitymatching.sampler.down_sample",
  "py_entitymatching.sampler.down_sample._get_stop_words",
  "py_entitymatching.sampler.down_sample._get_str_cols_list",
  "py_entitymatching.sampler.down_sample._inv_index",
  "py_entitymatching.sampler.down_sample._probe_index_split",
  "py_entitymatching.sampler.down_sample.catalog_manager",
  "py_entitymatching.sampler.down_sample.down_sample",
  "py_entitymatching.sampler.down_sample.get_install_path",
  "py_entitymatching.sampler.down_sample.get_num_procs",
  "py_entitymatching.sampler.down_sample.log_info",
  "py_entitymatching.sampler.down_sample.logger",
  "py_entitymatching.sampler.down_sample.regex",
  "py_entitymatching.sampler.down_sample.remove_punctuations",
  "py_entitymatching.sampler.down_sample.validate_object_type",
  "py_entitymatching.sampler.single_table",
  "py_entitymatching.sampler.single_table.catalog_helper",
  "py_entitymatching.sampler.single_table.catalog_manager",
  "py_entitymatching.sampler.single_table.logger",
  "py_entitymatching.sampler.single_table.sample_table",
  "py_entitymatching.sampler.single_table.validate_object_type",
  "py_entitymatching.save_object",
  "py_entitymatching.save_table",
  "py_entitymatching.select_matcher",
  "py_entitymatching.set_fk_ltable",
  "py_entitymatching.set_fk_rtable",
  "py_entitymatching.set_key",
  "py_entitymatching.set_ltable",
  "py_entitymatching.set_property",
  "py_entitymatching.set_rtable",
  "py_entitymatching.show_properties",
  "py_entitymatching.sim_function_names",
  "py_entitymatching.smith_waterman",
  "py_entitymatching.split_train_test",
  "py_entitymatching.tests",
  "py_entitymatching.tests._test_debug_matcher_dt",
  "py_entitymatching.tests._test_debug_matcher_rf",
  "py_entitymatching.tests._test_debug_matcher_rf.RFDebugMatcherTestCases",
  "py_entitymatching.tests._test_debug_matcher_rf.RFMatcher",
  "py_entitymatching.tests._test_debug_matcher_rf.VisRFDebugMatcherTestCases",
  "py_entitymatching.tests._test_debug_matcher_rf._vis_debug_rf",
  "py_entitymatching.tests._test_debug_matcher_rf.catalog_manager",
  "py_entitymatching.tests._test_debug_matcher_rf.datasets_path",
  "py_entitymatching.tests._test_debug_matcher_rf.debug_randomforest_matcher",
  "py_entitymatching.tests._test_debug_matcher_rf.extract_feature_vecs",
  "py_entitymatching.tests._test_debug_matcher_rf.get_features_for_matching",
  "py_entitymatching.tests._test_debug_matcher_rf.get_install_path",
  "py_entitymatching.tests._test_debug_matcher_rf.matcherutils",
  "py_entitymatching.tests._test_debug_matcher_rf.path_a",
  "py_entitymatching.tests._test_debug_matcher_rf.path_b",
  "py_entitymatching.tests._test_debug_matcher_rf.path_c",
  "py_entitymatching.tests._test_debug_matcher_rf.read_csv_metadata",
  "py_entitymatching.tests._test_debug_matcher_rf.vis_tuple_debug_rf_matcher",
  "py_entitymatching.tests._test_matcherselector_mlmatcherselection_xg",
  "py_entitymatching.tests.test_attr_equiv_blocker",
  "py_entitymatching.tests.test_attr_equiv_blocker.AttrEquivBlockerMulticoreTestCases",
  "py_entitymatching.tests.test_attr_equiv_blocker.AttrEquivBlockerTestCases",
  "py_entitymatching.tests.test_attr_equiv_blocker.expected_ids_1",
  "py_entitymatching.tests.test_attr_equiv_blocker.expected_ids_2",
  "py_entitymatching.tests.test_attr_equiv_blocker.expected_ids_3",
  "py_entitymatching.tests.test_attr_equiv_blocker.expected_ids_4",
  "py_entitymatching.tests.test_attr_equiv_blocker.expected_ids_5",
  "py_entitymatching.tests.test_attr_equiv_blocker.l_block_attr_1",
  "py_entitymatching.tests.test_attr_equiv_blocker.l_block_attr_2",
  "py_entitymatching.tests.test_attr_equiv_blocker.l_block_attr_3",
  "py_entitymatching.tests.test_attr_equiv_blocker.l_output_attrs",
  "py_entitymatching.tests.test_attr_equiv_blocker.l_output_prefix",
  "py_entitymatching.tests.test_attr_equiv_blocker.p",
  "py_entitymatching.tests.test_attr_equiv_blocker.path_a",
  "py_entitymatching.tests.test_attr_equiv_blocker.path_b",
  "py_entitymatching.tests.test_attr_equiv_blocker.r_block_attr_1",
  "py_entitymatching.tests.test_attr_equiv_blocker.r_block_attr_2",
  "py_entitymatching.tests.test_attr_equiv_blocker.r_block_attr_3",
  "py_entitymatching.tests.test_attr_equiv_blocker.r_output_attrs",
  "py_entitymatching.tests.test_attr_equiv_blocker.r_output_prefix",
  "py_entitymatching.tests.test_attr_equiv_blocker.validate_data",
  "py_entitymatching.tests.test_attr_equiv_blocker.validate_metadata",
  "py_entitymatching.tests.test_black_box_blocker",
  "py_entitymatching.tests.test_black_box_blocker.BlackBoxBlockerMulticoreTestCases",
  "py_entitymatching.tests.test_black_box_blocker.BlackBoxBlockerTestCases",
  "py_entitymatching.tests.test_black_box_blocker._block_fn",
  "py_entitymatching.tests.test_black_box_blocker._evil_block_fn",
  "py_entitymatching.tests.test_black_box_blocker.expected_ids_1",
  "py_entitymatching.tests.test_black_box_blocker.expected_ids_2",
  "py_entitymatching.tests.test_black_box_blocker.expected_ids_zip",
  "py_entitymatching.tests.test_black_box_blocker.l_output_attrs",
  "py_entitymatching.tests.test_black_box_blocker.l_output_prefix",
  "py_entitymatching.tests.test_black_box_blocker.p",
  "py_entitymatching.tests.test_black_box_blocker.path_a",
  "py_entitymatching.tests.test_black_box_blocker.path_b",
  "py_entitymatching.tests.test_black_box_blocker.r_output_attrs",
  "py_entitymatching.tests.test_black_box_blocker.r_output_prefix",
  "py_entitymatching.tests.test_black_box_blocker.simfunctions",
  "py_entitymatching.tests.test_black_box_blocker.validate_data",
  "py_entitymatching.tests.test_black_box_blocker.validate_metadata",
  "py_entitymatching.tests.test_blockercombiner",
  "py_entitymatching.tests.test_blockercombiner.BlockerCombinerTestCases",
  "py_entitymatching.tests.test_blockercombiner.bc_datasets_path",
  "py_entitymatching.tests.test_blockercombiner.catalog_manager",
  "py_entitymatching.tests.test_blockercombiner.combine_blocker_outputs_via_union",
  "py_entitymatching.tests.test_blockercombiner.datasets_path",
  "py_entitymatching.tests.test_blockercombiner.get_install_path",
  "py_entitymatching.tests.test_blockercombiner.path_a",
  "py_entitymatching.tests.test_blockercombiner.path_b",
  "py_entitymatching.tests.test_blockercombiner.path_c",
  "py_entitymatching.tests.test_blockercombiner.path_c1",
  "py_entitymatching.tests.test_blockercombiner.path_c2",
  "py_entitymatching.tests.test_blockercombiner.path_c3",
  "py_entitymatching.tests.test_blockercombiner.read_csv_metadata",
  "py_entitymatching.tests.test_blockercombiner.to_csv_metadata",
  "py_entitymatching.tests.test_catalog",
  "py_entitymatching.tests.test_catalog.CatalogManagerTestCases",
  "py_entitymatching.tests.test_catalog.catalog_datasets_path",
  "py_entitymatching.tests.test_catalog.catalog_helper",
  "py_entitymatching.tests.test_catalog.catalog_manager",
  "py_entitymatching.tests.test_catalog.datasets_path",
  "py_entitymatching.tests.test_catalog.get_install_path",
  "py_entitymatching.tests.test_catalog.path_a",
  "py_entitymatching.tests.test_catalog.path_b",
  "py_entitymatching.tests.test_catalog.path_c",
  "py_entitymatching.tests.test_catalog.read_csv_metadata",
  "py_entitymatching.tests.test_debugblocker",
  "py_entitymatching.tests.test_debugblocker.DebugblockerTestCases",
  "py_entitymatching.tests.test_debugblocker.catalog_datasets_path",
  "py_entitymatching.tests.test_debugblocker.catalog_helper",
  "py_entitymatching.tests.test_debugblocker.catalog_manager",
  "py_entitymatching.tests.test_debugblocker.datasets_path",
  "py_entitymatching.tests.test_debugblocker.debugblocker",
  "py_entitymatching.tests.test_debugblocker.debugblocker_datasets_path",
  "py_entitymatching.tests.test_debugblocker.get_install_path",
  "py_entitymatching.tests.test_debugblocker.path_a",
  "py_entitymatching.tests.test_debugblocker.path_b",
  "py_entitymatching.tests.test_debugblocker.path_c",
  "py_entitymatching.tests.test_debugblocker.read_csv_metadata",
  "py_entitymatching.tests.test_debugblocker.read_formatted_cand_set",
  "py_entitymatching.tests.test_debugblocker.read_record_list",
  "py_entitymatching.tests.test_evaluation",
  "py_entitymatching.tests.test_evaluation.EvaluationTestCases",
  "py_entitymatching.tests.test_evaluation.catalog_manager",
  "py_entitymatching.tests.test_evaluation.datasets_path",
  "py_entitymatching.tests.test_evaluation.eval_matches",
  "py_entitymatching.tests.test_evaluation.get_install_path",
  "py_entitymatching.tests.test_evaluation.path_a",
  "py_entitymatching.tests.test_evaluation.path_b",
  "py_entitymatching.tests.test_evaluation.path_c",
  "py_entitymatching.tests.test_evaluation.read_csv_metadata",
  "py_entitymatching.tests.test_feature_addfeatures",
  "py_entitymatching.tests.test_feature_addfeatures.AddBlackBoxFeatureTestCases",
  "py_entitymatching.tests.test_feature_addfeatures.AddFeaturesTestCases",
  "py_entitymatching.tests.test_feature_addfeatures._parse_feat_str",
  "py_entitymatching.tests.test_feature_addfeatures.add_blackbox_feature",
  "py_entitymatching.tests.test_feature_addfeatures.add_feature",
  "py_entitymatching.tests.test_feature_addfeatures.catalog_manager",
  "py_entitymatching.tests.test_feature_addfeatures.create_feature_table",
  "py_entitymatching.tests.test_feature_addfeatures.datasets_path",
  "py_entitymatching.tests.test_feature_addfeatures.get_feature_fn",
  "py_entitymatching.tests.test_feature_addfeatures.get_features_for_matching",
  "py_entitymatching.tests.test_feature_addfeatures.get_install_path",
  "py_entitymatching.tests.test_feature_addfeatures.get_sim_funs_for_matching",
  "py_entitymatching.tests.test_feature_addfeatures.get_tokenizers_for_matching",
  "py_entitymatching.tests.test_feature_addfeatures.path_a",
  "py_entitymatching.tests.test_feature_addfeatures.path_b",
  "py_entitymatching.tests.test_feature_addfeatures.read_csv_metadata",
  "py_entitymatching.tests.test_feature_attributeutils",
  "py_entitymatching.tests.test_feature_autofeaturegen",
  "py_entitymatching.tests.test_feature_autofeaturegen.AutoFeatureGenerationTestCases",
  "py_entitymatching.tests.test_feature_autofeaturegen.attributeutils",
  "py_entitymatching.tests.test_feature_autofeaturegen.autofeaturegen",
  "py_entitymatching.tests.test_feature_autofeaturegen.bc_datasets_path",
  "py_entitymatching.tests.test_feature_autofeaturegen.catalog_manager",
  "py_entitymatching.tests.test_feature_autofeaturegen.datasets_path",
  "py_entitymatching.tests.test_feature_autofeaturegen.get_install_path",
  "py_entitymatching.tests.test_feature_autofeaturegen.get_sim_funs_for_matching",
  "py_entitymatching.tests.test_feature_autofeaturegen.get_tokenizers_for_matching",
  "py_entitymatching.tests.test_feature_autofeaturegen.mockInput",
  "py_entitymatching.tests.test_feature_autofeaturegen.path_a",
  "py_entitymatching.tests.test_feature_autofeaturegen.path_b",
  "py_entitymatching.tests.test_feature_autofeaturegen.path_c",
  "py_entitymatching.tests.test_feature_autofeaturegen.read_csv_metadata",
  "py_entitymatching.tests.test_feature_autofeaturegen.simfunctions",
  "py_entitymatching.tests.test_feature_autofeaturegen.tokenizers",
  "py_entitymatching.tests.test_feature_extractfeaturevecs",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.ExtractFeaturesTestCases",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.catalog_manager",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.datasets_path",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.extract_feature_vecs",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.get_features_for_matching",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.get_install_path",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.path_a",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.path_b",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.path_c",
  "py_entitymatching.tests.test_feature_extractfeaturevecs.read_csv_metadata",
  "py_entitymatching.tests.test_feature_simfunctions",
  "py_entitymatching.tests.test_feature_simfunctions.SimFunctionsTestCases",
  "py_entitymatching.tests.test_feature_simfunctions.simfunctions",
  "py_entitymatching.tests.test_feature_simfunctions.test_invalid_input_cases",
  "py_entitymatching.tests.test_feature_simfunctions.test_null_cases",
  "py_entitymatching.tests.test_feature_tokenizers",
  "py_entitymatching.tests.test_feature_tokenizers.TokenizerTestCases",
  "py_entitymatching.tests.test_feature_tokenizers.tokenizers",
  "py_entitymatching.tests.test_io_import_export",
  "py_entitymatching.tests.test_io_import_export.ReadCSVMetadataTestCases",
  "py_entitymatching.tests.test_io_import_export.ToCSVMetadataTestCases",
  "py_entitymatching.tests.test_io_import_export._get_metadata_from_file",
  "py_entitymatching.tests.test_io_import_export.catalog_manager",
  "py_entitymatching.tests.test_io_import_export.creat_dir_ifnot_exists",
  "py_entitymatching.tests.test_io_import_export.datasets_path",
  "py_entitymatching.tests.test_io_import_export.del_files_in_dir",
  "py_entitymatching.tests.test_io_import_export.get_install_path",
  "py_entitymatching.tests.test_io_import_export.io_datasets_path",
  "py_entitymatching.tests.test_io_import_export.path_a",
  "py_entitymatching.tests.test_io_import_export.path_b",
  "py_entitymatching.tests.test_io_import_export.path_c",
  "py_entitymatching.tests.test_io_import_export.read_csv_metadata",
  "py_entitymatching.tests.test_io_import_export.sndbx_path",
  "py_entitymatching.tests.test_io_import_export.to_csv_metadata",
  "py_entitymatching.tests.test_io_load_save",
  "py_entitymatching.tests.test_io_load_save.LoadObjectTestCases",
  "py_entitymatching.tests.test_io_load_save.LoadTableTestCases",
  "py_entitymatching.tests.test_io_load_save.RuleBasedBlocker",
  "py_entitymatching.tests.test_io_load_save.SaveObjectTestCases",
  "py_entitymatching.tests.test_io_load_save.SaveTableTestCases",
  "py_entitymatching.tests.test_io_load_save.catalog_manager",
  "py_entitymatching.tests.test_io_load_save.creat_dir_ifnot_exists",
  "py_entitymatching.tests.test_io_load_save.datasets_path",
  "py_entitymatching.tests.test_io_load_save.del_files_in_dir",
  "py_entitymatching.tests.test_io_load_save.get_features_for_blocking",
  "py_entitymatching.tests.test_io_load_save.get_install_path",
  "py_entitymatching.tests.test_io_load_save.load_object",
  "py_entitymatching.tests.test_io_load_save.load_table",
  "py_entitymatching.tests.test_io_load_save.path_a",
  "py_entitymatching.tests.test_io_load_save.path_b",
  "py_entitymatching.tests.test_io_load_save.path_c",
  "py_entitymatching.tests.test_io_load_save.read_csv_metadata",
  "py_entitymatching.tests.test_io_load_save.save_object",
  "py_entitymatching.tests.test_io_load_save.save_table",
  "py_entitymatching.tests.test_io_load_save.sndbx_path",
  "py_entitymatching.tests.test_labeler",
  "py_entitymatching.tests.test_labeler.LabelTableTestCases",
  "py_entitymatching.tests.test_labeler._init_label_table",
  "py_entitymatching.tests.test_labeler._post_process_labelled_table",
  "py_entitymatching.tests.test_labeler._validate_inputs",
  "py_entitymatching.tests.test_labeler.catalog_manager",
  "py_entitymatching.tests.test_labeler.datasets_path",
  "py_entitymatching.tests.test_labeler.get_install_path",
  "py_entitymatching.tests.test_labeler.label_table",
  "py_entitymatching.tests.test_labeler.path_a",
  "py_entitymatching.tests.test_labeler.path_b",
  "py_entitymatching.tests.test_labeler.path_c",
  "py_entitymatching.tests.test_labeler.read_csv_metadata",
  "py_entitymatching.tests.test_match_trigger",
  "py_entitymatching.tests.test_match_trigger.RuleBasedMatcherTestCases",
  "py_entitymatching.tests.test_match_trigger.add_feature",
  "py_entitymatching.tests.test_match_trigger.expected_labels_1",
  "py_entitymatching.tests.test_match_trigger.expected_labels_1_and_2",
  "py_entitymatching.tests.test_match_trigger.expected_labels_2",
  "py_entitymatching.tests.test_match_trigger.expected_labels_2_and_3",
  "py_entitymatching.tests.test_match_trigger.expected_labels_3",
  "py_entitymatching.tests.test_match_trigger.expected_labels_4",
  "py_entitymatching.tests.test_match_trigger.expected_labels_zeros",
  "py_entitymatching.tests.test_match_trigger.get_feature_fn",
  "py_entitymatching.tests.test_match_trigger.get_sim_funs_for_blocking",
  "py_entitymatching.tests.test_match_trigger.get_tokenizers_for_blocking",
  "py_entitymatching.tests.test_match_trigger.l_output_attrs",
  "py_entitymatching.tests.test_match_trigger.l_output_prefix",
  "py_entitymatching.tests.test_match_trigger.p",
  "py_entitymatching.tests.test_match_trigger.path_for_A",
  "py_entitymatching.tests.test_match_trigger.path_for_B",
  "py_entitymatching.tests.test_match_trigger.path_for_C",
  "py_entitymatching.tests.test_match_trigger.r_output_attrs",
  "py_entitymatching.tests.test_match_trigger.r_output_prefix",
  "py_entitymatching.tests.test_match_trigger.rule_1",
  "py_entitymatching.tests.test_match_trigger.rule_2",
  "py_entitymatching.tests.test_match_trigger.rule_3",
  "py_entitymatching.tests.test_match_trigger.rule_4",
  "py_entitymatching.tests.test_matcher_ml_matcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.DTMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.LinRegMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.LogRegMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.MLMatcherTestCases",
  "py_entitymatching.tests.test_matcher_ml_matcher.NBMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.RFMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.SVMMatcher",
  "py_entitymatching.tests.test_matcher_ml_matcher.catalog_manager",
  "py_entitymatching.tests.test_matcher_ml_matcher.datasets_path",
  "py_entitymatching.tests.test_matcher_ml_matcher.feat_datasets_path",
  "py_entitymatching.tests.test_matcher_ml_matcher.fpath_a",
  "py_entitymatching.tests.test_matcher_ml_matcher.fpath_b",
  "py_entitymatching.tests.test_matcher_ml_matcher.fpath_c",
  "py_entitymatching.tests.test_matcher_ml_matcher.fpath_f",
  "py_entitymatching.tests.test_matcher_ml_matcher.get_install_path",
  "py_entitymatching.tests.test_matcher_ml_matcher.list_diff",
  "py_entitymatching.tests.test_matcher_ml_matcher.matcherutils",
  "py_entitymatching.tests.test_matcher_ml_matcher.path_a",
  "py_entitymatching.tests.test_matcher_ml_matcher.path_b",
  "py_entitymatching.tests.test_matcher_ml_matcher.path_c",
  "py_entitymatching.tests.test_matcher_ml_matcher.read_csv_metadata",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.DTMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.LinRegMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.LogRegMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.MLMatcherSelectionTestCases",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.NBMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.RFMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.SVMMatcher",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.catalog_manager",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.datasets_path",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.get_install_path",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.list_diff",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.path_a",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.path_b",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.path_c",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.path_f",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.read_csv_metadata",
  "py_entitymatching.tests.test_matcherselector_mlmatcherselection.select_matcher",
  "py_entitymatching.tests.test_overlap_blocker",
  "py_entitymatching.tests.test_overlap_blocker.OverlapBlockerMulticoreTestCases",
  "py_entitymatching.tests.test_overlap_blocker.OverlapBlockerTestCases",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_1",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_2",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_2_and_3",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_3",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_4",
  "py_entitymatching.tests.test_overlap_blocker.expected_ids_5",
  "py_entitymatching.tests.test_overlap_blocker.l_output_attrs",
  "py_entitymatching.tests.test_overlap_blocker.l_output_prefix",
  "py_entitymatching.tests.test_overlap_blocker.l_overlap_attr_1",
  "py_entitymatching.tests.test_overlap_blocker.l_overlap_attr_2",
  "py_entitymatching.tests.test_overlap_blocker.p",
  "py_entitymatching.tests.test_overlap_blocker.path_a",
  "py_entitymatching.tests.test_overlap_blocker.path_b",
  "py_entitymatching.tests.test_overlap_blocker.r_output_attrs",
  "py_entitymatching.tests.test_overlap_blocker.r_output_prefix",
  "py_entitymatching.tests.test_overlap_blocker.r_overlap_attr_1",
  "py_entitymatching.tests.test_overlap_blocker.r_overlap_attr_2",
  "py_entitymatching.tests.test_overlap_blocker.validate_data",
  "py_entitymatching.tests.test_overlap_blocker.validate_metadata",
  "py_entitymatching.tests.test_rule_based_blocker",
  "py_entitymatching.tests.test_rule_based_blocker.RuleBasedBlockerMulticoreTestCases",
  "py_entitymatching.tests.test_rule_based_blocker.RuleBasedBlockerTestCases",
  "py_entitymatching.tests.test_rule_based_blocker.add_feature",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_1",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_1_and_2",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_1_and_6",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_2",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_2_and_3",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_3",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_4",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_6",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_6_and_7",
  "py_entitymatching.tests.test_rule_based_blocker.expected_ids_7",
  "py_entitymatching.tests.test_rule_based_blocker.get_feature_fn",
  "py_entitymatching.tests.test_rule_based_blocker.get_sim_funs_for_blocking",
  "py_entitymatching.tests.test_rule_based_blocker.get_tokenizers_for_blocking",
  "py_entitymatching.tests.test_rule_based_blocker.l_output_attrs",
  "py_entitymatching.tests.test_rule_based_blocker.l_output_prefix",
  "py_entitymatching.tests.test_rule_based_blocker.p",
  "py_entitymatching.tests.test_rule_based_blocker.path_for_A",
  "py_entitymatching.tests.test_rule_based_blocker.path_for_B",
  "py_entitymatching.tests.test_rule_based_blocker.r_output_attrs",
  "py_entitymatching.tests.test_rule_based_blocker.r_output_prefix",
  "py_entitymatching.tests.test_rule_based_blocker.rule_1",
  "py_entitymatching.tests.test_rule_based_blocker.rule_2",
  "py_entitymatching.tests.test_rule_based_blocker.rule_3",
  "py_entitymatching.tests.test_rule_based_blocker.rule_4",
  "py_entitymatching.tests.test_rule_based_blocker.rule_5",
  "py_entitymatching.tests.test_rule_based_blocker.rule_6",
  "py_entitymatching.tests.test_rule_based_blocker.rule_7",
  "py_entitymatching.tests.test_rule_based_blocker.rule_8",
  "py_entitymatching.tests.test_rule_based_blocker.rule_9",
  "py_entitymatching.tests.test_rule_based_blocker.validate_data",
  "py_entitymatching.tests.test_rule_based_blocker.validate_metadata",
  "py_entitymatching.tests.test_rule_based_matcher",
  "py_entitymatching.tests.test_rule_based_matcher.RuleBasedMatcherTestCases",
  "py_entitymatching.tests.test_rule_based_matcher.add_feature",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_1",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_1_and_2",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_1_and_6",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_2",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_2_and_3",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_3",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_4",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_6",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_6_and_7",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_7",
  "py_entitymatching.tests.test_rule_based_matcher.expected_labels_all_zeroes",
  "py_entitymatching.tests.test_rule_based_matcher.get_feature_fn",
  "py_entitymatching.tests.test_rule_based_matcher.get_sim_funs_for_blocking",
  "py_entitymatching.tests.test_rule_based_matcher.get_tokenizers_for_blocking",
  "py_entitymatching.tests.test_rule_based_matcher.l_output_attrs",
  "py_entitymatching.tests.test_rule_based_matcher.l_output_prefix",
  "py_entitymatching.tests.test_rule_based_matcher.p",
  "py_entitymatching.tests.test_rule_based_matcher.path_for_A",
  "py_entitymatching.tests.test_rule_based_matcher.path_for_B",
  "py_entitymatching.tests.test_rule_based_matcher.path_for_C",
  "py_entitymatching.tests.test_rule_based_matcher.r_output_attrs",
  "py_entitymatching.tests.test_rule_based_matcher.r_output_prefix",
  "py_entitymatching.tests.test_rule_based_matcher.rule_1",
  "py_entitymatching.tests.test_rule_based_matcher.rule_2",
  "py_entitymatching.tests.test_rule_based_matcher.rule_3",
  "py_entitymatching.tests.test_rule_based_matcher.rule_4",
  "py_entitymatching.tests.test_rule_based_matcher.rule_5",
  "py_entitymatching.tests.test_rule_based_matcher.rule_6",
  "py_entitymatching.tests.test_rule_based_matcher.rule_7",
  "py_entitymatching.tests.test_sampler_down_sample",
  "py_entitymatching.tests.test_sampler_down_sample.DownSampleTestCases",
  "py_entitymatching.tests.test_sampler_down_sample.InvertedIndexTestCases",
  "py_entitymatching.tests.test_sampler_down_sample.ProbeIndexTestCases",
  "py_entitymatching.tests.test_sampler_down_sample.StrColTestCases",
  "py_entitymatching.tests.test_sampler_down_sample._get_str_cols_list",
  "py_entitymatching.tests.test_sampler_down_sample._inv_index",
  "py_entitymatching.tests.test_sampler_down_sample._probe_index_split",
  "py_entitymatching.tests.test_sampler_down_sample.catalog_manager",
  "py_entitymatching.tests.test_sampler_down_sample.datasets_path",
  "py_entitymatching.tests.test_sampler_down_sample.down_sample",
  "py_entitymatching.tests.test_sampler_down_sample.get_install_path",
  "py_entitymatching.tests.test_sampler_down_sample.path_a",
  "py_entitymatching.tests.test_sampler_down_sample.path_b",
  "py_entitymatching.tests.test_sampler_down_sample.read_csv_metadata",
  "py_entitymatching.tests.test_sampler_single_table",
  "py_entitymatching.tests.test_sampler_single_table.SamplerSingleTableTestCases",
  "py_entitymatching.tests.test_sampler_single_table.catalog_manager",
  "py_entitymatching.tests.test_sampler_single_table.datasets_path",
  "py_entitymatching.tests.test_sampler_single_table.get_install_path",
  "py_entitymatching.tests.test_sampler_single_table.path_a",
  "py_entitymatching.tests.test_sampler_single_table.path_b",
  "py_entitymatching.tests.test_sampler_single_table.path_c",
  "py_entitymatching.tests.test_sampler_single_table.read_csv_metadata",
  "py_entitymatching.tests.test_sampler_single_table.sample_table",
  "py_entitymatching.to_csv_metadata",
  "py_entitymatching.tok_alphabetic",
  "py_entitymatching.tok_alphanumeric",
  "py_entitymatching.tok_delim",
  "py_entitymatching.tok_qgram",
  "py_entitymatching.tok_wspace",
  "py_entitymatching.triggers",
  "py_entitymatching.triggers.matchtrigger",
  "py_entitymatching.triggers.matchtrigger.MatchTrigger",
  "py_entitymatching.triggers.matchtrigger.catalog_manager",
  "py_entitymatching.triggers.matchtrigger.logger",
  "py_entitymatching.triggers.matchtrigger.parse_conjunct",
  "py_entitymatching.triggers.matchtrigger.validate_object_type",
  "py_entitymatching.tuner",
  "py_entitymatching.tuner.tuner_down_sample",
  "py_entitymatching.tuner.tuner_overlap_blocker",
  "py_entitymatching.tuner.tuner_overlap_blocker.DaskOverlapBlocker",
  "py_entitymatching.tuner.tuner_overlap_blocker.catalog_manager",
  "py_entitymatching.tuner.tuner_overlap_blocker.execute",
  "py_entitymatching.tuner.tuner_overlap_blocker.find_ltable_chunks",
  "py_entitymatching.tuner.tuner_overlap_blocker.find_rtable_chunks",
  "py_entitymatching.tuner.tuner_overlap_blocker.get_chunk_range",
  "py_entitymatching.tuner.tuner_overlap_blocker.get_sampled_tables",
  "py_entitymatching.tuner.tuner_overlap_blocker.process_column",
  "py_entitymatching.tuner.tuner_overlap_blocker.sample_ltable",
  "py_entitymatching.tuner.tuner_overlap_blocker.sample_rtable",
  "py_entitymatching.tuner.tuner_overlap_blocker.should_swap",
  "py_entitymatching.tuner.tuner_overlap_blocker.tuner_overlap_blocker",
  "py_entitymatching.utils",
  "py_entitymatching.utils.catalog_helper",
  "py_entitymatching.utils.catalog_helper.add_key_column",
  "py_entitymatching.utils.catalog_helper.check_attrs_present",
  "py_entitymatching.utils.catalog_helper.check_fk_constraint",
  "py_entitymatching.utils.catalog_helper.get_name_for_key",
  "py_entitymatching.utils.catalog_helper.log_info",
  "py_entitymatching.utils.generic_helper",
  "py_entitymatching.utils.generic_helper._add_output_attributes",
  "py_entitymatching.utils.generic_helper.add_output_attributes",
  "py_entitymatching.utils.generic_helper.catalog_manager",
  "py_entitymatching.utils.generic_helper.check_fk_constraint",
  "py_entitymatching.utils.generic_helper.convert_to_str_unicode",
  "py_entitymatching.utils.generic_helper.creat_dir_ifnot_exists",
  "py_entitymatching.utils.generic_helper.create_proj_dataframe",
  "py_entitymatching.utils.generic_helper.del_files_in_dir",
  "py_entitymatching.utils.generic_helper.get_install_path",
  "py_entitymatching.utils.generic_helper.install_path",
  "py_entitymatching.utils.generic_helper.list_diff",
  "py_entitymatching.utils.generic_helper.list_drop_duplicates",
  "py_entitymatching.utils.generic_helper.load_dataset",
  "py_entitymatching.utils.generic_helper.logger",
  "py_entitymatching.utils.generic_helper.parse_conjunct",
  "py_entitymatching.utils.generic_helper.rem_nan",
  "py_entitymatching.utils.generic_helper.remove_non_ascii",
  "py_entitymatching.utils.install_path",
  "py_entitymatching.utils.pandas_helper",
  "py_entitymatching.utils.pandas_helper._is_table",
  "py_entitymatching.utils.pandas_helper.catalog_helper",
  "py_entitymatching.utils.pandas_helper.catalog_manager",
  "py_entitymatching.utils.pandas_helper.drop_cols",
  "py_entitymatching.utils.pandas_helper.filter_rows",
  "py_entitymatching.utils.pandas_helper.generic_helper",
  "py_entitymatching.utils.pandas_helper.logger",
  "py_entitymatching.utils.pandas_helper.mutate_col",
  "py_entitymatching.utils.pandas_helper.preserve_metadata",
  "py_entitymatching.utils.pandas_helper.project_cols",
  "py_entitymatching.utils.pandas_helper.rename_col",
  "py_entitymatching.utils.validation_helper",
  "py_entitymatching.utils.validation_helper.validate_object_type",
  "py_entitymatching.validate_and_set_fk_ltable",
  "py_entitymatching.validate_and_set_fk_rtable",
  "py_entitymatching.view_table",
  "py_entitymatching.vis_debug_dt",
  "py_entitymatching.vis_debug_rf",
  "py_entitymatching.vis_tuple_debug_dt_matcher",
  "py_entitymatching.vis_tuple_debug_rf_matcher",
  "py_entitymatching.visualize_tree"
 ]
}