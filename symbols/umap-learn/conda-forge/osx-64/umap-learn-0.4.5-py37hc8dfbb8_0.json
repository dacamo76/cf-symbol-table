{
 "errors": {
  "umap.utils": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in _convert_names",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in <listcomp>",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 93, in _break_check",
    "    reachable = _check_if(context, check_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "umap.UMAP",
  "umap.__version__",
  "umap.distances",
  "umap.distances.DISCRETE_METRICS",
  "umap.distances.SPECIAL_METRICS",
  "umap.distances._mock_cost",
  "umap.distances._mock_identity",
  "umap.distances._mock_ones",
  "umap.distances.approx_log_Gamma",
  "umap.distances.bray_curtis",
  "umap.distances.canberra",
  "umap.distances.categorical_distance",
  "umap.distances.chebyshev",
  "umap.distances.correlation",
  "umap.distances.cosine",
  "umap.distances.count_distance",
  "umap.distances.diagonal_gaussian_energy_grad",
  "umap.distances.dice",
  "umap.distances.euclidean",
  "umap.distances.gaussian_energy_grad",
  "umap.distances.get_discrete_params",
  "umap.distances.hamming",
  "umap.distances.haversine",
  "umap.distances.hellinger",
  "umap.distances.hierarchical_categorical_distance",
  "umap.distances.hyperboloid_grad",
  "umap.distances.jaccard",
  "umap.distances.kulsinski",
  "umap.distances.levenshtein",
  "umap.distances.ll_dirichlet",
  "umap.distances.log_beta",
  "umap.distances.log_single_beta",
  "umap.distances.mahalanobis",
  "umap.distances.manhattan",
  "umap.distances.matching",
  "umap.distances.minkowski",
  "umap.distances.named_distances",
  "umap.distances.named_distances_with_gradients",
  "umap.distances.ordinal_distance",
  "umap.distances.pairwise_special_metric",
  "umap.distances.parallel_special_metric",
  "umap.distances.poincare",
  "umap.distances.rogers_tanimoto",
  "umap.distances.russellrao",
  "umap.distances.sign",
  "umap.distances.sinkhorn_distance",
  "umap.distances.sokal_michener",
  "umap.distances.sokal_sneath",
  "umap.distances.spherical_gaussian_energy_grad",
  "umap.distances.spherical_gaussian_grad",
  "umap.distances.standardised_euclidean",
  "umap.distances.symmetric_kl",
  "umap.distances.weighted_minkowski",
  "umap.distances.yule",
  "umap.layouts",
  "umap.layouts._optimize_layout_euclidean_single_epoch",
  "umap.layouts.clip",
  "umap.layouts.distances",
  "umap.layouts.optimize_layout_euclidean",
  "umap.layouts.optimize_layout_generic",
  "umap.layouts.optimize_layout_inverse",
  "umap.layouts.rdist",
  "umap.layouts.tau_rand_int",
  "umap.nndescent",
  "umap.nndescent.deheap_sort",
  "umap.nndescent.heap_push",
  "umap.nndescent.init_current_graph",
  "umap.nndescent.init_from_random",
  "umap.nndescent.init_from_tree",
  "umap.nndescent.init_rp_tree",
  "umap.nndescent.initialise_search",
  "umap.nndescent.initialized_nnd_search",
  "umap.nndescent.make_heap",
  "umap.nndescent.new_build_candidates",
  "umap.nndescent.nn_descent",
  "umap.nndescent.rejection_sample",
  "umap.nndescent.search_flat_tree",
  "umap.nndescent.smallest_flagged",
  "umap.nndescent.tau_rand",
  "umap.nndescent.unchecked_heap_push",
  "umap.plot",
  "umap.plot._blue",
  "umap.plot._datashade_points",
  "umap.plot._diagnostic_types",
  "umap.plot._embed_datashader_in_an_axis",
  "umap.plot._get_extent",
  "umap.plot._green",
  "umap.plot._matplotlib_points",
  "umap.plot._nhood_compare",
  "umap.plot._nhood_search",
  "umap.plot._red",
  "umap.plot._select_font_color",
  "umap.plot._themes",
  "umap.plot._to_hex",
  "umap.plot.connectivity",
  "umap.plot.darkblue_cmap",
  "umap.plot.darkgreen_cmap",
  "umap.plot.darkpurple_cmap",
  "umap.plot.darkred_cmap",
  "umap.plot.deheap_sort",
  "umap.plot.diagnostic",
  "umap.plot.fire_cmap",
  "umap.plot.initialise_search",
  "umap.plot.initialized_nnd_search",
  "umap.plot.interactive",
  "umap.plot.show",
  "umap.plot.submatrix",
  "umap.rp_tree",
  "umap.rp_tree.EPS",
  "umap.rp_tree.FlatTree",
  "umap.rp_tree.RandomProjectionTreeNode",
  "umap.rp_tree.angular_random_projection_split",
  "umap.rp_tree.arr_unique",
  "umap.rp_tree.euclidean_random_projection_split",
  "umap.rp_tree.flatten_tree",
  "umap.rp_tree.make_angular_tree",
  "umap.rp_tree.make_euclidean_tree",
  "umap.rp_tree.make_forest",
  "umap.rp_tree.make_sparse_angular_tree",
  "umap.rp_tree.make_sparse_euclidean_tree",
  "umap.rp_tree.make_tree",
  "umap.rp_tree.max_sparse_hyperplane_size",
  "umap.rp_tree.norm",
  "umap.rp_tree.num_leaves",
  "umap.rp_tree.num_nodes",
  "umap.rp_tree.recursive_flatten",
  "umap.rp_tree.rptree_leaf_array",
  "umap.rp_tree.search_flat_tree",
  "umap.rp_tree.search_sparse_flat_tree",
  "umap.rp_tree.select_side",
  "umap.rp_tree.sparse_angular_random_projection_split",
  "umap.rp_tree.sparse_diff",
  "umap.rp_tree.sparse_euclidean_random_projection_split",
  "umap.rp_tree.sparse_mul",
  "umap.rp_tree.sparse_select_side",
  "umap.rp_tree.sparse_sum",
  "umap.rp_tree.tau_rand_int",
  "umap.sparse",
  "umap.sparse.SPARSE_SPECIAL_METRICS",
  "umap.sparse.approx_log_Gamma",
  "umap.sparse.arr_intersect",
  "umap.sparse.arr_union",
  "umap.sparse.arr_unique",
  "umap.sparse.build_candidates",
  "umap.sparse.deheap_sort",
  "umap.sparse.general_sset_intersection",
  "umap.sparse.heap_push",
  "umap.sparse.log_beta",
  "umap.sparse.log_single_beta",
  "umap.sparse.make_heap",
  "umap.sparse.norm",
  "umap.sparse.rejection_sample",
  "umap.sparse.sparse_bray_curtis",
  "umap.sparse.sparse_canberra",
  "umap.sparse.sparse_chebyshev",
  "umap.sparse.sparse_correlation",
  "umap.sparse.sparse_cosine",
  "umap.sparse.sparse_dice",
  "umap.sparse.sparse_diff",
  "umap.sparse.sparse_euclidean",
  "umap.sparse.sparse_hamming",
  "umap.sparse.sparse_hellinger",
  "umap.sparse.sparse_jaccard",
  "umap.sparse.sparse_kulsinski",
  "umap.sparse.sparse_ll_dirichlet",
  "umap.sparse.sparse_manhattan",
  "umap.sparse.sparse_matching",
  "umap.sparse.sparse_minkowski",
  "umap.sparse.sparse_mul",
  "umap.sparse.sparse_named_distances",
  "umap.sparse.sparse_need_n_features",
  "umap.sparse.sparse_rogers_tanimoto",
  "umap.sparse.sparse_russellrao",
  "umap.sparse.sparse_sokal_michener",
  "umap.sparse.sparse_sokal_sneath",
  "umap.sparse.sparse_sum",
  "umap.sparse.tau_rand",
  "umap.sparse_nndescent",
  "umap.sparse_nndescent.deheap_sort",
  "umap.sparse_nndescent.heap_push",
  "umap.sparse_nndescent.make_heap",
  "umap.sparse_nndescent.new_build_candidates",
  "umap.sparse_nndescent.norm",
  "umap.sparse_nndescent.rejection_sample",
  "umap.sparse_nndescent.search_sparse_flat_tree",
  "umap.sparse_nndescent.smallest_flagged",
  "umap.sparse_nndescent.sparse_init_from_random",
  "umap.sparse_nndescent.sparse_init_from_tree",
  "umap.sparse_nndescent.sparse_init_rp_tree",
  "umap.sparse_nndescent.sparse_initialise_search",
  "umap.sparse_nndescent.sparse_initialized_nnd_search",
  "umap.sparse_nndescent.sparse_nn_descent",
  "umap.sparse_nndescent.tau_rand",
  "umap.sparse_nndescent.unchecked_heap_push",
  "umap.spectral",
  "umap.spectral.SPARSE_SPECIAL_METRICS",
  "umap.spectral.SPECIAL_METRICS",
  "umap.spectral.component_layout",
  "umap.spectral.multi_component_layout",
  "umap.spectral.pairwise_special_metric",
  "umap.spectral.sparse_named_distances",
  "umap.spectral.spectral_layout",
  "umap.umap_",
  "umap.umap_.DataFrameUMAP",
  "umap.umap_.INT32_MAX",
  "umap.umap_.INT32_MIN",
  "umap.umap_.MIN_K_DIST_SCALE",
  "umap.umap_.NPY_INFINITY",
  "umap.umap_.SMOOTH_K_TOLERANCE",
  "umap.umap_.UMAP",
  "umap.umap_._HAVE_PYNNDESCENT",
  "umap.umap_.breadth_first_search",
  "umap.umap_.compute_membership_strengths",
  "umap.umap_.csr_unique",
  "umap.umap_.deheap_sort",
  "umap.umap_.discrete_metric_simplicial_set_intersection",
  "umap.umap_.distances",
  "umap.umap_.fast_intersection",
  "umap.umap_.fast_knn_indices",
  "umap.umap_.fast_metric_intersection",
  "umap.umap_.find_ab_params",
  "umap.umap_.fuzzy_simplicial_set",
  "umap.umap_.general_simplicial_set_intersection",
  "umap.umap_.init_transform",
  "umap.umap_.initialise_search",
  "umap.umap_.initialized_nnd_search",
  "umap.umap_.make_epochs_per_sample",
  "umap.umap_.make_forest",
  "umap.umap_.nearest_neighbors",
  "umap.umap_.nn_descent",
  "umap.umap_.optimize_layout_euclidean",
  "umap.umap_.optimize_layout_generic",
  "umap.umap_.optimize_layout_inverse",
  "umap.umap_.reprocess_row",
  "umap.umap_.reset_local_connectivity",
  "umap.umap_.reset_local_metrics",
  "umap.umap_.rptree_leaf_array",
  "umap.umap_.simplicial_set_embedding",
  "umap.umap_.smooth_knn_dist",
  "umap.umap_.sparse",
  "umap.umap_.sparse_nndescent",
  "umap.umap_.spectral_layout",
  "umap.umap_.submatrix",
  "umap.umap_.tau_rand_int",
  "umap.umap_.ts",
  "umap.utils",
  "umap.utils.build_candidates",
  "umap.utils.csr_unique",
  "umap.utils.deheap_sort",
  "umap.utils.fast_knn_indices",
  "umap.utils.heap_push",
  "umap.utils.make_heap",
  "umap.utils.new_build_candidates",
  "umap.utils.norm",
  "umap.utils.rejection_sample",
  "umap.utils.smallest_flagged",
  "umap.utils.submatrix",
  "umap.utils.tau_rand",
  "umap.utils.tau_rand_int",
  "umap.utils.ts",
  "umap.utils.unchecked_heap_push",
  "umap.validation",
  "umap.validation.make_trustworthiness_calculator",
  "umap.validation.named_distances",
  "umap.validation.trustworthiness_vector"
 ]
}