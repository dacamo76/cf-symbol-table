{
 "errors": {
  "pandas_ml.core.frame": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "pandas_ml.core.generic": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  },
  "pandas_ml.core.series": {
   "exception": "'NoneType' object has no attribute 'type'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 311, in _complete_python",
    "    completion_names += self._complete_inherited(is_function=False)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 428, in _complete_inherited",
    "    if (name.api_type == 'function') == is_function:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 80, in api_type",
    "    if definition.type == 'funcdef':",
    "AttributeError: 'NoneType' object has no attribute 'type'",
    ""
   ]
  }
 },
 "symbols": [
  "pandas_ml.ConfusionMatrix",
  "pandas_ml.ModelFrame",
  "pandas_ml.ModelSeries",
  "pandas_ml.compat",
  "pandas_ml.compat.PANDAS_VERSION",
  "pandas_ml.compat._IMBLEARN_INSTALLED",
  "pandas_ml.compat._PANDAS_ge_019",
  "pandas_ml.compat._PANDAS_ge_020",
  "pandas_ml.compat._PANDAS_ge_021",
  "pandas_ml.compat._SKLEARN_INSTALLED",
  "pandas_ml.compat._SKLEARN_ge_017",
  "pandas_ml.compat._SKLEARN_ge_018",
  "pandas_ml.compat._SKLEARN_ge_019",
  "pandas_ml.compat.is_integer_dtype",
  "pandas_ml.confusion_matrix",
  "pandas_ml.confusion_matrix.BinaryConfusionMatrix",
  "pandas_ml.confusion_matrix.ConfusionMatrix",
  "pandas_ml.confusion_matrix.LabeledConfusionMatrix",
  "pandas_ml.confusion_matrix.abstract",
  "pandas_ml.confusion_matrix.abstract.ConfusionMatrixAbstract",
  "pandas_ml.confusion_matrix.abstract.binom_interval",
  "pandas_ml.confusion_matrix.abstract.class_agreement",
  "pandas_ml.confusion_matrix.abstract.prop_test",
  "pandas_ml.confusion_matrix.bcm",
  "pandas_ml.confusion_matrix.bcm.BinaryConfusionMatrix",
  "pandas_ml.confusion_matrix.bcm.ConfusionMatrixAbstract",
  "pandas_ml.confusion_matrix.cm",
  "pandas_ml.confusion_matrix.cm.ConfusionMatrix",
  "pandas_ml.confusion_matrix.cm.ConfusionMatrixAbstract",
  "pandas_ml.confusion_matrix.cm.LabeledConfusionMatrix",
  "pandas_ml.confusion_matrix.stats",
  "pandas_ml.confusion_matrix.stats.binom_interval",
  "pandas_ml.confusion_matrix.stats.choose",
  "pandas_ml.confusion_matrix.stats.class_agreement",
  "pandas_ml.confusion_matrix.stats.prop_test",
  "pandas_ml.confusion_matrix.test",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix.ConfusionMatrix",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix.TestConfusionMatrix",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix.asserts",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix.random_state",
  "pandas_ml.confusion_matrix.test.test_confusion_matrix.testing",
  "pandas_ml.core",
  "pandas_ml.core.ModelFrame",
  "pandas_ml.core.ModelSeries",
  "pandas_ml.core.accessor",
  "pandas_ml.core.accessor._AccessorMethods",
  "pandas_ml.core.accessor._attach_methods",
  "pandas_ml.core.accessor._wrap_data_func",
  "pandas_ml.core.accessor._wrap_data_target_func",
  "pandas_ml.core.accessor._wrap_target_pred_func",
  "pandas_ml.core.accessor._wrap_target_pred_noargs",
  "pandas_ml.core.base",
  "pandas_ml.core.base._BaseEstimator",
  "pandas_ml.core.base._ClassifierMixin",
  "pandas_ml.core.base._ClusterMixin",
  "pandas_ml.core.base._RegressorMixin",
  "pandas_ml.core.base._TransformerMixin",
  "pandas_ml.core.frame",
  "pandas_ml.core.frame.ModelFrame",
  "pandas_ml.core.generic",
  "pandas_ml.core.generic.ModelPredictor",
  "pandas_ml.core.generic._shared_docs",
  "pandas_ml.core.groupby",
  "pandas_ml.core.groupby.GroupedEstimator",
  "pandas_ml.core.groupby.ModelFrame",
  "pandas_ml.core.groupby.ModelFrameGroupBy",
  "pandas_ml.core.groupby.ModelPredictor",
  "pandas_ml.core.groupby.ModelSeries",
  "pandas_ml.core.groupby.ModelSeriesGroupBy",
  "pandas_ml.core.groupby._BaseEstimator",
  "pandas_ml.core.groupby._shared_docs",
  "pandas_ml.core.groupby.groupby",
  "pandas_ml.core.series",
  "pandas_ml.core.series.ModelSeries",
  "pandas_ml.imbaccessors",
  "pandas_ml.imbaccessors.ImbalanceMethods",
  "pandas_ml.imbaccessors.base",
  "pandas_ml.imbaccessors.base.ImbalanceMethods",
  "pandas_ml.imbaccessors.base._AccessorMethods",
  "pandas_ml.imbaccessors.test",
  "pandas_ml.imbaccessors.test.test_imbalance",
  "pandas_ml.imbaccessors.test.test_imbalance.TestImbalance",
  "pandas_ml.imbaccessors.test.test_imbalance.testing",
  "pandas_ml.info",
  "pandas_ml.misc",
  "pandas_ml.misc.patsy_wraps",
  "pandas_ml.misc.patsy_wraps.transform_with_patsy",
  "pandas_ml.misc.test",
  "pandas_ml.misc.test.test_patsy",
  "pandas_ml.misc.test.test_patsy.TestModelFrame",
  "pandas_ml.misc.test.test_patsy.testing",
  "pandas_ml.misc.transform_with_patsy",
  "pandas_ml.skaccessors",
  "pandas_ml.skaccessors.ClusterMethods",
  "pandas_ml.skaccessors.CovarianceMethods",
  "pandas_ml.skaccessors.CrossDecompositionMethods",
  "pandas_ml.skaccessors.CrossValidationMethods",
  "pandas_ml.skaccessors.DecompositionMethods",
  "pandas_ml.skaccessors.EnsembleMethods",
  "pandas_ml.skaccessors.FeatureExtractionMethods",
  "pandas_ml.skaccessors.FeatureSelectionMethods",
  "pandas_ml.skaccessors.GaussianProcessMethods",
  "pandas_ml.skaccessors.GridSearchMethods",
  "pandas_ml.skaccessors.IsotonicMethods",
  "pandas_ml.skaccessors.LearningCurveMethods",
  "pandas_ml.skaccessors.LinearModelMethods",
  "pandas_ml.skaccessors.ManifoldMethods",
  "pandas_ml.skaccessors.MetricsMethods",
  "pandas_ml.skaccessors.ModelSelectionMethods",
  "pandas_ml.skaccessors.NeighborsMethods",
  "pandas_ml.skaccessors.PipelineMethods",
  "pandas_ml.skaccessors.PreprocessingMethods",
  "pandas_ml.skaccessors.SVMMethods",
  "pandas_ml.skaccessors._maybe_sklearn_data",
  "pandas_ml.skaccessors.base",
  "pandas_ml.skaccessors.base.Bunch",
  "pandas_ml.skaccessors.base._maybe_sklearn_data",
  "pandas_ml.skaccessors.cluster",
  "pandas_ml.skaccessors.cluster.ClusterMethods",
  "pandas_ml.skaccessors.cluster._AccessorMethods",
  "pandas_ml.skaccessors.cluster._attach_methods",
  "pandas_ml.skaccessors.cluster._cluster_methods",
  "pandas_ml.skaccessors.cluster._wrap_data_func",
  "pandas_ml.skaccessors.covariance",
  "pandas_ml.skaccessors.covariance.CovarianceMethods",
  "pandas_ml.skaccessors.covariance._AccessorMethods",
  "pandas_ml.skaccessors.cross_decomposition",
  "pandas_ml.skaccessors.cross_decomposition.CrossDecompositionMethods",
  "pandas_ml.skaccessors.cross_decomposition._AccessorMethods",
  "pandas_ml.skaccessors.cross_validation",
  "pandas_ml.skaccessors.cross_validation.CrossValidationMethods",
  "pandas_ml.skaccessors.cross_validation._AccessorMethods",
  "pandas_ml.skaccessors.decomposition",
  "pandas_ml.skaccessors.decomposition.DecompositionMethods",
  "pandas_ml.skaccessors.decomposition._AccessorMethods",
  "pandas_ml.skaccessors.ensemble",
  "pandas_ml.skaccessors.ensemble.EnsembleMethods",
  "pandas_ml.skaccessors.ensemble.PartialDependenceMethods",
  "pandas_ml.skaccessors.ensemble._AccessorMethods",
  "pandas_ml.skaccessors.feature_extraction",
  "pandas_ml.skaccessors.feature_extraction.FeatureExtractionMethods",
  "pandas_ml.skaccessors.feature_extraction._AccessorMethods",
  "pandas_ml.skaccessors.feature_selection",
  "pandas_ml.skaccessors.feature_selection.FeatureSelectionMethods",
  "pandas_ml.skaccessors.feature_selection._AccessorMethods",
  "pandas_ml.skaccessors.feature_selection._attach_methods",
  "pandas_ml.skaccessors.feature_selection._fs_methods",
  "pandas_ml.skaccessors.feature_selection._wrap_data_target_func",
  "pandas_ml.skaccessors.gaussian_process",
  "pandas_ml.skaccessors.gaussian_process.GaussianProcessMethods",
  "pandas_ml.skaccessors.gaussian_process.RegressionModelsMethods",
  "pandas_ml.skaccessors.gaussian_process._AccessorMethods",
  "pandas_ml.skaccessors.gaussian_process._attach_methods",
  "pandas_ml.skaccessors.gaussian_process._regression_methods",
  "pandas_ml.skaccessors.gaussian_process._wrap_data_func",
  "pandas_ml.skaccessors.grid_search",
  "pandas_ml.skaccessors.grid_search.GridSearchMethods",
  "pandas_ml.skaccessors.grid_search._AccessorMethods",
  "pandas_ml.skaccessors.isotonic",
  "pandas_ml.skaccessors.isotonic.IsotonicMethods",
  "pandas_ml.skaccessors.isotonic._AccessorMethods",
  "pandas_ml.skaccessors.learning_curve",
  "pandas_ml.skaccessors.learning_curve.LearningCurveMethods",
  "pandas_ml.skaccessors.learning_curve._AccessorMethods",
  "pandas_ml.skaccessors.linear_model",
  "pandas_ml.skaccessors.linear_model.LinearModelMethods",
  "pandas_ml.skaccessors.linear_model._AccessorMethods",
  "pandas_ml.skaccessors.linear_model._attach_methods",
  "pandas_ml.skaccessors.linear_model._lm_methods",
  "pandas_ml.skaccessors.linear_model._wrap_data_target_func",
  "pandas_ml.skaccessors.manifold",
  "pandas_ml.skaccessors.manifold.ManifoldMethods",
  "pandas_ml.skaccessors.manifold._AccessorMethods",
  "pandas_ml.skaccessors.metrics",
  "pandas_ml.skaccessors.metrics.MetricsMethods",
  "pandas_ml.skaccessors.metrics._AccessorMethods",
  "pandas_ml.skaccessors.metrics._attach_methods",
  "pandas_ml.skaccessors.metrics._classification_methods",
  "pandas_ml.skaccessors.metrics._cluster_methods",
  "pandas_ml.skaccessors.metrics._cluster_methods_noargs",
  "pandas_ml.skaccessors.metrics._regression_methods",
  "pandas_ml.skaccessors.metrics._true_pred_methods",
  "pandas_ml.skaccessors.metrics._wrap_target_pred_func",
  "pandas_ml.skaccessors.metrics._wrap_target_pred_noargs",
  "pandas_ml.skaccessors.metrics.util",
  "pandas_ml.skaccessors.model_selection",
  "pandas_ml.skaccessors.model_selection.ModelSelectionMethods",
  "pandas_ml.skaccessors.model_selection._AccessorMethods",
  "pandas_ml.skaccessors.model_selection._SKLEARN_ge_018",
  "pandas_ml.skaccessors.neighbors",
  "pandas_ml.skaccessors.neighbors.NeighborsMethods",
  "pandas_ml.skaccessors.neighbors._AccessorMethods",
  "pandas_ml.skaccessors.neighbors._attach_methods",
  "pandas_ml.skaccessors.neighbors._neighbor_methods",
  "pandas_ml.skaccessors.neighbors._wrap_data_func",
  "pandas_ml.skaccessors.pipeline",
  "pandas_ml.skaccessors.pipeline.PipelineMethods",
  "pandas_ml.skaccessors.pipeline._AccessorMethods",
  "pandas_ml.skaccessors.preprocessing",
  "pandas_ml.skaccessors.preprocessing.PreprocessingMethods",
  "pandas_ml.skaccessors.preprocessing._AccessorMethods",
  "pandas_ml.skaccessors.preprocessing._SKLEARN_INSTALLED",
  "pandas_ml.skaccessors.preprocessing._SKLEARN_ge_017",
  "pandas_ml.skaccessors.preprocessing._attach_methods",
  "pandas_ml.skaccessors.preprocessing._keep_col_classes",
  "pandas_ml.skaccessors.preprocessing._preprocessing_methods",
  "pandas_ml.skaccessors.preprocessing._wrap_func",
  "pandas_ml.skaccessors.preprocessing.is_integer_dtype",
  "pandas_ml.skaccessors.svm",
  "pandas_ml.skaccessors.svm.SVMMethods",
  "pandas_ml.skaccessors.svm._AccessorMethods",
  "pandas_ml.skaccessors.test",
  "pandas_ml.skaccessors.test.test_base",
  "pandas_ml.skaccessors.test.test_base.TestSklearnBase",
  "pandas_ml.skaccessors.test.test_base.testing",
  "pandas_ml.skaccessors.test.test_calibration",
  "pandas_ml.skaccessors.test.test_calibration.TestCalibration",
  "pandas_ml.skaccessors.test.test_calibration.testing",
  "pandas_ml.skaccessors.test.test_cluster",
  "pandas_ml.skaccessors.test.test_cluster.TestCluster",
  "pandas_ml.skaccessors.test.test_cluster.testing",
  "pandas_ml.skaccessors.test.test_covariance",
  "pandas_ml.skaccessors.test.test_covariance.TestCovariance",
  "pandas_ml.skaccessors.test.test_covariance.testing",
  "pandas_ml.skaccessors.test.test_cross_decomposition",
  "pandas_ml.skaccessors.test.test_cross_decomposition.TestCrossDecomposition",
  "pandas_ml.skaccessors.test.test_cross_decomposition.testing",
  "pandas_ml.skaccessors.test.test_cross_validation",
  "pandas_ml.skaccessors.test.test_cross_validation.TestCrossValidation",
  "pandas_ml.skaccessors.test.test_cross_validation.testing",
  "pandas_ml.skaccessors.test.test_datasets",
  "pandas_ml.skaccessors.test.test_datasets.TestDatasets",
  "pandas_ml.skaccessors.test.test_datasets.testing",
  "pandas_ml.skaccessors.test.test_decomposition",
  "pandas_ml.skaccessors.test.test_decomposition.TestDecomposition",
  "pandas_ml.skaccessors.test.test_decomposition.testing",
  "pandas_ml.skaccessors.test.test_discriminant_analysis",
  "pandas_ml.skaccessors.test.test_discriminant_analysis.TestDiscriminantAnalysis",
  "pandas_ml.skaccessors.test.test_discriminant_analysis.testing",
  "pandas_ml.skaccessors.test.test_dummy",
  "pandas_ml.skaccessors.test.test_dummy.TestDummy",
  "pandas_ml.skaccessors.test.test_dummy.testing",
  "pandas_ml.skaccessors.test.test_ensemble",
  "pandas_ml.skaccessors.test.test_ensemble.TestEnsemble",
  "pandas_ml.skaccessors.test.test_ensemble.testing",
  "pandas_ml.skaccessors.test.test_feature_extraction",
  "pandas_ml.skaccessors.test.test_feature_extraction.TestFeatureExtraction",
  "pandas_ml.skaccessors.test.test_feature_extraction.testing",
  "pandas_ml.skaccessors.test.test_feature_selection",
  "pandas_ml.skaccessors.test.test_feature_selection.TestFeatureSelection",
  "pandas_ml.skaccessors.test.test_feature_selection.testing",
  "pandas_ml.skaccessors.test.test_gaussian_process",
  "pandas_ml.skaccessors.test.test_gaussian_process.TestGaussianProcess",
  "pandas_ml.skaccessors.test.test_gaussian_process.testing",
  "pandas_ml.skaccessors.test.test_grid_search",
  "pandas_ml.skaccessors.test.test_grid_search.TestGridSearch",
  "pandas_ml.skaccessors.test.test_grid_search.testing",
  "pandas_ml.skaccessors.test.test_isotonic",
  "pandas_ml.skaccessors.test.test_isotonic.TestIsotonic",
  "pandas_ml.skaccessors.test.test_isotonic.testing",
  "pandas_ml.skaccessors.test.test_kernel_approximation",
  "pandas_ml.skaccessors.test.test_kernel_approximation.TestKernelApproximation",
  "pandas_ml.skaccessors.test.test_kernel_approximation.testing",
  "pandas_ml.skaccessors.test.test_kernel_ridge",
  "pandas_ml.skaccessors.test.test_kernel_ridge.TestKernelRidge",
  "pandas_ml.skaccessors.test.test_kernel_ridge.testing",
  "pandas_ml.skaccessors.test.test_learning_curve",
  "pandas_ml.skaccessors.test.test_learning_curve.TestLearningCurve",
  "pandas_ml.skaccessors.test.test_learning_curve.testing",
  "pandas_ml.skaccessors.test.test_linear_model",
  "pandas_ml.skaccessors.test.test_linear_model.TestLinearModel",
  "pandas_ml.skaccessors.test.test_linear_model.testing",
  "pandas_ml.skaccessors.test.test_manifold",
  "pandas_ml.skaccessors.test.test_manifold.TestManifold",
  "pandas_ml.skaccessors.test.test_manifold.testing",
  "pandas_ml.skaccessors.test.test_metrics",
  "pandas_ml.skaccessors.test.test_metrics.TestAClassificationMetrics3ClassesMultiTargets",
  "pandas_ml.skaccessors.test.test_metrics.TestClassificationMetrics",
  "pandas_ml.skaccessors.test.test_metrics.TestClusteringMetrics",
  "pandas_ml.skaccessors.test.test_metrics.TestMetricsCommon",
  "pandas_ml.skaccessors.test.test_metrics.TestRegressionMetrics",
  "pandas_ml.skaccessors.test.test_metrics.testing",
  "pandas_ml.skaccessors.test.test_mixture",
  "pandas_ml.skaccessors.test.test_mixture.TestMixture",
  "pandas_ml.skaccessors.test.test_mixture.testing",
  "pandas_ml.skaccessors.test.test_model_selection",
  "pandas_ml.skaccessors.test.test_model_selection.TestHyperParameterOptimizer",
  "pandas_ml.skaccessors.test.test_model_selection.TestModelSelection",
  "pandas_ml.skaccessors.test.test_model_selection.TestModelValidation",
  "pandas_ml.skaccessors.test.test_model_selection.TestSplitter",
  "pandas_ml.skaccessors.test.test_model_selection.random_state",
  "pandas_ml.skaccessors.test.test_model_selection.testing",
  "pandas_ml.skaccessors.test.test_multiclass",
  "pandas_ml.skaccessors.test.test_multiclass.TestMultiClass",
  "pandas_ml.skaccessors.test.test_multiclass.testing",
  "pandas_ml.skaccessors.test.test_multioutput",
  "pandas_ml.skaccessors.test.test_multioutput.TestMultiOutput",
  "pandas_ml.skaccessors.test.test_multioutput.random_state",
  "pandas_ml.skaccessors.test.test_multioutput.testing",
  "pandas_ml.skaccessors.test.test_naive_bayes",
  "pandas_ml.skaccessors.test.test_naive_bayes.TestNaiveBayes",
  "pandas_ml.skaccessors.test.test_naive_bayes.testing",
  "pandas_ml.skaccessors.test.test_neighbors",
  "pandas_ml.skaccessors.test.test_neighbors.TestNeighbors",
  "pandas_ml.skaccessors.test.test_neighbors.testing",
  "pandas_ml.skaccessors.test.test_neural_network",
  "pandas_ml.skaccessors.test.test_neural_network.TestNeuralNtwork",
  "pandas_ml.skaccessors.test.test_neural_network.testing",
  "pandas_ml.skaccessors.test.test_pipeline",
  "pandas_ml.skaccessors.test.test_pipeline.TestPipeline",
  "pandas_ml.skaccessors.test.test_pipeline.testing",
  "pandas_ml.skaccessors.test.test_preprocessing",
  "pandas_ml.skaccessors.test.test_preprocessing.TestPreprocessing",
  "pandas_ml.skaccessors.test.test_preprocessing.testing",
  "pandas_ml.skaccessors.test.test_random_projection",
  "pandas_ml.skaccessors.test.test_random_projection.TestRandomProjection",
  "pandas_ml.skaccessors.test.test_random_projection.testing",
  "pandas_ml.skaccessors.test.test_semi_supervised",
  "pandas_ml.skaccessors.test.test_semi_supervised.TestSemiSupervised",
  "pandas_ml.skaccessors.test.test_semi_supervised.testing",
  "pandas_ml.skaccessors.test.test_svm",
  "pandas_ml.skaccessors.test.test_svm.TestSVM",
  "pandas_ml.skaccessors.test.test_svm.testing",
  "pandas_ml.skaccessors.test.test_tree",
  "pandas_ml.skaccessors.test.test_tree.TestTree",
  "pandas_ml.skaccessors.test.test_tree.testing",
  "pandas_ml.smaccessors",
  "pandas_ml.smaccessors._maybe_statsmodels_data",
  "pandas_ml.smaccessors.base",
  "pandas_ml.smaccessors.base.StatsModelsRegressor",
  "pandas_ml.smaccessors.base._maybe_statsmodels_data",
  "pandas_ml.smaccessors.base.base",
  "pandas_ml.smaccessors.test",
  "pandas_ml.smaccessors.test.test_base",
  "pandas_ml.smaccessors.test.test_base.TestBaseRegressor",
  "pandas_ml.smaccessors.test.test_base.base",
  "pandas_ml.smaccessors.test.test_base.testing",
  "pandas_ml.smaccessors.test.test_datasets",
  "pandas_ml.smaccessors.test.test_datasets.TestStatsModelsDatasets",
  "pandas_ml.smaccessors.test.test_datasets.testing",
  "pandas_ml.snsaccessors",
  "pandas_ml.snsaccessors.SeabornMethods",
  "pandas_ml.snsaccessors.base",
  "pandas_ml.snsaccessors.base.SeabornMethods",
  "pandas_ml.snsaccessors.base._AccessorMethods",
  "pandas_ml.snsaccessors.base._attach_methods",
  "pandas_ml.snsaccessors.base._categorical_plots",
  "pandas_ml.snsaccessors.base._data_plots",
  "pandas_ml.snsaccessors.base._wrap_categorical_plot",
  "pandas_ml.snsaccessors.base._wrap_data_plot",
  "pandas_ml.snsaccessors.base._wrap_xy_plot",
  "pandas_ml.snsaccessors.base._xy_plots",
  "pandas_ml.snsaccessors.test",
  "pandas_ml.snsaccessors.test.test_sns",
  "pandas_ml.snsaccessors.test.test_sns.SeabornCase",
  "pandas_ml.snsaccessors.test.test_sns.TestSeabornAttrs",
  "pandas_ml.snsaccessors.test.test_sns.TestSeabornCategorical",
  "pandas_ml.snsaccessors.test.test_sns.TestSeabornDistribution",
  "pandas_ml.snsaccessors.test.test_sns.TestSeabornRegression",
  "pandas_ml.snsaccessors.test.test_sns.testing",
  "pandas_ml.test",
  "pandas_ml.test.test_frame",
  "pandas_ml.test.test_frame.TestModelFrame",
  "pandas_ml.test.test_frame.testing",
  "pandas_ml.test.test_groupby",
  "pandas_ml.test.test_groupby.TestModelFrameGroupBy",
  "pandas_ml.test.test_groupby.TestModelSeriesGroupBy",
  "pandas_ml.test.test_groupby.testing",
  "pandas_ml.test.test_series",
  "pandas_ml.test.test_series.TestModelSeries",
  "pandas_ml.test.test_series.testing",
  "pandas_ml.tools",
  "pandas_ml.tools._get_version",
  "pandas_ml.tools.info",
  "pandas_ml.util",
  "pandas_ml.util._is_1d_harray",
  "pandas_ml.util._is_1d_varray",
  "pandas_ml.util._util",
  "pandas_ml.util._util._is_1d_harray",
  "pandas_ml.util._util._is_1d_varray",
  "pandas_ml.util.testing",
  "pandas_ml.util.testing.PlottingTestCase",
  "pandas_ml.util.testing.TestCase",
  "pandas_ml.util.testing.TestCase.random_state",
  "pandas_ml.util.testing._flatten",
  "pandas_ml.version",
  "pandas_ml.version.version",
  "pandas_ml.xgboost",
  "pandas_ml.xgboost.XGBoostMethods",
  "pandas_ml.xgboost.base",
  "pandas_ml.xgboost.base.XGBoostMethods",
  "pandas_ml.xgboost.base._AccessorMethods",
  "pandas_ml.xgboost.base._to_dmatrix",
  "pandas_ml.xgboost.test",
  "pandas_ml.xgboost.test.test_base",
  "pandas_ml.xgboost.test.test_base.TestXGBoost",
  "pandas_ml.xgboost.test.test_base.testing"
 ]
}