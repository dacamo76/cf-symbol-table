{
 "errors": {},
 "symbols": [
  "libpython.BuiltInFunctionProxy",
  "libpython.BuiltInMethodProxy",
  "libpython.ENCODING",
  "libpython.Frame",
  "libpython.HeapTypeObjectPtr",
  "libpython.InstanceProxy",
  "libpython.MAX_OUTPUT_LEN",
  "libpython.NullPyObjectPtr",
  "libpython.ProxyAlreadyVisited",
  "libpython.ProxyException",
  "libpython.PyBacktrace",
  "libpython.PyBaseExceptionObjectPtr",
  "libpython.PyBoolObjectPtr",
  "libpython.PyBytesObjectPtr",
  "libpython.PyCFunctionObjectPtr",
  "libpython.PyClassObjectPtr",
  "libpython.PyCodeObjectPtr",
  "libpython.PyDictObjectPtr",
  "libpython.PyDown",
  "libpython.PyFrameObjectPtr",
  "libpython.PyList",
  "libpython.PyLocals",
  "libpython.PyLongObjectPtr",
  "libpython.PyNoneStructPtr",
  "libpython.PyObjectPtr",
  "libpython.PyPrint",
  "libpython.PySetObjectPtr",
  "libpython.PyTupleObjectPtr",
  "libpython.PyTypeObjectPtr",
  "libpython.PyUnicodeObjectPtr",
  "libpython.PyUp",
  "libpython.PyVarObjectPtr",
  "libpython.Py_TPFLAGS_BASE_EXC_SUBCLASS",
  "libpython.Py_TPFLAGS_BYTES_SUBCLASS",
  "libpython.Py_TPFLAGS_DICT_SUBCLASS",
  "libpython.Py_TPFLAGS_HEAPTYPE",
  "libpython.Py_TPFLAGS_LIST_SUBCLASS",
  "libpython.Py_TPFLAGS_LONG_SUBCLASS",
  "libpython.Py_TPFLAGS_TUPLE_SUBCLASS",
  "libpython.Py_TPFLAGS_TYPE_SUBCLASS",
  "libpython.Py_TPFLAGS_UNICODE_SUBCLASS",
  "libpython.SIZEOF_VOID_P",
  "libpython.StringTruncated",
  "libpython.TruncatedStringIO",
  "libpython._PyObject_VAR_SIZE",
  "libpython._is_pep393",
  "libpython._type_char_ptr",
  "libpython._type_unsigned_char_ptr",
  "libpython._type_unsigned_int_ptr",
  "libpython._type_unsigned_short_ptr",
  "libpython._type_void_ptr",
  "libpython._unichr",
  "libpython._write_instance_repr",
  "libpython.hexdigits",
  "libpython.int_from_int",
  "libpython.long",
  "libpython.move_in_stack",
  "libpython.os_fsencode",
  "libpython.pretty_printer_lookup",
  "libpython.register",
  "libpython.safe_range",
  "libpython.safety_limit",
  "libpython.stringify",
  "libpython.unichr",
  "libpython.write_unicode",
  "libpython.xrange"
 ]
}