{
 "errors": {},
 "symbols": [
  "portalocker.AlreadyLocked",
  "portalocker.LOCK_EX",
  "portalocker.LOCK_NB",
  "portalocker.LOCK_SH",
  "portalocker.LOCK_UN",
  "portalocker.Lock",
  "portalocker.LockException",
  "portalocker.RLock",
  "portalocker.TemporaryFileLock",
  "portalocker.__about__",
  "portalocker.__about__.__author__",
  "portalocker.__about__.__description__",
  "portalocker.__about__.__email__",
  "portalocker.__about__.__package_name__",
  "portalocker.__about__.__url__",
  "portalocker.__about__.__version__",
  "portalocker.__all__",
  "portalocker.__author__",
  "portalocker.__description__",
  "portalocker.__email__",
  "portalocker.__package_name__",
  "portalocker.__url__",
  "portalocker.__version__",
  "portalocker.constants",
  "portalocker.constants.LOCK_EX",
  "portalocker.constants.LOCK_NB",
  "portalocker.constants.LOCK_SH",
  "portalocker.constants.LOCK_UN",
  "portalocker.exceptions",
  "portalocker.exceptions.AlreadyLocked",
  "portalocker.exceptions.BaseLockException",
  "portalocker.exceptions.FileToLarge",
  "portalocker.exceptions.LockException",
  "portalocker.lock",
  "portalocker.open_atomic",
  "portalocker.portalocker",
  "portalocker.portalocker.__overlapped",
  "portalocker.portalocker.lock",
  "portalocker.portalocker.unlock",
  "portalocker.unlock",
  "portalocker.utils",
  "portalocker.utils.DEFAULT_CHECK_INTERVAL",
  "portalocker.utils.DEFAULT_TIMEOUT",
  "portalocker.utils.LOCK_METHOD",
  "portalocker.utils.Lock",
  "portalocker.utils.RLock",
  "portalocker.utils.TemporaryFileLock",
  "portalocker.utils.__all__",
  "portalocker.utils.current_time",
  "portalocker.utils.open_atomic",
  "tests.conftest",
  "tests.conftest.tmpfile",
  "tests.temporary_file_lock",
  "tests.temporary_file_lock.test_temporary_file_lock",
  "tests.test_combined",
  "tests.test_combined.test_combined",
  "tests.tests",
  "tests.tests.test_acquire_release",
  "tests.tests.test_class",
  "tests.tests.test_exceptions",
  "tests.tests.test_exlusive",
  "tests.tests.test_release_unacquired",
  "tests.tests.test_rlock_acquire_release",
  "tests.tests.test_shared",
  "tests.tests.test_simple",
  "tests.tests.test_truncate",
  "tests.tests.test_with_timeout",
  "tests.tests.test_without_fail",
  "tests.tests.test_without_timeout"
 ]
}