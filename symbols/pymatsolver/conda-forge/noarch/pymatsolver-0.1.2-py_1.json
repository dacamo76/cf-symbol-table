{
 "errors": {},
 "symbols": [
  "pymatsolver.AvailableSolvers",
  "pymatsolver.Backward",
  "pymatsolver.BicgJacobi",
  "pymatsolver.Diagonal",
  "pymatsolver.Forward",
  "pymatsolver.Mumps",
  "pymatsolver.MumpsSolver",
  "pymatsolver.Pardiso",
  "pymatsolver.PardisoSolver",
  "pymatsolver.Solver",
  "pymatsolver.SolverCG",
  "pymatsolver.SolverHelp",
  "pymatsolver.SolverLU",
  "pymatsolver.WrapDirect",
  "pymatsolver.WrapIterative",
  "pymatsolver.__author__",
  "pymatsolver.__copyright__",
  "pymatsolver.__license__",
  "pymatsolver.__version__",
  "pymatsolver.direct",
  "pymatsolver.direct.Base",
  "pymatsolver.direct.Pardiso",
  "pymatsolver.iterative",
  "pymatsolver.iterative.Base",
  "pymatsolver.iterative.BicgJacobi",
  "pymatsolver.mumps",
  "pymatsolver.mumps.Base",
  "pymatsolver.mumps.Mumps",
  "pymatsolver.mumps._MUMPSINT",
  "pymatsolver.mumps._Pointer",
  "pymatsolver.mumps._mumpsErrors",
  "pymatsolver.solvers",
  "pymatsolver.solvers.Backward",
  "pymatsolver.solvers.Base",
  "pymatsolver.solvers.Diagonal",
  "pymatsolver.solvers.Forward",
  "pymatsolver.wrappers",
  "pymatsolver.wrappers.Base",
  "pymatsolver.wrappers.Solver",
  "pymatsolver.wrappers.SolverCG",
  "pymatsolver.wrappers.SolverLU",
  "pymatsolver.wrappers.WrapDirect",
  "pymatsolver.wrappers.WrapIterative",
  "tests.module_strings",
  "tests.suites",
  "tests.testSuite",
  "tests.test_Basic",
  "tests.test_Basic.TOL",
  "tests.test_Basic.TestBasic",
  "tests.test_BicgJacobi",
  "tests.test_BicgJacobi.TOL",
  "tests.test_BicgJacobi.TestBicgJacobi",
  "tests.test_BicgJacobi.TestPardisoComplex",
  "tests.test_Mumps",
  "tests.test_Mumps.TOL",
  "tests.test_Mumps.TestMumps",
  "tests.test_Pardiso",
  "tests.test_Pardiso.TOL",
  "tests.test_Pardiso.TestPardiso",
  "tests.test_Scipy",
  "tests.test_Scipy.TOLD",
  "tests.test_Scipy.TOLI",
  "tests.test_Scipy.TestSolver",
  "tests.test_Scipy.dotest",
  "tests.test_Scipy.numRHS",
  "tests.test_Triangle",
  "tests.test_Triangle.TOL",
  "tests.test_Triangle.TestTriangle",
  "tests.test_file_strings"
 ]
}