{
 "errors": {},
 "symbols": [
  "sklego.__version__",
  "sklego.base",
  "sklego.base.Clusterer",
  "sklego.base.OutlierModel",
  "sklego.base.ProbabilisticClassifier",
  "sklego.common",
  "sklego.common.TrainOnlyTransformerMixin",
  "sklego.common.as_list",
  "sklego.common.expanding_list",
  "sklego.common.flatten",
  "sklego.datasets",
  "sklego.datasets.fetch_creditcard",
  "sklego.datasets.load_abalone",
  "sklego.datasets.load_arrests",
  "sklego.datasets.load_chicken",
  "sklego.datasets.load_hearts",
  "sklego.datasets.load_heroes",
  "sklego.datasets.load_penguins",
  "sklego.datasets.make_simpleseries",
  "sklego.decomposition",
  "sklego.decomposition.PCAOutlierDetection",
  "sklego.decomposition.UMAPOutlierDetection",
  "sklego.decomposition.__all__",
  "sklego.decomposition.pca_reconstruction",
  "sklego.decomposition.pca_reconstruction.PCAOutlierDetection",
  "sklego.decomposition.umap_reconstruction",
  "sklego.decomposition.umap_reconstruction.UMAPOutlierDetection",
  "sklego.dummy",
  "sklego.dummy.RandomRegressor",
  "sklego.linear_model",
  "sklego.linear_model.DeadZoneRegressor",
  "sklego.linear_model.DemographicParityClassifier",
  "sklego.linear_model.EqualOpportunityClassifier",
  "sklego.linear_model.FairClassifier",
  "sklego.linear_model.LowessRegression",
  "sklego.linear_model.NotInstalledPackage",
  "sklego.linear_model.ProbWeightRegression",
  "sklego.linear_model._DemographicParityClassifier",
  "sklego.linear_model._EqualOpportunityClassifier",
  "sklego.linear_model._FairClassifier",
  "sklego.linear_model.cp",
  "sklego.meta",
  "sklego.meta.ConfusionBalancer",
  "sklego.meta.DecayEstimator",
  "sklego.meta.EstimatorTransformer",
  "sklego.meta.GroupedEstimator",
  "sklego.meta.GroupedPredictor",
  "sklego.meta.GroupedTransformer",
  "sklego.meta.OutlierClassifier",
  "sklego.meta.OutlierRemover",
  "sklego.meta.RegressionOutlierDetector",
  "sklego.meta.SubjectiveClassifier",
  "sklego.meta.Thresholder",
  "sklego.meta.__all__",
  "sklego.meta._grouped_utils",
  "sklego.meta._grouped_utils._check_grouping_columns",
  "sklego.meta._grouped_utils._data_format_checks",
  "sklego.meta._grouped_utils._shape_check",
  "sklego.meta._grouped_utils._split_groups_and_values",
  "sklego.meta._grouped_utils.as_list",
  "sklego.meta._grouped_utils.constant_shrinkage",
  "sklego.meta._grouped_utils.min_n_obs_shrinkage",
  "sklego.meta._grouped_utils.relative_shrinkage",
  "sklego.meta.confusion_balancer",
  "sklego.meta.decay_estimator",
  "sklego.meta.estimator_transformer",
  "sklego.meta.estimator_transformer.EstimatorTransformer",
  "sklego.meta.grouped_estimator",
  "sklego.meta.grouped_estimator.GroupedEstimator",
  "sklego.meta.grouped_predictor",
  "sklego.meta.grouped_predictor.GroupedPredictor",
  "sklego.meta.grouped_predictor.as_list",
  "sklego.meta.grouped_predictor.expanding_list",
  "sklego.meta.grouped_transformer",
  "sklego.meta.grouped_transformer.GroupedTransformer",
  "sklego.meta.outlier_classifier",
  "sklego.meta.outlier_classifier.OutlierClassifier",
  "sklego.meta.outlier_classifier.OutlierModel",
  "sklego.meta.outlier_remover",
  "sklego.meta.outlier_remover.OutlierRemover",
  "sklego.meta.outlier_remover.TrainOnlyTransformerMixin",
  "sklego.meta.regression_outlier_detector",
  "sklego.meta.regression_outlier_detector.RegressionOutlierDetector",
  "sklego.meta.subjective_classifier",
  "sklego.meta.subjective_classifier.SubjectiveClassifier",
  "sklego.meta.thresholder",
  "sklego.meta.thresholder.ProbabilisticClassifier",
  "sklego.meta.thresholder.Thresholder",
  "sklego.metrics",
  "sklego.metrics.correlation_score",
  "sklego.metrics.equal_opportunity_score",
  "sklego.metrics.p_percent_score",
  "sklego.metrics.subset_score",
  "sklego.mixture",
  "sklego.mixture.BayesianGMMClassifier",
  "sklego.mixture.BayesianGMMOutlierDetector",
  "sklego.mixture.GMMClassifier",
  "sklego.mixture.GMMOutlierDetector",
  "sklego.mixture.__all__",
  "sklego.mixture.bayesian_gmm_classifier",
  "sklego.mixture.bayesian_gmm_classifier.BayesianGMMClassifier",
  "sklego.mixture.bayesian_gmm_detector",
  "sklego.mixture.bayesian_gmm_detector.BayesianGMMOutlierDetector",
  "sklego.mixture.gmm_classifier",
  "sklego.mixture.gmm_classifier.GMMClassifier",
  "sklego.mixture.gmm_outlier_detector",
  "sklego.mixture.gmm_outlier_detector.GMMOutlierDetector",
  "sklego.model_selection",
  "sklego.model_selection.Clusterer",
  "sklego.model_selection.KlusterFoldValidation",
  "sklego.model_selection.TimeGapSplit",
  "sklego.naive_bayes",
  "sklego.naive_bayes.BayesianGaussianMixtureNB",
  "sklego.naive_bayes.GaussianMixtureNB",
  "sklego.neighbors",
  "sklego.neighbors.BayesianKernelDensityClassifier",
  "sklego.notinstalled",
  "sklego.notinstalled.KNOWN_PACKAGES",
  "sklego.notinstalled.NotInstalledPackage",
  "sklego.pandas_utils",
  "sklego.pandas_utils._add_lagged_numpy_columns",
  "sklego.pandas_utils._add_lagged_pandas_columns",
  "sklego.pandas_utils._get_shape_delta",
  "sklego.pandas_utils.add_lags",
  "sklego.pandas_utils.as_list",
  "sklego.pandas_utils.log_step",
  "sklego.pipeline",
  "sklego.pipeline.DebugPipeline",
  "sklego.pipeline._cache_with_function_log_statement",
  "sklego.pipeline._log_wrapper",
  "sklego.pipeline.default_log_callback",
  "sklego.pipeline.make_debug_pipeline",
  "sklego.preprocessing",
  "sklego.preprocessing.ColumnCapper",
  "sklego.preprocessing.ColumnDropper",
  "sklego.preprocessing.ColumnSelector",
  "sklego.preprocessing.DictMapper",
  "sklego.preprocessing.IdentityTransformer",
  "sklego.preprocessing.InformationFilter",
  "sklego.preprocessing.IntervalEncoder",
  "sklego.preprocessing.OrthogonalTransformer",
  "sklego.preprocessing.OutlierRemover",
  "sklego.preprocessing.PandasTypeSelector",
  "sklego.preprocessing.PatsyTransformer",
  "sklego.preprocessing.RandomAdder",
  "sklego.preprocessing.RepeatingBasisFunction",
  "sklego.preprocessing.__all__",
  "sklego.preprocessing.columncapper",
  "sklego.preprocessing.columncapper.ColumnCapper",
  "sklego.preprocessing.dictmapper",
  "sklego.preprocessing.dictmapper.DictMapper",
  "sklego.preprocessing.identitytransformer",
  "sklego.preprocessing.identitytransformer.IdentityTransformer",
  "sklego.preprocessing.intervalencoder",
  "sklego.preprocessing.intervalencoder.IntervalEncoder",
  "sklego.preprocessing.intervalencoder.NotInstalledPackage",
  "sklego.preprocessing.intervalencoder._mk_average",
  "sklego.preprocessing.intervalencoder._mk_monotonic_average",
  "sklego.preprocessing.intervalencoder.cp",
  "sklego.preprocessing.outlier_remover",
  "sklego.preprocessing.outlier_remover.OutlierRemover",
  "sklego.preprocessing.outlier_remover.TrainOnlyTransformerMixin",
  "sklego.preprocessing.pandastransformers",
  "sklego.preprocessing.pandastransformers.ColumnDropper",
  "sklego.preprocessing.pandastransformers.ColumnSelector",
  "sklego.preprocessing.pandastransformers.PandasTypeSelector",
  "sklego.preprocessing.pandastransformers.as_list",
  "sklego.preprocessing.patsytransformer",
  "sklego.preprocessing.patsytransformer.PatsyTransformer",
  "sklego.preprocessing.projections",
  "sklego.preprocessing.projections.InformationFilter",
  "sklego.preprocessing.projections.OrthogonalTransformer",
  "sklego.preprocessing.projections.as_list",
  "sklego.preprocessing.projections.scalar_projection",
  "sklego.preprocessing.projections.vector_projection",
  "sklego.preprocessing.randomadder",
  "sklego.preprocessing.randomadder.RandomAdder",
  "sklego.preprocessing.randomadder.TrainOnlyTransformerMixin",
  "sklego.preprocessing.repeatingbasis",
  "sklego.preprocessing.repeatingbasis.RepeatingBasisFunction",
  "sklego.preprocessing.repeatingbasis._RepeatingBasisFunction",
  "sklego.testing",
  "sklego.testing.check_shape_remains_same_classifier",
  "sklego.testing.check_shape_remains_same_regressor",
  "sklego.this",
  "sklego.this.poem",
  "tests.conftest",
  "tests.conftest.classifier_checks",
  "tests.conftest.estimator_checks",
  "tests.conftest.general_checks",
  "tests.conftest.id_func",
  "tests.conftest.k_vals",
  "tests.conftest.n_vals",
  "tests.conftest.nonmeta_checks",
  "tests.conftest.np_types",
  "tests.conftest.outlier_checks",
  "tests.conftest.random_xy_dataset_clf",
  "tests.conftest.random_xy_dataset_multiclf",
  "tests.conftest.random_xy_dataset_regr",
  "tests.conftest.regressor_checks",
  "tests.conftest.select_tests",
  "tests.conftest.sensitive_classification_dataset",
  "tests.conftest.sensitive_multiclass_classification_dataset",
  "tests.conftest.transformer_checks",
  "tests.test_common",
  "tests.test_common.test_basics",
  "tests.test_common.test_basics.test_as_list_ints",
  "tests.test_common.test_basics.test_as_list_other",
  "tests.test_common.test_basics.test_as_list_strings",
  "tests.test_common.test_transformerselectormixin",
  "tests.test_common.test_transformerselectormixin.TrainOnlyTrainOnlyTransformer",
  "tests.test_common.test_transformerselectormixin.k_vals",
  "tests.test_common.test_transformerselectormixin.n_vals",
  "tests.test_common.test_transformerselectormixin.np_types",
  "tests.test_common.test_transformerselectormixin.test_bare_trainonlytransformer",
  "tests.test_common.test_transformerselectormixin.test_hash_numpy",
  "tests.test_common.test_transformerselectormixin.test_hash_pandas",
  "tests.test_common.test_transformerselectormixin.test_pipeline_trainonlytransformer",
  "tests.test_datasets",
  "tests.test_datasets.test_abalone1",
  "tests.test_datasets.test_abalone2",
  "tests.test_datasets.test_chickweight1",
  "tests.test_datasets.test_chickweight2",
  "tests.test_datasets.test_load_hearts",
  "tests.test_datasets.test_penguin1",
  "tests.test_datasets.test_penguin2",
  "tests.test_datasets.test_simpleseries_constant_season",
  "tests.test_estimators",
  "tests.test_estimators.test_basics",
  "tests.test_estimators.test_basics.id_func",
  "tests.test_estimators.test_basics.test_shape_classification",
  "tests.test_estimators.test_basics.test_shape_regression",
  "tests.test_estimators.test_deadzone",
  "tests.test_estimators.test_deadzone.test_deadzone",
  "tests.test_estimators.test_deadzone.test_values_uniform",
  "tests.test_estimators.test_demographic_parity",
  "tests.test_estimators.test_demographic_parity._test_same",
  "tests.test_estimators.test_demographic_parity.classifier_checks",
  "tests.test_estimators.test_demographic_parity.general_checks",
  "tests.test_estimators.test_demographic_parity.nonmeta_checks",
  "tests.test_estimators.test_demographic_parity.test_deprecation",
  "tests.test_estimators.test_demographic_parity.test_fairness",
  "tests.test_estimators.test_demographic_parity.test_regularization",
  "tests.test_estimators.test_demographic_parity.test_same_logistic",
  "tests.test_estimators.test_demographic_parity.test_standard_checks",
  "tests.test_estimators.test_equal_opportunity",
  "tests.test_estimators.test_equal_opportunity._test_same",
  "tests.test_estimators.test_equal_opportunity.classifier_checks",
  "tests.test_estimators.test_equal_opportunity.general_checks",
  "tests.test_estimators.test_equal_opportunity.nonmeta_checks",
  "tests.test_estimators.test_equal_opportunity.test_fairness",
  "tests.test_estimators.test_equal_opportunity.test_regularization",
  "tests.test_estimators.test_equal_opportunity.test_same_logistic",
  "tests.test_estimators.test_equal_opportunity.test_standard_checks",
  "tests.test_estimators.test_gmm_naive_bayes",
  "tests.test_estimators.test_gmm_naive_bayes.dataset",
  "tests.test_estimators.test_gmm_naive_bayes.estimator_checks",
  "tests.test_estimators.test_gmm_naive_bayes.general_checks",
  "tests.test_estimators.test_gmm_naive_bayes.nonmeta_checks",
  "tests.test_estimators.test_gmm_naive_bayes.test_estimator_checks",
  "tests.test_estimators.test_gmm_naive_bayes.test_obvious_usecase",
  "tests.test_estimators.test_lowess",
  "tests.test_estimators.test_mixture_classifier",
  "tests.test_estimators.test_mixture_classifier.estimator_checks",
  "tests.test_estimators.test_mixture_classifier.general_checks",
  "tests.test_estimators.test_mixture_classifier.nonmeta_checks",
  "tests.test_estimators.test_mixture_classifier.test_estimator_checks",
  "tests.test_estimators.test_mixture_classifier.test_obvious_usecase",
  "tests.test_estimators.test_mixture_detector",
  "tests.test_estimators.test_mixture_detector.dataset",
  "tests.test_estimators.test_mixture_detector.general_checks",
  "tests.test_estimators.test_mixture_detector.nonmeta_checks",
  "tests.test_estimators.test_mixture_detector.test_estimator_checks",
  "tests.test_estimators.test_mixture_detector.test_obvious_usecase_github",
  "tests.test_estimators.test_mixture_detector.test_obvious_usecase_quantile",
  "tests.test_estimators.test_mixture_detector.test_obvious_usecase_stddev",
  "tests.test_estimators.test_mixture_detector.test_thresh_effect_quantile",
  "tests.test_estimators.test_mixture_detector.test_thresh_effect_stddev",
  "tests.test_estimators.test_mixture_detector.test_value_error_threshold",
  "tests.test_estimators.test_neighbor_classifier",
  "tests.test_estimators.test_neighbor_classifier.estimator_checks",
  "tests.test_estimators.test_neighbor_classifier.general_checks",
  "tests.test_estimators.test_neighbor_classifier.nonmeta_checks",
  "tests.test_estimators.test_neighbor_classifier.test_estimator_checks",
  "tests.test_estimators.test_neighbor_classifier.test_trivial_classification",
  "tests.test_estimators.test_pca_reconstruction",
  "tests.test_estimators.test_pca_reconstruction.test_estimator_checks",
  "tests.test_estimators.test_pca_reconstruction.test_obvious_usecase",
  "tests.test_estimators.test_probweight_regression",
  "tests.test_estimators.test_probweight_regression.general_checks",
  "tests.test_estimators.test_probweight_regression.nonmeta_checks",
  "tests.test_estimators.test_probweight_regression.regressor_checks",
  "tests.test_estimators.test_probweight_regression.test_estimator_checks",
  "tests.test_estimators.test_probweight_regression.test_shape_trained_model",
  "tests.test_estimators.test_randomregressor",
  "tests.test_estimators.test_randomregressor.nonmeta_checks",
  "tests.test_estimators.test_randomregressor.test_bad_values",
  "tests.test_estimators.test_randomregressor.test_estimator_checks",
  "tests.test_estimators.test_randomregressor.test_values_normal",
  "tests.test_estimators.test_randomregressor.test_values_uniform",
  "tests.test_estimators.test_umap_reconstruction",
  "tests.test_estimators.test_umap_reconstruction.test_estimator_checks",
  "tests.test_estimators.test_umap_reconstruction.test_obvious_usecase",
  "tests.test_meta",
  "tests.test_meta.test_confusion_balancer",
  "tests.test_meta.test_confusion_balancer.classifier_checks",
  "tests.test_meta.test_confusion_balancer.general_checks",
  "tests.test_meta.test_confusion_balancer.test_estimator_checks_classification",
  "tests.test_meta.test_confusion_balancer.test_sum_equals_one",
  "tests.test_meta.test_decay_estimator",
  "tests.test_meta.test_decay_estimator.classifier_checks",
  "tests.test_meta.test_decay_estimator.general_checks",
  "tests.test_meta.test_decay_estimator.nonmeta_checks",
  "tests.test_meta.test_decay_estimator.regressor_checks",
  "tests.test_meta.test_decay_estimator.test_decay_weight_clf",
  "tests.test_meta.test_decay_estimator.test_decay_weight_regr",
  "tests.test_meta.test_decay_estimator.test_estimator_checks_classification",
  "tests.test_meta.test_decay_estimator.test_estimator_checks_regression",
  "tests.test_meta.test_decay_estimator.test_throw_warning",
  "tests.test_meta.test_estimatortransformer",
  "tests.test_meta.test_estimatortransformer.general_checks",
  "tests.test_meta.test_estimatortransformer.nonmeta_checks",
  "tests.test_meta.test_estimatortransformer.test_estimator_checks",
  "tests.test_meta.test_estimatortransformer.test_get_params",
  "tests.test_meta.test_estimatortransformer.test_set_params",
  "tests.test_meta.test_estimatortransformer.test_shape",
  "tests.test_meta.test_estimatortransformer.test_values_uniform",
  "tests.test_meta.test_estimatortransformer.transformer_checks",
  "tests.test_meta.test_grouped_predictor",
  "tests.test_meta.test_grouped_predictor.general_checks",
  "tests.test_meta.test_grouped_predictor.nonmeta_checks",
  "tests.test_meta.test_grouped_predictor.select_tests",
  "tests.test_meta.test_grouped_predictor.shrinkage_data",
  "tests.test_meta.test_grouped_predictor.test_bad_shrinkage_value_error",
  "tests.test_meta.test_grouped_predictor.test_chickweight_can_do_fallback",
  "tests.test_meta.test_grouped_predictor.test_chickweight_df1_keys",
  "tests.test_meta.test_grouped_predictor.test_chickweight_df2_keys",
  "tests.test_meta.test_grouped_predictor.test_chickweight_np_keys",
  "tests.test_meta.test_grouped_predictor.test_chickweight_raise_error_group_col_missing",
  "tests.test_meta.test_grouped_predictor.test_chickweight_raise_error_value_col_missing",
  "tests.test_meta.test_grouped_predictor.test_chickweigt_string_groups",
  "tests.test_meta.test_grouped_predictor.test_constant_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_custom_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_estimator_checks",
  "tests.test_meta.test_grouped_predictor.test_fallback_can_raise_error",
  "tests.test_meta.test_grouped_predictor.test_global_model_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_invalid_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_min_n_obs_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_predict_missing_group_column",
  "tests.test_meta.test_grouped_predictor.test_predict_missing_value_column",
  "tests.test_meta.test_grouped_predictor.test_relative_shrinkage",
  "tests.test_meta.test_grouped_predictor.test_shrinkage_single_group",
  "tests.test_meta.test_grouped_predictor.test_unexisting_shrinkage_func",
  "tests.test_meta.test_grouped_predictor.test_unseen_groups_shrinkage",
  "tests.test_meta.test_grouped_transformer",
  "tests.test_meta.test_grouped_transformer.dataset_with_multiple_grouping",
  "tests.test_meta.test_grouped_transformer.dataset_with_single_grouping",
  "tests.test_meta.test_grouped_transformer.general_checks",
  "tests.test_meta.test_grouped_transformer.k_vals",
  "tests.test_meta.test_grouped_transformer.multiple_obs_fitter",
  "tests.test_meta.test_grouped_transformer.n_vals",
  "tests.test_meta.test_grouped_transformer.nonmeta_checks",
  "tests.test_meta.test_grouped_transformer.np_types",
  "tests.test_meta.test_grouped_transformer.penguins",
  "tests.test_meta.test_grouped_transformer.scaling_range",
  "tests.test_meta.test_grouped_transformer.select_tests",
  "tests.test_meta.test_grouped_transformer.test_all_groups_scaled",
  "tests.test_meta.test_grouped_transformer.test_array_with_multiple_string_cols",
  "tests.test_meta.test_grouped_transformer.test_array_with_strings",
  "tests.test_meta.test_grouped_transformer.test_df",
  "tests.test_meta.test_grouped_transformer.test_estimator_checks",
  "tests.test_meta.test_grouped_transformer.test_exception_in_group",
  "tests.test_meta.test_grouped_transformer.test_get_params",
  "tests.test_meta.test_grouped_transformer.test_group_correlation_minmaxscaler",
  "tests.test_meta.test_grouped_transformer.test_grouping_column_not_in_array",
  "tests.test_meta.test_grouped_transformer.test_grouping_column_not_in_df",
  "tests.test_meta.test_grouped_transformer.test_missing_groups_transform_global",
  "tests.test_meta.test_grouped_transformer.test_missing_groups_transform_noglobal",
  "tests.test_meta.test_grouped_transformer.test_multiple_grouping_columns",
  "tests.test_meta.test_grouped_transformer.test_no_grouping",
  "tests.test_meta.test_grouped_transformer.test_non_transformer",
  "tests.test_meta.test_grouped_transformer.test_set_params",
  "tests.test_meta.test_grouped_transformer.test_with_y",
  "tests.test_meta.test_grouped_transformer.transformer_checks",
  "tests.test_meta.test_outlier_classifier",
  "tests.test_meta.test_outlier_classifier.general_checks",
  "tests.test_meta.test_outlier_classifier.test_estimator_checks",
  "tests.test_meta.test_outlier_classifier.test_obvious_usecase_quantile",
  "tests.test_meta.test_outlier_classifier.test_raises_error",
  "tests.test_meta.test_outlier_remover",
  "tests.test_meta.test_outlier_remover.test_do_not_refit",
  "tests.test_meta.test_outlier_remover.test_estimator_checks",
  "tests.test_meta.test_outlier_remover.test_no_outliers",
  "tests.test_meta.test_outlier_remover.test_pipeline_integration",
  "tests.test_meta.test_outlier_remover.test_remove_outlier",
  "tests.test_meta.test_regression_outlier",
  "tests.test_meta.test_regression_outlier.general_checks",
  "tests.test_meta.test_regression_outlier.outlier_checks",
  "tests.test_meta.test_regression_outlier.select_tests",
  "tests.test_meta.test_regression_outlier.test_estimator_checks",
  "tests.test_meta.test_regression_outlier.test_obvious_example",
  "tests.test_meta.test_regression_outlier.test_raises_error",
  "tests.test_meta.test_subjective_classifier",
  "tests.test_meta.test_subjective_classifier.classifier_checks",
  "tests.test_meta.test_subjective_classifier.general_checks",
  "tests.test_meta.test_subjective_classifier.test_estimator_checks_classification",
  "tests.test_meta.test_subjective_classifier.test_fit_y_data_inconsistent_with_prior_failure_conditions",
  "tests.test_meta.test_subjective_classifier.test_params_failure_conditions",
  "tests.test_meta.test_subjective_classifier.test_posterior_computation",
  "tests.test_meta.test_subjective_classifier.test_predict_proba",
  "tests.test_meta.test_subjective_classifier.test_to_discrete",
  "tests.test_meta.test_subjective_classifier.test_weighted_proba",
  "tests.test_meta.test_thresholder",
  "tests.test_meta.test_thresholder.test_diff_threshold",
  "tests.test_meta.test_thresholder.test_raise_error1",
  "tests.test_meta.test_thresholder.test_raise_error2",
  "tests.test_meta.test_thresholder.test_same_threshold",
  "tests.test_meta.test_thresholder.test_standard_checks",
  "tests.test_metrics",
  "tests.test_metrics.test_correlation_score",
  "tests.test_metrics.test_correlation_score.test_corr_numpy",
  "tests.test_metrics.test_correlation_score.test_corr_pandas",
  "tests.test_metrics.test_equal_opportunity",
  "tests.test_metrics.test_equal_opportunity.test_equal_opportunity_pandas",
  "tests.test_metrics.test_equal_opportunity.test_p_percent_numpy",
  "tests.test_metrics.test_equal_opportunity.test_p_percent_pandas_multiclass",
  "tests.test_metrics.test_equal_opportunity.test_warning_is_logged",
  "tests.test_metrics.test_p_percent",
  "tests.test_metrics.test_p_percent.test_p_percent_numpy",
  "tests.test_metrics.test_p_percent.test_p_percent_pandas",
  "tests.test_metrics.test_p_percent.test_warning_is_logged",
  "tests.test_metrics.test_subset_metric",
  "tests.test_metrics.test_subset_metric.DisabledCV",
  "tests.test_metrics.test_subset_metric.test_subset_score_accuracy_numpy",
  "tests.test_metrics.test_subset_metric.test_subset_score_accuracy_pandas",
  "tests.test_metrics.test_subset_metric.test_subset_score_gridsearch",
  "tests.test_metrics.test_subset_metric.test_subset_score_pipeline",
  "tests.test_metrics.test_subset_metric.test_warning_is_logged_empty_slice",
  "tests.test_metrics.test_subset_metric.test_wrong_subset_dimensions_raise_value_error",
  "tests.test_model_selection",
  "tests.test_model_selection.test_klusterfold",
  "tests.test_model_selection.test_klusterfold.DummyCluster",
  "tests.test_model_selection.test_klusterfold.id_func",
  "tests.test_model_selection.test_klusterfold.k_means_pipeline",
  "tests.test_model_selection.test_klusterfold.test_no_split",
  "tests.test_model_selection.test_klusterfold.test_splits_fitted",
  "tests.test_model_selection.test_klusterfold.test_splits_not_fitted",
  "tests.test_model_selection.test_timegapsplit",
  "tests.test_model_selection.test_timegapsplit.X_train",
  "tests.test_model_selection.test_timegapsplit.df",
  "tests.test_model_selection.test_timegapsplit.test_timegapsplit",
  "tests.test_model_selection.test_timegapsplit.train",
  "tests.test_model_selection.test_timegapsplit.y_train",
  "tests.test_notinstalled",
  "tests.test_notinstalled.test_installed_package_works",
  "tests.test_notinstalled.test_uninstsalled_package_raises",
  "tests.test_preprocessing",
  "tests.test_preprocessing.test_columncapper",
  "tests.test_preprocessing.test_columncapper.general_checks",
  "tests.test_preprocessing.test_columncapper.test_X_types_and_transformed_shapes",
  "tests.test_preprocessing.test_columncapper.test_dtype_classification",
  "tests.test_preprocessing.test_columncapper.test_dtype_regression",
  "tests.test_preprocessing.test_columncapper.test_estimator_checks",
  "tests.test_preprocessing.test_columncapper.test_interpolation",
  "tests.test_preprocessing.test_columncapper.test_nan_inf",
  "tests.test_preprocessing.test_columncapper.test_quantile_range",
  "tests.test_preprocessing.test_columncapper.transformer_checks",
  "tests.test_preprocessing.test_columncapper.valid_df",
  "tests.test_preprocessing.test_columndropper",
  "tests.test_preprocessing.test_columndropper.test_drop_all",
  "tests.test_preprocessing.test_columndropper.test_drop_none",
  "tests.test_preprocessing.test_columndropper.test_drop_not_in_frame",
  "tests.test_preprocessing.test_columndropper.test_drop_one",
  "tests.test_preprocessing.test_columndropper.test_drop_two",
  "tests.test_preprocessing.test_columndropper.test_get_feature_names",
  "tests.test_preprocessing.test_columnselector",
  "tests.test_preprocessing.test_columnselector.test_get_feature_names",
  "tests.test_preprocessing.test_columnselector.test_select_all",
  "tests.test_preprocessing.test_columnselector.test_select_none",
  "tests.test_preprocessing.test_columnselector.test_select_not_in_frame",
  "tests.test_preprocessing.test_columnselector.test_select_one",
  "tests.test_preprocessing.test_columnselector.test_select_two",
  "tests.test_preprocessing.test_dictmapper",
  "tests.test_preprocessing.test_dictmapper.general_checks",
  "tests.test_preprocessing.test_dictmapper.test_array",
  "tests.test_preprocessing.test_dictmapper.test_estimator_checks",
  "tests.test_preprocessing.test_dictmapper.test_no_mapper",
  "tests.test_preprocessing.test_dictmapper.test_pandas",
  "tests.test_preprocessing.test_dictmapper.transformer_checks",
  "tests.test_preprocessing.test_identitytransformer",
  "tests.test_preprocessing.test_identitytransformer.general_checks",
  "tests.test_preprocessing.test_identitytransformer.test_estimator_checks",
  "tests.test_preprocessing.test_identitytransformer.test_same_values",
  "tests.test_preprocessing.test_identitytransformer.transformer_checks",
  "tests.test_preprocessing.test_informationfilter",
  "tests.test_preprocessing.test_informationfilter.general_checks",
  "tests.test_preprocessing.test_informationfilter.test_alpha_param1",
  "tests.test_preprocessing.test_informationfilter.test_alpha_param2",
  "tests.test_preprocessing.test_informationfilter.test_estimator_checks",
  "tests.test_preprocessing.test_informationfilter.test_output_orthogonal",
  "tests.test_preprocessing.test_informationfilter.test_pipeline_gridsearch",
  "tests.test_preprocessing.test_informationfilter.test_v_columns_orthogonal",
  "tests.test_preprocessing.test_informationfilter.transformer_checks",
  "tests.test_preprocessing.test_interval_encoder",
  "tests.test_preprocessing.test_interval_encoder.general_checks",
  "tests.test_preprocessing.test_interval_encoder.generate_dataset",
  "tests.test_preprocessing.test_interval_encoder.test_estimator_checks",
  "tests.test_preprocessing.test_interval_encoder.test_monotonicity_decreasing",
  "tests.test_preprocessing.test_interval_encoder.test_monotonicity_increasing",
  "tests.test_preprocessing.test_interval_encoder.test_obvious_cases_one",
  "tests.test_preprocessing.test_interval_encoder.test_obvious_cases_two",
  "tests.test_preprocessing.test_interval_encoder.test_throw_valuerror_given_nonsense",
  "tests.test_preprocessing.test_interval_encoder.transformer_checks",
  "tests.test_preprocessing.test_orthogonal_transformer",
  "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthogonal",
  "tests.test_preprocessing.test_orthogonal_transformer.check_is_orthonormal",
  "tests.test_preprocessing.test_orthogonal_transformer.general_checks",
  "tests.test_preprocessing.test_orthogonal_transformer.nonmeta_checks",
  "tests.test_preprocessing.test_orthogonal_transformer.sample_matrix",
  "tests.test_preprocessing.test_orthogonal_transformer.test_estimator_checks",
  "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_transformer",
  "tests.test_preprocessing.test_orthogonal_transformer.test_orthogonal_with_df",
  "tests.test_preprocessing.test_orthogonal_transformer.test_orthonormal_transformer",
  "tests.test_preprocessing.test_orthogonal_transformer.transformer_checks",
  "tests.test_preprocessing.test_outlier_remover",
  "tests.test_preprocessing.test_outlier_remover.test_do_not_refit",
  "tests.test_preprocessing.test_outlier_remover.test_estimator_checks",
  "tests.test_preprocessing.test_outlier_remover.test_no_outliers",
  "tests.test_preprocessing.test_outlier_remover.test_pipeline_integration",
  "tests.test_preprocessing.test_outlier_remover.test_remove_outlier",
  "tests.test_preprocessing.test_pandastypeselector",
  "tests.test_preprocessing.test_pandastypeselector.id_func",
  "tests.test_preprocessing.test_pandastypeselector.test_get_feature_names",
  "tests.test_preprocessing.test_pandastypeselector.test_get_params_np",
  "tests.test_preprocessing.test_pandastypeselector.test_get_params_str",
  "tests.test_preprocessing.test_pandastypeselector.test_len_classification",
  "tests.test_preprocessing.test_pandastypeselector.test_len_regression",
  "tests.test_preprocessing.test_pandastypeselector.test_value_error_differrent_dtyes",
  "tests.test_preprocessing.test_pandastypeselector.test_value_error_empty",
  "tests.test_preprocessing.test_pandastypeselector.test_value_error_inequal",
  "tests.test_preprocessing.test_patsy_transformer",
  "tests.test_preprocessing.test_patsy_transformer.test_apply_numpy_transform",
  "tests.test_preprocessing.test_patsy_transformer.test_basic_usage",
  "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_error",
  "tests.test_preprocessing.test_patsy_transformer.test_design_matrix_in_pipeline",
  "tests.test_preprocessing.test_patsy_transformer.test_min_sign_usage",
  "tests.test_preprocessing.test_patsy_transformer.test_mult_usage",
  "tests.test_preprocessing.test_patsy_transformer.test_multiply_columns",
  "tests.test_preprocessing.test_patsy_transformer.test_return_type_dataframe",
  "tests.test_preprocessing.test_patsy_transformer.test_return_type_dmatrix",
  "tests.test_preprocessing.test_patsy_transformer.test_subset_categories_in_test",
  "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy1",
  "tests.test_preprocessing.test_patsy_transformer.test_transform_dummy2",
  "tests.test_preprocessing.test_randomadder",
  "tests.test_preprocessing.test_randomadder.nonmeta_checks",
  "tests.test_preprocessing.test_randomadder.test_dtype_classification",
  "tests.test_preprocessing.test_randomadder.test_dtype_regression",
  "tests.test_preprocessing.test_randomadder.test_estimator_checks",
  "tests.test_preprocessing.test_randomadder.test_only_transform_train",
  "tests.test_preprocessing.test_repeatingbasisfunction",
  "tests.test_preprocessing.test_repeatingbasisfunction.test_dataframe_equals_array",
  "tests.test_preprocessing.test_repeatingbasisfunction.test_drop_remainder",
  "tests.test_preprocessing.test_repeatingbasisfunction.test_int_indexing",
  "tests.test_preprocessing.test_repeatingbasisfunction.test_str_indexing",
  "tests.test_preprocessing.test_repeatingbasisfunction.test_when_rbf_helper_receives_more_than_one_col_raises_value_error"
 ]
}