{
 "errors": {},
 "symbols": [
  "openid.__all__",
  "openid.__version__",
  "openid.association",
  "openid.association.Association",
  "openid.association.OPENID_NS",
  "openid.association.SessionNegotiator",
  "openid.association.__all__",
  "openid.association.all_association_types",
  "openid.association.checkSessionType",
  "openid.association.cryptutil",
  "openid.association.default_association_order",
  "openid.association.default_negotiator",
  "openid.association.encrypted_negotiator",
  "openid.association.getSecretSize",
  "openid.association.getSessionTypes",
  "openid.association.kvform",
  "openid.association.oidutil",
  "openid.association.only_encrypted_association_order",
  "openid.association.supported_association_types",
  "openid.codecutil",
  "openid.codecutil.IPRIVATE",
  "openid.codecutil.UCSCHAR",
  "openid.codecutil._ESCAPE_RANGES",
  "openid.codecutil._ends_surrogate_pair",
  "openid.codecutil._in_escape_range",
  "openid.codecutil._pct_encoded_replacements",
  "openid.codecutil._pct_escape_handler",
  "openid.codecutil._starts_surrogate_pair",
  "openid.consumer",
  "openid.consumer.__all__",
  "openid.consumer.consumer",
  "openid.consumer.consumer.Association",
  "openid.consumer.consumer.AuthRequest",
  "openid.consumer.consumer.BARE_NS",
  "openid.consumer.consumer.CANCEL",
  "openid.consumer.consumer.CancelResponse",
  "openid.consumer.consumer.Consumer",
  "openid.consumer.consumer.DiffieHellman",
  "openid.consumer.consumer.DiffieHellmanSHA1ConsumerSession",
  "openid.consumer.consumer.DiffieHellmanSHA256ConsumerSession",
  "openid.consumer.consumer.Discovery",
  "openid.consumer.consumer.DiscoveryFailure",
  "openid.consumer.consumer.FAILURE",
  "openid.consumer.consumer.FailureResponse",
  "openid.consumer.consumer.GenericConsumer",
  "openid.consumer.consumer.IDENTIFIER_SELECT",
  "openid.consumer.consumer.Message",
  "openid.consumer.consumer.OPENID1_NS",
  "openid.consumer.consumer.OPENID2_NS",
  "openid.consumer.consumer.OPENID_1_0_TYPE",
  "openid.consumer.consumer.OPENID_1_1_TYPE",
  "openid.consumer.consumer.OPENID_2_0_TYPE",
  "openid.consumer.consumer.OPENID_NS",
  "openid.consumer.consumer.OpenIDServiceEndpoint",
  "openid.consumer.consumer.PlainTextConsumerSession",
  "openid.consumer.consumer.ProtocolError",
  "openid.consumer.consumer.Response",
  "openid.consumer.consumer.SETUP_NEEDED",
  "openid.consumer.consumer.SUCCESS",
  "openid.consumer.consumer.ServerError",
  "openid.consumer.consumer.SessionNegotiator",
  "openid.consumer.consumer.SetupNeededError",
  "openid.consumer.consumer.SetupNeededResponse",
  "openid.consumer.consumer.SuccessResponse",
  "openid.consumer.consumer.TypeURIMismatch",
  "openid.consumer.consumer.__all__",
  "openid.consumer.consumer._httpResponseToMessage",
  "openid.consumer.consumer.cryptutil",
  "openid.consumer.consumer.default_negotiator",
  "openid.consumer.consumer.discover",
  "openid.consumer.consumer.fetchers",
  "openid.consumer.consumer.logger",
  "openid.consumer.consumer.makeKVPost",
  "openid.consumer.consumer.mkNonce",
  "openid.consumer.consumer.no_default",
  "openid.consumer.consumer.oidutil",
  "openid.consumer.consumer.split",
  "openid.consumer.consumer.urinorm",
  "openid.consumer.discover",
  "openid.consumer.discover.DiscoveryFailure",
  "openid.consumer.discover.OPENID1_NS",
  "openid.consumer.discover.OPENID2_NS",
  "openid.consumer.discover.OPENID_1_0_NS",
  "openid.consumer.discover.OPENID_1_0_TYPE",
  "openid.consumer.discover.OPENID_1_1_TYPE",
  "openid.consumer.discover.OPENID_2_0_TYPE",
  "openid.consumer.discover.OPENID_IDP_2_0_TYPE",
  "openid.consumer.discover.OpenIDServiceEndpoint",
  "openid.consumer.discover.XRDSError",
  "openid.consumer.discover.XRD_NS_2_0",
  "openid.consumer.discover.__all__",
  "openid.consumer.discover.applyFilter",
  "openid.consumer.discover.arrangeByType",
  "openid.consumer.discover.discover",
  "openid.consumer.discover.fetchers",
  "openid.consumer.discover.filters",
  "openid.consumer.discover.findOPLocalIdentifier",
  "openid.consumer.discover.getOPOrUserServices",
  "openid.consumer.discover.html_parse",
  "openid.consumer.discover.logger",
  "openid.consumer.discover.normalizeURL",
  "openid.consumer.discover.normalizeXRI",
  "openid.consumer.discover.nsTag",
  "openid.consumer.discover.urinorm",
  "openid.consumer.discover.xri",
  "openid.consumer.discover.xrires",
  "openid.consumer.discover.yadis",
  "openid.consumer.html_parse",
  "openid.consumer.html_parse.__all__",
  "openid.consumer.html_parse.attr_find",
  "openid.consumer.html_parse.ent_replace",
  "openid.consumer.html_parse.findFirstHref",
  "openid.consumer.html_parse.findLinksRel",
  "openid.consumer.html_parse.flags",
  "openid.consumer.html_parse.head_find",
  "openid.consumer.html_parse.html_find",
  "openid.consumer.html_parse.linkHasRel",
  "openid.consumer.html_parse.link_find",
  "openid.consumer.html_parse.parseLinkAttrs",
  "openid.consumer.html_parse.relMatches",
  "openid.consumer.html_parse.removed_re",
  "openid.consumer.html_parse.replaceEnt",
  "openid.consumer.html_parse.replacements",
  "openid.consumer.html_parse.tagMatcher",
  "openid.consumer.html_parse.tag_expr",
  "openid.cryptutil",
  "openid.cryptutil.HashContainer",
  "openid.cryptutil.SHA256_AVAILABLE",
  "openid.cryptutil.__all__",
  "openid.cryptutil.base64ToLong",
  "openid.cryptutil.binaryToLong",
  "openid.cryptutil.const_eq",
  "openid.cryptutil.fromBase64",
  "openid.cryptutil.getBytes",
  "openid.cryptutil.hmacSha1",
  "openid.cryptutil.hmacSha256",
  "openid.cryptutil.longToBase64",
  "openid.cryptutil.longToBinary",
  "openid.cryptutil.randomString",
  "openid.cryptutil.randrange",
  "openid.cryptutil.sha1",
  "openid.cryptutil.sha256",
  "openid.cryptutil.toBase64",
  "openid.dh",
  "openid.dh.DiffieHellman",
  "openid.dh.cryptutil",
  "openid.dh.strxor",
  "openid.extension",
  "openid.extension.Extension",
  "openid.extension.message",
  "openid.extensions",
  "openid.extensions.__all__",
  "openid.extensions.ax",
  "openid.extensions.ax.AXError",
  "openid.extensions.ax.AXKeyValueMessage",
  "openid.extensions.ax.AXMessage",
  "openid.extensions.ax.AttrInfo",
  "openid.extensions.ax.FetchRequest",
  "openid.extensions.ax.FetchResponse",
  "openid.extensions.ax.MINIMUM_SUPPORTED_ALIAS_LENGTH",
  "openid.extensions.ax.NamespaceMap",
  "openid.extensions.ax.NotAXMessage",
  "openid.extensions.ax.OPENID_NS",
  "openid.extensions.ax.StoreRequest",
  "openid.extensions.ax.StoreResponse",
  "openid.extensions.ax.TrustRoot",
  "openid.extensions.ax.UNLIMITED_VALUES",
  "openid.extensions.ax.__all__",
  "openid.extensions.ax.checkAlias",
  "openid.extensions.ax.extension",
  "openid.extensions.ax.toTypeURIs",
  "openid.extensions.draft",
  "openid.extensions.draft.pape2",
  "openid.extensions.draft.pape2.AUTH_MULTI_FACTOR",
  "openid.extensions.draft.pape2.AUTH_MULTI_FACTOR_PHYSICAL",
  "openid.extensions.draft.pape2.AUTH_PHISHING_RESISTANT",
  "openid.extensions.draft.pape2.Extension",
  "openid.extensions.draft.pape2.Request",
  "openid.extensions.draft.pape2.Response",
  "openid.extensions.draft.pape2.TIME_VALIDATOR",
  "openid.extensions.draft.pape2.__all__",
  "openid.extensions.draft.pape2.ns_uri",
  "openid.extensions.draft.pape5",
  "openid.extensions.draft.pape5.AUTH_MULTI_FACTOR",
  "openid.extensions.draft.pape5.AUTH_MULTI_FACTOR_PHYSICAL",
  "openid.extensions.draft.pape5.AUTH_NONE",
  "openid.extensions.draft.pape5.AUTH_PHISHING_RESISTANT",
  "openid.extensions.draft.pape5.Extension",
  "openid.extensions.draft.pape5.LEVELS_JISA",
  "openid.extensions.draft.pape5.LEVELS_NIST",
  "openid.extensions.draft.pape5.PAPEExtension",
  "openid.extensions.draft.pape5.Request",
  "openid.extensions.draft.pape5.Response",
  "openid.extensions.draft.pape5.TIME_VALIDATOR",
  "openid.extensions.draft.pape5.__all__",
  "openid.extensions.draft.pape5.ns_uri",
  "openid.extensions.pape5",
  "openid.extensions.sreg",
  "openid.extensions.sreg.Extension",
  "openid.extensions.sreg.NamespaceAliasRegistrationError",
  "openid.extensions.sreg.SRegNamespaceError",
  "openid.extensions.sreg.SRegRequest",
  "openid.extensions.sreg.SRegResponse",
  "openid.extensions.sreg.__all__",
  "openid.extensions.sreg.checkFieldName",
  "openid.extensions.sreg.data_fields",
  "openid.extensions.sreg.e",
  "openid.extensions.sreg.getSRegNS",
  "openid.extensions.sreg.logger",
  "openid.extensions.sreg.ns_uri",
  "openid.extensions.sreg.ns_uri_1_0",
  "openid.extensions.sreg.ns_uri_1_1",
  "openid.extensions.sreg.registerNamespaceAlias",
  "openid.extensions.sreg.str",
  "openid.extensions.sreg.supportsSReg",
  "openid.fetchers",
  "openid.fetchers.CurlHTTPFetcher",
  "openid.fetchers.ExceptionWrappingFetcher",
  "openid.fetchers.HTTPError",
  "openid.fetchers.HTTPFetcher",
  "openid.fetchers.HTTPFetchingError",
  "openid.fetchers.HTTPLib2Fetcher",
  "openid.fetchers.HTTPResponse",
  "openid.fetchers.MAX_RESPONSE_KB",
  "openid.fetchers.USER_AGENT",
  "openid.fetchers.Urllib2Fetcher",
  "openid.fetchers.__all__",
  "openid.fetchers._allowedURL",
  "openid.fetchers._default_fetcher",
  "openid.fetchers.createHTTPFetcher",
  "openid.fetchers.fetch",
  "openid.fetchers.getDefaultFetcher",
  "openid.fetchers.httplib2",
  "openid.fetchers.pycurl",
  "openid.fetchers.setDefaultFetcher",
  "openid.fetchers.usingCurl",
  "openid.kvform",
  "openid.kvform.KVFormError",
  "openid.kvform.__all__",
  "openid.kvform.dictToKV",
  "openid.kvform.kvToDict",
  "openid.kvform.kvToSeq",
  "openid.kvform.logger",
  "openid.kvform.seqToKV",
  "openid.message",
  "openid.message.BARE_NS",
  "openid.message.ElementTree",
  "openid.message.IDENTIFIER_SELECT",
  "openid.message.InvalidOpenIDNamespace",
  "openid.message.Message",
  "openid.message.NULL_NAMESPACE",
  "openid.message.NamespaceAliasRegistrationError",
  "openid.message.NamespaceMap",
  "openid.message.OPENID1_NAMESPACES",
  "openid.message.OPENID1_NS",
  "openid.message.OPENID1_URL_LIMIT",
  "openid.message.OPENID2_NS",
  "openid.message.OPENID_NS",
  "openid.message.OPENID_PROTOCOL_FIELDS",
  "openid.message.SREG_URI",
  "openid.message.THE_OTHER_OPENID1_NS",
  "openid.message.UndefinedOpenIDNamespace",
  "openid.message.__all__",
  "openid.message.kvform",
  "openid.message.no_default",
  "openid.message.oidutil",
  "openid.message.registerNamespaceAlias",
  "openid.message.registered_aliases",
  "openid.oidutil",
  "openid.oidutil.Symbol",
  "openid.oidutil.__all__",
  "openid.oidutil.appendArgs",
  "openid.oidutil.autoSubmitHTML",
  "openid.oidutil.elementtree_modules",
  "openid.oidutil.fromBase64",
  "openid.oidutil.importElementTree",
  "openid.oidutil.importSafeElementTree",
  "openid.oidutil.log",
  "openid.oidutil.toBase64",
  "openid.oidutil.toUnicode",
  "openid.oidutil.xxe_safe_elementtree_modules",
  "openid.server",
  "openid.server.__all__",
  "openid.server.server",
  "openid.server.server.AlreadySigned",
  "openid.server.server.AssociateRequest",
  "openid.server.server.Association",
  "openid.server.server.BROWSER_REQUEST_MODES",
  "openid.server.server.CheckAuthRequest",
  "openid.server.server.CheckIDRequest",
  "openid.server.server.Decoder",
  "openid.server.server.DiffieHellman",
  "openid.server.server.DiffieHellmanSHA1ServerSession",
  "openid.server.server.DiffieHellmanSHA256ServerSession",
  "openid.server.server.ENCODE_HTML_FORM",
  "openid.server.server.ENCODE_KVFORM",
  "openid.server.server.ENCODE_URL",
  "openid.server.server.Encoder",
  "openid.server.server.EncodingError",
  "openid.server.server.HTTP_ERROR",
  "openid.server.server.HTTP_OK",
  "openid.server.server.HTTP_REDIRECT",
  "openid.server.server.IDENTIFIER_SELECT",
  "openid.server.server.InvalidOpenIDNamespace",
  "openid.server.server.MalformedReturnURL",
  "openid.server.server.MalformedTrustRoot",
  "openid.server.server.Message",
  "openid.server.server.NoReturnToError",
  "openid.server.server.OPENID1_URL_LIMIT",
  "openid.server.server.OPENID2_NS",
  "openid.server.server.OPENID_NS",
  "openid.server.server.OpenIDRequest",
  "openid.server.server.OpenIDResponse",
  "openid.server.server.PlainTextServerSession",
  "openid.server.server.ProtocolError",
  "openid.server.server.Server",
  "openid.server.server.Signatory",
  "openid.server.server.SigningEncoder",
  "openid.server.server.TrustRoot",
  "openid.server.server.UNUSED",
  "openid.server.server.UntrustedReturnURL",
  "openid.server.server.VersionError",
  "openid.server.server.WebResponse",
  "openid.server.server.cryptutil",
  "openid.server.server.default_negotiator",
  "openid.server.server.getSecretSize",
  "openid.server.server.kvform",
  "openid.server.server.logger",
  "openid.server.server.mkNonce",
  "openid.server.server.oidutil",
  "openid.server.server.urinorm",
  "openid.server.server.verifyReturnTo",
  "openid.server.trustroot",
  "openid.server.trustroot.RP_RETURN_TO_URL_TYPE",
  "openid.server.trustroot.RealmVerificationRedirected",
  "openid.server.trustroot.TrustRoot",
  "openid.server.trustroot.__all__",
  "openid.server.trustroot._extractReturnURL",
  "openid.server.trustroot._parseURL",
  "openid.server.trustroot._protocols",
  "openid.server.trustroot._top_level_domains",
  "openid.server.trustroot.getAllowedReturnURLs",
  "openid.server.trustroot.host_segment_re",
  "openid.server.trustroot.logger",
  "openid.server.trustroot.returnToMatches",
  "openid.server.trustroot.services",
  "openid.server.trustroot.urinorm",
  "openid.server.trustroot.verifyReturnTo",
  "openid.sreg",
  "openid.sreg.Extension",
  "openid.sreg.NamespaceAliasRegistrationError",
  "openid.sreg.SRegNamespaceError",
  "openid.sreg.SRegRequest",
  "openid.sreg.SRegResponse",
  "openid.sreg.__all__",
  "openid.sreg.checkFieldName",
  "openid.sreg.data_fields",
  "openid.sreg.e",
  "openid.sreg.getSRegNS",
  "openid.sreg.logger",
  "openid.sreg.ns_uri",
  "openid.sreg.ns_uri_1_0",
  "openid.sreg.ns_uri_1_1",
  "openid.sreg.registerNamespaceAlias",
  "openid.sreg.str",
  "openid.sreg.supportsSReg",
  "openid.store",
  "openid.store.__all__",
  "openid.store.filestore",
  "openid.store.filestore.Association",
  "openid.store.filestore.FileOpenIDStore",
  "openid.store.filestore.OpenIDStore",
  "openid.store.filestore._ensureDir",
  "openid.store.filestore._filenameEscape",
  "openid.store.filestore._filename_allowed",
  "openid.store.filestore._isFilenameSafe",
  "openid.store.filestore._removeIfPresent",
  "openid.store.filestore._safe64",
  "openid.store.filestore.cryptutil",
  "openid.store.filestore.logger",
  "openid.store.filestore.nonce",
  "openid.store.filestore.oidutil",
  "openid.store.interface",
  "openid.store.interface.OpenIDStore",
  "openid.store.memstore",
  "openid.store.memstore.MemoryStore",
  "openid.store.memstore.ServerAssocs",
  "openid.store.memstore.nonce",
  "openid.store.nonce",
  "openid.store.nonce.NONCE_CHARS",
  "openid.store.nonce.SKEW",
  "openid.store.nonce.__all__",
  "openid.store.nonce.checkTimestamp",
  "openid.store.nonce.cryptutil",
  "openid.store.nonce.mkNonce",
  "openid.store.nonce.split",
  "openid.store.nonce.time_fmt",
  "openid.store.nonce.time_str_len",
  "openid.store.sqlstore",
  "openid.store.sqlstore.Association",
  "openid.store.sqlstore.MySQLStore",
  "openid.store.sqlstore.OpenIDStore",
  "openid.store.sqlstore.PostgreSQLStore",
  "openid.store.sqlstore.SQLStore",
  "openid.store.sqlstore.SQLiteStore",
  "openid.store.sqlstore._inTxn",
  "openid.store.sqlstore.nonce",
  "openid.urinorm",
  "openid.urinorm._",
  "openid.urinorm._pct_encoded_replace",
  "openid.urinorm._unreserved",
  "openid.urinorm.authority_pattern",
  "openid.urinorm.authority_re",
  "openid.urinorm.codecutil",
  "openid.urinorm.pct_encoded_pattern",
  "openid.urinorm.pct_encoded_re",
  "openid.urinorm.remove_dot_segments",
  "openid.urinorm.uri_illegal_char_re",
  "openid.urinorm.uri_pattern",
  "openid.urinorm.uri_re",
  "openid.urinorm.urinorm",
  "openid.version_info",
  "openid.yadis",
  "openid.yadis.__all__",
  "openid.yadis.__version__",
  "openid.yadis.accept",
  "openid.yadis.accept.generateAcceptHeader",
  "openid.yadis.accept.getAcceptable",
  "openid.yadis.accept.matchTypes",
  "openid.yadis.accept.parseAcceptHeader",
  "openid.yadis.constants",
  "openid.yadis.constants.YADIS_ACCEPT_HEADER",
  "openid.yadis.constants.YADIS_CONTENT_TYPE",
  "openid.yadis.constants.YADIS_HEADER_NAME",
  "openid.yadis.constants.__all__",
  "openid.yadis.constants.generateAcceptHeader",
  "openid.yadis.discover",
  "openid.yadis.discover.DiscoveryFailure",
  "openid.yadis.discover.DiscoveryResult",
  "openid.yadis.discover.MetaNotFound",
  "openid.yadis.discover.YADIS_ACCEPT_HEADER",
  "openid.yadis.discover.YADIS_CONTENT_TYPE",
  "openid.yadis.discover.YADIS_HEADER_NAME",
  "openid.yadis.discover.__all__",
  "openid.yadis.discover.discover",
  "openid.yadis.discover.fetchers",
  "openid.yadis.discover.findHTMLMeta",
  "openid.yadis.discover.whereIsYadis",
  "openid.yadis.etxrd",
  "openid.yadis.etxrd.ElementTree",
  "openid.yadis.etxrd.Max",
  "openid.yadis.etxrd.SafeElementTree",
  "openid.yadis.etxrd.XRDSError",
  "openid.yadis.etxrd.XRDSFraud",
  "openid.yadis.etxrd.XRDS_NS",
  "openid.yadis.etxrd.XRD_NS_2_0",
  "openid.yadis.etxrd._Max",
  "openid.yadis.etxrd.__all__",
  "openid.yadis.etxrd.canonicalID_tag",
  "openid.yadis.etxrd.expandService",
  "openid.yadis.etxrd.expires_tag",
  "openid.yadis.etxrd.getCanonicalID",
  "openid.yadis.etxrd.getPriority",
  "openid.yadis.etxrd.getTypeURIs",
  "openid.yadis.etxrd.getXRDExpiration",
  "openid.yadis.etxrd.getYadisXRD",
  "openid.yadis.etxrd.importElementTree",
  "openid.yadis.etxrd.importSafeElementTree",
  "openid.yadis.etxrd.isXRDS",
  "openid.yadis.etxrd.iterServices",
  "openid.yadis.etxrd.mkXRDSTag",
  "openid.yadis.etxrd.mkXRDTag",
  "openid.yadis.etxrd.nsTag",
  "openid.yadis.etxrd.parseXRDS",
  "openid.yadis.etxrd.prioSort",
  "openid.yadis.etxrd.root_tag",
  "openid.yadis.etxrd.service_tag",
  "openid.yadis.etxrd.sortedURIs",
  "openid.yadis.etxrd.type_tag",
  "openid.yadis.etxrd.uri_tag",
  "openid.yadis.etxrd.xrd_tag",
  "openid.yadis.etxrd.xri",
  "openid.yadis.filters",
  "openid.yadis.filters.BasicServiceEndpoint",
  "openid.yadis.filters.CompoundFilter",
  "openid.yadis.filters.IFilter",
  "openid.yadis.filters.TransformFilterMaker",
  "openid.yadis.filters.__all__",
  "openid.yadis.filters.expandService",
  "openid.yadis.filters.filter_type_error",
  "openid.yadis.filters.mkCompoundFilter",
  "openid.yadis.filters.mkFilter",
  "openid.yadis.manager",
  "openid.yadis.manager.Discovery",
  "openid.yadis.manager.YadisServiceManager",
  "openid.yadis.parsehtml",
  "openid.yadis.parsehtml.CHUNK_SIZE",
  "openid.yadis.parsehtml.MetaNotFound",
  "openid.yadis.parsehtml.ParseDone",
  "openid.yadis.parsehtml.YADIS_HEADER_NAME",
  "openid.yadis.parsehtml.YadisHTMLParser",
  "openid.yadis.parsehtml.__all__",
  "openid.yadis.parsehtml.ent_pat",
  "openid.yadis.parsehtml.ent_re",
  "openid.yadis.parsehtml.findHTMLMeta",
  "openid.yadis.parsehtml.re_flags",
  "openid.yadis.parsehtml.substituteEntities",
  "openid.yadis.parsehtml.substituteMO",
  "openid.yadis.services",
  "openid.yadis.services.DiscoveryFailure",
  "openid.yadis.services.XRDSError",
  "openid.yadis.services.applyFilter",
  "openid.yadis.services.discover",
  "openid.yadis.services.getServiceEndpoints",
  "openid.yadis.services.iterServices",
  "openid.yadis.services.mkFilter",
  "openid.yadis.services.parseXRDS",
  "openid.yadis.version_info",
  "openid.yadis.xri",
  "openid.yadis.xri.XRI",
  "openid.yadis.xri._escape_xref",
  "openid.yadis.xri._xref_re",
  "openid.yadis.xri.codecutil",
  "openid.yadis.xri.escapeForIRI",
  "openid.yadis.xri.identifierScheme",
  "openid.yadis.xri.iriToURI",
  "openid.yadis.xri.providerIsAuthoritative",
  "openid.yadis.xri.rootAuthority",
  "openid.yadis.xri.toIRINormal",
  "openid.yadis.xri.toURINormal",
  "openid.yadis.xrires",
  "openid.yadis.xrires.DEFAULT_PROXY",
  "openid.yadis.xrires.ProxyResolver",
  "openid.yadis.xrires._appendArgs",
  "openid.yadis.xrires.etxrd",
  "openid.yadis.xrires.fetchers",
  "openid.yadis.xrires.iterServices",
  "openid.yadis.xrires.toURINormal"
 ]
}