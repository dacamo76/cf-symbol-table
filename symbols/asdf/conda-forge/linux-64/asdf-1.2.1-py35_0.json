{
 "errors": {},
 "symbols": [
  "asdf.AsdfExtension",
  "asdf.AsdfFile",
  "asdf.AsdfType",
  "asdf.Stream",
  "asdf.ValidationError",
  "asdf.__all__",
  "asdf.__githash__",
  "asdf.__version__",
  "asdf._get_test_runner",
  "asdf._internal_init",
  "asdf._internal_init.__all__",
  "asdf._internal_init.__githash__",
  "asdf._internal_init.__version__",
  "asdf._internal_init._get_test_runner",
  "asdf._internal_init.test",
  "asdf.asdf",
  "asdf.asdf.AsdfFile",
  "asdf.asdf.AsdfFile.__copy__",
  "asdf.asdf.AsdfFile.__deepcopy__",
  "asdf.asdf.AsdfFile.blocks",
  "asdf.asdf.AsdfFile.comments",
  "asdf.asdf.AsdfFile.file_format_version",
  "asdf.asdf.AsdfFile.tag_to_schema_resolver",
  "asdf.asdf.AsdfFile.type_index",
  "asdf.asdf.AsdfFile.uri",
  "asdf.asdf.AsdfFile.url_mapping",
  "asdf.asdf._version",
  "asdf.asdf._version_string",
  "asdf.asdf.get_asdf_library_info",
  "asdf.asdf.version_map",
  "asdf.asdf.version_string",
  "asdf.asdftypes",
  "asdf.asdftypes.AsdfType",
  "asdf.asdftypes.AsdfType.handle_dynamic_subclasses",
  "asdf.asdftypes.AsdfType.name",
  "asdf.asdftypes.AsdfType.organization",
  "asdf.asdftypes.AsdfType.requires",
  "asdf.asdftypes.AsdfType.standard",
  "asdf.asdftypes.AsdfType.types",
  "asdf.asdftypes.AsdfType.validators",
  "asdf.asdftypes.AsdfType.version",
  "asdf.asdftypes.AsdfType.yaml_tag",
  "asdf.asdftypes._AsdfWriteTypeIndex",
  "asdf.asdftypes._BASIC_PYTHON_TYPES",
  "asdf.asdftypes.__all__",
  "asdf.asdftypes._all_asdftypes",
  "asdf.asdftypes._from_tree_tagged_missing_requirements",
  "asdf.asdftypes.format_tag",
  "asdf.asdftypes.join_tag_version",
  "asdf.asdftypes.split_tag_version",
  "asdf.block",
  "asdf.block.Block",
  "asdf.block.UnloadedBlock",
  "asdf.block.calculate_updated_layout",
  "asdf.commands",
  "asdf.commands.Defragment",
  "asdf.commands.Explode",
  "asdf.commands.Implode",
  "asdf.commands.ToYaml",
  "asdf.commands.__all__",
  "asdf.commands.defragment",
  "asdf.commands.defragment.Defragment",
  "asdf.commands.defragment.__all__",
  "asdf.commands.defragment.defragment",
  "asdf.commands.explode",
  "asdf.commands.exploded",
  "asdf.commands.exploded.Explode",
  "asdf.commands.exploded.Implode",
  "asdf.commands.exploded.__all__",
  "asdf.commands.exploded.explode",
  "asdf.commands.exploded.implode",
  "asdf.commands.implode",
  "asdf.commands.main",
  "asdf.commands.main.Command",
  "asdf.commands.main.command_order",
  "asdf.commands.main.main",
  "asdf.commands.main.make_argparser",
  "asdf.commands.tests",
  "asdf.commands.tests.test_defragment",
  "asdf.commands.tests.test_defragment.test_defragment",
  "asdf.commands.tests.test_exploded",
  "asdf.commands.tests.test_exploded.test_explode_then_implode",
  "asdf.commands.tests.test_exploded.test_file_not_found",
  "asdf.commands.tests.test_main",
  "asdf.commands.tests.test_main.test_help",
  "asdf.commands.tests.test_main.test_invalid_command",
  "asdf.commands.tests.test_to_yaml",
  "asdf.commands.tests.test_to_yaml.test_to_yaml",
  "asdf.commands.to_yaml",
  "asdf.commands.to_yaml.ToYaml",
  "asdf.commands.to_yaml.__all__",
  "asdf.commands.to_yaml.to_yaml",
  "asdf.compat",
  "asdf.compat.UserDict",
  "asdf.compat.UserList",
  "asdf.compat.UserString",
  "asdf.compat.functools_backport",
  "asdf.compat.functools_backport._CacheInfo",
  "asdf.compat.functools_backport._HashedSeq",
  "asdf.compat.functools_backport._fasttypes",
  "asdf.compat.functools_backport._make_key",
  "asdf.compat.functools_backport.lru_cache",
  "asdf.compat.lru_cache",
  "asdf.compat.numpycompat",
  "asdf.compat.numpycompat.NUMPY_LT_1_7",
  "asdf.compat.numpycompat.__all__",
  "asdf.compat.odict",
  "asdf.compat.user_collections_py3",
  "asdf.compat.user_collections_py3.UserDict",
  "asdf.compat.user_collections_py3.UserDict.UserDict",
  "asdf.compat.user_collections_py3.UserList",
  "asdf.compat.user_collections_py3.UserList.UserList",
  "asdf.compat.user_collections_py3.UserString",
  "asdf.compat.user_collections_py3.UserString.UserString",
  "asdf.compat.user_collections_py3.UserString.__all__",
  "asdf.compression",
  "asdf.compression._get_decoder",
  "asdf.compression._get_encoder",
  "asdf.compression.compress",
  "asdf.compression.decompress",
  "asdf.compression.get_compressed_size",
  "asdf.compression.to_compression_header",
  "asdf.compression.validate",
  "asdf.conftest",
  "asdf.conftest.HTTPServer",
  "asdf.conftest.PYTEST_HEADER_MODULES",
  "asdf.conftest.RangeHTTPServer",
  "asdf.conftest.TESTED_VERSIONS",
  "asdf.conftest.httpserver",
  "asdf.conftest.packagename",
  "asdf.conftest.rhttpserver",
  "asdf.conftest.run_server",
  "asdf.constants",
  "asdf.constants.ASDF_MAGIC",
  "asdf.constants.ASDF_STANDARD_COMMENT",
  "asdf.constants.BLOCK_FLAG_STREAMED",
  "asdf.constants.BLOCK_HEADER_BOILERPLATE_SIZE",
  "asdf.constants.BLOCK_MAGIC",
  "asdf.constants.INDEX_HEADER",
  "asdf.constants.MAX_BLOCKS",
  "asdf.constants.MAX_BLOCKS_DIGITS",
  "asdf.constants.STSCI_SCHEMA_URI_BASE",
  "asdf.constants.YAML_END_MARKER_REGEX",
  "asdf.constants.YAML_TAG_PREFIX",
  "asdf.extension",
  "asdf.extension.AsdfExtension",
  "asdf.extension.BuiltinExtension",
  "asdf.extension._builtin_extension_list",
  "asdf.extern",
  "asdf.extern.RangeHTTPServer",
  "asdf.extern.RangeHTTPServer.RangeHTTPRequestHandler",
  "asdf.extern.RangeHTTPServer.__all__",
  "asdf.extern.RangeHTTPServer.__version__",
  "asdf.extern.atomicfile",
  "asdf.extern.atomicfile._AtomicWFile",
  "asdf.extern.atomicfile._CloseHandle",
  "asdf.extern.atomicfile._CommitTransaction",
  "asdf.extern.atomicfile._CreateTransaction",
  "asdf.extern.atomicfile._MOVEFILE_REPLACE_EXISTING",
  "asdf.extern.atomicfile._MOVEFILE_WRITE_THROUGH",
  "asdf.extern.atomicfile._MoveFileEx",
  "asdf.extern.atomicfile._MoveFileTransacted",
  "asdf.extern.atomicfile._rename",
  "asdf.extern.atomicfile.atomic_open",
  "asdf.extern.atomicfile.atomic_rename",
  "asdf.extern.semver",
  "asdf.extern.semver._REGEX",
  "asdf.extern.semver.bump_major",
  "asdf.extern.semver.bump_minor",
  "asdf.extern.semver.bump_patch",
  "asdf.extern.semver.cmp",
  "asdf.extern.semver.compare",
  "asdf.extern.semver.format_version",
  "asdf.extern.semver.match",
  "asdf.extern.semver.max_ver",
  "asdf.extern.semver.min_ver",
  "asdf.extern.semver.parse",
  "asdf.fits_embed",
  "asdf.fits_embed.ASDF_EXTENSION_NAME",
  "asdf.fits_embed.AsdfInFits",
  "asdf.fits_embed.FITS_SOURCE_PREFIX",
  "asdf.fits_embed._EmbeddedBlockManager",
  "asdf.fits_embed._FitsBlock",
  "asdf.fits_embed.__copy__",
  "asdf.fits_embed.__deepcopy__",
  "asdf.fits_embed._version",
  "asdf.fits_embed._version_string",
  "asdf.fits_embed.blocks",
  "asdf.fits_embed.comments",
  "asdf.fits_embed.file_format_version",
  "asdf.fits_embed.tag_to_schema_resolver",
  "asdf.fits_embed.type_index",
  "asdf.fits_embed.uri",
  "asdf.fits_embed.url_mapping",
  "asdf.fits_embed.version_map",
  "asdf.fits_embed.version_string",
  "asdf.generic_io",
  "asdf.generic_io.GenericFile",
  "asdf.generic_io.GenericWrapper",
  "asdf.generic_io.HTTPConnection",
  "asdf.generic_io.InputStream",
  "asdf.generic_io.MemoryIO",
  "asdf.generic_io.OutputStream",
  "asdf.generic_io.RandomAccessFile",
  "asdf.generic_io.RealFile",
  "asdf.generic_io._TruncatedReader",
  "asdf.generic_io.__all__",
  "asdf.generic_io._array_fromfile",
  "asdf.generic_io._array_tofile",
  "asdf.generic_io._array_tofile_chunked",
  "asdf.generic_io._array_tofile_simple",
  "asdf.generic_io._check_bytes",
  "asdf.generic_io._local_file_schemes",
  "asdf.generic_io._make_http_connection",
  "asdf.generic_io.get_file",
  "asdf.generic_io.relative_uri",
  "asdf.generic_io.resolve_uri",
  "asdf.open",
  "asdf.reference",
  "asdf.reference.Reference",
  "asdf.reference.__all__",
  "asdf.reference.find_references",
  "asdf.reference.make_reference",
  "asdf.reference.resolve_fragment",
  "asdf.reference.resolve_references",
  "asdf.resolver",
  "asdf.resolver.DEFAULT_URL_MAPPING",
  "asdf.resolver.Resolver",
  "asdf.resolver.SCHEMA_PATH",
  "asdf.resolver.default_url_mapping",
  "asdf.schema",
  "asdf.schema.FILL_DEFAULTS",
  "asdf.schema.HARDCODED_SCHEMA",
  "asdf.schema.OrderedLoader",
  "asdf.schema.PYTHON_TYPE_TO_YAML_TAG",
  "asdf.schema.REMOVE_DEFAULTS",
  "asdf.schema.SCHEMA_PATH",
  "asdf.schema.YAML_SCHEMA_METASCHEMA_ID",
  "asdf.schema.YAML_VALIDATORS",
  "asdf.schema.__all__",
  "asdf.schema._create_validator",
  "asdf.schema._load_draft4_metaschema",
  "asdf.schema._load_schema",
  "asdf.schema._make_resolver",
  "asdf.schema._make_schema_loader",
  "asdf.schema._type_to_tag",
  "asdf.schema._yaml_base_loader",
  "asdf.schema.check_schema",
  "asdf.schema.construct_mapping",
  "asdf.schema.fill_defaults",
  "asdf.schema.get_validator",
  "asdf.schema.k",
  "asdf.schema.key",
  "asdf.schema.load_schema",
  "asdf.schema.remove_defaults",
  "asdf.schema.v",
  "asdf.schema.validate",
  "asdf.setup_package",
  "asdf.setup_package.get_package_data",
  "asdf.setup_package.requires_2to3",
  "asdf.stream",
  "asdf.stream.Stream",
  "asdf.stream.__len__",
  "asdf.stream.block",
  "asdf.stream.dtype",
  "asdf.stream.handle_dynamic_subclasses",
  "asdf.stream.name",
  "asdf.stream.organization",
  "asdf.stream.requires",
  "asdf.stream.shape",
  "asdf.stream.standard",
  "asdf.stream.types",
  "asdf.stream.validators",
  "asdf.stream.version",
  "asdf.stream.yaml_tag",
  "asdf.tagged",
  "asdf.tagged.Tagged",
  "asdf.tagged.__all__",
  "asdf.tagged.get_tag",
  "asdf.tagged.tag_object",
  "asdf.tags",
  "asdf.tags.core",
  "asdf.tags.core.AsdfObject",
  "asdf.tags.core.ColumnType",
  "asdf.tags.core.ComplexType",
  "asdf.tags.core.HistoryEntry",
  "asdf.tags.core.NDArrayType",
  "asdf.tags.core.Software",
  "asdf.tags.core.TableType",
  "asdf.tags.core.complex",
  "asdf.tags.core.complex.ComplexType",
  "asdf.tags.core.complex.handle_dynamic_subclasses",
  "asdf.tags.core.complex.name",
  "asdf.tags.core.complex.organization",
  "asdf.tags.core.complex.requires",
  "asdf.tags.core.complex.standard",
  "asdf.tags.core.complex.types",
  "asdf.tags.core.complex.validators",
  "asdf.tags.core.complex.version",
  "asdf.tags.core.complex.yaml_tag",
  "asdf.tags.core.constant",
  "asdf.tags.core.constant.Constant",
  "asdf.tags.core.constant.handle_dynamic_subclasses",
  "asdf.tags.core.constant.name",
  "asdf.tags.core.constant.organization",
  "asdf.tags.core.constant.requires",
  "asdf.tags.core.constant.standard",
  "asdf.tags.core.constant.types",
  "asdf.tags.core.constant.validators",
  "asdf.tags.core.constant.version",
  "asdf.tags.core.constant.yaml_tag",
  "asdf.tags.core.ndarray",
  "asdf.tags.core.ndarray.NDArrayType",
  "asdf.tags.core.ndarray.NDArrayType.__len__",
  "asdf.tags.core.ndarray.NDArrayType.block",
  "asdf.tags.core.ndarray.NDArrayType.dtype",
  "asdf.tags.core.ndarray.NDArrayType.name",
  "asdf.tags.core.ndarray.NDArrayType.shape",
  "asdf.tags.core.ndarray.NDArrayType.types",
  "asdf.tags.core.ndarray._datatype_names",
  "asdf.tags.core.ndarray._get_ndim",
  "asdf.tags.core.ndarray._make_operation",
  "asdf.tags.core.ndarray._string_datatype_names",
  "asdf.tags.core.ndarray.asdf_byteorder_to_numpy_byteorder",
  "asdf.tags.core.ndarray.asdf_datatype_to_numpy_dtype",
  "asdf.tags.core.ndarray.inline_data_asarray",
  "asdf.tags.core.ndarray.numpy_array_to_list",
  "asdf.tags.core.ndarray.numpy_byteorder_to_asdf_byteorder",
  "asdf.tags.core.ndarray.numpy_dtype_to_asdf_datatype",
  "asdf.tags.core.ndarray.op",
  "asdf.tags.core.ndarray.validate_datatype",
  "asdf.tags.core.ndarray.validate_max_ndim",
  "asdf.tags.core.ndarray.validate_ndim",
  "asdf.tags.core.table",
  "asdf.tags.core.table.ColumnType",
  "asdf.tags.core.table.TableType",
  "asdf.tags.core.table.handle_dynamic_subclasses",
  "asdf.tags.core.table.name",
  "asdf.tags.core.table.organization",
  "asdf.tags.core.table.requires",
  "asdf.tags.core.table.standard",
  "asdf.tags.core.table.types",
  "asdf.tags.core.table.validators",
  "asdf.tags.core.table.version",
  "asdf.tags.core.table.yaml_tag",
  "asdf.tags.core.tests",
  "asdf.tags.core.tests.setup_package",
  "asdf.tags.core.tests.setup_package.get_package_data",
  "asdf.tags.core.tests.test_complex",
  "asdf.tags.core.tests.test_complex.test_invalid_complex",
  "asdf.tags.core.tests.test_complex.test_roundtrip",
  "asdf.tags.core.tests.test_history",
  "asdf.tags.core.tests.test_history.test_history",
  "asdf.tags.core.tests.test_ndarray",
  "asdf.tags.core.tests.test_ndarray.CustomExtension",
  "asdf.tags.core.tests.test_ndarray.HAS_ASTROPY",
  "asdf.tags.core.tests.test_ndarray.HAS_PSUTIL",
  "asdf.tags.core.tests.test_ndarray.TEST_DATA_PATH",
  "asdf.tags.core.tests.test_ndarray.test_all_dtypes",
  "asdf.tags.core.tests.test_ndarray.test_auto_inline_recursive",
  "asdf.tags.core.tests.test_ndarray.test_byteorder",
  "asdf.tags.core.tests.test_ndarray.test_datatype_validation",
  "asdf.tags.core.tests.test_ndarray.test_dont_load_data",
  "asdf.tags.core.tests.test_ndarray.test_inline",
  "asdf.tags.core.tests.test_ndarray.test_invalid_mask_datatype",
  "asdf.tags.core.tests.test_ndarray.test_mask_arbitrary",
  "asdf.tags.core.tests.test_ndarray.test_mask_datatype",
  "asdf.tags.core.tests.test_ndarray.test_mask_nan",
  "asdf.tags.core.tests.test_ndarray.test_mask_roundtrip",
  "asdf.tags.core.tests.test_ndarray.test_masked_array_repr",
  "asdf.tags.core.tests.test_ndarray.test_masked_array_stay_open_bug",
  "asdf.tags.core.tests.test_ndarray.test_ndim_validation",
  "asdf.tags.core.tests.test_ndarray.test_operations_on_ndarray_proxies",
  "asdf.tags.core.tests.test_ndarray.test_sharing",
  "asdf.tags.core.tests.test_ndarray.test_simple_table",
  "asdf.tags.core.tests.test_ndarray.test_string",
  "asdf.tags.core.tests.test_ndarray.test_structured_datatype_validation",
  "asdf.tags.core.tests.test_ndarray.test_table",
  "asdf.tags.core.tests.test_ndarray.test_unicode_to_list",
  "asdf.tags.core.tests.test_table",
  "asdf.tags.core.tests.test_table.HAS_ASTROPY",
  "asdf.tags.core.tests.test_table.test_array_columns",
  "asdf.tags.core.tests.test_table.test_masked_table",
  "asdf.tags.core.tests.test_table.test_mismatched_columns",
  "asdf.tags.core.tests.test_table.test_structured_array_columns",
  "asdf.tags.core.tests.test_table.test_table",
  "asdf.tags.fits",
  "asdf.tags.fits.FitsType",
  "asdf.tags.fits.fits",
  "asdf.tags.fits.fits.FitsType",
  "asdf.tags.fits.fits.handle_dynamic_subclasses",
  "asdf.tags.fits.fits.name",
  "asdf.tags.fits.fits.organization",
  "asdf.tags.fits.fits.requires",
  "asdf.tags.fits.fits.standard",
  "asdf.tags.fits.fits.types",
  "asdf.tags.fits.fits.validators",
  "asdf.tags.fits.fits.version",
  "asdf.tags.fits.fits.yaml_tag",
  "asdf.tags.fits.setup_package",
  "asdf.tags.fits.setup_package.get_package_data",
  "asdf.tags.fits.tests",
  "asdf.tags.fits.tests.test_fits",
  "asdf.tags.fits.tests.test_fits.HAS_ASTROPY",
  "asdf.tags.fits.tests.test_fits.test_complex_structure",
  "asdf.tags.fits.tests.test_fits.test_fits_table",
  "asdf.tags.time",
  "asdf.tags.time.TimeType",
  "asdf.tags.time.tests",
  "asdf.tags.time.tests.test_time",
  "asdf.tags.time.tests.test_time.HAS_ASTROPY",
  "asdf.tags.time.tests.test_time.test_isot",
  "asdf.tags.time.tests.test_time.test_time",
  "asdf.tags.time.time",
  "asdf.tags.time.time.TimeType",
  "asdf.tags.time.time._astropy_format_to_asdf_format",
  "asdf.tags.time.time._guessable_formats",
  "asdf.tags.time.time.handle_dynamic_subclasses",
  "asdf.tags.time.time.name",
  "asdf.tags.time.time.organization",
  "asdf.tags.time.time.requires",
  "asdf.tags.time.time.standard",
  "asdf.tags.time.time.types",
  "asdf.tags.time.time.validators",
  "asdf.tags.time.time.version",
  "asdf.tags.time.time.yaml_tag",
  "asdf.tags.transform",
  "asdf.tags.transform.ASTROPY_12",
  "asdf.tags.transform.ASTROPY_13",
  "asdf.tags.transform.AffineType",
  "asdf.tags.transform.CompoundType",
  "asdf.tags.transform.ConstantType",
  "asdf.tags.transform.DomainType",
  "asdf.tags.transform.GenericModel",
  "asdf.tags.transform.GenericProjectionType",
  "asdf.tags.transform.GenericType",
  "asdf.tags.transform.HAS_ASTROPY",
  "asdf.tags.transform.IdentityType",
  "asdf.tags.transform.PolynomialType",
  "asdf.tags.transform.RemapAxesType",
  "asdf.tags.transform.Rotate2DType",
  "asdf.tags.transform.Rotate3DType",
  "asdf.tags.transform.ScaleType",
  "asdf.tags.transform.ShiftType",
  "asdf.tags.transform.TabularType",
  "asdf.tags.transform.TransformType",
  "asdf.tags.transform.__all__",
  "asdf.tags.transform._generic_projections",
  "asdf.tags.transform._operator_to_tag_mapping",
  "asdf.tags.transform._tag_to_method_mapping",
  "asdf.tags.transform.basic",
  "asdf.tags.transform.basic.ASTROPY_12",
  "asdf.tags.transform.basic.ConstantType",
  "asdf.tags.transform.basic.DomainType",
  "asdf.tags.transform.basic.GenericModel",
  "asdf.tags.transform.basic.GenericType",
  "asdf.tags.transform.basic.HAS_ASTROPY",
  "asdf.tags.transform.basic.IdentityType",
  "asdf.tags.transform.basic.TransformType",
  "asdf.tags.transform.basic.TransformType.requires",
  "asdf.tags.transform.basic.__all__",
  "asdf.tags.transform.basic.handle_dynamic_subclasses",
  "asdf.tags.transform.basic.name",
  "asdf.tags.transform.basic.organization",
  "asdf.tags.transform.basic.standard",
  "asdf.tags.transform.basic.types",
  "asdf.tags.transform.basic.validators",
  "asdf.tags.transform.basic.version",
  "asdf.tags.transform.basic.yaml_tag",
  "asdf.tags.transform.compound",
  "asdf.tags.transform.compound.CompoundType",
  "asdf.tags.transform.compound.RemapAxesType",
  "asdf.tags.transform.compound.__all__",
  "asdf.tags.transform.compound._operator_to_tag_mapping",
  "asdf.tags.transform.compound._tag_to_method_mapping",
  "asdf.tags.transform.compound.handle_dynamic_subclasses",
  "asdf.tags.transform.compound.name",
  "asdf.tags.transform.compound.organization",
  "asdf.tags.transform.compound.requires",
  "asdf.tags.transform.compound.standard",
  "asdf.tags.transform.compound.types",
  "asdf.tags.transform.compound.validators",
  "asdf.tags.transform.compound.version",
  "asdf.tags.transform.compound.yaml_tag",
  "asdf.tags.transform.make_projection_types",
  "asdf.tags.transform.polynomial",
  "asdf.tags.transform.polynomial.PolynomialType",
  "asdf.tags.transform.polynomial.ScaleType",
  "asdf.tags.transform.polynomial.ShiftType",
  "asdf.tags.transform.polynomial.__all__",
  "asdf.tags.transform.polynomial.handle_dynamic_subclasses",
  "asdf.tags.transform.polynomial.name",
  "asdf.tags.transform.polynomial.organization",
  "asdf.tags.transform.polynomial.requires",
  "asdf.tags.transform.polynomial.standard",
  "asdf.tags.transform.polynomial.types",
  "asdf.tags.transform.polynomial.validators",
  "asdf.tags.transform.polynomial.version",
  "asdf.tags.transform.polynomial.yaml_tag",
  "asdf.tags.transform.projections",
  "asdf.tags.transform.projections.AffineType",
  "asdf.tags.transform.projections.GenericProjectionType",
  "asdf.tags.transform.projections.Rotate2DType",
  "asdf.tags.transform.projections.Rotate3DType",
  "asdf.tags.transform.projections.__all__",
  "asdf.tags.transform.projections._generic_projections",
  "asdf.tags.transform.projections.make_projection_types",
  "asdf.tags.transform.tabular",
  "asdf.tags.transform.tabular.ASTROPY_13",
  "asdf.tags.transform.tabular.HAS_ASTROPY",
  "asdf.tags.transform.tabular.TabularType",
  "asdf.tags.transform.tabular.__all__",
  "asdf.tags.transform.tabular.handle_dynamic_subclasses",
  "asdf.tags.transform.tabular.name",
  "asdf.tags.transform.tabular.organization",
  "asdf.tags.transform.tabular.requires",
  "asdf.tags.transform.tabular.standard",
  "asdf.tags.transform.tabular.types",
  "asdf.tags.transform.tabular.validators",
  "asdf.tags.transform.tabular.version",
  "asdf.tags.transform.tabular.yaml_tag",
  "asdf.tags.transform.tests",
  "asdf.tags.transform.tests.test_transform",
  "asdf.tags.transform.tests.test_transform.ASTROPY_13",
  "asdf.tags.transform.tests.test_transform.HAS_ASTROPY",
  "asdf.tags.transform.tests.test_transform.test_domain",
  "asdf.tags.transform.tests.test_transform.test_generic_projections",
  "asdf.tags.transform.tests.test_transform.test_inverse_transforms",
  "asdf.tags.transform.tests.test_transform.test_models",
  "asdf.tags.transform.tests.test_transform.test_name",
  "asdf.tags.transform.tests.test_transform.test_naming_of_compound_model",
  "asdf.tags.transform.tests.test_transform.test_single_model",
  "asdf.tags.transform.tests.test_transform.test_tabular_model",
  "asdf.tags.transform.tests.test_transform.test_transforms_compound",
  "asdf.tags.transform.tests.test_transform.test_zenithal_with_arguments",
  "asdf.tags.unit",
  "asdf.tags.unit.UnitType",
  "asdf.tags.unit.tests",
  "asdf.tags.unit.tests.test_unit",
  "asdf.tags.unit.tests.test_unit.HAS_ASTROPY",
  "asdf.tags.unit.tests.test_unit.test_unit",
  "asdf.tags.unit.unit",
  "asdf.tags.unit.unit.UnitType",
  "asdf.tags.unit.unit.handle_dynamic_subclasses",
  "asdf.tags.unit.unit.name",
  "asdf.tags.unit.unit.organization",
  "asdf.tags.unit.unit.requires",
  "asdf.tags.unit.unit.standard",
  "asdf.tags.unit.unit.types",
  "asdf.tags.unit.unit.validators",
  "asdf.tags.unit.unit.version",
  "asdf.tags.unit.unit.yaml_tag",
  "asdf.tags.wcs",
  "asdf.tags.wcs.CelestialFrameType",
  "asdf.tags.wcs.CompositeFrame",
  "asdf.tags.wcs.FrameType",
  "asdf.tags.wcs.SpectralFrame",
  "asdf.tags.wcs.StepType",
  "asdf.tags.wcs.WCSType",
  "asdf.tags.wcs._REQUIRES",
  "asdf.tags.wcs.tests",
  "asdf.tags.wcs.tests.test_wcs",
  "asdf.tags.wcs.tests.test_wcs.HAS_ASTROPY",
  "asdf.tags.wcs.tests.test_wcs.HAS_GWCS",
  "asdf.tags.wcs.tests.test_wcs.test_composite_frame",
  "asdf.tags.wcs.tests.test_wcs.test_create_wcs",
  "asdf.tags.wcs.tests.test_wcs.test_frames",
  "asdf.tags.wcs.wcs",
  "asdf.tags.wcs.wcs.CelestialFrameType",
  "asdf.tags.wcs.wcs.CompositeFrame",
  "asdf.tags.wcs.wcs.FrameType",
  "asdf.tags.wcs.wcs.SpectralFrame",
  "asdf.tags.wcs.wcs.StepType",
  "asdf.tags.wcs.wcs.WCSType",
  "asdf.tags.wcs.wcs._REQUIRES",
  "asdf.tags.wcs.wcs.handle_dynamic_subclasses",
  "asdf.tags.wcs.wcs.organization",
  "asdf.tags.wcs.wcs.standard",
  "asdf.tags.wcs.wcs.validators",
  "asdf.tags.wcs.wcs.version",
  "asdf.tags.wcs.wcs.yaml_tag",
  "asdf.test",
  "asdf.tests",
  "asdf.tests.helpers",
  "asdf.tests.helpers.assert_roundtrip_tree",
  "asdf.tests.helpers.assert_tree_match",
  "asdf.tests.helpers.get_file_sizes",
  "asdf.tests.helpers.yaml_to_asdf",
  "asdf.tests.setup_package",
  "asdf.tests.setup_package.get_package_data",
  "asdf.tests.test_asdftypes",
  "asdf.tests.test_asdftypes.HAS_ASTROPY",
  "asdf.tests.test_asdftypes.TEST_DATA_PATH",
  "asdf.tests.test_asdftypes.test_custom_tag",
  "asdf.tests.test_asdftypes.test_longest_match",
  "asdf.tests.test_asdftypes.test_version_mismatch",
  "asdf.tests.test_asdftypes.test_versioned_writing",
  "asdf.tests.test_compression",
  "asdf.tests.test_compression._get_large_tree",
  "asdf.tests.test_compression._get_sparse_tree",
  "asdf.tests.test_compression._roundtrip",
  "asdf.tests.test_compression.test_bzp2",
  "asdf.tests.test_compression.test_invalid_compression",
  "asdf.tests.test_compression.test_zlib",
  "asdf.tests.test_fits_embed",
  "asdf.tests.test_fits_embed.HAS_ASTROPY",
  "asdf.tests.test_fits_embed.test_create_in_tree_first",
  "asdf.tests.test_fits_embed.test_embed_asdf_in_fits_file",
  "asdf.tests.test_generic_io",
  "asdf.tests.test_generic_io._get_large_tree",
  "asdf.tests.test_generic_io._get_small_tree",
  "asdf.tests.test_generic_io._roundtrip",
  "asdf.tests.test_generic_io.test_arbitrary_file_object",
  "asdf.tests.test_generic_io.test_bytes_io",
  "asdf.tests.test_generic_io.test_check_bytes",
  "asdf.tests.test_generic_io.test_exploded_filesystem",
  "asdf.tests.test_generic_io.test_exploded_http",
  "asdf.tests.test_generic_io.test_exploded_stream_read",
  "asdf.tests.test_generic_io.test_exploded_stream_write",
  "asdf.tests.test_generic_io.test_http_connection",
  "asdf.tests.test_generic_io.test_invalid_obj",
  "asdf.tests.test_generic_io.test_io_open",
  "asdf.tests.test_generic_io.test_mode_fail",
  "asdf.tests.test_generic_io.test_nonseekable_file",
  "asdf.tests.test_generic_io.test_open",
  "asdf.tests.test_generic_io.test_path",
  "asdf.tests.test_generic_io.test_relative_uri",
  "asdf.tests.test_generic_io.test_streams",
  "asdf.tests.test_generic_io.test_truncated_reader",
  "asdf.tests.test_generic_io.test_unicode_open",
  "asdf.tests.test_generic_io.test_urlopen",
  "asdf.tests.test_generic_io.tree",
  "asdf.tests.test_low_level",
  "asdf.tests.test_low_level._get_small_tree",
  "asdf.tests.test_low_level._get_update_tree",
  "asdf.tests.test_low_level.test_atomic_write",
  "asdf.tests.test_low_level.test_block_header_too_small",
  "asdf.tests.test_low_level.test_block_index",
  "asdf.tests.test_low_level.test_block_mismatch",
  "asdf.tests.test_low_level.test_checksum",
  "asdf.tests.test_low_level.test_copy",
  "asdf.tests.test_low_level.test_deferred_block_loading",
  "asdf.tests.test_low_level.test_dots_but_no_block_index",
  "asdf.tests.test_low_level.test_empty_file",
  "asdf.tests.test_low_level.test_external_block",
  "asdf.tests.test_low_level.test_get_data_from_closed_file",
  "asdf.tests.test_low_level.test_init_from_asdffile",
  "asdf.tests.test_low_level.test_invalid_array_storage",
  "asdf.tests.test_low_level.test_invalid_block_id",
  "asdf.tests.test_low_level.test_invalid_block_index_first_block_value",
  "asdf.tests.test_low_level.test_invalid_block_index_values",
  "asdf.tests.test_low_level.test_invalid_last_block_index",
  "asdf.tests.test_low_level.test_invalid_source",
  "asdf.tests.test_low_level.test_invalid_version",
  "asdf.tests.test_low_level.test_junk_after_index",
  "asdf.tests.test_low_level.test_junk_file",
  "asdf.tests.test_low_level.test_large_block_index",
  "asdf.tests.test_low_level.test_no_asdf_blocks",
  "asdf.tests.test_low_level.test_no_asdf_header",
  "asdf.tests.test_low_level.test_no_block_index",
  "asdf.tests.test_low_level.test_no_final_newline",
  "asdf.tests.test_low_level.test_no_yaml_end_marker",
  "asdf.tests.test_low_level.test_not_asdf_file",
  "asdf.tests.test_low_level.test_pad_blocks",
  "asdf.tests.test_low_level.test_seek_until_on_block_boundary",
  "asdf.tests.test_low_level.test_short_file_find_block_index",
  "asdf.tests.test_low_level.test_transfer_array_sources",
  "asdf.tests.test_low_level.test_unordered_block_index",
  "asdf.tests.test_low_level.test_update_add_array",
  "asdf.tests.test_low_level.test_update_array_in_place",
  "asdf.tests.test_low_level.test_update_delete_first_array",
  "asdf.tests.test_low_level.test_update_delete_last_array",
  "asdf.tests.test_low_level.test_update_delete_middle_array",
  "asdf.tests.test_low_level.test_update_exceptions",
  "asdf.tests.test_low_level.test_update_expand_tree",
  "asdf.tests.test_low_level.test_update_replace_all_arrays",
  "asdf.tests.test_low_level.test_update_replace_first_array",
  "asdf.tests.test_low_level.test_update_replace_last_array",
  "asdf.tests.test_low_level.test_update_replace_middle_array",
  "asdf.tests.test_low_level.test_walk_and_modify_remove_keys",
  "asdf.tests.test_low_level.test_write_to_same",
  "asdf.tests.test_reference",
  "asdf.tests.test_reference.test_external_reference",
  "asdf.tests.test_reference.test_internal_reference",
  "asdf.tests.test_reference.test_make_reference",
  "asdf.tests.test_schema",
  "asdf.tests.test_schema.CustomExtension",
  "asdf.tests.test_schema.HAS_ASTROPY",
  "asdf.tests.test_schema.TEST_DATA_PATH",
  "asdf.tests.test_schema.test_all_schema_examples",
  "asdf.tests.test_schema.test_assert_roundtrip_with_extension",
  "asdf.tests.test_schema.test_default_check_in_schema",
  "asdf.tests.test_schema.test_defaults",
  "asdf.tests.test_schema.test_fill_and_remove_defaults",
  "asdf.tests.test_schema.test_flow_style",
  "asdf.tests.test_schema.test_invalid_nested",
  "asdf.tests.test_schema.test_invalid_schema",
  "asdf.tests.test_schema.test_large_literals",
  "asdf.tests.test_schema.test_property_order",
  "asdf.tests.test_schema.test_references_in_schema",
  "asdf.tests.test_schema.test_schema_caching",
  "asdf.tests.test_schema.test_style",
  "asdf.tests.test_schema.test_tagging_scalars",
  "asdf.tests.test_schema.test_type_missing_dependencies",
  "asdf.tests.test_schema.test_validate_all_schema",
  "asdf.tests.test_schema.test_violate_toplevel_schema",
  "asdf.tests.test_stream",
  "asdf.tests.test_stream.test_array_to_stream",
  "asdf.tests.test_stream.test_stream",
  "asdf.tests.test_stream.test_too_many_streams",
  "asdf.tests.test_suite",
  "asdf.tests.test_suite.test_reference_files",
  "asdf.tests.test_tagged",
  "asdf.tests.test_yaml",
  "asdf.tests.test_yaml.HAS_ASTROPY",
  "asdf.tests.test_yaml.test_arbitrary_python_object",
  "asdf.tests.test_yaml.test_explicit_tags",
  "asdf.tests.test_yaml.test_ordered_dict",
  "asdf.tests.test_yaml.test_python_tuple",
  "asdf.tests.test_yaml.test_tags_removed_after_load",
  "asdf.tests.test_yaml.test_unicode_write",
  "asdf.tests.test_yaml.test_yaml_internal_reference",
  "asdf.tests.test_yaml.test_yaml_nan_inf",
  "asdf.treeutil",
  "asdf.treeutil.iter_tree",
  "asdf.treeutil.walk",
  "asdf.util",
  "asdf.util.BinaryStruct",
  "asdf.util.HashableDict",
  "asdf.util.InheritDocstrings",
  "asdf.util.calculate_padding",
  "asdf.util.filepath_to_url",
  "asdf.util.get_array_base",
  "asdf.util.get_base_uri",
  "asdf.util.human_list",
  "asdf.util.iter_subclasses",
  "asdf.util.minversion",
  "asdf.util.resolve_name",
  "asdf.version",
  "asdf.version._decode_stdio",
  "asdf.version._get_repo_path",
  "asdf.version._last_generated_version",
  "asdf.version._last_githash",
  "asdf.version._packagename",
  "asdf.version.bugfix",
  "asdf.version.compiler",
  "asdf.version.cython_version",
  "asdf.version.debug",
  "asdf.version.get_git_devstr",
  "asdf.version.githash",
  "asdf.version.major",
  "asdf.version.minor",
  "asdf.version.release",
  "asdf.version.timestamp",
  "asdf.version.update_git_devstr",
  "asdf.version.version",
  "asdf.versioning",
  "asdf.versioning.VersionedMixin",
  "asdf.versioning.VersionedMixin._version",
  "asdf.versioning.VersionedMixin._version_string",
  "asdf.versioning.VersionedMixin.version_map",
  "asdf.versioning.VersionedMixin.version_string",
  "asdf.versioning._version_map",
  "asdf.versioning._yaml_base_loader",
  "asdf.versioning.default_version",
  "asdf.versioning.get_version_map",
  "asdf.versioning.supported_versions",
  "asdf.versioning.version_to_string",
  "asdf.yamlutil",
  "asdf.yamlutil.AsdfDumper",
  "asdf.yamlutil.AsdfLoader",
  "asdf.yamlutil.YAML_OMAP_TAG",
  "asdf.yamlutil._flow_style_map",
  "asdf.yamlutil._style_map",
  "asdf.yamlutil._yaml_base_dumper",
  "asdf.yamlutil._yaml_base_loader",
  "asdf.yamlutil._yaml_base_type_map",
  "asdf.yamlutil._yaml_to_base_type",
  "asdf.yamlutil.custom_tree_to_tagged_tree",
  "asdf.yamlutil.dump_tree",
  "asdf.yamlutil.load_tree",
  "asdf.yamlutil.ordereddict_constructor",
  "asdf.yamlutil.represent_mapping",
  "asdf.yamlutil.represent_ordered_mapping",
  "asdf.yamlutil.represent_ordereddict",
  "asdf.yamlutil.represent_scalar",
  "asdf.yamlutil.represent_sequence",
  "asdf.yamlutil.scalar_type",
  "asdf.yamlutil.tagged_tree_to_custom_tree"
 ]
}