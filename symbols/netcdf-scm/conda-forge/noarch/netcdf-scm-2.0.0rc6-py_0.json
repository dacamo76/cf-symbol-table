{
 "errors": {},
 "symbols": [
  "netcdf_scm.__version__",
  "netcdf_scm._version",
  "netcdf_scm._version.get_versions",
  "netcdf_scm._version.version_json",
  "netcdf_scm.citing",
  "netcdf_scm.citing._determine_cmip5_modelling_group",
  "netcdf_scm.citing._get_cmip5_citation_key",
  "netcdf_scm.citing._get_cmip6_citation_key",
  "netcdf_scm.citing._process_cmip5_dependency",
  "netcdf_scm.citing._process_cmip6_dependency",
  "netcdf_scm.citing.check_license_cmip5",
  "netcdf_scm.citing.check_license_cmip6",
  "netcdf_scm.citing.check_licenses",
  "netcdf_scm.citing.cmip5",
  "netcdf_scm.citing.cmip5._clean_ar5_html",
  "netcdf_scm.citing.cmip5._determine_cmip5_modelling_group",
  "netcdf_scm.citing.cmip5._get_cmip5_citation_key",
  "netcdf_scm.citing.cmip5._load_cmip5_dois",
  "netcdf_scm.citing.cmip5._query_cmip5_doi",
  "netcdf_scm.citing.cmip5.check_license_cmip5",
  "netcdf_scm.citing.cmip5.get_cmip5_bibtex_citation",
  "netcdf_scm.citing.cmip6",
  "netcdf_scm.citing.cmip6._get_cmip6_citation_key",
  "netcdf_scm.citing.cmip6._get_cmip6_doi",
  "netcdf_scm.citing.cmip6._get_title",
  "netcdf_scm.citing.cmip6._query_cmip6",
  "netcdf_scm.citing.cmip6.check_license_cmip6",
  "netcdf_scm.citing.cmip6.get_cmip6_bibtex_citation",
  "netcdf_scm.citing.cmip6.get_license_info",
  "netcdf_scm.citing.get_citation_tables",
  "netcdf_scm.citing.get_cmip5_bibtex_citation",
  "netcdf_scm.citing.get_cmip6_bibtex_citation",
  "netcdf_scm.cli",
  "netcdf_scm.cli.ClickHandler",
  "netcdf_scm.cli.ColorFormatter",
  "netcdf_scm.cli._default_handler",
  "netcdf_scm.cli.cli",
  "netcdf_scm.cli.crunch",
  "netcdf_scm.cli.stitch",
  "netcdf_scm.cli.wrangle",
  "netcdf_scm.cli_parallel",
  "netcdf_scm.cli_parallel._apply_func",
  "netcdf_scm.cli_parallel.logger",
  "netcdf_scm.cli_utils",
  "netcdf_scm.cli_utils.DEFAULT_LOG_FORMAT",
  "netcdf_scm.cli_utils.LOGGER",
  "netcdf_scm.cli_utils._MAGICC_VARIABLE_MAP",
  "netcdf_scm.cli_utils._check_timesteps_are_monthly",
  "netcdf_scm.cli_utils._convert_units",
  "netcdf_scm.cli_utils._do_timeseriestype_operation",
  "netcdf_scm.cli_utils._find_dirs_meeting_func",
  "netcdf_scm.cli_utils._get_openscmdf_header",
  "netcdf_scm.cli_utils._get_openscmdf_metadata_header",
  "netcdf_scm.cli_utils._get_outfile_dir",
  "netcdf_scm.cli_utils._get_path_bits",
  "netcdf_scm.cli_utils._get_timestamp",
  "netcdf_scm.cli_utils._load_scm_cube",
  "netcdf_scm.cli_utils._log_options",
  "netcdf_scm.cli_utils._make_path_if_not_exists",
  "netcdf_scm.cli_utils._match_regexp_list",
  "netcdf_scm.cli_utils._set_crunch_contact_in_results",
  "netcdf_scm.cli_utils._setup_log_file",
  "netcdf_scm.cli_utils._skip_file",
  "netcdf_scm.cli_utils._take_area_sum",
  "netcdf_scm.cli_utils._ureg",
  "netcdf_scm.cli_utils._write_ascii_file",
  "netcdf_scm.cli_utils._write_mag_file",
  "netcdf_scm.cli_utils._write_magicc_input_file",
  "netcdf_scm.crunching",
  "netcdf_scm.crunching._crunch_data",
  "netcdf_scm.crunching._crunch_files",
  "netcdf_scm.crunching._get_number_data_points_in_millions",
  "netcdf_scm.crunching._translate_cli_weighting_args",
  "netcdf_scm.crunching.logger",
  "netcdf_scm.definitions",
  "netcdf_scm.definitions.NAME_COMPONENTS_SEPARATOR",
  "netcdf_scm.definitions.OUTPUT_PREFIX",
  "netcdf_scm.definitions._LAND_FRACTION_REGIONS",
  "netcdf_scm.definitions._SCM_TIMESERIES_META_COLUMNS",
  "netcdf_scm.errors",
  "netcdf_scm.errors.NoLicenseInformationError",
  "netcdf_scm.errors.NonStandardLicenseError",
  "netcdf_scm.errors.raise_no_iris_warning",
  "netcdf_scm.io",
  "netcdf_scm.io._ALL_AVAILABLE_CUBES",
  "netcdf_scm.io._load_helper_and_scm_cubes",
  "netcdf_scm.io.get_scmcube_helper",
  "netcdf_scm.io.load_mag_file",
  "netcdf_scm.io.load_scmrun",
  "netcdf_scm.io.save_netcdf_scm_nc",
  "netcdf_scm.iris_cube_wrappers",
  "netcdf_scm.iris_cube_wrappers.CMIP6Input4MIPsCube",
  "netcdf_scm.iris_cube_wrappers.CMIP6OutputCube",
  "netcdf_scm.iris_cube_wrappers.MarbleCMIP5Cube",
  "netcdf_scm.iris_cube_wrappers.ScmCube",
  "netcdf_scm.iris_cube_wrappers._CMIPCube",
  "netcdf_scm.iris_cube_wrappers._get_cf_var_data",
  "netcdf_scm.iris_cube_wrappers.logger",
  "netcdf_scm.mat4py",
  "netcdf_scm.mat4py.__all__",
  "netcdf_scm.mat4py.__license__",
  "netcdf_scm.mat4py.__version__",
  "netcdf_scm.mat4py.loadmat",
  "netcdf_scm.mat4py.loadmat.ParseError",
  "netcdf_scm.mat4py.loadmat.__all__",
  "netcdf_scm.mat4py.loadmat.asbytes",
  "netcdf_scm.mat4py.loadmat.asstr",
  "netcdf_scm.mat4py.loadmat.basestring",
  "netcdf_scm.mat4py.loadmat.compressed_numeric",
  "netcdf_scm.mat4py.loadmat.diff",
  "netcdf_scm.mat4py.loadmat.eof",
  "netcdf_scm.mat4py.loadmat.etypes",
  "netcdf_scm.mat4py.loadmat.inv_etypes",
  "netcdf_scm.mat4py.loadmat.inv_mclasses",
  "netcdf_scm.mat4py.loadmat.ispy2",
  "netcdf_scm.mat4py.loadmat.izip",
  "netcdf_scm.mat4py.loadmat.loadmat",
  "netcdf_scm.mat4py.loadmat.mclasses",
  "netcdf_scm.mat4py.loadmat.numeric_class_etypes",
  "netcdf_scm.mat4py.loadmat.read_cell_array",
  "netcdf_scm.mat4py.loadmat.read_char_array",
  "netcdf_scm.mat4py.loadmat.read_element_tag",
  "netcdf_scm.mat4py.loadmat.read_elements",
  "netcdf_scm.mat4py.loadmat.read_file_header",
  "netcdf_scm.mat4py.loadmat.read_header",
  "netcdf_scm.mat4py.loadmat.read_numeric_array",
  "netcdf_scm.mat4py.loadmat.read_struct_array",
  "netcdf_scm.mat4py.loadmat.read_var_array",
  "netcdf_scm.mat4py.loadmat.read_var_header",
  "netcdf_scm.mat4py.loadmat.squeeze",
  "netcdf_scm.mat4py.loadmat.unpack",
  "netcdf_scm.mat4py.savemat",
  "netcdf_scm.mat4py.savemat.__all__",
  "netcdf_scm.mat4py.savemat.asbytes",
  "netcdf_scm.mat4py.savemat.asstr",
  "netcdf_scm.mat4py.savemat.basestring",
  "netcdf_scm.mat4py.savemat.compressed_numeric",
  "netcdf_scm.mat4py.savemat.diff",
  "netcdf_scm.mat4py.savemat.etypes",
  "netcdf_scm.mat4py.savemat.guess_header",
  "netcdf_scm.mat4py.savemat.inv_etypes",
  "netcdf_scm.mat4py.savemat.inv_mclasses",
  "netcdf_scm.mat4py.savemat.isarray",
  "netcdf_scm.mat4py.savemat.ispy2",
  "netcdf_scm.mat4py.savemat.izip",
  "netcdf_scm.mat4py.savemat.mclasses",
  "netcdf_scm.mat4py.savemat.numeric_class_etypes",
  "netcdf_scm.mat4py.savemat.savemat",
  "netcdf_scm.mat4py.savemat.write_cell_array",
  "netcdf_scm.mat4py.savemat.write_char_array",
  "netcdf_scm.mat4py.savemat.write_compressed_var_array",
  "netcdf_scm.mat4py.savemat.write_elements",
  "netcdf_scm.mat4py.savemat.write_file_header",
  "netcdf_scm.mat4py.savemat.write_numeric_array",
  "netcdf_scm.mat4py.savemat.write_struct_array",
  "netcdf_scm.mat4py.savemat.write_var_array",
  "netcdf_scm.mat4py.savemat.write_var_data",
  "netcdf_scm.mat4py.savemat.write_var_header",
  "netcdf_scm.misc_readers",
  "netcdf_scm.misc_readers.read_cmip6_concs_gmnhsh",
  "netcdf_scm.normalisation",
  "netcdf_scm.normalisation.AfterBranchTimeMean",
  "netcdf_scm.normalisation.NormaliserRunningMean",
  "netcdf_scm.normalisation.after_branch_time_mean",
  "netcdf_scm.normalisation.after_branch_time_mean.AfterBranchTimeMean",
  "netcdf_scm.normalisation.after_branch_time_mean.LOGGER",
  "netcdf_scm.normalisation.after_branch_time_mean.method_name",
  "netcdf_scm.normalisation.base",
  "netcdf_scm.normalisation.base.Normaliser",
  "netcdf_scm.normalisation.base.Normaliser.method_name",
  "netcdf_scm.normalisation.get_normaliser",
  "netcdf_scm.normalisation.running_mean",
  "netcdf_scm.normalisation.running_mean.LOGGER",
  "netcdf_scm.normalisation.running_mean.NormaliserRunningMean",
  "netcdf_scm.normalisation.running_mean.method_name",
  "netcdf_scm.normalisation.running_mean_dedrift",
  "netcdf_scm.normalisation.running_mean_dedrift.LOGGER",
  "netcdf_scm.normalisation.running_mean_dedrift.NormaliserRunningMeanDedrift",
  "netcdf_scm.normalisation.running_mean_dedrift.method_name",
  "netcdf_scm.output",
  "netcdf_scm.output.OutputFileDatabase",
  "netcdf_scm.output.logger",
  "netcdf_scm.retractions",
  "netcdf_scm.retractions.ESGF_NODE",
  "netcdf_scm.retractions.LOGGER",
  "netcdf_scm.retractions._create_search_url",
  "netcdf_scm.retractions._get_dependencies",
  "netcdf_scm.retractions._perform_esgf_queries",
  "netcdf_scm.retractions._query_esgf",
  "netcdf_scm.retractions.check_depends_on_retracted",
  "netcdf_scm.retractions.check_retracted_files",
  "netcdf_scm.retractions.check_retractions",
  "netcdf_scm.stitching",
  "netcdf_scm.stitching._do_stitching",
  "netcdf_scm.stitching._get_parent_path_base",
  "netcdf_scm.stitching._get_stitched_openscmdf_metadata_header",
  "netcdf_scm.stitching._load_scmrun_and_add_source_file",
  "netcdf_scm.stitching._make_metadata_uniform",
  "netcdf_scm.stitching._normalise_timeseries_against_picontrol",
  "netcdf_scm.stitching._stitch_magicc_files",
  "netcdf_scm.stitching._stitch_netcdf_scm_ncs",
  "netcdf_scm.stitching.get_branch_time",
  "netcdf_scm.stitching.get_continuous_timeseries_with_meta",
  "netcdf_scm.stitching.get_parent_file_path",
  "netcdf_scm.stitching.get_parent_replacements",
  "netcdf_scm.stitching.logger_stitching",
  "netcdf_scm.stitching.step_up_family_tree",
  "netcdf_scm.utils",
  "netcdf_scm.utils._adjust_gregorian_year_zero_units",
  "netcdf_scm.utils._assert_only_cube_dim_coord_is_time",
  "netcdf_scm.utils._cftime_conversion",
  "netcdf_scm.utils._check_cube_and_adjust_if_needed",
  "netcdf_scm.utils._get_normalising_factor",
  "netcdf_scm.utils._vector_cftime_conversion",
  "netcdf_scm.utils.apply_mask",
  "netcdf_scm.utils.assert_all_time_axes_same",
  "netcdf_scm.utils.broadcast_onto_lat_lon_grid",
  "netcdf_scm.utils.cube_lat_lon_grid_compatible_with_array",
  "netcdf_scm.utils.get_cube_timeseries_data",
  "netcdf_scm.utils.get_scm_cube_time_axis_in_calendar",
  "netcdf_scm.utils.logger",
  "netcdf_scm.utils.take_lat_lon_mean",
  "netcdf_scm.utils.unify_lat_lon",
  "netcdf_scm.weights",
  "netcdf_scm.weights.AreaSurfaceFractionWeightCalculator",
  "netcdf_scm.weights.AreaWeightCalculator",
  "netcdf_scm.weights.CubeWeightCalculator",
  "netcdf_scm.weights.DEFAULT_REGIONS",
  "netcdf_scm.weights.InvalidWeights",
  "netcdf_scm.weights.WEIGHTS_FUNCTIONS_WITHOUT_AREA_WEIGHTING",
  "netcdf_scm.weights._DEFAULT_SFTLF_FILE",
  "netcdf_scm.weights._check_surface_fraction_bounds_and_shape",
  "netcdf_scm.weights.ar6_region_abbrev",
  "netcdf_scm.weights.get_ar6_region_weights",
  "netcdf_scm.weights.get_binary_nh_weights",
  "netcdf_scm.weights.get_default_sftlf_cube",
  "netcdf_scm.weights.get_land_weights",
  "netcdf_scm.weights.get_nh_weights",
  "netcdf_scm.weights.get_ocean_weights",
  "netcdf_scm.weights.get_sh_weights",
  "netcdf_scm.weights.get_weights_for_area",
  "netcdf_scm.weights.get_world_weights",
  "netcdf_scm.weights.has_regionmask",
  "netcdf_scm.weights.logger",
  "netcdf_scm.weights.multiply_weights",
  "netcdf_scm.weights.region_name",
  "netcdf_scm.weights.subtract_weights",
  "netcdf_scm.wranglers",
  "netcdf_scm.wranglers.convert_scmdf_to_tuningstruc",
  "netcdf_scm.wranglers.convert_tuningstruc_to_scmdf",
  "netcdf_scm.wranglers.get_tuningstruc_name_from_df",
  "netcdf_scm.wranglers.logger",
  "netcdf_scm.wrangling",
  "netcdf_scm.wrangling._do_magicc_wrangling",
  "netcdf_scm.wrangling._do_wrangling",
  "netcdf_scm.wrangling._get_blended_model_regexp",
  "netcdf_scm.wrangling._tuningstrucs_blended_model_wrangling",
  "netcdf_scm.wrangling._wrangle_magicc_files",
  "netcdf_scm.wrangling.logger"
 ]
}