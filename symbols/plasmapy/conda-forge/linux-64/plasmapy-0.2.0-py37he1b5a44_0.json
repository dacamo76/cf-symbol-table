{
 "errors": {},
 "symbols": [
  "plasmapy.__all__",
  "plasmapy.__citation__",
  "plasmapy.__githash__",
  "plasmapy.__name__",
  "plasmapy.__version__",
  "plasmapy._base_init",
  "plasmapy._base_init.__all__",
  "plasmapy._base_init.__githash__",
  "plasmapy._base_init.__version__",
  "plasmapy._base_init.config_dir",
  "plasmapy._base_init.config_template",
  "plasmapy._base_init.orig_error",
  "plasmapy._base_init.test",
  "plasmapy._base_init.wmsg",
  "plasmapy.atomic",
  "plasmapy.atomic.IonizationState",
  "plasmapy.atomic.Particle",
  "plasmapy.atomic.State",
  "plasmapy.atomic.alpha",
  "plasmapy.atomic.atomic",
  "plasmapy.atomic.atomic.InvalidElementError",
  "plasmapy.atomic.atomic.InvalidIsotopeError",
  "plasmapy.atomic.atomic.InvalidParticleError",
  "plasmapy.atomic.atomic.MissingAtomicDataError",
  "plasmapy.atomic.atomic.Particle",
  "plasmapy.atomic.atomic._Elements",
  "plasmapy.atomic.atomic._Isotopes",
  "plasmapy.atomic.atomic.__all__",
  "plasmapy.atomic.atomic._is_electron",
  "plasmapy.atomic.atomic.atomic_number",
  "plasmapy.atomic.atomic.atomic_symbol",
  "plasmapy.atomic.atomic.common_isotopes",
  "plasmapy.atomic.atomic.electric_charge",
  "plasmapy.atomic.atomic.half_life",
  "plasmapy.atomic.atomic.integer_charge",
  "plasmapy.atomic.atomic.is_stable",
  "plasmapy.atomic.atomic.isotopic_abundance",
  "plasmapy.atomic.atomic.known_isotopes",
  "plasmapy.atomic.atomic.mass_number",
  "plasmapy.atomic.atomic.particle_input",
  "plasmapy.atomic.atomic.particle_mass",
  "plasmapy.atomic.atomic.periodic_table_block",
  "plasmapy.atomic.atomic.periodic_table_category",
  "plasmapy.atomic.atomic.periodic_table_group",
  "plasmapy.atomic.atomic.periodic_table_period",
  "plasmapy.atomic.atomic.reduced_mass",
  "plasmapy.atomic.atomic.stable_isotopes",
  "plasmapy.atomic.atomic.standard_atomic_weight",
  "plasmapy.atomic.atomic_number",
  "plasmapy.atomic.atomic_symbol",
  "plasmapy.atomic.common_isotopes",
  "plasmapy.atomic.deuteron",
  "plasmapy.atomic.electric_charge",
  "plasmapy.atomic.electron",
  "plasmapy.atomic.element_name",
  "plasmapy.atomic.elements",
  "plasmapy.atomic.elements._Elements",
  "plasmapy.atomic.elements._PeriodicTable",
  "plasmapy.atomic.elements._atomic_numbers_to_symbols",
  "plasmapy.atomic.elements._element_names_to_symbols",
  "plasmapy.atomic.elements._element_obj_hook",
  "plasmapy.atomic.exceptions",
  "plasmapy.atomic.exceptions.AtomicError",
  "plasmapy.atomic.exceptions.AtomicWarning",
  "plasmapy.atomic.exceptions.ChargeError",
  "plasmapy.atomic.exceptions.InvalidElementError",
  "plasmapy.atomic.exceptions.InvalidIonError",
  "plasmapy.atomic.exceptions.InvalidIsotopeError",
  "plasmapy.atomic.exceptions.InvalidParticleError",
  "plasmapy.atomic.exceptions.MissingAtomicDataError",
  "plasmapy.atomic.exceptions.MissingAtomicDataWarning",
  "plasmapy.atomic.exceptions.PlasmaPyError",
  "plasmapy.atomic.exceptions.PlasmaPyWarning",
  "plasmapy.atomic.exceptions.UnexpectedParticleError",
  "plasmapy.atomic.half_life",
  "plasmapy.atomic.integer_charge",
  "plasmapy.atomic.ionic_symbol",
  "plasmapy.atomic.ionization_state",
  "plasmapy.atomic.ionization_state.AtomicError",
  "plasmapy.atomic.ionization_state.ChargeError",
  "plasmapy.atomic.ionization_state.InvalidParticleError",
  "plasmapy.atomic.ionization_state.IonizationState",
  "plasmapy.atomic.ionization_state.Particle",
  "plasmapy.atomic.ionization_state.State",
  "plasmapy.atomic.ionization_state.__all__",
  "plasmapy.atomic.ionization_state._number_density_errmsg",
  "plasmapy.atomic.ionization_state.check_quantity",
  "plasmapy.atomic.ionization_state.particle_input",
  "plasmapy.atomic.ionization_states",
  "plasmapy.atomic.ionization_states.AtomicError",
  "plasmapy.atomic.ionization_states.ChargeError",
  "plasmapy.atomic.ionization_states.InvalidParticleError",
  "plasmapy.atomic.ionization_states.IonizationState",
  "plasmapy.atomic.ionization_states.IonizationStates",
  "plasmapy.atomic.ionization_states.Particle",
  "plasmapy.atomic.ionization_states.State",
  "plasmapy.atomic.ionization_states.__all__",
  "plasmapy.atomic.ionization_states.atomic_number",
  "plasmapy.atomic.ionization_states.check_quantity",
  "plasmapy.atomic.ionization_states.particle_symbol",
  "plasmapy.atomic.is_stable",
  "plasmapy.atomic.isotope_symbol",
  "plasmapy.atomic.isotopes",
  "plasmapy.atomic.isotopes._Isotopes",
  "plasmapy.atomic.isotopes._isotope_obj_hook",
  "plasmapy.atomic.isotopic_abundance",
  "plasmapy.atomic.known_isotopes",
  "plasmapy.atomic.mass_number",
  "plasmapy.atomic.neutron",
  "plasmapy.atomic.nuclear",
  "plasmapy.atomic.nuclear.AtomicError",
  "plasmapy.atomic.nuclear.InvalidParticleError",
  "plasmapy.atomic.nuclear.Particle",
  "plasmapy.atomic.nuclear.__all__",
  "plasmapy.atomic.nuclear.mass_energy",
  "plasmapy.atomic.nuclear.nuclear_binding_energy",
  "plasmapy.atomic.nuclear.nuclear_reaction_energy",
  "plasmapy.atomic.nuclear.particle_input",
  "plasmapy.atomic.nuclear_binding_energy",
  "plasmapy.atomic.nuclear_reaction_energy",
  "plasmapy.atomic.parsing",
  "plasmapy.atomic.parsing.AtomicWarning",
  "plasmapy.atomic.parsing.InvalidElementError",
  "plasmapy.atomic.parsing.InvalidParticleError",
  "plasmapy.atomic.parsing.ParticleZoo",
  "plasmapy.atomic.parsing._Elements",
  "plasmapy.atomic.parsing._Isotopes",
  "plasmapy.atomic.parsing._Particles",
  "plasmapy.atomic.parsing._atomic_numbers_to_symbols",
  "plasmapy.atomic.parsing._call_string",
  "plasmapy.atomic.parsing._case_insensitive_aliases",
  "plasmapy.atomic.parsing._case_sensitive_aliases",
  "plasmapy.atomic.parsing._create_alias_dicts",
  "plasmapy.atomic.parsing._dealias_particle_aliases",
  "plasmapy.atomic.parsing._element_names_to_symbols",
  "plasmapy.atomic.parsing._invalid_particle_errmsg",
  "plasmapy.atomic.parsing._parse_and_check_atomic_input",
  "plasmapy.atomic.parsing.roman",
  "plasmapy.atomic.particle_class",
  "plasmapy.atomic.particle_class.AtomicError",
  "plasmapy.atomic.particle_class.AtomicWarning",
  "plasmapy.atomic.particle_class.ChargeError",
  "plasmapy.atomic.particle_class.InvalidElementError",
  "plasmapy.atomic.particle_class.InvalidIonError",
  "plasmapy.atomic.particle_class.InvalidIsotopeError",
  "plasmapy.atomic.particle_class.InvalidParticleError",
  "plasmapy.atomic.particle_class.MissingAtomicDataError",
  "plasmapy.atomic.particle_class.MissingAtomicDataWarning",
  "plasmapy.atomic.particle_class.Particle",
  "plasmapy.atomic.particle_class.ParticleZoo",
  "plasmapy.atomic.particle_class._Elements",
  "plasmapy.atomic.particle_class._Isotopes",
  "plasmapy.atomic.particle_class._Particles",
  "plasmapy.atomic.particle_class._PeriodicTable",
  "plasmapy.atomic.particle_class.__all__",
  "plasmapy.atomic.particle_class._antiparticles",
  "plasmapy.atomic.particle_class._atomic_property_categories",
  "plasmapy.atomic.particle_class._category_errmsg",
  "plasmapy.atomic.particle_class._classification_categories",
  "plasmapy.atomic.particle_class._dealias_particle_aliases",
  "plasmapy.atomic.particle_class._invalid_particle_errmsg",
  "plasmapy.atomic.particle_class._parse_and_check_atomic_input",
  "plasmapy.atomic.particle_class._periodic_table_categories",
  "plasmapy.atomic.particle_class._special_ion_masses",
  "plasmapy.atomic.particle_class._specific_particle_categories",
  "plasmapy.atomic.particle_class._valid_categories",
  "plasmapy.atomic.particle_class.roman",
  "plasmapy.atomic.particle_input",
  "plasmapy.atomic.particle_input.AtomicError",
  "plasmapy.atomic.particle_input.ChargeError",
  "plasmapy.atomic.particle_input.InvalidElementError",
  "plasmapy.atomic.particle_input.InvalidIonError",
  "plasmapy.atomic.particle_input.InvalidIsotopeError",
  "plasmapy.atomic.particle_input.InvalidParticleError",
  "plasmapy.atomic.particle_input.__all__",
  "plasmapy.atomic.particle_input._category_errmsg",
  "plasmapy.atomic.particle_input._particle_errmsg",
  "plasmapy.atomic.particle_input.particle_input",
  "plasmapy.atomic.particle_mass",
  "plasmapy.atomic.particle_symbol",
  "plasmapy.atomic.positron",
  "plasmapy.atomic.proton",
  "plasmapy.atomic.reduced_mass",
  "plasmapy.atomic.special_particles",
  "plasmapy.atomic.special_particles.ParticleZoo",
  "plasmapy.atomic.special_particles._ParticleZooClass",
  "plasmapy.atomic.special_particles._Particles",
  "plasmapy.atomic.special_particles._PeriodicTable",
  "plasmapy.atomic.special_particles._antiparticles",
  "plasmapy.atomic.special_particles._create_Particles_dict",
  "plasmapy.atomic.special_particles._special_ion_masses",
  "plasmapy.atomic.stable_isotopes",
  "plasmapy.atomic.standard_atomic_weight",
  "plasmapy.atomic.symbols",
  "plasmapy.atomic.symbols.__all__",
  "plasmapy.atomic.symbols.atomic_symbol",
  "plasmapy.atomic.symbols.element_name",
  "plasmapy.atomic.symbols.ionic_symbol",
  "plasmapy.atomic.symbols.isotope_symbol",
  "plasmapy.atomic.symbols.particle_symbol",
  "plasmapy.atomic.tests",
  "plasmapy.atomic.tests.test_atomic",
  "plasmapy.atomic.tests.test_atomic.AtomicError",
  "plasmapy.atomic.tests.test_atomic.AtomicWarning",
  "plasmapy.atomic.tests.test_atomic.ChargeError",
  "plasmapy.atomic.tests.test_atomic.InvalidElementError",
  "plasmapy.atomic.tests.test_atomic.InvalidIonError",
  "plasmapy.atomic.tests.test_atomic.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_atomic.InvalidParticleError",
  "plasmapy.atomic.tests.test_atomic.MissingAtomicDataError",
  "plasmapy.atomic.tests.test_atomic.TestInvalidPeriodicElement",
  "plasmapy.atomic.tests.test_atomic.TestReducedMassInput",
  "plasmapy.atomic.tests.test_atomic.all_tests",
  "plasmapy.atomic.tests.test_atomic.atomic_ParticleError_badargs",
  "plasmapy.atomic.tests.test_atomic.atomic_ParticleErrors_funcs_table",
  "plasmapy.atomic.tests.test_atomic.atomic_TypeError_badargs",
  "plasmapy.atomic.tests.test_atomic.atomic_TypeError_funcs_table",
  "plasmapy.atomic.tests.test_atomic.atomic_number_table",
  "plasmapy.atomic.tests.test_atomic.atomic_symbol_table",
  "plasmapy.atomic.tests.test_atomic.badarg",
  "plasmapy.atomic.tests.test_atomic.badargs",
  "plasmapy.atomic.tests.test_atomic.electric_charge_table",
  "plasmapy.atomic.tests.test_atomic.element_name_table",
  "plasmapy.atomic.tests.test_atomic.equivalent_particle_mass_args",
  "plasmapy.atomic.tests.test_atomic.error",
  "plasmapy.atomic.tests.test_atomic.func",
  "plasmapy.atomic.tests.test_atomic.funcs",
  "plasmapy.atomic.tests.test_atomic.half_life_table",
  "plasmapy.atomic.tests.test_atomic.inputs",
  "plasmapy.atomic.tests.test_atomic.integer_charge_table",
  "plasmapy.atomic.tests.test_atomic.is_stable_table",
  "plasmapy.atomic.tests.test_atomic.isotope_symbol_table",
  "plasmapy.atomic.tests.test_atomic.isotopic_abundance_elements",
  "plasmapy.atomic.tests.test_atomic.isotopic_abundance_isotopes",
  "plasmapy.atomic.tests.test_atomic.isotopic_abundance_sum_table",
  "plasmapy.atomic.tests.test_atomic.mass_number_table",
  "plasmapy.atomic.tests.test_atomic.metatable",
  "plasmapy.atomic.tests.test_atomic.particle_mass_table",
  "plasmapy.atomic.tests.test_atomic.standard_atomic_weight_table",
  "plasmapy.atomic.tests.test_atomic.str_electron_table",
  "plasmapy.atomic.tests.test_atomic.table",
  "plasmapy.atomic.tests.test_atomic.tables_and_functions",
  "plasmapy.atomic.tests.test_atomic.test_atomic_functions",
  "plasmapy.atomic.tests.test_atomic.test_half_life",
  "plasmapy.atomic.tests.test_atomic.test_is_electron",
  "plasmapy.atomic.tests.test_atomic.test_isotopic_abundance",
  "plasmapy.atomic.tests.test_atomic.test_known_common_stable_isotopes",
  "plasmapy.atomic.tests.test_atomic.test_particle_mass_berkelium_249",
  "plasmapy.atomic.tests.test_atomic.test_particle_mass_equivalent_args",
  "plasmapy.atomic.tests.test_atomic.test_particle_mass_for_hydrogen_with_no_mass_number",
  "plasmapy.atomic.tests.test_atomic.test_particle_mass_helium",
  "plasmapy.atomic.tests.test_atomic.test_standard_atomic_weight_value_between",
  "plasmapy.atomic.tests.test_ionization_state",
  "plasmapy.atomic.tests.test_ionization_state.AtomicError",
  "plasmapy.atomic.tests.test_ionization_state.IE",
  "plasmapy.atomic.tests.test_ionization_state.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_ionization_state.IonizationState",
  "plasmapy.atomic.tests.test_ionization_state.Particle",
  "plasmapy.atomic.tests.test_ionization_state.Test_IonizationState",
  "plasmapy.atomic.tests.test_ionization_state.atomic_number",
  "plasmapy.atomic.tests.test_ionization_state.atomic_symbol",
  "plasmapy.atomic.tests.test_ionization_state.expected_properties",
  "plasmapy.atomic.tests.test_ionization_state.instance",
  "plasmapy.atomic.tests.test_ionization_state.isotope_symbol",
  "plasmapy.atomic.tests.test_ionization_state.kwargs",
  "plasmapy.atomic.tests.test_ionization_state.particle_symbol",
  "plasmapy.atomic.tests.test_ionization_state.run_test",
  "plasmapy.atomic.tests.test_ionization_state.test_IonizationState_attributes",
  "plasmapy.atomic.tests.test_ionization_state.test_IonizationState_exceptions",
  "plasmapy.atomic.tests.test_ionization_state.test_cases",
  "plasmapy.atomic.tests.test_ionization_state.test_names",
  "plasmapy.atomic.tests.test_ionization_state.test_nans",
  "plasmapy.atomic.tests.test_ionization_state.test_setting_ionic_fractions",
  "plasmapy.atomic.tests.test_ionization_state.tests_for_exceptions",
  "plasmapy.atomic.tests.test_ionization_states",
  "plasmapy.atomic.tests.test_ionization_states.AtomicError",
  "plasmapy.atomic.tests.test_ionization_states.IE",
  "plasmapy.atomic.tests.test_ionization_states.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_ionization_states.IonizationState",
  "plasmapy.atomic.tests.test_ionization_states.Particle",
  "plasmapy.atomic.tests.test_ionization_states.State",
  "plasmapy.atomic.tests.test_ionization_states.TestIonizationStates",
  "plasmapy.atomic.tests.test_ionization_states.atomic_number",
  "plasmapy.atomic.tests.test_ionization_states.check_abundances_consistency",
  "plasmapy.atomic.tests.test_ionization_states.has_attribute",
  "plasmapy.atomic.tests.test_ionization_states.mass_number",
  "plasmapy.atomic.tests.test_ionization_states.particle_symbol",
  "plasmapy.atomic.tests.test_ionization_states.run_test",
  "plasmapy.atomic.tests.test_ionization_states.test_abundances_consistency",
  "plasmapy.atomic.tests.test_ionization_states.test_exceptions_upon_instantiation",
  "plasmapy.atomic.tests.test_ionization_states.test_names",
  "plasmapy.atomic.tests.test_ionization_states.test_number_density_assignment",
  "plasmapy.atomic.tests.test_ionization_states.tests",
  "plasmapy.atomic.tests.test_ionization_states.tests_for_exceptions",
  "plasmapy.atomic.tests.test_nuclear",
  "plasmapy.atomic.tests.test_nuclear.AtomicError",
  "plasmapy.atomic.tests.test_nuclear.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_nuclear.InvalidParticleError",
  "plasmapy.atomic.tests.test_nuclear.nuclear_reaction_energy_kwargs_table",
  "plasmapy.atomic.tests.test_nuclear.test_nuclear",
  "plasmapy.atomic.tests.test_parsing",
  "plasmapy.atomic.tests.test_parsing.AtomicWarning",
  "plasmapy.atomic.tests.test_parsing.InvalidElementError",
  "plasmapy.atomic.tests.test_parsing.InvalidParticleError",
  "plasmapy.atomic.tests.test_parsing.alias_dictionaries",
  "plasmapy.atomic.tests.test_parsing.aliases_and_symbols",
  "plasmapy.atomic.tests.test_parsing.atomic_warnings_table",
  "plasmapy.atomic.tests.test_parsing.invalid_particles_table",
  "plasmapy.atomic.tests.test_parsing.parse_check_table",
  "plasmapy.atomic.tests.test_parsing.test_alias_dict_properties",
  "plasmapy.atomic.tests.test_parsing.test_dealias_particle_aliases",
  "plasmapy.atomic.tests.test_parsing.test_parse_AtomicWarnings",
  "plasmapy.atomic.tests.test_parsing.test_parse_InvalidElementErrors",
  "plasmapy.atomic.tests.test_parsing.test_parse_InvalidParticleErrors",
  "plasmapy.atomic.tests.test_parsing.test_parse_and_check_atomic_input",
  "plasmapy.atomic.tests.test_particle_class",
  "plasmapy.atomic.tests.test_particle_class.AtomicError",
  "plasmapy.atomic.tests.test_particle_class.AtomicWarning",
  "plasmapy.atomic.tests.test_particle_class.ChargeError",
  "plasmapy.atomic.tests.test_particle_class.InvalidElementError",
  "plasmapy.atomic.tests.test_particle_class.InvalidIonError",
  "plasmapy.atomic.tests.test_particle_class.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_particle_class.InvalidParticleError",
  "plasmapy.atomic.tests.test_particle_class.MissingAtomicDataError",
  "plasmapy.atomic.tests.test_particle_class.MissingAtomicDataWarning",
  "plasmapy.atomic.tests.test_particle_class.Particle",
  "plasmapy.atomic.tests.test_particle_class.ParticleZoo",
  "plasmapy.atomic.tests.test_particle_class.Test_antiparticle_properties_inversion",
  "plasmapy.atomic.tests.test_particle_class._Isotopes",
  "plasmapy.atomic.tests.test_particle_class.c",
  "plasmapy.atomic.tests.test_particle_class.call_string",
  "plasmapy.atomic.tests.test_particle_class.e",
  "plasmapy.atomic.tests.test_particle_class.equivalent_particles_table",
  "plasmapy.atomic.tests.test_particle_class.known_isotopes",
  "plasmapy.atomic.tests.test_particle_class.m_e",
  "plasmapy.atomic.tests.test_particle_class.m_n",
  "plasmapy.atomic.tests.test_particle_class.m_p",
  "plasmapy.atomic.tests.test_particle_class.nuclide_mass_and_mass_equiv_table",
  "plasmapy.atomic.tests.test_particle_class.opposite",
  "plasmapy.atomic.tests.test_particle_class.particle",
  "plasmapy.atomic.tests.test_particle_class.roman",
  "plasmapy.atomic.tests.test_particle_class.run_test_equivalent_calls",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_class",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_cmp",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_equivalent_cases",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_error_table",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_errors",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_table",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_warning_table",
  "plasmapy.atomic.tests.test_particle_class.test_Particle_warnings",
  "plasmapy.atomic.tests.test_particle_class.test_antiparticle_inversion",
  "plasmapy.atomic.tests.test_particle_class.test_particle_bool_error",
  "plasmapy.atomic.tests.test_particle_class.test_particle_class_mass_nuclide_mass",
  "plasmapy.atomic.tests.test_particle_class.test_particle_half_life_string",
  "plasmapy.atomic.tests.test_particle_class.test_particle_inversion",
  "plasmapy.atomic.tests.test_particle_class.test_particle_is_electron",
  "plasmapy.atomic.tests.test_particle_class.test_particleing_a_particle",
  "plasmapy.atomic.tests.test_particle_class.test_that_object_can_be_dict_key",
  "plasmapy.atomic.tests.test_particle_class.test_unary_operator_for_elements",
  "plasmapy.atomic.tests.test_particle_input",
  "plasmapy.atomic.tests.test_particle_input.AtomicError",
  "plasmapy.atomic.tests.test_particle_input.ChargeError",
  "plasmapy.atomic.tests.test_particle_input.InvalidElementError",
  "plasmapy.atomic.tests.test_particle_input.InvalidIonError",
  "plasmapy.atomic.tests.test_particle_input.InvalidIsotopeError",
  "plasmapy.atomic.tests.test_particle_input.InvalidParticleError",
  "plasmapy.atomic.tests.test_particle_input.TestOptionalArgs",
  "plasmapy.atomic.tests.test_particle_input.Test_particle_input",
  "plasmapy.atomic.tests.test_particle_input.ambiguous_keywords",
  "plasmapy.atomic.tests.test_particle_input.decorator_categories_table",
  "plasmapy.atomic.tests.test_particle_input.func_simple_noparens",
  "plasmapy.atomic.tests.test_particle_input.func_simple_parens",
  "plasmapy.atomic.tests.test_particle_input.function_to_test_annotations",
  "plasmapy.atomic.tests.test_particle_input.function_with_element_argument",
  "plasmapy.atomic.tests.test_particle_input.function_with_ion_argument",
  "plasmapy.atomic.tests.test_particle_input.function_with_isotope_argument",
  "plasmapy.atomic.tests.test_particle_input.function_with_list_annotation",
  "plasmapy.atomic.tests.test_particle_input.function_with_no_annotations",
  "plasmapy.atomic.tests.test_particle_input.function_with_tuple_annotation",
  "plasmapy.atomic.tests.test_particle_input.is_element",
  "plasmapy.atomic.tests.test_particle_input.is_ion",
  "plasmapy.atomic.tests.test_particle_input.is_isotope",
  "plasmapy.atomic.tests.test_particle_input.list_annotation_test_table",
  "plasmapy.atomic.tests.test_particle_input.not_element",
  "plasmapy.atomic.tests.test_particle_input.not_ion",
  "plasmapy.atomic.tests.test_particle_input.not_isotope",
  "plasmapy.atomic.tests.test_particle_input.particle_input_error_table",
  "plasmapy.atomic.tests.test_particle_input.particle_input_simple_table",
  "plasmapy.atomic.tests.test_particle_input.test_decorator_categories",
  "plasmapy.atomic.tests.test_particle_input.test_function_with_ambiguity",
  "plasmapy.atomic.tests.test_particle_input.test_invalid_list_type",
  "plasmapy.atomic.tests.test_particle_input.test_invalid_number_of_tuple_elements",
  "plasmapy.atomic.tests.test_particle_input.test_is_element",
  "plasmapy.atomic.tests.test_particle_input.test_is_ion",
  "plasmapy.atomic.tests.test_particle_input.test_is_isotope",
  "plasmapy.atomic.tests.test_particle_input.test_list_annotation",
  "plasmapy.atomic.tests.test_particle_input.test_no_annotations_exception",
  "plasmapy.atomic.tests.test_particle_input.test_none_shall_not_pass",
  "plasmapy.atomic.tests.test_particle_input.test_none_shall_pass",
  "plasmapy.atomic.tests.test_particle_input.test_not_element",
  "plasmapy.atomic.tests.test_particle_input.test_not_ion",
  "plasmapy.atomic.tests.test_particle_input.test_not_isotope",
  "plasmapy.atomic.tests.test_particle_input.test_not_optional_particle_annotation_argname",
  "plasmapy.atomic.tests.test_particle_input.test_optional_particle_annotation_argname",
  "plasmapy.atomic.tests.test_particle_input.test_particle_input_classes",
  "plasmapy.atomic.tests.test_particle_input.test_particle_input_errors",
  "plasmapy.atomic.tests.test_particle_input.test_particle_input_simple",
  "plasmapy.atomic.tests.test_particle_input.test_tuple_annotation",
  "plasmapy.atomic.tests.test_particle_input.test_unexpected_tuple_and_list_argument_types",
  "plasmapy.atomic.tests.test_particle_input.tuple_annotation_test_table",
  "plasmapy.atomic.tests.test_special_particles",
  "plasmapy.atomic.tests.test_special_particles.ParticleZoo",
  "plasmapy.atomic.tests.test_special_particles._Particles",
  "plasmapy.atomic.tests.test_special_particles.particle_antiparticle_pairs",
  "plasmapy.atomic.tests.test_special_particles.required_keys",
  "plasmapy.atomic.tests.test_special_particles.test__Particles_required_keys",
  "plasmapy.atomic.tests.test_special_particles.test_particle_antiparticle_pairs",
  "plasmapy.atomic.triton",
  "plasmapy.classes",
  "plasmapy.classes.BasePlasma",
  "plasmapy.classes.GenericPlasma",
  "plasmapy.classes.Plasma",
  "plasmapy.classes.Species",
  "plasmapy.classes.exceptions",
  "plasmapy.classes.exceptions.DataStandardError",
  "plasmapy.classes.exceptions.PlasmaPyError",
  "plasmapy.classes.plasma_base",
  "plasmapy.classes.plasma_base.BasePlasma",
  "plasmapy.classes.plasma_base.BasePlasma._registry",
  "plasmapy.classes.plasma_base.GenericPlasma",
  "plasmapy.classes.plasma_base.__all__",
  "plasmapy.classes.plasma_factory",
  "plasmapy.classes.plasma_factory.BasicRegistrationFactory",
  "plasmapy.classes.plasma_factory.GenericPlasma",
  "plasmapy.classes.plasma_factory.MultipleMatchError",
  "plasmapy.classes.plasma_factory.NoMatchError",
  "plasmapy.classes.plasma_factory.Plasma",
  "plasmapy.classes.plasma_factory.PlasmaFactory",
  "plasmapy.classes.plasma_factory.ValidationFunctionError",
  "plasmapy.classes.plasma_factory.__all__",
  "plasmapy.classes.sources",
  "plasmapy.classes.sources.HDF5Reader",
  "plasmapy.classes.sources.Plasma3D",
  "plasmapy.classes.sources.PlasmaBlob",
  "plasmapy.classes.sources.openpmd_hdf5",
  "plasmapy.classes.sources.openpmd_hdf5.DataStandardError",
  "plasmapy.classes.sources.openpmd_hdf5.GenericPlasma",
  "plasmapy.classes.sources.openpmd_hdf5.HDF5Reader",
  "plasmapy.classes.sources.openpmd_hdf5._NEWER_VERSION",
  "plasmapy.classes.sources.openpmd_hdf5._OUTDATED_VERSION",
  "plasmapy.classes.sources.openpmd_hdf5._UNITS",
  "plasmapy.classes.sources.openpmd_hdf5._fetch_units",
  "plasmapy.classes.sources.openpmd_hdf5._registry",
  "plasmapy.classes.sources.openpmd_hdf5._valid_version",
  "plasmapy.classes.sources.openpmd_hdf5.e",
  "plasmapy.classes.sources.openpmd_hdf5.h5py_import_error",
  "plasmapy.classes.sources.plasma3d",
  "plasmapy.classes.sources.plasma3d.GenericPlasma",
  "plasmapy.classes.sources.plasma3d.MagnetoStatics",
  "plasmapy.classes.sources.plasma3d.Plasma3D",
  "plasmapy.classes.sources.plasma3d.__all__",
  "plasmapy.classes.sources.plasma3d._registry",
  "plasmapy.classes.sources.plasma3d.c",
  "plasmapy.classes.sources.plasma3d.e",
  "plasmapy.classes.sources.plasma3d.eps0",
  "plasmapy.classes.sources.plasma3d.k_B",
  "plasmapy.classes.sources.plasma3d.m_e",
  "plasmapy.classes.sources.plasma3d.m_p",
  "plasmapy.classes.sources.plasma3d.mu0",
  "plasmapy.classes.sources.plasma3d.pi",
  "plasmapy.classes.sources.plasmablob",
  "plasmapy.classes.sources.plasmablob.CouplingWarning",
  "plasmapy.classes.sources.plasmablob.GenericPlasma",
  "plasmapy.classes.sources.plasmablob.PlasmaBlob",
  "plasmapy.classes.sources.plasmablob.__all__",
  "plasmapy.classes.sources.plasmablob._grab_charge",
  "plasmapy.classes.sources.plasmablob._registry",
  "plasmapy.classes.sources.plasmablob.call_string",
  "plasmapy.classes.sources.plasmablob.coupling_parameter",
  "plasmapy.classes.sources.plasmablob.particle_mass",
  "plasmapy.classes.sources.plasmablob.quantum_theta",
  "plasmapy.classes.sources.tests",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.DataStandardError",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD2D",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMD3D",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.TestOpenPMDThetaMode",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.openpmd_hdf5",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.rootdir",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_fetch_units",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_non_openpmd_hdf5",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.test_unavailable_hdf5",
  "plasmapy.classes.sources.tests.test_openpmd_hdf5.units_test_table",
  "plasmapy.classes.sources.tests.test_plasma3d",
  "plasmapy.classes.sources.tests.test_plasma3d.InvalidParticleError",
  "plasmapy.classes.sources.tests.test_plasma3d.plasma3d",
  "plasmapy.classes.sources.tests.test_plasma3d.test_Plasma3D_derived_vars",
  "plasmapy.classes.sources.tests.test_plasma3d.test_Plasma3D_setup",
  "plasmapy.classes.sources.tests.test_plasmablob",
  "plasmapy.classes.sources.tests.test_plasmablob.InvalidParticleError",
  "plasmapy.classes.sources.tests.test_plasmablob.Test_PlasmaBlob",
  "plasmapy.classes.sources.tests.test_plasmablob.magnetostatics",
  "plasmapy.classes.sources.tests.test_plasmablob.plasma3d",
  "plasmapy.classes.sources.tests.test_plasmablob.plasmablob",
  "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_add_magnetostatics",
  "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_derived_vars",
  "plasmapy.classes.sources.tests.test_plasmablob.test_Plasma3D_setup",
  "plasmapy.classes.species",
  "plasmapy.classes.species.Species",
  "plasmapy.classes.species.__all__",
  "plasmapy.classes.species.atomic",
  "plasmapy.classes.tests",
  "plasmapy.classes.tests.test_Species",
  "plasmapy.classes.tests.test_Species.Plasma3D",
  "plasmapy.classes.tests.test_Species.Species",
  "plasmapy.classes.tests.test_Species.fit_sine_curve",
  "plasmapy.classes.tests.test_Species.test_particle_exb_drift",
  "plasmapy.classes.tests.test_Species.uniform_magnetic_field",
  "plasmapy.classes.tests.test_plasma_base",
  "plasmapy.classes.tests.test_plasma_base.BasePlasma",
  "plasmapy.classes.tests.test_plasma_base.GenericPlasma",
  "plasmapy.classes.tests.test_plasma_base.IsDataSource",
  "plasmapy.classes.tests.test_plasma_base.IsNotDataSource",
  "plasmapy.classes.tests.test_plasma_base.NoDataSource",
  "plasmapy.classes.tests.test_plasma_base.TestRegistrar",
  "plasmapy.classes.tests.test_plasma_base.test_subclasses",
  "plasmapy.classes.tests.test_plasma_factory",
  "plasmapy.classes.tests.test_plasma_factory.TestPlasma",
  "plasmapy.classes.tests.test_plasma_factory.rootdir",
  "plasmapy.config_dir",
  "plasmapy.config_template",
  "plasmapy.conftest",
  "plasmapy.constants",
  "plasmapy.constants.__doc__",
  "plasmapy.constants.c",
  "plasmapy.constants.e",
  "plasmapy.constants.eps0",
  "plasmapy.constants.hbar",
  "plasmapy.constants.k_B",
  "plasmapy.constants.m_e",
  "plasmapy.constants.m_n",
  "plasmapy.constants.m_p",
  "plasmapy.constants.mu0",
  "plasmapy.constants.pi",
  "plasmapy.cython_version",
  "plasmapy.cython_version.cython_version",
  "plasmapy.data",
  "plasmapy.data.setup_package",
  "plasmapy.data.setup_package.get_package_data",
  "plasmapy.data.test",
  "plasmapy.data.test.file_list",
  "plasmapy.data.test.rootdir",
  "plasmapy.diagnostics",
  "plasmapy.diagnostics.langmuir",
  "plasmapy.diagnostics.langmuir.Characteristic",
  "plasmapy.diagnostics.langmuir.Particle",
  "plasmapy.diagnostics.langmuir.__all__",
  "plasmapy.diagnostics.langmuir._fit_func_double_lin_inverse",
  "plasmapy.diagnostics.langmuir._fit_func_lin",
  "plasmapy.diagnostics.langmuir.constants",
  "plasmapy.diagnostics.langmuir.e",
  "plasmapy.diagnostics.langmuir.extract_exponential_section",
  "plasmapy.diagnostics.langmuir.extract_ion_section",
  "plasmapy.diagnostics.langmuir.extrapolate_electron_current",
  "plasmapy.diagnostics.langmuir.extrapolate_ion_current_OML",
  "plasmapy.diagnostics.langmuir.get_EEDF",
  "plasmapy.diagnostics.langmuir.get_electron_density_LM",
  "plasmapy.diagnostics.langmuir.get_electron_saturation_current",
  "plasmapy.diagnostics.langmuir.get_electron_temperature",
  "plasmapy.diagnostics.langmuir.get_floating_potential",
  "plasmapy.diagnostics.langmuir.get_ion_density_LM",
  "plasmapy.diagnostics.langmuir.get_ion_density_OML",
  "plasmapy.diagnostics.langmuir.get_ion_saturation_current",
  "plasmapy.diagnostics.langmuir.get_plasma_potential",
  "plasmapy.diagnostics.langmuir.mpl_import_error",
  "plasmapy.diagnostics.langmuir.reduce_bimaxwellian_temperature",
  "plasmapy.diagnostics.langmuir.swept_probe_analysis",
  "plasmapy.diagnostics.langmuir.utils",
  "plasmapy.diagnostics.tests",
  "plasmapy.diagnostics.tests.test_langmuir",
  "plasmapy.diagnostics.tests.test_langmuir.DryCharacteristic",
  "plasmapy.diagnostics.tests.test_langmuir.N",
  "plasmapy.diagnostics.tests.test_langmuir.Test__Characteristic_inherited_methods",
  "plasmapy.diagnostics.tests.test_langmuir.Test__characteristic_errors",
  "plasmapy.diagnostics.tests.test_langmuir.Test__fitting_functions",
  "plasmapy.diagnostics.tests.test_langmuir.Test__swept_probe_analysis",
  "plasmapy.diagnostics.tests.test_langmuir.bias_arr",
  "plasmapy.diagnostics.tests.test_langmuir.characteristic",
  "plasmapy.diagnostics.tests.test_langmuir.constants",
  "plasmapy.diagnostics.tests.test_langmuir.current_arr",
  "plasmapy.diagnostics.tests.test_langmuir.langmuir",
  "plasmapy.diagnostics.tests.test_langmuir.shuffle_characteristic",
  "plasmapy.diagnostics.tests.test_langmuir.test_get_EEDF",
  "plasmapy.diagnostics.tests.test_langmuir.test_get_floating_potential_with_return_arg",
  "plasmapy.diagnostics.tests.test_langmuir.test_get_ion_density_OML_without_return_fit",
  "plasmapy.import_helpers",
  "plasmapy.import_helpers.check_versions",
  "plasmapy.import_helpers.get_minimum_versions",
  "plasmapy.import_helpers.requirements_dir",
  "plasmapy.import_helpers.split_version",
  "plasmapy.mathematics",
  "plasmapy.mathematics.Fermi_integral",
  "plasmapy.mathematics.mathematics",
  "plasmapy.mathematics.mathematics.Fermi_integral",
  "plasmapy.mathematics.mathematics.e",
  "plasmapy.mathematics.mathematics.mpmath_import_error",
  "plasmapy.mathematics.mathematics.plasma_dispersion_func",
  "plasmapy.mathematics.plasma_dispersion_func",
  "plasmapy.mathematics.plasma_dispersion_func_deriv",
  "plasmapy.mathematics.tests",
  "plasmapy.mathematics.tests.test_Fermi_integral",
  "plasmapy.mathematics.tests.test_Fermi_integral.Test_Fermi_integral",
  "plasmapy.mathematics.tests.test_dispersion",
  "plasmapy.mathematics.tests.test_dispersion.plasma_disp_deriv_table",
  "plasmapy.mathematics.tests.test_dispersion.plasma_disp_func_errors_table",
  "plasmapy.mathematics.tests.test_dispersion.plasma_dispersion_func_table",
  "plasmapy.mathematics.tests.test_dispersion.test_plasma_dispersion_deriv_errors",
  "plasmapy.mathematics.tests.test_dispersion.test_plasma_dispersion_func",
  "plasmapy.mathematics.tests.test_plasma_dispersion_func",
  "plasmapy.online_help",
  "plasmapy.optional_deps",
  "plasmapy.optional_deps._optional_import_error_template",
  "plasmapy.optional_deps.h5py_import_error",
  "plasmapy.optional_deps.lmfit_import_error",
  "plasmapy.optional_deps.mpl_import_error",
  "plasmapy.optional_deps.mpmath_import_error",
  "plasmapy.orig_error",
  "plasmapy.physics",
  "plasmapy.physics.Alfven_speed",
  "plasmapy.physics.Debye_length",
  "plasmapy.physics.Debye_number",
  "plasmapy.physics.Fermi_energy",
  "plasmapy.physics.Lorentz_factor",
  "plasmapy.physics.Maxwellian_1D",
  "plasmapy.physics.Maxwellian_speed_1D",
  "plasmapy.physics.Maxwellian_speed_2D",
  "plasmapy.physics.Maxwellian_speed_3D",
  "plasmapy.physics.Maxwellian_velocity_2D",
  "plasmapy.physics.Maxwellian_velocity_3D",
  "plasmapy.physics.Thomas_Fermi_length",
  "plasmapy.physics.Wigner_Seitz_radius",
  "plasmapy.physics._chemical_potential_interp",
  "plasmapy.physics.chemical_potential",
  "plasmapy.physics.cold_plasma_permittivity_LRP",
  "plasmapy.physics.cold_plasma_permittivity_SDP",
  "plasmapy.physics.deBroglie_wavelength",
  "plasmapy.physics.dielectric",
  "plasmapy.physics.dielectric.RotatingTensorElements",
  "plasmapy.physics.dielectric.StixTensorElements",
  "plasmapy.physics.dielectric.__all__",
  "plasmapy.physics.dielectric.c",
  "plasmapy.physics.dielectric.cold_plasma_permittivity_LRP",
  "plasmapy.physics.dielectric.cold_plasma_permittivity_SDP",
  "plasmapy.physics.dielectric.e",
  "plasmapy.physics.dielectric.eps0",
  "plasmapy.physics.dielectric.m_e",
  "plasmapy.physics.dielectric.mu0",
  "plasmapy.physics.dielectric.parameters",
  "plasmapy.physics.dielectric.permittivity_1D_Maxwellian",
  "plasmapy.physics.dielectric.pi",
  "plasmapy.physics.dielectric.plasma_dispersion_func_deriv",
  "plasmapy.physics.dielectric.utils",
  "plasmapy.physics.dimensionless",
  "plasmapy.physics.dimensionless.__all__",
  "plasmapy.physics.dimensionless.beta",
  "plasmapy.physics.dimensionless.constants",
  "plasmapy.physics.dimensionless.parameters",
  "plasmapy.physics.dimensionless.quantum",
  "plasmapy.physics.dimensionless.quantum_theta",
  "plasmapy.physics.dimensionless.utils",
  "plasmapy.physics.distribution",
  "plasmapy.physics.distribution.Maxwellian_1D",
  "plasmapy.physics.distribution.Maxwellian_speed_1D",
  "plasmapy.physics.distribution.Maxwellian_speed_2D",
  "plasmapy.physics.distribution.Maxwellian_speed_3D",
  "plasmapy.physics.distribution.Maxwellian_velocity_2D",
  "plasmapy.physics.distribution.Maxwellian_velocity_3D",
  "plasmapy.physics.distribution.__all__",
  "plasmapy.physics.distribution._v_drift_units",
  "plasmapy.physics.distribution.kappa_velocity_1D",
  "plasmapy.physics.distribution.kappa_velocity_3D",
  "plasmapy.physics.distribution.parameters",
  "plasmapy.physics.drifts",
  "plasmapy.physics.drifts.ExB_drift",
  "plasmapy.physics.drifts.force_drift",
  "plasmapy.physics.drifts.utils",
  "plasmapy.physics.gyrofrequency",
  "plasmapy.physics.gyroradius",
  "plasmapy.physics.inertial_length",
  "plasmapy.physics.ion_sound_speed",
  "plasmapy.physics.kappa_thermal_speed",
  "plasmapy.physics.kappa_velocity_1D",
  "plasmapy.physics.kappa_velocity_3D",
  "plasmapy.physics.lower_hybrid_frequency",
  "plasmapy.physics.magnetic_energy_density",
  "plasmapy.physics.magnetic_pressure",
  "plasmapy.physics.magnetostatics",
  "plasmapy.physics.magnetostatics.CircularWire",
  "plasmapy.physics.magnetostatics.FiniteStraightWire",
  "plasmapy.physics.magnetostatics.GeneralWire",
  "plasmapy.physics.magnetostatics.InfiniteStraightWire",
  "plasmapy.physics.magnetostatics.MagneticDipole",
  "plasmapy.physics.magnetostatics.MagnetoStatics",
  "plasmapy.physics.magnetostatics.Wire",
  "plasmapy.physics.parameters",
  "plasmapy.physics.parameters.Alfven_speed",
  "plasmapy.physics.parameters.AtomicError",
  "plasmapy.physics.parameters.Debye_length",
  "plasmapy.physics.parameters.Debye_number",
  "plasmapy.physics.parameters.Hall_parameter",
  "plasmapy.physics.parameters.PhysicsError",
  "plasmapy.physics.parameters.__all__",
  "plasmapy.physics.parameters._grab_charge",
  "plasmapy.physics.parameters.atomic",
  "plasmapy.physics.parameters.c",
  "plasmapy.physics.parameters.e",
  "plasmapy.physics.parameters.eps0",
  "plasmapy.physics.parameters.gyrofrequency",
  "plasmapy.physics.parameters.gyroradius",
  "plasmapy.physics.parameters.inertial_length",
  "plasmapy.physics.parameters.ion_sound_speed",
  "plasmapy.physics.parameters.k_B",
  "plasmapy.physics.parameters.kappa_thermal_speed",
  "plasmapy.physics.parameters.lower_hybrid_frequency",
  "plasmapy.physics.parameters.m_e",
  "plasmapy.physics.parameters.m_p",
  "plasmapy.physics.parameters.magnetic_energy_density",
  "plasmapy.physics.parameters.magnetic_pressure",
  "plasmapy.physics.parameters.mass_density",
  "plasmapy.physics.parameters.mu0",
  "plasmapy.physics.parameters.pi",
  "plasmapy.physics.parameters.plasma_frequency",
  "plasmapy.physics.parameters.thermal_pressure",
  "plasmapy.physics.parameters.thermal_speed",
  "plasmapy.physics.parameters.upper_hybrid_frequency",
  "plasmapy.physics.parameters.utils",
  "plasmapy.physics.parameters_cython.thermal_speed",
  "plasmapy.physics.permittivity_1D_Maxwellian",
  "plasmapy.physics.plasma_frequency",
  "plasmapy.physics.quantum",
  "plasmapy.physics.quantum.Fermi_energy",
  "plasmapy.physics.quantum.Lorentz_factor",
  "plasmapy.physics.quantum.Thomas_Fermi_length",
  "plasmapy.physics.quantum.Wigner_Seitz_radius",
  "plasmapy.physics.quantum.__all__",
  "plasmapy.physics.quantum._chemical_potential_interp",
  "plasmapy.physics.quantum.atomic",
  "plasmapy.physics.quantum.check_quantity",
  "plasmapy.physics.quantum.chemical_potential",
  "plasmapy.physics.quantum.deBroglie_wavelength",
  "plasmapy.physics.quantum.lmfit_import_error",
  "plasmapy.physics.quantum.mathematics",
  "plasmapy.physics.quantum.thermal_deBroglie_wavelength",
  "plasmapy.physics.quantum.utils",
  "plasmapy.physics.relativity",
  "plasmapy.physics.relativity.Lorentz_factor",
  "plasmapy.physics.relativity.__all__",
  "plasmapy.physics.relativity.c",
  "plasmapy.physics.relativity.utils",
  "plasmapy.physics.tests",
  "plasmapy.physics.tests.test_Alfven_speed",
  "plasmapy.physics.tests.test_Debye_length",
  "plasmapy.physics.tests.test_Debye_number",
  "plasmapy.physics.tests.test_dielectric",
  "plasmapy.physics.tests.test_dielectric.B",
  "plasmapy.physics.tests.test_dielectric.Test_ColdPlasmaPermittivity",
  "plasmapy.physics.tests.test_dielectric.Test_permittivity_1D_Maxwellian",
  "plasmapy.physics.tests.test_dielectric.n",
  "plasmapy.physics.tests.test_dielectric.omega",
  "plasmapy.physics.tests.test_dielectric.single_species",
  "plasmapy.physics.tests.test_dielectric.three_species",
  "plasmapy.physics.tests.test_dielectric.two_species",
  "plasmapy.physics.tests.test_dimensionless",
  "plasmapy.physics.tests.test_dimensionless.beta",
  "plasmapy.physics.tests.test_dimensionless.quantum_theta",
  "plasmapy.physics.tests.test_dimensionless.test_beta_dimensionless",
  "plasmapy.physics.tests.test_dimensionless.test_beta_nan",
  "plasmapy.physics.tests.test_dimensionless.test_quantum_theta_dimensionless",
  "plasmapy.physics.tests.test_distribution",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_1D",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_speed_1D",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_speed_2D",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_speed_3D",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_velocity_2D",
  "plasmapy.physics.tests.test_distribution.Test_Maxwellian_velocity_3D",
  "plasmapy.physics.tests.test_distribution.Test_kappa_velocity_1D",
  "plasmapy.physics.tests.test_distribution.Test_kappa_velocity_3D",
  "plasmapy.physics.tests.test_drifts",
  "plasmapy.physics.tests.test_drifts.Test_ExB_drift",
  "plasmapy.physics.tests.test_drifts.Test_force_drift",
  "plasmapy.physics.tests.test_drifts.drifts",
  "plasmapy.physics.tests.test_gyrofrequency",
  "plasmapy.physics.tests.test_gyroradius",
  "plasmapy.physics.tests.test_inertial_length",
  "plasmapy.physics.tests.test_ion_sound_speed",
  "plasmapy.physics.tests.test_magnetic_energy_density",
  "plasmapy.physics.tests.test_magnetic_pressure",
  "plasmapy.physics.tests.test_magnetostatics",
  "plasmapy.physics.tests.test_magnetostatics.CircularWire",
  "plasmapy.physics.tests.test_magnetostatics.FiniteStraightWire",
  "plasmapy.physics.tests.test_magnetostatics.GeneralWire",
  "plasmapy.physics.tests.test_magnetostatics.InfiniteStraightWire",
  "plasmapy.physics.tests.test_magnetostatics.MagneticDipole",
  "plasmapy.physics.tests.test_magnetostatics.MagnetoStatics",
  "plasmapy.physics.tests.test_magnetostatics.Test_CircularWire",
  "plasmapy.physics.tests.test_magnetostatics.Test_FiniteStraightWire",
  "plasmapy.physics.tests.test_magnetostatics.Test_GeneralWire",
  "plasmapy.physics.tests.test_magnetostatics.Test_InfiniteStraightWire",
  "plasmapy.physics.tests.test_magnetostatics.Test_MagneticDipole",
  "plasmapy.physics.tests.test_magnetostatics.Wire",
  "plasmapy.physics.tests.test_magnetostatics.mu0_4pi",
  "plasmapy.physics.tests.test_parameters",
  "plasmapy.physics.tests.test_parameters.Alfven_speed",
  "plasmapy.physics.tests.test_parameters.B",
  "plasmapy.physics.tests.test_parameters.B_allnanarr",
  "plasmapy.physics.tests.test_parameters.B_arr",
  "plasmapy.physics.tests.test_parameters.B_nanarr",
  "plasmapy.physics.tests.test_parameters.Debye_length",
  "plasmapy.physics.tests.test_parameters.Debye_number",
  "plasmapy.physics.tests.test_parameters.InvalidParticleError",
  "plasmapy.physics.tests.test_parameters.PhysicsError",
  "plasmapy.physics.tests.test_parameters.RelativityError",
  "plasmapy.physics.tests.test_parameters.RelativityWarning",
  "plasmapy.physics.tests.test_parameters.T_allnanarr",
  "plasmapy.physics.tests.test_parameters.T_arr",
  "plasmapy.physics.tests.test_parameters.T_e",
  "plasmapy.physics.tests.test_parameters.T_i",
  "plasmapy.physics.tests.test_parameters.T_nanarr",
  "plasmapy.physics.tests.test_parameters.T_nanarr2",
  "plasmapy.physics.tests.test_parameters.T_negarr",
  "plasmapy.physics.tests.test_parameters.Test_gyroradius",
  "plasmapy.physics.tests.test_parameters.Test_kappa_thermal_speed",
  "plasmapy.physics.tests.test_parameters.Test_mass_density",
  "plasmapy.physics.tests.test_parameters.V",
  "plasmapy.physics.tests.test_parameters.V_allnanarr",
  "plasmapy.physics.tests.test_parameters.V_arr",
  "plasmapy.physics.tests.test_parameters.V_nanarr",
  "plasmapy.physics.tests.test_parameters.Z",
  "plasmapy.physics.tests.test_parameters.assert_can_handle_nparray",
  "plasmapy.physics.tests.test_parameters.gyrofrequency",
  "plasmapy.physics.tests.test_parameters.gyroradius",
  "plasmapy.physics.tests.test_parameters.inertial_length",
  "plasmapy.physics.tests.test_parameters.ion_sound_speed",
  "plasmapy.physics.tests.test_parameters.kappa_thermal_speed",
  "plasmapy.physics.tests.test_parameters.lower_hybrid_frequency",
  "plasmapy.physics.tests.test_parameters.m_i",
  "plasmapy.physics.tests.test_parameters.magnetic_energy_density",
  "plasmapy.physics.tests.test_parameters.magnetic_pressure",
  "plasmapy.physics.tests.test_parameters.mass_density",
  "plasmapy.physics.tests.test_parameters.mu",
  "plasmapy.physics.tests.test_parameters.n_e",
  "plasmapy.physics.tests.test_parameters.n_i",
  "plasmapy.physics.tests.test_parameters.plasma_frequency",
  "plasmapy.physics.tests.test_parameters.rho",
  "plasmapy.physics.tests.test_parameters.rho_arr",
  "plasmapy.physics.tests.test_parameters.rho_infarr",
  "plasmapy.physics.tests.test_parameters.rho_negarr",
  "plasmapy.physics.tests.test_parameters.test_Alfven_speed",
  "plasmapy.physics.tests.test_parameters.test_Debye_length",
  "plasmapy.physics.tests.test_parameters.test_Debye_number",
  "plasmapy.physics.tests.test_parameters.test_gyrofrequency",
  "plasmapy.physics.tests.test_parameters.test_gyroradius",
  "plasmapy.physics.tests.test_parameters.test_inertial_length",
  "plasmapy.physics.tests.test_parameters.test_ion_sound_speed",
  "plasmapy.physics.tests.test_parameters.test_lower_hybrid_frequency",
  "plasmapy.physics.tests.test_parameters.test_magnetic_energy_density",
  "plasmapy.physics.tests.test_parameters.test_magnetic_pressure",
  "plasmapy.physics.tests.test_parameters.test_plasma_frequency",
  "plasmapy.physics.tests.test_parameters.test_thermal_pressure",
  "plasmapy.physics.tests.test_parameters.test_thermal_speed",
  "plasmapy.physics.tests.test_parameters.test_upper_hybrid_frequency",
  "plasmapy.physics.tests.test_parameters.thermal_pressure",
  "plasmapy.physics.tests.test_parameters.thermal_speed",
  "plasmapy.physics.tests.test_parameters.upper_hybrid_frequency",
  "plasmapy.physics.tests.test_parameters_cython",
  "plasmapy.physics.tests.test_parameters_cython.PhysicsError",
  "plasmapy.physics.tests.test_parameters_cython.RelativityError",
  "plasmapy.physics.tests.test_parameters_cython.RelativityWarning",
  "plasmapy.physics.tests.test_parameters_cython.c",
  "plasmapy.physics.tests.test_parameters_cython.e",
  "plasmapy.physics.tests.test_parameters_cython.m_e",
  "plasmapy.physics.tests.test_parameters_cython.m_p",
  "plasmapy.physics.tests.test_parameters_cython.mu0",
  "plasmapy.physics.tests.test_parameters_cython.test_thermal_speed",
  "plasmapy.physics.tests.test_parameters_cython.thermal_speed",
  "plasmapy.physics.tests.test_plasma_frequency",
  "plasmapy.physics.tests.test_quantum",
  "plasmapy.physics.tests.test_quantum.T_e",
  "plasmapy.physics.tests.test_quantum.Test__chemical_potential_interp",
  "plasmapy.physics.tests.test_quantum.Test_chemical_potential",
  "plasmapy.physics.tests.test_quantum.n_e",
  "plasmapy.physics.tests.test_quantum.test_Fermi_energy",
  "plasmapy.physics.tests.test_quantum.test_Thomas_Fermi_length",
  "plasmapy.physics.tests.test_quantum.test_Wigner_Seitz_radius",
  "plasmapy.physics.tests.test_quantum.test_deBroglie_wavelength",
  "plasmapy.physics.tests.test_quantum.test_thermal_deBroglie_wavelength",
  "plasmapy.physics.tests.test_relativity",
  "plasmapy.physics.tests.test_relativity.test_Lorentz_factor",
  "plasmapy.physics.tests.test_thermal_speed",
  "plasmapy.physics.thermal_deBroglie_wavelength",
  "plasmapy.physics.thermal_speed",
  "plasmapy.physics.transport",
  "plasmapy.physics.upper_hybrid_frequency",
  "plasmapy.test",
  "plasmapy.transport",
  "plasmapy.transport.ClassicalTransport",
  "plasmapy.transport.Coulomb_logarithm",
  "plasmapy.transport.Knudsen_number",
  "plasmapy.transport.Spitzer_resistivity",
  "plasmapy.transport.braginskii",
  "plasmapy.transport.braginskii.ClassicalTransport",
  "plasmapy.transport.braginskii.Hall_parameter",
  "plasmapy.transport.braginskii.PhysicsError",
  "plasmapy.transport.braginskii.__all__",
  "plasmapy.transport.braginskii._check_Z",
  "plasmapy.transport.braginskii._get_spitzer_harm_coeffs",
  "plasmapy.transport.braginskii._grab_charge",
  "plasmapy.transport.braginskii._is_electron",
  "plasmapy.transport.braginskii._nondim_resist_braginskii",
  "plasmapy.transport.braginskii._nondim_resist_ji_held",
  "plasmapy.transport.braginskii._nondim_resist_spitzer",
  "plasmapy.transport.braginskii._nondim_resistivity",
  "plasmapy.transport.braginskii._nondim_tc_e_braginskii",
  "plasmapy.transport.braginskii._nondim_tc_e_ji_held",
  "plasmapy.transport.braginskii._nondim_tc_e_spitzer",
  "plasmapy.transport.braginskii._nondim_tc_i_braginskii",
  "plasmapy.transport.braginskii._nondim_tc_i_ji_held",
  "plasmapy.transport.braginskii._nondim_te_conductivity",
  "plasmapy.transport.braginskii._nondim_tec_braginskii",
  "plasmapy.transport.braginskii._nondim_tec_ji_held",
  "plasmapy.transport.braginskii._nondim_tec_spitzer",
  "plasmapy.transport.braginskii._nondim_thermal_conductivity",
  "plasmapy.transport.braginskii._nondim_visc_e_braginskii",
  "plasmapy.transport.braginskii._nondim_visc_e_ji_held",
  "plasmapy.transport.braginskii._nondim_visc_i_braginskii",
  "plasmapy.transport.braginskii._nondim_visc_i_ji_held",
  "plasmapy.transport.braginskii._nondim_viscosity",
  "plasmapy.transport.braginskii.atomic",
  "plasmapy.transport.braginskii.e",
  "plasmapy.transport.braginskii.electron_thermal_conductivity",
  "plasmapy.transport.braginskii.electron_viscosity",
  "plasmapy.transport.braginskii.fundamental_electron_collision_freq",
  "plasmapy.transport.braginskii.fundamental_ion_collision_freq",
  "plasmapy.transport.braginskii.ion_thermal_conductivity",
  "plasmapy.transport.braginskii.ion_viscosity",
  "plasmapy.transport.braginskii.k_B",
  "plasmapy.transport.braginskii.m_e",
  "plasmapy.transport.braginskii.resistivity",
  "plasmapy.transport.braginskii.thermoelectric_conductivity",
  "plasmapy.transport.braginskii.utils",
  "plasmapy.transport.collision_frequency",
  "plasmapy.transport.collisions",
  "plasmapy.transport.collisions.Coulomb_cross_section",
  "plasmapy.transport.collisions.Coulomb_logarithm",
  "plasmapy.transport.collisions.Fermi_integral",
  "plasmapy.transport.collisions.Knudsen_number",
  "plasmapy.transport.collisions.Spitzer_resistivity",
  "plasmapy.transport.collisions.Wigner_Seitz_radius",
  "plasmapy.transport.collisions.__all__",
  "plasmapy.transport.collisions._boilerPlate",
  "plasmapy.transport.collisions._check_relativistic",
  "plasmapy.transport.collisions._replaceNanVwithThermalV",
  "plasmapy.transport.collisions.atomic",
  "plasmapy.transport.collisions.c",
  "plasmapy.transport.collisions.check_quantity",
  "plasmapy.transport.collisions.chemical_potential",
  "plasmapy.transport.collisions.collision_frequency",
  "plasmapy.transport.collisions.coupling_parameter",
  "plasmapy.transport.collisions.e",
  "plasmapy.transport.collisions.eps0",
  "plasmapy.transport.collisions.fundamental_electron_collision_freq",
  "plasmapy.transport.collisions.fundamental_ion_collision_freq",
  "plasmapy.transport.collisions.hbar",
  "plasmapy.transport.collisions.impact_parameter",
  "plasmapy.transport.collisions.k_B",
  "plasmapy.transport.collisions.m_e",
  "plasmapy.transport.collisions.mean_free_path",
  "plasmapy.transport.collisions.mobility",
  "plasmapy.transport.collisions.parameters",
  "plasmapy.transport.collisions.pi",
  "plasmapy.transport.collisions.thermal_deBroglie_wavelength",
  "plasmapy.transport.collisions.utils",
  "plasmapy.transport.coupling_parameter",
  "plasmapy.transport.electron_thermal_conductivity",
  "plasmapy.transport.electron_viscosity",
  "plasmapy.transport.fundamental_electron_collision_freq",
  "plasmapy.transport.fundamental_ion_collision_freq",
  "plasmapy.transport.impact_parameter",
  "plasmapy.transport.ion_thermal_conductivity",
  "plasmapy.transport.ion_viscosity",
  "plasmapy.transport.mean_free_path",
  "plasmapy.transport.mobility",
  "plasmapy.transport.resistivity",
  "plasmapy.transport.tests",
  "plasmapy.transport.tests.test_collisions",
  "plasmapy.transport.tests.test_collisions.Coulomb_logarithm",
  "plasmapy.transport.tests.test_collisions.Knudsen_number",
  "plasmapy.transport.tests.test_collisions.Spitzer_resistivity",
  "plasmapy.transport.tests.test_collisions.Test_Coulomb_logarithm",
  "plasmapy.transport.tests.test_collisions.Test_Knudsen_number",
  "plasmapy.transport.tests.test_collisions.Test_Spitzer_resistivity",
  "plasmapy.transport.tests.test_collisions.Test_collision_frequency",
  "plasmapy.transport.tests.test_collisions.Test_coupling_parameter",
  "plasmapy.transport.tests.test_collisions.Test_fundamental_electron_collision_freq",
  "plasmapy.transport.tests.test_collisions.Test_fundamental_ion_collision_freq",
  "plasmapy.transport.tests.test_collisions.Test_impact_parameter",
  "plasmapy.transport.tests.test_collisions.Test_mean_free_path",
  "plasmapy.transport.tests.test_collisions.Test_mobility",
  "plasmapy.transport.tests.test_collisions.assert_can_handle_nparray",
  "plasmapy.transport.tests.test_collisions.c",
  "plasmapy.transport.tests.test_collisions.collision_frequency",
  "plasmapy.transport.tests.test_collisions.coupling_parameter",
  "plasmapy.transport.tests.test_collisions.exceptions",
  "plasmapy.transport.tests.test_collisions.fundamental_electron_collision_freq",
  "plasmapy.transport.tests.test_collisions.fundamental_ion_collision_freq",
  "plasmapy.transport.tests.test_collisions.impact_parameter",
  "plasmapy.transport.tests.test_collisions.m_e",
  "plasmapy.transport.tests.test_collisions.m_p",
  "plasmapy.transport.tests.test_collisions.mean_free_path",
  "plasmapy.transport.tests.test_collisions.mobility",
  "plasmapy.transport.tests.test_transport",
  "plasmapy.transport.tests.test_transport.ClassicalTransport",
  "plasmapy.transport.tests.test_transport.Coulomb_logarithm",
  "plasmapy.transport.tests.test_transport.CouplingWarning",
  "plasmapy.transport.tests.test_transport.Hall_parameter",
  "plasmapy.transport.tests.test_transport.InvalidParticleError",
  "plasmapy.transport.tests.test_transport.PhysicsError",
  "plasmapy.transport.tests.test_transport.RelativityWarning",
  "plasmapy.transport.tests.test_transport.Test__nondim_resist_braginskii",
  "plasmapy.transport.tests.test_transport.Test__nondim_tc_e_braginskii",
  "plasmapy.transport.tests.test_transport.Test__nondim_tc_i_braginskii",
  "plasmapy.transport.tests.test_transport.Test__nondim_tec_braginskii",
  "plasmapy.transport.tests.test_transport.Test__nondim_visc_e_braginskii",
  "plasmapy.transport.tests.test_transport.Test__nondim_visc_i_braginskii",
  "plasmapy.transport.tests.test_transport.Test_classical_transport",
  "plasmapy.transport.tests.test_transport._check_Z",
  "plasmapy.transport.tests.test_transport._nondim_resist_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_resist_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_resist_spitzer",
  "plasmapy.transport.tests.test_transport._nondim_resistivity",
  "plasmapy.transport.tests.test_transport._nondim_tc_e_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_tc_e_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_tc_e_spitzer",
  "plasmapy.transport.tests.test_transport._nondim_tc_i_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_tc_i_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_te_conductivity",
  "plasmapy.transport.tests.test_transport._nondim_tec_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_tec_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_tec_spitzer",
  "plasmapy.transport.tests.test_transport._nondim_thermal_conductivity",
  "plasmapy.transport.tests.test_transport._nondim_visc_e_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_visc_e_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_visc_i_braginskii",
  "plasmapy.transport.tests.test_transport._nondim_visc_i_ji_held",
  "plasmapy.transport.tests.test_transport._nondim_viscosity",
  "plasmapy.transport.tests.test_transport.count_decimal_places",
  "plasmapy.transport.tests.test_transport.electron_thermal_conductivity",
  "plasmapy.transport.tests.test_transport.electron_viscosity",
  "plasmapy.transport.tests.test_transport.integer_charge",
  "plasmapy.transport.tests.test_transport.ion_thermal_conductivity",
  "plasmapy.transport.tests.test_transport.ion_viscosity",
  "plasmapy.transport.tests.test_transport.m_e",
  "plasmapy.transport.tests.test_transport.m_p",
  "plasmapy.transport.tests.test_transport.particle_mass",
  "plasmapy.transport.tests.test_transport.resistivity",
  "plasmapy.transport.tests.test_transport.test__nondim_resist_ji_held",
  "plasmapy.transport.tests.test_transport.test__nondim_resist_spitzer",
  "plasmapy.transport.tests.test_transport.test__nondim_tc_e_ji_held",
  "plasmapy.transport.tests.test_transport.test__nondim_tc_e_spitzer",
  "plasmapy.transport.tests.test_transport.test__nondim_tc_i_ji_held",
  "plasmapy.transport.tests.test_transport.test__nondim_tec_ji_held",
  "plasmapy.transport.tests.test_transport.test__nondim_tec_spitzer",
  "plasmapy.transport.tests.test_transport.test__nondim_visc_e_ji_held",
  "plasmapy.transport.tests.test_transport.test__nondim_visc_i_ji_held",
  "plasmapy.transport.tests.test_transport.test_fail__check_Z_nan",
  "plasmapy.transport.tests.test_transport.test_nondim_resistivity_unrecognized_model",
  "plasmapy.transport.tests.test_transport.test_nondim_te_conductivity_unrecognized_model",
  "plasmapy.transport.tests.test_transport.test_nondim_thermal_conductivity_unrecognized_model",
  "plasmapy.transport.tests.test_transport.test_nondim_viscosity_unrecognized_model",
  "plasmapy.transport.tests.test_transport.thermoelectric_conductivity",
  "plasmapy.transport.thermoelectric_conductivity",
  "plasmapy.utils",
  "plasmapy.utils.CouplingWarning",
  "plasmapy.utils.InconsistentTypeError",
  "plasmapy.utils.IncorrectResultError",
  "plasmapy.utils.MissingExceptionError",
  "plasmapy.utils.MissingWarningError",
  "plasmapy.utils.PhysicsError",
  "plasmapy.utils.PhysicsWarning",
  "plasmapy.utils.PlasmaPyError",
  "plasmapy.utils.PlasmaPyWarning",
  "plasmapy.utils.RelativityError",
  "plasmapy.utils.RelativityWarning",
  "plasmapy.utils.RunTestError",
  "plasmapy.utils.UnexpectedExceptionError",
  "plasmapy.utils.UnexpectedResultError",
  "plasmapy.utils._check_quantity",
  "plasmapy.utils._check_relativistic",
  "plasmapy.utils.assert_can_handle_nparray",
  "plasmapy.utils.call_string",
  "plasmapy.utils.check_quantity",
  "plasmapy.utils.check_relativistic",
  "plasmapy.utils.checks",
  "plasmapy.utils.checks.RelativityError",
  "plasmapy.utils.checks.RelativityWarning",
  "plasmapy.utils.checks.__all__",
  "plasmapy.utils.checks._check_quantity",
  "plasmapy.utils.checks._check_relativistic",
  "plasmapy.utils.checks.c",
  "plasmapy.utils.checks.check_quantity",
  "plasmapy.utils.checks.check_relativistic",
  "plasmapy.utils.datatype_factory_base",
  "plasmapy.utils.datatype_factory_base.BasicRegistrationFactory",
  "plasmapy.utils.datatype_factory_base.MultipleMatchError",
  "plasmapy.utils.datatype_factory_base.NoMatchError",
  "plasmapy.utils.datatype_factory_base.ValidationFunctionError",
  "plasmapy.utils.exceptions",
  "plasmapy.utils.exceptions.CouplingWarning",
  "plasmapy.utils.exceptions.PhysicsError",
  "plasmapy.utils.exceptions.PhysicsWarning",
  "plasmapy.utils.exceptions.PlasmaPyError",
  "plasmapy.utils.exceptions.PlasmaPyWarning",
  "plasmapy.utils.exceptions.RelativityError",
  "plasmapy.utils.exceptions.RelativityWarning",
  "plasmapy.utils.pytest_helpers",
  "plasmapy.utils.pytest_helpers.InconsistentTypeError",
  "plasmapy.utils.pytest_helpers.IncorrectResultError",
  "plasmapy.utils.pytest_helpers.InvalidTestError",
  "plasmapy.utils.pytest_helpers.MissingExceptionError",
  "plasmapy.utils.pytest_helpers.MissingWarningError",
  "plasmapy.utils.pytest_helpers.RunTestError",
  "plasmapy.utils.pytest_helpers.UnexpectedExceptionError",
  "plasmapy.utils.pytest_helpers.UnexpectedResultError",
  "plasmapy.utils.pytest_helpers.__all__",
  "plasmapy.utils.pytest_helpers._blue",
  "plasmapy.utils.pytest_helpers._bold",
  "plasmapy.utils.pytest_helpers._cyan",
  "plasmapy.utils.pytest_helpers._exc_str",
  "plasmapy.utils.pytest_helpers._exception_color",
  "plasmapy.utils.pytest_helpers._func_color",
  "plasmapy.utils.pytest_helpers._magenta",
  "plasmapy.utils.pytest_helpers._message_color",
  "plasmapy.utils.pytest_helpers._process_input",
  "plasmapy.utils.pytest_helpers._red",
  "plasmapy.utils.pytest_helpers._represent_result",
  "plasmapy.utils.pytest_helpers._result_color",
  "plasmapy.utils.pytest_helpers._type_color",
  "plasmapy.utils.pytest_helpers.assert_can_handle_nparray",
  "plasmapy.utils.pytest_helpers.call_string",
  "plasmapy.utils.pytest_helpers.run_test",
  "plasmapy.utils.roman",
  "plasmapy.utils.roman.InvalidRomanNumeralError",
  "plasmapy.utils.roman.OutOfRangeError",
  "plasmapy.utils.roman.RomanError",
  "plasmapy.utils.roman.from_roman",
  "plasmapy.utils.roman.is_roman_numeral",
  "plasmapy.utils.roman.roman",
  "plasmapy.utils.roman.roman.InvalidRomanNumeralError",
  "plasmapy.utils.roman.roman.OutOfRangeError",
  "plasmapy.utils.roman.roman.RomanError",
  "plasmapy.utils.roman.roman.__all__",
  "plasmapy.utils.roman.roman._romanNumeralMap",
  "plasmapy.utils.roman.roman._romanNumeralPattern",
  "plasmapy.utils.roman.roman.from_roman",
  "plasmapy.utils.roman.roman.is_roman_numeral",
  "plasmapy.utils.roman.roman.to_roman",
  "plasmapy.utils.roman.tests",
  "plasmapy.utils.roman.tests.test_roman",
  "plasmapy.utils.roman.tests.test_roman.fromRoman_exceptions_table",
  "plasmapy.utils.roman.tests.test_roman.ints_and_roman_numerals",
  "plasmapy.utils.roman.tests.test_roman.roman",
  "plasmapy.utils.roman.tests.test_roman.run_test",
  "plasmapy.utils.roman.tests.test_roman.test_from_roman",
  "plasmapy.utils.roman.tests.test_roman.test_is_roman_numeral",
  "plasmapy.utils.roman.tests.test_roman.test_to_roman",
  "plasmapy.utils.roman.tests.test_roman.toRoman_exceptions_table",
  "plasmapy.utils.roman.to_roman",
  "plasmapy.utils.run_test",
  "plasmapy.utils.run_test_equivalent_calls",
  "plasmapy.utils.tests",
  "plasmapy.utils.tests.test_checks",
  "plasmapy.utils.tests.test_checks.Test_check_quantity_none_shall_pass",
  "plasmapy.utils.tests.test_checks.non_relativistic_speed_examples",
  "plasmapy.utils.tests.test_checks.quantity_error_examples_default",
  "plasmapy.utils.tests.test_checks.quantity_error_examples_non_default",
  "plasmapy.utils.tests.test_checks.quantity_valid_examples_default",
  "plasmapy.utils.tests.test_checks.quantity_valid_examples_non_default",
  "plasmapy.utils.tests.test_checks.relativistic_error_examples",
  "plasmapy.utils.tests.test_checks.relativistic_warning_examples",
  "plasmapy.utils.tests.test_checks.test__check_quantity_default",
  "plasmapy.utils.tests.test_checks.test__check_quantity_errors_default",
  "plasmapy.utils.tests.test_checks.test__check_quantity_errors_non_default",
  "plasmapy.utils.tests.test_checks.test__check_quantity_non_default",
  "plasmapy.utils.tests.test_checks.test__check_quantity_warns_on_casting",
  "plasmapy.utils.tests.test_checks.test__check_relativisitc_valid",
  "plasmapy.utils.tests.test_checks.test__check_relativistic_errors",
  "plasmapy.utils.tests.test_checks.test__check_relativistic_warnings",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_errors_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_errors_non_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_missing_validated_params",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_non_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_two_args_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_two_args_not_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_two_args_one_kwargs_default",
  "plasmapy.utils.tests.test_checks.test_check_quantity_decorator_two_args_one_kwargs_not_default",
  "plasmapy.utils.tests.test_checks.test_check_relativistic_decorator",
  "plasmapy.utils.tests.test_datatype_factory_base",
  "plasmapy.utils.tests.test_datatype_factory_base.BaseWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.BasicRegistrationFactory",
  "plasmapy.utils.tests.test_datatype_factory_base.DefaultWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.DifferentValidationWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.DuplicateStandardWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.ExternallyValidatedWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.FancyWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodDifferentValidationWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.MissingClassMethodWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.MultipleMatchError",
  "plasmapy.utils.tests.test_datatype_factory_base.NoMatchError",
  "plasmapy.utils.tests.test_datatype_factory_base.StandardWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.TestBasicRegistrationFactory",
  "plasmapy.utils.tests.test_datatype_factory_base.UnvalidatedWidget",
  "plasmapy.utils.tests.test_datatype_factory_base.ValidationFunctionError",
  "plasmapy.utils.tests.test_datatype_factory_base.external_validation_function",
  "plasmapy.utils.tests.test_exceptions",
  "plasmapy.utils.tests.test_exceptions.AtomicError",
  "plasmapy.utils.tests.test_exceptions.AtomicWarning",
  "plasmapy.utils.tests.test_exceptions.ChargeError",
  "plasmapy.utils.tests.test_exceptions.CouplingWarning",
  "plasmapy.utils.tests.test_exceptions.InvalidElementError",
  "plasmapy.utils.tests.test_exceptions.InvalidIonError",
  "plasmapy.utils.tests.test_exceptions.InvalidIsotopeError",
  "plasmapy.utils.tests.test_exceptions.InvalidParticleError",
  "plasmapy.utils.tests.test_exceptions.MissingAtomicDataError",
  "plasmapy.utils.tests.test_exceptions.MissingAtomicDataWarning",
  "plasmapy.utils.tests.test_exceptions.PhysicsError",
  "plasmapy.utils.tests.test_exceptions.PhysicsWarning",
  "plasmapy.utils.tests.test_exceptions.PlasmaPyError",
  "plasmapy.utils.tests.test_exceptions.PlasmaPyWarning",
  "plasmapy.utils.tests.test_exceptions.RelativityError",
  "plasmapy.utils.tests.test_exceptions.RelativityWarning",
  "plasmapy.utils.tests.test_exceptions.plasmapy_exceptions",
  "plasmapy.utils.tests.test_exceptions.plasmapy_warnings",
  "plasmapy.utils.tests.test_exceptions.test_PlasmaPyError_subclassing",
  "plasmapy.utils.tests.test_exceptions.test_PlasmaPyWarning_subclassing",
  "plasmapy.utils.tests.test_exceptions.test_exceptions",
  "plasmapy.utils.tests.test_exceptions.test_warnings",
  "plasmapy.utils.tests.test_pytest_helpers",
  "plasmapy.version",
  "plasmapy.version._decode_stdio",
  "plasmapy.version._get_repo_path",
  "plasmapy.version._last_generated_version",
  "plasmapy.version._last_githash",
  "plasmapy.version._packagename",
  "plasmapy.version.astropy_helpers_version",
  "plasmapy.version.bugfix",
  "plasmapy.version.compiler",
  "plasmapy.version.cython_version",
  "plasmapy.version.debug",
  "plasmapy.version.get_git_devstr",
  "plasmapy.version.githash",
  "plasmapy.version.major",
  "plasmapy.version.minor",
  "plasmapy.version.release",
  "plasmapy.version.timestamp",
  "plasmapy.version.update_git_devstr",
  "plasmapy.version.version",
  "plasmapy.version.version_info",
  "plasmapy.wmsg"
 ]
}