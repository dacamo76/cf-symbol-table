{
 "errors": {},
 "symbols": [
  "scattertext.AsianNLP",
  "scattertext.AsianNLP.chinese_nlp",
  "scattertext.AsianNLP.japanese_nlp",
  "scattertext.CLI",
  "scattertext.CLI.Common",
  "scattertext.CLI.CorpusFromPandas",
  "scattertext.CLI.OncePerDocFrequencyRanker",
  "scattertext.CLI.main",
  "scattertext.CLI.produce_scattertext_explorer",
  "scattertext.CLI.whitespace_nlp_with_sentences",
  "scattertext.CSRMatrixFactory",
  "scattertext.CSRMatrixTools",
  "scattertext.CSRMatrixTools.CSRMatrixFactory",
  "scattertext.CSRMatrixTools.delete_columns",
  "scattertext.Common",
  "scattertext.Common.DEFAULT_BACKGROUND_BETA",
  "scattertext.Common.DEFAULT_BACKGROUND_SCALER_ALGO",
  "scattertext.Common.DEFAULT_BETA",
  "scattertext.Common.DEFAULT_D3_SCALE_CHROMATIC",
  "scattertext.Common.DEFAULT_D3_URL",
  "scattertext.Common.DEFAULT_PMI_THRESHOLD_COEFFICIENT",
  "scattertext.Common.DEFAULT_SCALER_ALGO",
  "scattertext.Common.POLITICAL_DATA_URL",
  "scattertext.Corpus",
  "scattertext.Corpus.Corpus",
  "scattertext.Corpus.TermDocMatrix",
  "scattertext.CorpusFromPandas",
  "scattertext.CorpusFromPandas.Corpus",
  "scattertext.CorpusFromPandas.CorpusFromPandas",
  "scattertext.CorpusFromPandas.TermDocMatrixFromPandas",
  "scattertext.CorpusFromPandas.build_sparse_matrices",
  "scattertext.CorpusFromParsedDocuments",
  "scattertext.CorpusFromParsedDocuments.CorpusFromParsedDocuments",
  "scattertext.CorpusFromParsedDocuments.CorpusFromParsedDocuments._add_to_x_factory.val",
  "scattertext.CorpusFromParsedDocuments.val",
  "scattertext.DeployedClassifier",
  "scattertext.DeployedClassifier.DeployedClassifier",
  "scattertext.DeployedClassifier.NeedToTrainExceptionBeforeDeployingException",
  "scattertext.DocsAndLabelsFromCorpus",
  "scattertext.DocsAndLabelsFromCorpus.Corpus",
  "scattertext.DocsAndLabelsFromCorpus.CorpusShouldBeParsedCorpusException",
  "scattertext.DocsAndLabelsFromCorpus.DocsAndLabelsFromCorpus",
  "scattertext.DocsAndLabelsFromCorpus.ParsedCorpus",
  "scattertext.FeatsFromDoc",
  "scattertext.FeatsFromOnlyEmpath",
  "scattertext.FeatsFromSpacyDoc",
  "scattertext.FeatsFromSpacyDocAndEmpath",
  "scattertext.FeatsFromSpacyDocOnlyEmoji",
  "scattertext.FeatsFromSpacyDocOnlyNounChunks",
  "scattertext.FeatureOuput",
  "scattertext.FeatureOuput.FeatureLister",
  "scattertext.GensimPhraseAugmenter",
  "scattertext.HTMLVisualizationAssembly",
  "scattertext.IndexStore",
  "scattertext.IndexStore.IndexStore",
  "scattertext.InvalidScalerException",
  "scattertext.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.OncePerDocFrequencyRanker",
  "scattertext.OneClassScatterChart",
  "scattertext.OneClassScatterChart.OneClassScatterChart",
  "scattertext.PValGetter",
  "scattertext.PValGetter.get_p_vals",
  "scattertext.ParsedCorpus",
  "scattertext.ParsedCorpus.Corpus",
  "scattertext.ParsedCorpus.IndexStore",
  "scattertext.ParsedCorpus.ParsedCorpus",
  "scattertext.SampleCorpora",
  "scattertext.SampleCorpora.ConventionData2012",
  "scattertext.SampleCorpora.POLITICAL_DATA_URL",
  "scattertext.SampleCorpora.PresidentialDebates2016",
  "scattertext.Scalers",
  "scattertext.Scalers._scale_0_to_1",
  "scattertext.Scalers.log_scale",
  "scattertext.Scalers.percentile",
  "scattertext.Scalers.percentile_alphabetical",
  "scattertext.Scalers.percentile_min",
  "scattertext.Scalers.power_scale_factory",
  "scattertext.Scalers.power_scale_standardize_factory",
  "scattertext.Scalers.scale",
  "scattertext.Scalers.sqrt_scale",
  "scattertext.ScatterChart",
  "scattertext.ScatterChart.AbsoluteFrequencyRanker",
  "scattertext.ScatterChart.CoordinatesNotRightException",
  "scattertext.ScatterChart.CornerScore",
  "scattertext.ScatterChart.NoWordMeetsTermFrequencyRequirementsError",
  "scattertext.ScatterChart.ScaledFScore",
  "scattertext.ScatterChart.ScatterChart",
  "scattertext.ScatterChart.filter_bigrams_by_pmis",
  "scattertext.ScatterChart.filter_out_unigrams_that_only_occur_in_one_bigram",
  "scattertext.ScatterChart.get_p_vals",
  "scattertext.ScatterChart.percentile_alphabetical",
  "scattertext.ScatterChart.percentile_min",
  "scattertext.ScatterChartExplorer",
  "scattertext.ScatterChartExplorer.Corpus",
  "scattertext.ScatterChartExplorer.DocsAndLabelsFromCorpus",
  "scattertext.ScatterChartExplorer.ScatterChart",
  "scattertext.ScatterChartExplorer.ScatterChartExplorer",
  "scattertext.ScatterChartExplorer.percentile_alphabetical",
  "scattertext.TermDocMatrix",
  "scattertext.TermDocMatrix.CornerScore",
  "scattertext.TermDocMatrix.DEFAULT_BACKGROUND_BETA",
  "scattertext.TermDocMatrix.DEFAULT_BACKGROUND_SCALER_ALGO",
  "scattertext.TermDocMatrix.DEFAULT_BETA",
  "scattertext.TermDocMatrix.DEFAULT_SCALER_ALGO",
  "scattertext.TermDocMatrix.FeatureLister",
  "scattertext.TermDocMatrix.InvalidScalerException",
  "scattertext.TermDocMatrix.SPACY_ENTITY_TAGS",
  "scattertext.TermDocMatrix.ScaledFScore",
  "scattertext.TermDocMatrix.TermDocMatrix",
  "scattertext.TermDocMatrix.delete_columns",
  "scattertext.TermDocMatrixFactory",
  "scattertext.TermDocMatrixFactory.CSRMatrixFactory",
  "scattertext.TermDocMatrixFactory.CategoryTextIterNotSetError",
  "scattertext.TermDocMatrixFactory.FeatsFromDoc",
  "scattertext.TermDocMatrixFactory.FeatsFromSpacyDoc",
  "scattertext.TermDocMatrixFactory.IndexStore",
  "scattertext.TermDocMatrixFactory.TermDocMatrix",
  "scattertext.TermDocMatrixFactory.TermDocMatrixFactory",
  "scattertext.TermDocMatrixFactory.build_from_category_whitespace_delimited_text",
  "scattertext.TermDocMatrixFilter",
  "scattertext.TermDocMatrixFilter.AtLeastOneCategoryHasNoTermsException",
  "scattertext.TermDocMatrixFilter.DEFAULT_PMI_THRESHOLD_COEFFICIENT",
  "scattertext.TermDocMatrixFilter.TermDocMatrixFilter",
  "scattertext.TermDocMatrixFilter.filter_bigrams_by_pmis",
  "scattertext.TermDocMatrixFilter.filter_out_unigrams_that_only_occur_in_one_bigram",
  "scattertext.TermDocMatrixFilter.get_low_pmi_bigrams",
  "scattertext.TermDocMatrixFilter.unigrams_that_only_occur_in_one_bigram",
  "scattertext.TermDocMatrixFromPandas",
  "scattertext.TermDocMatrixFromPandas.CSRMatrixFactory",
  "scattertext.TermDocMatrixFromPandas.CorpusFactoryHelper",
  "scattertext.TermDocMatrixFromPandas.IndexStore",
  "scattertext.TermDocMatrixFromPandas.ParsePipelineFactory",
  "scattertext.TermDocMatrixFromPandas.TermDocMatrix",
  "scattertext.TermDocMatrixFromPandas.TermDocMatrixFactory",
  "scattertext.TermDocMatrixFromPandas.TermDocMatrixFromPandas",
  "scattertext.TermDocMatrixFromPandas.build_sparse_matrices",
  "scattertext.TermDocMatrixFromPandas.chinese_nlp",
  "scattertext.VizDataAdapter",
  "scattertext.WhitespaceNLP",
  "scattertext.WhitespaceNLP.Doc",
  "scattertext.WhitespaceNLP.Tok",
  "scattertext.WhitespaceNLP.VALID_EMOJIS",
  "scattertext.WhitespaceNLP._regex_parse_sentence",
  "scattertext.WhitespaceNLP._toks_from_sentence",
  "scattertext.WhitespaceNLP.tweet_tokenzier_factory",
  "scattertext.WhitespaceNLP.whitespace_nlp",
  "scattertext.WhitespaceNLP.whitespace_nlp_with_sentences",
  "scattertext.Word2VecFromParsedCorpus",
  "scattertext.chinese_nlp",
  "scattertext.emojis",
  "scattertext.emojis.EmojiExtractor",
  "scattertext.emojis.EmojiExtractor.VALID_EMOJIS",
  "scattertext.emojis.EmojiExtractor._append_if_valid",
  "scattertext.emojis.EmojiExtractor._rebuild_suffixes",
  "scattertext.emojis.EmojiExtractor.extract_emoji",
  "scattertext.emojis.ProcessedEmojiStructure",
  "scattertext.emojis.ProcessedEmojiStructure.VALID_EMOJIS",
  "scattertext.features",
  "scattertext.features.FeatsFromOnlyEmpath",
  "scattertext.features.FeatsFromOnlyEmpath.FeatsFromOnlyEmpath",
  "scattertext.features.FeatsFromSpacyDoc",
  "scattertext.features.FeatsFromSpacyDoc.FeatsFromSpacyDoc",
  "scattertext.features.FeatsFromSpacyDoc.FeatsFromSpacyDoc.get_feats.ngram_counter",
  "scattertext.features.FeatsFromSpacyDoc.ngram_counter",
  "scattertext.features.FeatsFromSpacyDocAndEmpath",
  "scattertext.features.FeatsFromSpacyDocAndEmpath.FeatsFromSpacyDoc",
  "scattertext.features.FeatsFromSpacyDocAndEmpath.FeatsFromSpacyDocAndEmpath",
  "scattertext.features.FeatsFromSpacyDocOnlyEmoji",
  "scattertext.features.FeatsFromSpacyDocOnlyEmoji.FeatsFromSpacyDoc",
  "scattertext.features.FeatsFromSpacyDocOnlyEmoji.FeatsFromSpacyDocOnlyEmoji",
  "scattertext.features.FeatsFromSpacyDocOnlyEmoji.extract_emoji",
  "scattertext.features.FeatsFromSpacyDocOnlyNounChunks",
  "scattertext.features.FeatsFromSpacyDocOnlyNounChunks.FeatsFromSpacyDoc",
  "scattertext.features.FeatsFromSpacyDocOnlyNounChunks.FeatsFromSpacyDocOnlyNounChunks",
  "scattertext.filter_bigrams_by_pmis",
  "scattertext.japanese_nlp",
  "scattertext.percentile_alphabetical",
  "scattertext.produce_scattertext_explorer",
  "scattertext.produce_scattertext_html",
  "scattertext.representations",
  "scattertext.representations.Word2VecFromParsedCorpus.CorpusAdapterForGensim",
  "scattertext.representations.Word2VecFromParsedCorpus.GensimPhraseAdder",
  "scattertext.representations.Word2VecFromParsedCorpus.ParsedCorpus",
  "scattertext.representations.Word2VecFromParsedCorpus.Word2VecFromParsedCorpus",
  "scattertext.representations.Word2VecFromParsedCorpus.Word2VecFromParsedCorpusBigrams",
  "scattertext.representations.Word2VecFromParsedCorpusBigrams",
  "scattertext.sparse_explorer",
  "scattertext.termranking",
  "scattertext.termranking.AbsoluteFrequencyRanker",
  "scattertext.termranking.AbsoluteFrequencyRanker.AbsoluteFrequencyRanker",
  "scattertext.termranking.AbsoluteFrequencyRanker.TermRanker",
  "scattertext.termranking.DocLengthDividedFrequencyRanker",
  "scattertext.termranking.DocLengthDividedFrequencyRanker.DocLengthDividedFrequencyRanker",
  "scattertext.termranking.DocLengthDividedFrequencyRanker.DocLengthNormalizedFrequencyRanker",
  "scattertext.termranking.DocLengthDividedFrequencyRanker.__metaclass__",
  "scattertext.termranking.DocLengthNormalizedFrequencyRanker",
  "scattertext.termranking.DocLengthNormalizedFrequencyRanker.DocLengthNormalizedFrequencyRanker",
  "scattertext.termranking.DocLengthNormalizedFrequencyRanker.TermRanker",
  "scattertext.termranking.DocLengthNormalizedFrequencyRanker.VarianceSensitiveFrequencyRanker",
  "scattertext.termranking.OncePerDocFrequencyRanker",
  "scattertext.termranking.OncePerDocFrequencyRanker.OncePerDocFrequencyRanker",
  "scattertext.termranking.OncePerDocFrequencyRanker.TermRanker",
  "scattertext.termranking.TermRanker.TermRanker",
  "scattertext.termranking.TermRanker.TermRanker.__metaclass__",
  "scattertext.termscoring",
  "scattertext.termscoring.CornerScore.CornerScore",
  "scattertext.termscoring.LogOddsUniformativePriorScore.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.termscoring.LogOddsUniformativePriorScore.LogOddsUninformativePriorScore",
  "scattertext.termscoring.OLSUngnarStyle.OLSUngarStyle",
  "scattertext.termscoring.ScaledFScore",
  "scattertext.termscoring.ScaledFScore.DEFAULT_BETA",
  "scattertext.termscoring.ScaledFScore.DEFAULT_SCALER_ALGO",
  "scattertext.termscoring.ScaledFScore.InvalidScalerException",
  "scattertext.termscoring.ScaledFScore.ScaledFScore",
  "scattertext.termscoring.ScaledFScore.ScoreBalancer",
  "scattertext.termsignificance",
  "scattertext.termsignificance.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.termsignificance.LogOddsRatioUninformativeDirichletPrior.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.termsignificance.LogOddsRatioUninformativeDirichletPrior.TermSignificance",
  "scattertext.termsignificance.ScaledFScoreSignificance",
  "scattertext.termsignificance.ScaledFScoreSignificance.DEFAULT_BETA",
  "scattertext.termsignificance.ScaledFScoreSignificance.DEFAULT_SCALER_ALGO",
  "scattertext.termsignificance.ScaledFScoreSignificance.ScaledFScore",
  "scattertext.termsignificance.ScaledFScoreSignificance.ScaledFScoreSignificance",
  "scattertext.termsignificance.ScaledFScoreSignificance.TermSignificance",
  "scattertext.termsignificance.TermSignificance",
  "scattertext.termsignificance.TermSignificance.TermSignificance",
  "scattertext.test",
  "scattertext.test.test_CSRMatrixTools",
  "scattertext.test.test_CornerScore",
  "scattertext.test.test_CornerScore.CornerScore",
  "scattertext.test.test_CornerScore.TestCornerScore",
  "scattertext.test.test_CorpusFromParsedDocuments",
  "scattertext.test.test_CorpusFromParsedDocuments.CorpusFromParsedDocuments",
  "scattertext.test.test_CorpusFromParsedDocuments.ParsedCorpus",
  "scattertext.test.test_CorpusFromParsedDocuments.TermDocMatrixFactory",
  "scattertext.test.test_CorpusFromParsedDocuments.TestCorpusFromParsedDocuments",
  "scattertext.test.test_CorpusFromParsedDocuments.build_term_doc_matrix",
  "scattertext.test.test_CorpusFromParsedDocuments.clean_function_factory",
  "scattertext.test.test_CorpusFromParsedDocuments.convention_speech_iter",
  "scattertext.test.test_CorpusFromParsedDocuments.get_docs_categories",
  "scattertext.test.test_CorpusFromParsedDocuments.get_hamlet_docs",
  "scattertext.test.test_CorpusFromParsedDocuments.get_hamlet_snippet_binary_category",
  "scattertext.test.test_CorpusFromParsedDocuments.iter_party_speech_pairs",
  "scattertext.test.test_CorpusFromParsedDocuments.whitespace_nlp",
  "scattertext.test.test_FeatsFromSpacyDoc",
  "scattertext.test.test_FeatsFromSpacyDoc.Doc",
  "scattertext.test.test_FeatsFromSpacyDoc.FeatsFromSpacyDoc",
  "scattertext.test.test_FeatsFromSpacyDoc.FeatsFromSpacyDocOnlyNounChunks",
  "scattertext.test.test_FeatsFromSpacyDoc.Span",
  "scattertext.test.test_FeatsFromSpacyDoc.TestFeatsFromSpacyDoc",
  "scattertext.test.test_FeatsFromSpacyDoc.Tok",
  "scattertext.test.test_FeatsFromSpacyDoc._regex_parse_sentence",
  "scattertext.test.test_FeatsFromSpacyDoc.bad_whitespace_nlp",
  "scattertext.test.test_FeatsFromSpacyDoc.whitespace_nlp",
  "scattertext.test.test_FeatsFromSpacyDoc.whitespace_nlp_with_fake_chunks",
  "scattertext.test.test_HTMLVisualizationAssembly",
  "scattertext.test.test_HTMLVisualizationAssembly.DEFAULT_D3_SCALE_CHROMATIC",
  "scattertext.test.test_HTMLVisualizationAssembly.DEFAULT_D3_URL",
  "scattertext.test.test_HTMLVisualizationAssembly.HTMLVisualizationAssembly",
  "scattertext.test.test_HTMLVisualizationAssembly.TestHTMLVisualizationAssembly",
  "scattertext.test.test_HTMLVisualizationAssembly.VizDataAdapter",
  "scattertext.test.test_PMIFiltering",
  "scattertext.test.test_ParsedCorpus",
  "scattertext.test.test_ParsedCorpus.CorpusFromParsedDocuments",
  "scattertext.test.test_ParsedCorpus.TestParsedCorpus",
  "scattertext.test.test_ParsedCorpus.get_docs_categories",
  "scattertext.test.test_ParsedCorpus.whitespace_nlp",
  "scattertext.test.test_TermDocMat",
  "scattertext.test.test_TermDocMat.InvalidScalerException",
  "scattertext.test.test_TermDocMat.SPACY_ENTITY_TAGS",
  "scattertext.test.test_TermDocMat.TermDocMatrix",
  "scattertext.test.test_TermDocMat.TermDocMatrixFromPandas",
  "scattertext.test.test_TermDocMat.TestTermDocMat",
  "scattertext.test.test_TermDocMat.build_from_category_whitespace_delimited_text",
  "scattertext.test.test_TermDocMat.get_docs_categories",
  "scattertext.test.test_TermDocMat.get_hamlet_docs",
  "scattertext.test.test_TermDocMat.get_hamlet_snippet_binary_category",
  "scattertext.test.test_TermDocMat.get_hamlet_term_doc_matrix",
  "scattertext.test.test_TermDocMat.get_test_categories_and_documents",
  "scattertext.test.test_TermDocMat.make_a_test_term_doc_matrix",
  "scattertext.test.test_TermDocMat.whitespace_nlp",
  "scattertext.test.test_WhitespaceNLP",
  "scattertext.test.test_WhitespaceNLP.Doc",
  "scattertext.test.test_WhitespaceNLP.TestWhitespaceNLP",
  "scattertext.test.test_WhitespaceNLP.Tok",
  "scattertext.test.test_WhitespaceNLP.whitespace_nlp",
  "scattertext.test.test_asiannlp",
  "scattertext.test.test_asiannlp.TestAsianNLP",
  "scattertext.test.test_asiannlp.chinese_nlp",
  "scattertext.test.test_asiannlp.japanese_nlp",
  "scattertext.test.test_corpusFromPandas",
  "scattertext.test.test_corpusFromPandas.Corpus",
  "scattertext.test.test_corpusFromPandas.CorpusFromPandas",
  "scattertext.test.test_corpusFromPandas.TestCorpusFromPandas",
  "scattertext.test.test_corpusFromPandas.chinese_nlp",
  "scattertext.test.test_corpusFromPandas.get_docs_categories",
  "scattertext.test.test_corpusFromPandas.whitespace_nlp",
  "scattertext.test.test_docsAndLabelsFromCorpus",
  "scattertext.test.test_docsAndLabelsFromCorpus.CorpusFromPandas",
  "scattertext.test.test_docsAndLabelsFromCorpus.CorpusFromParsedDocuments",
  "scattertext.test.test_docsAndLabelsFromCorpus.CorpusShouldBeParsedCorpusException",
  "scattertext.test.test_docsAndLabelsFromCorpus.DocsAndLabelsFromCorpus",
  "scattertext.test.test_docsAndLabelsFromCorpus.TestDocsAndLabelsFromCorpus",
  "scattertext.test.test_docsAndLabelsFromCorpus.build_hamlet_jz_corpus_with_meta",
  "scattertext.test.test_docsAndLabelsFromCorpus.get_docs_categories",
  "scattertext.test.test_docsAndLabelsFromCorpus.whitespace_nlp",
  "scattertext.test.test_extract_emoji",
  "scattertext.test.test_extract_emoji.TestExtract_emoji",
  "scattertext.test.test_extract_emoji.extract_emoji",
  "scattertext.test.test_featsFromSpacyDocAndEmpath",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.FeatsFromOnlyEmpath",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.FeatsFromSpacyDocAndEmpath",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.TestFeatsFromOnlyEmpath",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.TestFeatsFsromSpacyDocAndEmpath",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.mock_empath_analyze",
  "scattertext.test.test_featsFromSpacyDocAndEmpath.whitespace_nlp",
  "scattertext.test.test_featureLister",
  "scattertext.test.test_featureLister.FeatureLister",
  "scattertext.test.test_featureLister.TestFeatureList",
  "scattertext.test.test_featureLister.build_hamlet_jz_corpus_with_meta",
  "scattertext.test.test_gensimPhraseAdder",
  "scattertext.test.test_indexStore",
  "scattertext.test.test_indexStore.IndexStore",
  "scattertext.test.test_indexStore.TestIndexStore",
  "scattertext.test.test_logOddsRatioUninformativeDirichletPrior",
  "scattertext.test.test_logOddsRatioUninformativeDirichletPrior.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.test.test_logOddsRatioUninformativeDirichletPrior.TestLogOddsRatioUninformativeDirichletPrior",
  "scattertext.test.test_logOddsRatioUninformativeDirichletPrior.build_hamlet_jz_term_doc_mat",
  "scattertext.test.test_logOddsUninformativePriorScore",
  "scattertext.test.test_logOddsUninformativePriorScore.LogOddsUninformativePriorScore",
  "scattertext.test.test_logOddsUninformativePriorScore.TestLogOddsUninformativePriorScore",
  "scattertext.test.test_oneClassScatterChart",
  "scattertext.test.test_oneClassScatterChart.OneClassScatterChart",
  "scattertext.test.test_oneClassScatterChart.TestOneClassScatterChart",
  "scattertext.test.test_oneClassScatterChart.build_hamlet_jz_df",
  "scattertext.test.test_oneClassScatterChart.build_hamlet_jz_term_doc_mat",
  "scattertext.test.test_percentile_lexicographic",
  "scattertext.test.test_percentile_lexicographic.TestPercentile_lexicographic",
  "scattertext.test.test_percentile_lexicographic.percentile_alphabetical",
  "scattertext.test.test_scaledFScore",
  "scattertext.test.test_scaledFScore.ScaledFScore",
  "scattertext.test.test_scaledFScore.TestScaledFScore",
  "scattertext.test.test_scatterChart",
  "scattertext.test.test_scatterChart.LogOddsRatioUninformativeDirichletPrior",
  "scattertext.test.test_scatterChart.ScatterChart",
  "scattertext.test.test_scatterChart.TestScatterChart",
  "scattertext.test.test_scatterChart.build_hamlet_jz_corpus_with_meta",
  "scattertext.test.test_scatterChart.build_hamlet_jz_term_doc_mat",
  "scattertext.test.test_scatterChartExplorer",
  "scattertext.test.test_scatterChartExplorer.ScatterChartExplorer",
  "scattertext.test.test_scatterChartExplorer.TestScatterChart",
  "scattertext.test.test_scatterChartExplorer.build_hamlet_jz_corpus",
  "scattertext.test.test_termDocMatrixFactory",
  "scattertext.test.test_termDocMatrixFactory.CorpusFromParsedDocuments",
  "scattertext.test.test_termDocMatrixFactory.Doc",
  "scattertext.test.test_termDocMatrixFactory.FeatsFromSpacyDoc",
  "scattertext.test.test_termDocMatrixFactory.TermDocMatrixFactory",
  "scattertext.test.test_termDocMatrixFactory.TestFeatsFromDoc",
  "scattertext.test.test_termDocMatrixFactory.TestTermDocMatrixFactory",
  "scattertext.test.test_termDocMatrixFactory.Tok",
  "scattertext.test.test_termDocMatrixFactory._testing_nlp",
  "scattertext.test.test_termDocMatrixFactory.build_hamlet_jz_corpus",
  "scattertext.test.test_termDocMatrixFactory.build_hamlet_jz_corpus_with_meta",
  "scattertext.test.test_termDocMatrixFactory.build_hamlet_jz_df",
  "scattertext.test.test_termDocMatrixFactory.build_hamlet_jz_term_doc_mat",
  "scattertext.test.test_termDocMatrixFactory.get_docs_categories",
  "scattertext.test.test_termDocMatrixFactory.whitespace_nlp",
  "scattertext.test.test_termDocMatrixFromPandas",
  "scattertext.test.test_termDocMatrixFromPandas.TermDocMatrix",
  "scattertext.test.test_termDocMatrixFromPandas.TermDocMatrixFromPandas",
  "scattertext.test.test_termDocMatrixFromPandas.TestTermDocMatrixFromPandas",
  "scattertext.test.test_termDocMatrixFromPandas.get_docs_categories",
  "scattertext.test.test_termDocMatrixFromPandas.whitespace_nlp",
  "scattertext.test.test_termRanker",
  "scattertext.test.test_termRanker.AbsoluteFrequencyRanker",
  "scattertext.test.test_termRanker.DocLengthDividedFrequencyRanker",
  "scattertext.test.test_termRanker.DocLengthNormalizedFrequencyRanker",
  "scattertext.test.test_termRanker.OncePerDocFrequencyRanker",
  "scattertext.test.test_termRanker.TestTermRanker",
  "scattertext.test.test_termRanker.make_a_test_term_doc_matrix",
  "scattertext.test.test_word2VecFromParsedCorpus",
  "scattertext.test.test_word2VecFromParsedCorpus.CorpusFromParsedDocuments",
  "scattertext.test.test_word2VecFromParsedCorpus.TestWord2VecFromParsedCorpus",
  "scattertext.test.test_word2VecFromParsedCorpus.Word2VecFromParsedCorpus",
  "scattertext.test.test_word2VecFromParsedCorpus.get_docs_categories",
  "scattertext.test.test_word2VecFromParsedCorpus.whitespace_nlp",
  "scattertext.tweet_tokenzier_factory",
  "scattertext.version",
  "scattertext.viz",
  "scattertext.viz.HTMLVisualizationAssembly",
  "scattertext.viz.HTMLVisualizationAssembly.DEFAULT_D3_SCALE_CHROMATIC",
  "scattertext.viz.HTMLVisualizationAssembly.DEFAULT_D3_URL",
  "scattertext.viz.HTMLVisualizationAssembly.HTMLVisualizationAssembly",
  "scattertext.viz.HTMLVisualizationAssembly.InvalidProtocolException",
  "scattertext.viz.VizDataAdapter",
  "scattertext.viz.VizDataAdapter.AsianNLP",
  "scattertext.viz.VizDataAdapter.MyEncoder",
  "scattertext.viz.VizDataAdapter.VizDataAdapter",
  "scattertext.viz.VizDataAdapter.WhitespaceNLP",
  "scattertext.whitespace_nlp",
  "scattertext.word_similarity_explorer"
 ]
}