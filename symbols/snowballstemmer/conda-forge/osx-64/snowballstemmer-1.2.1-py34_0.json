{
 "errors": {
  "snowballstemmer.basestemmer": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/sys.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in _convert_names",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in <listcomp>",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 93, in _break_check",
    "    reachable = _check_if(context, check_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "snowballstemmer.DanishStemmer",
  "snowballstemmer.DutchStemmer",
  "snowballstemmer.EnglishStemmer",
  "snowballstemmer.FinnishStemmer",
  "snowballstemmer.FrenchStemmer",
  "snowballstemmer.GermanStemmer",
  "snowballstemmer.HungarianStemmer",
  "snowballstemmer.ItalianStemmer",
  "snowballstemmer.NorwegianStemmer",
  "snowballstemmer.PorterStemmer",
  "snowballstemmer.PortugueseStemmer",
  "snowballstemmer.RomanianStemmer",
  "snowballstemmer.RussianStemmer",
  "snowballstemmer.SpanishStemmer",
  "snowballstemmer.SwedishStemmer",
  "snowballstemmer.TurkishStemmer",
  "snowballstemmer.__all__",
  "snowballstemmer._languages",
  "snowballstemmer.algorithms",
  "snowballstemmer.among",
  "snowballstemmer.among.Among",
  "snowballstemmer.basestemmer",
  "snowballstemmer.cext_available",
  "snowballstemmer.danish_stemmer",
  "snowballstemmer.danish_stemmer.DanishStemmer",
  "snowballstemmer.danish_stemmer.lab0",
  "snowballstemmer.danish_stemmer.lab1",
  "snowballstemmer.danish_stemmer.lab2",
  "snowballstemmer.danish_stemmer.lab3",
  "snowballstemmer.danish_stemmer.lab4",
  "snowballstemmer.dutch_stemmer",
  "snowballstemmer.dutch_stemmer.DutchStemmer",
  "snowballstemmer.dutch_stemmer.lab0",
  "snowballstemmer.dutch_stemmer.lab1",
  "snowballstemmer.dutch_stemmer.lab2",
  "snowballstemmer.dutch_stemmer.lab3",
  "snowballstemmer.dutch_stemmer.lab4",
  "snowballstemmer.dutch_stemmer.lab5",
  "snowballstemmer.dutch_stemmer.lab6",
  "snowballstemmer.dutch_stemmer.lab7",
  "snowballstemmer.dutch_stemmer.lab8",
  "snowballstemmer.dutch_stemmer.lab9",
  "snowballstemmer.english_stemmer",
  "snowballstemmer.english_stemmer.EnglishStemmer",
  "snowballstemmer.english_stemmer.lab0",
  "snowballstemmer.english_stemmer.lab1",
  "snowballstemmer.english_stemmer.lab2",
  "snowballstemmer.english_stemmer.lab3",
  "snowballstemmer.english_stemmer.lab4",
  "snowballstemmer.english_stemmer.lab5",
  "snowballstemmer.english_stemmer.lab6",
  "snowballstemmer.english_stemmer.lab7",
  "snowballstemmer.english_stemmer.lab8",
  "snowballstemmer.english_stemmer.lab9",
  "snowballstemmer.finnish_stemmer",
  "snowballstemmer.finnish_stemmer.FinnishStemmer",
  "snowballstemmer.finnish_stemmer.lab0",
  "snowballstemmer.finnish_stemmer.lab1",
  "snowballstemmer.finnish_stemmer.lab2",
  "snowballstemmer.finnish_stemmer.lab3",
  "snowballstemmer.finnish_stemmer.lab4",
  "snowballstemmer.finnish_stemmer.lab5",
  "snowballstemmer.finnish_stemmer.lab6",
  "snowballstemmer.finnish_stemmer.lab7",
  "snowballstemmer.finnish_stemmer.lab8",
  "snowballstemmer.finnish_stemmer.lab9",
  "snowballstemmer.french_stemmer",
  "snowballstemmer.french_stemmer.FrenchStemmer",
  "snowballstemmer.french_stemmer.lab0",
  "snowballstemmer.french_stemmer.lab1",
  "snowballstemmer.french_stemmer.lab2",
  "snowballstemmer.french_stemmer.lab3",
  "snowballstemmer.french_stemmer.lab4",
  "snowballstemmer.french_stemmer.lab5",
  "snowballstemmer.french_stemmer.lab6",
  "snowballstemmer.french_stemmer.lab7",
  "snowballstemmer.french_stemmer.lab8",
  "snowballstemmer.french_stemmer.lab9",
  "snowballstemmer.german_stemmer",
  "snowballstemmer.german_stemmer.GermanStemmer",
  "snowballstemmer.german_stemmer.lab0",
  "snowballstemmer.german_stemmer.lab1",
  "snowballstemmer.german_stemmer.lab2",
  "snowballstemmer.german_stemmer.lab3",
  "snowballstemmer.german_stemmer.lab4",
  "snowballstemmer.german_stemmer.lab5",
  "snowballstemmer.german_stemmer.lab6",
  "snowballstemmer.german_stemmer.lab7",
  "snowballstemmer.german_stemmer.lab8",
  "snowballstemmer.german_stemmer.lab9",
  "snowballstemmer.hungarian_stemmer",
  "snowballstemmer.hungarian_stemmer.HungarianStemmer",
  "snowballstemmer.hungarian_stemmer.lab0",
  "snowballstemmer.hungarian_stemmer.lab1",
  "snowballstemmer.hungarian_stemmer.lab2",
  "snowballstemmer.hungarian_stemmer.lab3",
  "snowballstemmer.hungarian_stemmer.lab4",
  "snowballstemmer.hungarian_stemmer.lab5",
  "snowballstemmer.hungarian_stemmer.lab6",
  "snowballstemmer.hungarian_stemmer.lab7",
  "snowballstemmer.hungarian_stemmer.lab8",
  "snowballstemmer.hungarian_stemmer.lab9",
  "snowballstemmer.italian_stemmer",
  "snowballstemmer.italian_stemmer.ItalianStemmer",
  "snowballstemmer.italian_stemmer.lab0",
  "snowballstemmer.italian_stemmer.lab1",
  "snowballstemmer.italian_stemmer.lab2",
  "snowballstemmer.italian_stemmer.lab3",
  "snowballstemmer.italian_stemmer.lab4",
  "snowballstemmer.italian_stemmer.lab5",
  "snowballstemmer.italian_stemmer.lab6",
  "snowballstemmer.italian_stemmer.lab7",
  "snowballstemmer.italian_stemmer.lab8",
  "snowballstemmer.italian_stemmer.lab9",
  "snowballstemmer.norwegian_stemmer",
  "snowballstemmer.norwegian_stemmer.NorwegianStemmer",
  "snowballstemmer.norwegian_stemmer.lab0",
  "snowballstemmer.norwegian_stemmer.lab1",
  "snowballstemmer.norwegian_stemmer.lab2",
  "snowballstemmer.norwegian_stemmer.lab3",
  "snowballstemmer.norwegian_stemmer.lab4",
  "snowballstemmer.porter_stemmer",
  "snowballstemmer.porter_stemmer.PorterStemmer",
  "snowballstemmer.porter_stemmer.lab0",
  "snowballstemmer.porter_stemmer.lab1",
  "snowballstemmer.porter_stemmer.lab2",
  "snowballstemmer.porter_stemmer.lab3",
  "snowballstemmer.porter_stemmer.lab4",
  "snowballstemmer.porter_stemmer.lab5",
  "snowballstemmer.porter_stemmer.lab6",
  "snowballstemmer.porter_stemmer.lab7",
  "snowballstemmer.porter_stemmer.lab8",
  "snowballstemmer.porter_stemmer.lab9",
  "snowballstemmer.portuguese_stemmer",
  "snowballstemmer.portuguese_stemmer.PortugueseStemmer",
  "snowballstemmer.portuguese_stemmer.lab0",
  "snowballstemmer.portuguese_stemmer.lab1",
  "snowballstemmer.portuguese_stemmer.lab2",
  "snowballstemmer.portuguese_stemmer.lab3",
  "snowballstemmer.portuguese_stemmer.lab4",
  "snowballstemmer.portuguese_stemmer.lab5",
  "snowballstemmer.portuguese_stemmer.lab6",
  "snowballstemmer.portuguese_stemmer.lab7",
  "snowballstemmer.portuguese_stemmer.lab8",
  "snowballstemmer.portuguese_stemmer.lab9",
  "snowballstemmer.romanian_stemmer",
  "snowballstemmer.romanian_stemmer.RomanianStemmer",
  "snowballstemmer.romanian_stemmer.lab0",
  "snowballstemmer.romanian_stemmer.lab1",
  "snowballstemmer.romanian_stemmer.lab2",
  "snowballstemmer.romanian_stemmer.lab3",
  "snowballstemmer.romanian_stemmer.lab4",
  "snowballstemmer.romanian_stemmer.lab5",
  "snowballstemmer.romanian_stemmer.lab6",
  "snowballstemmer.romanian_stemmer.lab7",
  "snowballstemmer.romanian_stemmer.lab8",
  "snowballstemmer.romanian_stemmer.lab9",
  "snowballstemmer.russian_stemmer",
  "snowballstemmer.russian_stemmer.RussianStemmer",
  "snowballstemmer.russian_stemmer.lab0",
  "snowballstemmer.russian_stemmer.lab1",
  "snowballstemmer.russian_stemmer.lab2",
  "snowballstemmer.russian_stemmer.lab3",
  "snowballstemmer.russian_stemmer.lab4",
  "snowballstemmer.russian_stemmer.lab5",
  "snowballstemmer.russian_stemmer.lab6",
  "snowballstemmer.russian_stemmer.lab7",
  "snowballstemmer.russian_stemmer.lab8",
  "snowballstemmer.russian_stemmer.lab9",
  "snowballstemmer.spanish_stemmer",
  "snowballstemmer.spanish_stemmer.SpanishStemmer",
  "snowballstemmer.spanish_stemmer.lab0",
  "snowballstemmer.spanish_stemmer.lab1",
  "snowballstemmer.spanish_stemmer.lab2",
  "snowballstemmer.spanish_stemmer.lab3",
  "snowballstemmer.spanish_stemmer.lab4",
  "snowballstemmer.spanish_stemmer.lab5",
  "snowballstemmer.spanish_stemmer.lab6",
  "snowballstemmer.spanish_stemmer.lab7",
  "snowballstemmer.spanish_stemmer.lab8",
  "snowballstemmer.spanish_stemmer.lab9",
  "snowballstemmer.stemmer",
  "snowballstemmer.swedish_stemmer",
  "snowballstemmer.swedish_stemmer.SwedishStemmer",
  "snowballstemmer.swedish_stemmer.lab0",
  "snowballstemmer.swedish_stemmer.lab1",
  "snowballstemmer.swedish_stemmer.lab2",
  "snowballstemmer.swedish_stemmer.lab3",
  "snowballstemmer.swedish_stemmer.lab4",
  "snowballstemmer.turkish_stemmer",
  "snowballstemmer.turkish_stemmer.TurkishStemmer",
  "snowballstemmer.turkish_stemmer.lab0",
  "snowballstemmer.turkish_stemmer.lab1",
  "snowballstemmer.turkish_stemmer.lab2",
  "snowballstemmer.turkish_stemmer.lab3",
  "snowballstemmer.turkish_stemmer.lab4",
  "snowballstemmer.turkish_stemmer.lab5",
  "snowballstemmer.turkish_stemmer.lab6",
  "snowballstemmer.turkish_stemmer.lab7",
  "snowballstemmer.turkish_stemmer.lab8",
  "snowballstemmer.turkish_stemmer.lab9"
 ]
}