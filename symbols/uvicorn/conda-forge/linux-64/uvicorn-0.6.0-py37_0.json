{
 "errors": {
  "uvicorn.importer": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/3/typing.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/utils.py\", line 16, in wrapper",
    "    return list(func(*args, **kwargs))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 160, in _convert_names",
    "    for name in names:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 100, in _break_check",
    "    reachable = _check_if(context, flow_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 217, in _infer_node",
    "    value_set = context.infer_node(element.children[-1])",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 409, in _infer_expr_stmt",
    "    value_set = context.infer_node(rhs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 79, in py__getattribute__",
    "    names = self.goto(name_or_str, name_context, analysis_errors)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 68, in goto",
    "    names = finder.filter_name(filters, name_or_str)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/finder.py\", line 35, in filter_name",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 58, in _get_value_filters",
    "    yield from self.get_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/instance.py\", line 178, in get_filters",
    "    class_value = self.get_annotated_class_object()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/instance.py\", line 352, in get_annotated_class_object",
    "    return self._get_annotated_class_object() or self.class_value",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/instance.py\", line 331, in _get_annotated_class_object",
    "    for signature in self.class_value.py__getattribute__('__init__').get_signatures():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 79, in py__getattribute__",
    "    names = self.goto(name_or_str, name_context, analysis_errors)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 68, in goto",
    "    names = finder.filter_name(filters, name_or_str)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/finder.py\", line 35, in filter_name",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 58, in _get_value_filters",
    "    yield from self.get_filters(origin_scope=origin_scope)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 206, in get_filters",
    "    metaclasses = self.get_metaclasses()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/klass.py\", line 394, in get_metaclasses",
    "    for value in lazy_base.infer():",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "uvicorn.Config",
  "uvicorn.Server",
  "uvicorn.__all__",
  "uvicorn.__version__",
  "uvicorn.config",
  "uvicorn.config.ASGI3Middleware",
  "uvicorn.config.Config",
  "uvicorn.config.DebugMiddleware",
  "uvicorn.config.HTTP_PROTOCOLS",
  "uvicorn.config.INTERFACES",
  "uvicorn.config.ImportFromStringError",
  "uvicorn.config.LIFESPAN",
  "uvicorn.config.LOG_LEVELS",
  "uvicorn.config.LOOP_SETUPS",
  "uvicorn.config.MessageLoggerMiddleware",
  "uvicorn.config.ProxyHeadersMiddleware",
  "uvicorn.config.WSGIMiddleware",
  "uvicorn.config.WS_PROTOCOLS",
  "uvicorn.config.create_ssl_context",
  "uvicorn.config.get_logger",
  "uvicorn.config.import_from_string",
  "uvicorn.importer",
  "uvicorn.importer.ImportFromStringError",
  "uvicorn.importer.import_from_string",
  "uvicorn.lifespan",
  "uvicorn.lifespan.auto",
  "uvicorn.lifespan.auto.LifespanAuto",
  "uvicorn.lifespan.auto.LifespanOff",
  "uvicorn.lifespan.auto.LifespanOn",
  "uvicorn.lifespan.off",
  "uvicorn.lifespan.off.LifespanOff",
  "uvicorn.lifespan.on",
  "uvicorn.lifespan.on.LifespanOn",
  "uvicorn.lifespan.on.STATE_TRANSITION_ERROR",
  "uvicorn.loops",
  "uvicorn.loops.asyncio",
  "uvicorn.loops.asyncio.asyncio_setup",
  "uvicorn.loops.auto",
  "uvicorn.loops.auto.asyncio_setup",
  "uvicorn.loops.auto.auto_loop_setup",
  "uvicorn.loops.auto.uvloop_setup",
  "uvicorn.loops.uvloop",
  "uvicorn.loops.uvloop.uvloop_setup",
  "uvicorn.main",
  "uvicorn.main.Config",
  "uvicorn.main.HANDLED_SIGNALS",
  "uvicorn.main.HTTP_CHOICES",
  "uvicorn.main.HTTP_PROTOCOLS",
  "uvicorn.main.INTERFACES",
  "uvicorn.main.INTERFACE_CHOICES",
  "uvicorn.main.LEVEL_CHOICES",
  "uvicorn.main.LIFESPAN",
  "uvicorn.main.LIFESPAN_CHOICES",
  "uvicorn.main.LOG_LEVELS",
  "uvicorn.main.LOOP_CHOICES",
  "uvicorn.main.LOOP_SETUPS",
  "uvicorn.main.Multiprocess",
  "uvicorn.main.Server",
  "uvicorn.main.StatReload",
  "uvicorn.main.WS_CHOICES",
  "uvicorn.main.WS_PROTOCOLS",
  "uvicorn.main.get_logger",
  "uvicorn.main.main",
  "uvicorn.main.run",
  "uvicorn.middleware",
  "uvicorn.middleware.asgi3",
  "uvicorn.middleware.asgi3.ASGI3Middleware",
  "uvicorn.middleware.debug",
  "uvicorn.middleware.debug.DebugMiddleware",
  "uvicorn.middleware.debug.HTMLResponse",
  "uvicorn.middleware.debug.PlainTextResponse",
  "uvicorn.middleware.debug._DebugResponder",
  "uvicorn.middleware.debug.get_accept_header",
  "uvicorn.middleware.message_logger",
  "uvicorn.middleware.message_logger.MessageLoggerMiddleware",
  "uvicorn.middleware.message_logger.MessageLoggerResponder",
  "uvicorn.middleware.message_logger.PLACEHOLDER_FORMAT",
  "uvicorn.middleware.message_logger.message_with_placeholders",
  "uvicorn.middleware.proxy_headers",
  "uvicorn.middleware.proxy_headers.ProxyHeadersMiddleware",
  "uvicorn.middleware.wsgi",
  "uvicorn.middleware.wsgi.WSGIMiddleware",
  "uvicorn.middleware.wsgi.WSGIResponder",
  "uvicorn.middleware.wsgi.build_environ",
  "uvicorn.protocols",
  "uvicorn.protocols.http",
  "uvicorn.protocols.http.auto",
  "uvicorn.protocols.http.auto.AutoHTTPProtocol",
  "uvicorn.protocols.http.auto.H11Protocol",
  "uvicorn.protocols.http.auto.HttpToolsProtocol",
  "uvicorn.protocols.http.auto.exc",
  "uvicorn.protocols.http.h11_impl",
  "uvicorn.protocols.http.h11_impl.FlowControl",
  "uvicorn.protocols.http.h11_impl.H11Protocol",
  "uvicorn.protocols.http.h11_impl.HIGH_WATER_LIMIT",
  "uvicorn.protocols.http.h11_impl.RequestResponseCycle",
  "uvicorn.protocols.http.h11_impl.STATUS_PHRASES",
  "uvicorn.protocols.http.h11_impl.ServiceUnavailable",
  "uvicorn.protocols.http.h11_impl._get_status_phrase",
  "uvicorn.protocols.http.h11_impl.get_local_addr",
  "uvicorn.protocols.http.h11_impl.get_remote_addr",
  "uvicorn.protocols.http.h11_impl.is_ssl",
  "uvicorn.protocols.http.httptools_impl",
  "uvicorn.protocols.http.httptools_impl.FlowControl",
  "uvicorn.protocols.http.httptools_impl.HIGH_WATER_LIMIT",
  "uvicorn.protocols.http.httptools_impl.HttpToolsProtocol",
  "uvicorn.protocols.http.httptools_impl.RequestResponseCycle",
  "uvicorn.protocols.http.httptools_impl.STATUS_LINE",
  "uvicorn.protocols.http.httptools_impl.ServiceUnavailable",
  "uvicorn.protocols.http.httptools_impl._get_status_line",
  "uvicorn.protocols.http.httptools_impl.get_local_addr",
  "uvicorn.protocols.http.httptools_impl.get_remote_addr",
  "uvicorn.protocols.http.httptools_impl.is_ssl",
  "uvicorn.protocols.utils",
  "uvicorn.protocols.utils.get_local_addr",
  "uvicorn.protocols.utils.get_remote_addr",
  "uvicorn.protocols.utils.is_ssl",
  "uvicorn.protocols.websockets",
  "uvicorn.protocols.websockets.auto",
  "uvicorn.protocols.websockets.auto.AutoWebSocketsProtocol",
  "uvicorn.protocols.websockets.auto.WSProtocol",
  "uvicorn.protocols.websockets.auto.WebSocketProtocol",
  "uvicorn.protocols.websockets.auto.exc",
  "uvicorn.protocols.websockets.websockets_impl",
  "uvicorn.protocols.websockets.websockets_impl.Server",
  "uvicorn.protocols.websockets.websockets_impl.WebSocketProtocol",
  "uvicorn.protocols.websockets.websockets_impl.get_local_addr",
  "uvicorn.protocols.websockets.websockets_impl.get_remote_addr",
  "uvicorn.protocols.websockets.websockets_impl.is_ssl",
  "uvicorn.protocols.websockets.wsproto_impl",
  "uvicorn.protocols.websockets.wsproto_impl.WSProtocol",
  "uvicorn.protocols.websockets.wsproto_impl.get_local_addr",
  "uvicorn.protocols.websockets.wsproto_impl.get_remote_addr",
  "uvicorn.protocols.websockets.wsproto_impl.is_ssl",
  "uvicorn.run",
  "uvicorn.supervisors",
  "uvicorn.supervisors.Multiprocess",
  "uvicorn.supervisors.StatReload",
  "uvicorn.supervisors.__all__",
  "uvicorn.supervisors.multiprocess",
  "uvicorn.supervisors.multiprocess.HANDLED_SIGNALS",
  "uvicorn.supervisors.multiprocess.Multiprocess",
  "uvicorn.supervisors.statreload",
  "uvicorn.supervisors.statreload.HANDLED_SIGNALS",
  "uvicorn.supervisors.statreload.StatReload",
  "uvicorn.workers",
  "uvicorn.workers.Config",
  "uvicorn.workers.Server",
  "uvicorn.workers.UvicornH11Worker",
  "uvicorn.workers.UvicornWorker"
 ]
}