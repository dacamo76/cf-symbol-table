{
 "errors": {},
 "symbols": [
  "specutils.Spectrum1D",
  "specutils.__all__",
  "specutils.__githash__",
  "specutils.__version__",
  "specutils._astropy_init",
  "specutils._astropy_init.__all__",
  "specutils._astropy_init.__githash__",
  "specutils._astropy_init.__version__",
  "specutils._astropy_init._get_test_runner",
  "specutils._astropy_init.config_dir",
  "specutils._astropy_init.config_template",
  "specutils._astropy_init.orig_error",
  "specutils._astropy_init.test",
  "specutils._astropy_init.wmsg",
  "specutils._get_test_runner",
  "specutils.cextinction",
  "specutils.config_dir",
  "specutils.config_template",
  "specutils.conftest",
  "specutils.core",
  "specutils.core.generic",
  "specutils.core.generic.Spectrum1D",
  "specutils.core.generic.Spectrum1DRef",
  "specutils.cython_version",
  "specutils.cython_version.cython_version",
  "specutils.extern",
  "specutils.extinction",
  "specutils.extinction.ExtinctionD03",
  "specutils.extinction.ExtinctionF99",
  "specutils.extinction.ExtinctionWD01",
  "specutils.extinction.HAS_SCIPY",
  "specutils.extinction.__all__",
  "specutils.extinction._check_wave",
  "specutils.extinction._d03_fnames",
  "specutils.extinction._extinction_models",
  "specutils.extinction._f99_xknots",
  "specutils.extinction._fm07_kknots",
  "specutils.extinction._fm07_r_v",
  "specutils.extinction._fm07_spline",
  "specutils.extinction._fm07_xknots",
  "specutils.extinction._func_doc",
  "specutils.extinction._process_inputs",
  "specutils.extinction._process_wave",
  "specutils.extinction._wd01_fnames",
  "specutils.extinction.cextinction",
  "specutils.extinction.extinction",
  "specutils.extinction.func",
  "specutils.extinction.reddening",
  "specutils.io",
  "specutils.io.IUE",
  "specutils.io.IUE.ApertureException",
  "specutils.io.IUE._find_col_index",
  "specutils.io.IUE._get_unit",
  "specutils.io.IUE.read_IUE_mxlo",
  "specutils.io.fits",
  "specutils.io.iraf",
  "specutils.io.iraf.IRAF_id_reader",
  "specutils.io.iraf.IRAF_id_reader.IRAF_identify_reader",
  "specutils.io.iraf.IRAF_id_reader.blankre",
  "specutils.io.iraf.IRAF_id_reader.datare",
  "specutils.io.iraf.IRAF_id_reader.featre",
  "specutils.io.iraf.IRAF_id_reader.imre",
  "specutils.io.iraf.IRAF_id_reader.splinere",
  "specutils.io.iraf.IRAF_identify_reader",
  "specutils.io.iraf.setup_package",
  "specutils.io.iraf.setup_package.get_package_data",
  "specutils.io.iraf.tests",
  "specutils.io.iraf.tests.test_iraf_line_reader",
  "specutils.io.iraf.tests.test_iraf_line_reader.data_path",
  "specutils.io.iraf.tests.test_iraf_line_reader.test_iraf_line_reader",
  "specutils.io.read_IRAF_spec",
  "specutils.io.read_IRAF_spec.IrafFormatError",
  "specutils.io.read_IRAF_spec.chebyshev",
  "specutils.io.read_IRAF_spec.cubic_spline",
  "specutils.io.read_IRAF_spec.legendre",
  "specutils.io.read_IRAF_spec.linear_spline",
  "specutils.io.read_IRAF_spec.make_IRAF_wave",
  "specutils.io.read_IRAF_spec.polynomial",
  "specutils.io.read_IRAF_spec.read_IRAF_spec",
  "specutils.io.read_IRAF_spec.wave_1dspec",
  "specutils.io.read_IRAF_spec.wave_multispec",
  "specutils.io.read_fits",
  "specutils.io.read_fits.FITSWCSError",
  "specutils.io.read_fits.FITSWCSSpectrum",
  "specutils.io.read_fits.Spectrum1D",
  "specutils.io.read_fits._get_num_coefficients",
  "specutils.io.read_fits._parse_fits_units",
  "specutils.io.read_fits._parse_multispec_dict",
  "specutils.io.read_fits.fits_wcs_spec_func_type",
  "specutils.io.read_fits.multispec_wcs_reader",
  "specutils.io.read_fits.read_fits_spectrum1d",
  "specutils.io.read_fits.read_fits_wcs_linear1d",
  "specutils.io.read_fits.specwcs",
  "specutils.io.read_fits.wat_keyword_pattern",
  "specutils.io.read_fits.wcs_attributes_function_keywords",
  "specutils.io.read_fits.wcs_attributes_function_parameters",
  "specutils.io.read_fits.wcs_attributes_general_keywords",
  "specutils.io.registry",
  "specutils.io.setup_package",
  "specutils.io.setup_package.get_package_data",
  "specutils.io.tests",
  "specutils.io.tests.test_IUE_readers",
  "specutils.io.tests.test_IUE_readers.data_path",
  "specutils.io.tests.test_IUE_readers.pytestmark",
  "specutils.io.tests.test_IUE_readers.test_multiple_apertures_exception",
  "specutils.io.tests.test_IUE_readers.test_mxlo",
  "specutils.io.tests.test_read_fits_spec",
  "specutils.io.tests.test_read_fits_spec.data_path",
  "specutils.io.tests.test_read_fits_spec.read_fits",
  "specutils.io.tests.test_read_fits_spec.test_1d_multispec_combined",
  "specutils.io.tests.test_read_fits_spec.test_1dspec_UVES",
  "specutils.io.tests.test_read_fits_spec.test_1dspec_vrad",
  "specutils.io.tests.test_read_fits_spec.test_multispec_chebyshev",
  "specutils.io.tests.test_read_fits_spec.test_multispec_equispec_linear",
  "specutils.io.tests.test_read_fits_spec.test_multispec_legendre",
  "specutils.io.tests.test_read_fits_spec.test_multispec_linear",
  "specutils.io.tests.test_read_fits_spec.test_multispec_log_linear",
  "specutils.io.tests.test_spline_fits",
  "specutils.io.tests.test_spline_fits.data_path",
  "specutils.io.tests.test_spline_fits.read_fits",
  "specutils.io.tests.test_spline_fits.test_multispec_cubic_spline",
  "specutils.io.tests.test_spline_fits.test_multispec_linear_spline",
  "specutils.io.tests.test_write_fits_spec",
  "specutils.io.tests.test_write_fits_spec.data_path",
  "specutils.io.tests.test_write_fits_spec.read_fits",
  "specutils.io.tests.test_write_fits_spec.test_linear_write1",
  "specutils.io.tests.test_write_fits_spec.test_linear_write2",
  "specutils.io.tests.test_write_fits_spec.test_multispec_chebyshev",
  "specutils.io.tests.test_write_fits_spec.test_multispec_combined",
  "specutils.io.tests.test_write_fits_spec.test_multispec_legendre",
  "specutils.io.tests.test_write_fits_spec.test_multispec_linear",
  "specutils.io.tests.test_write_fits_spec.test_multispec_spline",
  "specutils.io.tests.test_write_fits_spec.write_fits",
  "specutils.io.write_fits",
  "specutils.io.write_fits._make_hdu",
  "specutils.io.write_fits.multispec_cards",
  "specutils.io.write_fits.singlespec_cards",
  "specutils.io.write_fits.write",
  "specutils.models",
  "specutils.models.BSplineModel",
  "specutils.models.Indexer",
  "specutils.models.Indexer.Indexer",
  "specutils.models.setup_package",
  "specutils.models.tests",
  "specutils.models.tests.test_bspline_model",
  "specutils.models.tests.test_bspline_model.minversion",
  "specutils.models.tests.test_bspline_model.test_from_data",
  "specutils.models.tests.test_bspline_model.test_init",
  "specutils.models.tests.test_bspline_model.version",
  "specutils.models.tests.test_indexer",
  "specutils.models.tests.test_indexer.Indexer",
  "specutils.models.tests.test_indexer.data_path",
  "specutils.models.tests.test_indexer.read_fits",
  "specutils.models.tests.test_indexer.test_apply_slice",
  "specutils.models.tests.test_indexer.test_init_slice",
  "specutils.models.tests.test_indexer.test_length",
  "specutils.models.tests.test_indexer.test_spectrum_slicing",
  "specutils.models.tests.test_models",
  "specutils.models.tests.test_models.minversion",
  "specutils.models.tests.test_models.test_composite_wcs",
  "specutils.models.tests.test_models.test_doppler",
  "specutils.models.tests.test_models.test_weighted_wcs",
  "specutils.models.tests.test_models.version",
  "specutils.orig_error",
  "specutils.setup_package",
  "specutils.spectrum1d",
  "specutils.spectrum1d.BaseSpectrum1DWCS",
  "specutils.spectrum1d.Indexer",
  "specutils.spectrum1d.Spectrum1D",
  "specutils.spectrum1d.Spectrum1DLookupWCS",
  "specutils.spectrum1d.__all__",
  "specutils.test",
  "specutils.tests",
  "specutils.tests.setup_package",
  "specutils.tests.setup_package.get_package_data",
  "specutils.tests.test_extinction",
  "specutils.tests.test_spectrum1d",
  "specutils.tests.test_spectrum1d.Spectrum1D",
  "specutils.tests.test_spectrum1d.test_spectrum1d_flux1",
  "specutils.tests.test_spectrum1d.test_spectrum1d_flux2",
  "specutils.tests.test_spectrum1d.test_spectrum1d_fromarray_quantity",
  "specutils.tests.test_spectrum1dref",
  "specutils.utils",
  "specutils.version",
  "specutils.version._decode_stdio",
  "specutils.version._get_repo_path",
  "specutils.version._last_generated_version",
  "specutils.version._last_githash",
  "specutils.version._packagename",
  "specutils.version.bugfix",
  "specutils.version.compiler",
  "specutils.version.cython_version",
  "specutils.version.debug",
  "specutils.version.get_git_devstr",
  "specutils.version.githash",
  "specutils.version.major",
  "specutils.version.minor",
  "specutils.version.release",
  "specutils.version.timestamp",
  "specutils.version.update_git_devstr",
  "specutils.version.version",
  "specutils.wcs",
  "specutils.wcs.BaseSpectrum1DWCS",
  "specutils.wcs.Spectrum1DLookupWCS",
  "specutils.wcs.Spectrum1DWCSError",
  "specutils.wcs.Spectrum1DWCSFITSError",
  "specutils.wcs.Spectrum1DWCSUnitError",
  "specutils.wcs.specwcs",
  "specutils.wcs.specwcs.BaseSpectrum1DWCS",
  "specutils.wcs.specwcs.CompositeWCS",
  "specutils.wcs.specwcs.DopplerShift",
  "specutils.wcs.specwcs.MultispecIRAFCompositeWCS",
  "specutils.wcs.specwcs.Spectrum1DIRAFBSplineWCS",
  "specutils.wcs.specwcs.Spectrum1DIRAFChebyshevWCS",
  "specutils.wcs.specwcs.Spectrum1DIRAFLegendreWCS",
  "specutils.wcs.specwcs.Spectrum1DLookupWCS",
  "specutils.wcs.specwcs.Spectrum1DPolynomialWCS",
  "specutils.wcs.specwcs.Spectrum1DWCSError",
  "specutils.wcs.specwcs.Spectrum1DWCSFITSError",
  "specutils.wcs.specwcs.Spectrum1DWCSUnitError",
  "specutils.wcs.specwcs.WeightedCombinationWCS",
  "specutils.wcs.specwcs.valid_spectral_units",
  "specutils.wcs.tests",
  "specutils.wcs.tests.__author__",
  "specutils.wcs.tests.fits_wcs_io",
  "specutils.wcs.tests.fits_wcs_io.simple_linear_wcs_header",
  "specutils.wmsg"
 ]
}