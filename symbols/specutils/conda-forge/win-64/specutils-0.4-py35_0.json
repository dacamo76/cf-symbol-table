{
 "errors": {},
 "symbols": [
  "specutils.SpectralRegion",
  "specutils.Spectrum1D",
  "specutils.SpectrumCollection",
  "specutils.UnsupportedPythonError",
  "specutils.__all__",
  "specutils.__citation__",
  "specutils.__doctest_skip__",
  "specutils.__githash__",
  "specutils.__minimum_python_version__",
  "specutils.__version__",
  "specutils._astropy_init",
  "specutils._astropy_init.__all__",
  "specutils._astropy_init.__githash__",
  "specutils._astropy_init.__version__",
  "specutils._astropy_init.config_dir",
  "specutils._astropy_init.config_template",
  "specutils._astropy_init.orig_error",
  "specutils._astropy_init.test",
  "specutils._astropy_init.wmsg",
  "specutils._load_user_io",
  "specutils.analysis",
  "specutils.analysis.__all__",
  "specutils.analysis._centroid_single_region",
  "specutils.analysis._compute_equivalent_width",
  "specutils.analysis._compute_fwhm",
  "specutils.analysis._compute_gaussian_fwhm",
  "specutils.analysis._compute_gaussian_sigma_width",
  "specutils.analysis._compute_line_flux",
  "specutils.analysis._compute_single_fwhm",
  "specutils.analysis._snr_single_region",
  "specutils.analysis.centroid",
  "specutils.analysis.equivalent_width",
  "specutils.analysis.flux",
  "specutils.analysis.flux.__all__",
  "specutils.analysis.flux._compute_equivalent_width",
  "specutils.analysis.flux._compute_line_flux",
  "specutils.analysis.flux.equivalent_width",
  "specutils.analysis.flux.line_flux",
  "specutils.analysis.fwhm",
  "specutils.analysis.gaussian_fwhm",
  "specutils.analysis.gaussian_sigma_width",
  "specutils.analysis.line_flux",
  "specutils.analysis.location",
  "specutils.analysis.location.__all__",
  "specutils.analysis.location._centroid_single_region",
  "specutils.analysis.location.centroid",
  "specutils.analysis.snr",
  "specutils.analysis.uncertainty",
  "specutils.analysis.uncertainty.__all__",
  "specutils.analysis.uncertainty._snr_single_region",
  "specutils.analysis.uncertainty.snr",
  "specutils.analysis.utils",
  "specutils.analysis.utils.__all__",
  "specutils.analysis.utils.computation_wrapper",
  "specutils.analysis.width",
  "specutils.analysis.width.__all__",
  "specutils.analysis.width._compute_fwhm",
  "specutils.analysis.width._compute_gaussian_fwhm",
  "specutils.analysis.width._compute_gaussian_sigma_width",
  "specutils.analysis.width._compute_single_fwhm",
  "specutils.analysis.width.fwhm",
  "specutils.analysis.width.gaussian_fwhm",
  "specutils.analysis.width.gaussian_sigma_width",
  "specutils.config_dir",
  "specutils.config_template",
  "specutils.conftest",
  "specutils.conftest.PYTEST_HEADER_MODULES",
  "specutils.conftest.TESTED_VERSIONS",
  "specutils.conftest.packagename",
  "specutils.conftest.version",
  "specutils.fitting",
  "specutils.fitting.__all__",
  "specutils.fitting._add_units_to_model",
  "specutils.fitting._combine_postfix",
  "specutils.fitting._fit_lines",
  "specutils.fitting._strip_units_from_model",
  "specutils.fitting.continuum",
  "specutils.fitting.continuum.__all__",
  "specutils.fitting.continuum.fit_continuum",
  "specutils.fitting.continuum.fit_generic_continuum",
  "specutils.fitting.fit_continuum",
  "specutils.fitting.fit_generic_continuum",
  "specutils.fitting.fit_lines",
  "specutils.fitting.fitmodels",
  "specutils.fitting.fitmodels.__all__",
  "specutils.fitting.fitmodels._add_units_to_model",
  "specutils.fitting.fitmodels._combine_postfix",
  "specutils.fitting.fitmodels._fit_lines",
  "specutils.fitting.fitmodels._strip_units_from_model",
  "specutils.fitting.fitmodels.fit_lines",
  "specutils.io",
  "specutils.io.__all__",
  "specutils.io._load_user_io",
  "specutils.io.custom_writer",
  "specutils.io.data_loader",
  "specutils.io.default_loaders",
  "specutils.io.default_loaders.__all__",
  "specutils.io.default_loaders.cube_reader",
  "specutils.io.default_loaders.cube_reader.generic_fits",
  "specutils.io.default_loaders.cube_reader.identify_generic_fits",
  "specutils.io.default_loaders.modules",
  "specutils.io.default_loaders.muscles_sed_reader",
  "specutils.io.default_loaders.muscles_sed_reader.identify_muscles_sed_fits",
  "specutils.io.default_loaders.muscles_sed_reader.muscles_sed_fits",
  "specutils.io.default_loaders.tabular_fits_reader",
  "specutils.io.default_loaders.tabular_fits_reader.identify_tabular_fits",
  "specutils.io.default_loaders.tabular_fits_reader.tabular_fits",
  "specutils.io.default_loaders.tabular_fits_writer",
  "specutils.io.default_loaders.tabular_fits_writer.tabular_fits",
  "specutils.io.default_loaders.wcs_fits_reader",
  "specutils.io.default_loaders.wcs_fits_reader.identify_wcs1d_fits",
  "specutils.io.default_loaders.wcs_fits_reader.wcs1d_fits",
  "specutils.io.default_loaders.wcs_fits_writer",
  "specutils.io.default_loaders.wcs_fits_writer.tabular_fits",
  "specutils.io.registers",
  "specutils.io.registers.__all__",
  "specutils.io.registers._load_user_io",
  "specutils.io.registers.custom_writer",
  "specutils.io.registers.data_loader",
  "specutils.manipulation",
  "specutils.manipulation.__all__",
  "specutils.manipulation._to_edge_pixel",
  "specutils.manipulation.box_smooth",
  "specutils.manipulation.convolution_smooth",
  "specutils.manipulation.estimate_uncertainty",
  "specutils.manipulation.estimate_uncertainty.__all__",
  "specutils.manipulation.estimate_uncertainty.noise_region_uncertainty",
  "specutils.manipulation.extract_spectral_region",
  "specutils.manipulation.extract_spectral_region.__all__",
  "specutils.manipulation.extract_spectral_region._to_edge_pixel",
  "specutils.manipulation.extract_spectral_region.extract_region",
  "specutils.manipulation.gaussian_smooth",
  "specutils.manipulation.median_smooth",
  "specutils.manipulation.noise_region_uncertainty",
  "specutils.manipulation.smoothing",
  "specutils.manipulation.smoothing.__all__",
  "specutils.manipulation.smoothing.box_smooth",
  "specutils.manipulation.smoothing.convolution_smooth",
  "specutils.manipulation.smoothing.gaussian_smooth",
  "specutils.manipulation.smoothing.median_smooth",
  "specutils.manipulation.smoothing.trapezoid_smooth",
  "specutils.manipulation.trapezoid_smooth",
  "specutils.manipulation.utils",
  "specutils.manipulation.utils.__all__",
  "specutils.manipulation.utils.excise_region",
  "specutils.manipulation.utils.linear_exciser",
  "specutils.modules",
  "specutils.orig_error",
  "specutils.spectra",
  "specutils.spectra.SpectralRegion",
  "specutils.spectra.Spectrum1D",
  "specutils.spectra.SpectrumCollection",
  "specutils.spectra.__all__",
  "specutils.spectra.__doctest_skip__",
  "specutils.spectra.spectral_region",
  "specutils.spectra.spectral_region.SpectralRegion",
  "specutils.spectra.spectrum1d",
  "specutils.spectra.spectrum1d.Spectrum1D",
  "specutils.spectra.spectrum1d.__all__",
  "specutils.spectra.spectrum1d.__doctest_skip__",
  "specutils.spectra.spectrum1d._data_with_spectral_axis_first",
  "specutils.spectra.spectrum1d._data_with_spectral_axis_last",
  "specutils.spectra.spectrum1d._spectral_axis_len",
  "specutils.spectra.spectrum1d._spectral_axis_numpy_index",
  "specutils.spectra.spectrum1d.flux",
  "specutils.spectra.spectrum1d.spectral_axis_unit",
  "specutils.spectra.spectrum1d.spectral_wcs",
  "specutils.spectra.spectrum1d.velocity",
  "specutils.spectra.spectrum1d.velocity_convention",
  "specutils.spectra.spectrum_collection",
  "specutils.spectra.spectrum_collection.SpectrumCollection",
  "specutils.spectra.spectrum_collection.__all__",
  "specutils.spectra.spectrum_mixin",
  "specutils.spectra.spectrum_mixin.DOPPLER_CONVENTIONS",
  "specutils.spectra.spectrum_mixin.InplaceModificationMixin",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin._data_with_spectral_axis_first",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin._data_with_spectral_axis_last",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin._spectral_axis_len",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin._spectral_axis_numpy_index",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin.flux",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin.spectral_axis_unit",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin.spectral_wcs",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin.velocity",
  "specutils.spectra.spectrum_mixin.OneDSpectrumMixin.velocity_convention",
  "specutils.spectra.spectrum_mixin.__all__",
  "specutils.test",
  "specutils.tests",
  "specutils.tests.setup_package",
  "specutils.tests.setup_package.get_package_data",
  "specutils.tests.spectral_cube_test_spectral_axis",
  "specutils.tests.spectral_cube_test_spectral_axis.air_vac",
  "specutils.tests.spectral_cube_test_spectral_axis.test_air_to_vac",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_awav2vel",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_awav2wav",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_f2v",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_f2w",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_vopt",
  "specutils.tests.spectral_cube_test_spectral_axis.test_byhand_vrad",
  "specutils.tests.spectral_cube_test_spectral_axis.test_change_rest_frequency",
  "specutils.tests.spectral_cube_test_spectral_axis.test_ctype_determinator",
  "specutils.tests.spectral_cube_test_spectral_axis.test_cube_wcs_freqtovel",
  "specutils.tests.spectral_cube_test_spectral_axis.test_cube_wcs_freqtovopt",
  "specutils.tests.spectral_cube_test_spectral_axis.test_greisen2006",
  "specutils.tests.spectral_cube_test_spectral_axis.test_nir_sinfoni_base",
  "specutils.tests.spectral_cube_test_spectral_axis.test_vconv_determinator",
  "specutils.tests.spectral_cube_test_spectral_axis.test_vopt_to_freq",
  "specutils.tests.spectral_examples",
  "specutils.tests.spectral_examples.SpectraExamples",
  "specutils.tests.spectral_examples.simulated_spectra",
  "specutils.tests.test_analysis",
  "specutils.tests.test_analysis.test_centroid",
  "specutils.tests.test_analysis.test_equivalent_width",
  "specutils.tests.test_analysis.test_fwhm",
  "specutils.tests.test_analysis.test_gaussian_fwhm",
  "specutils.tests.test_analysis.test_gaussian_sigma_width",
  "specutils.tests.test_analysis.test_inverted_centroid",
  "specutils.tests.test_analysis.test_line_flux",
  "specutils.tests.test_analysis.test_snr",
  "specutils.tests.test_arithmetic",
  "specutils.tests.test_arithmetic.test_add_basic_spectra",
  "specutils.tests.test_arithmetic.test_add_diff_flux_prefix",
  "specutils.tests.test_arithmetic.test_add_diff_spectral_axis",
  "specutils.tests.test_arithmetic.test_divide_basic_spectra",
  "specutils.tests.test_arithmetic.test_multiplication_basic_spectra",
  "specutils.tests.test_arithmetic.test_spectral_axes",
  "specutils.tests.test_arithmetic.test_subtract_basic_spectra",
  "specutils.tests.test_continuum",
  "specutils.tests.test_continuum.single_peak_continuum",
  "specutils.tests.test_continuum.test_continuum_calculation",
  "specutils.tests.test_continuum.test_continuum_fit",
  "specutils.tests.test_fitting",
  "specutils.tests.test_fitting.double_peak",
  "specutils.tests.test_fitting.single_peak",
  "specutils.tests.test_fitting.test_double_peak_fit",
  "specutils.tests.test_fitting.test_single_peak_fit",
  "specutils.tests.test_loaders",
  "specutils.tests.test_loaders.test_specific_spec_axis_unit",
  "specutils.tests.test_loaders.test_spectrum1d_GMOSfits",
  "specutils.tests.test_region_extract",
  "specutils.tests.test_region_extract.test_extract_region_mismatched_units",
  "specutils.tests.test_region_extract.test_extract_region_pixels",
  "specutils.tests.test_region_extract.test_region_empty",
  "specutils.tests.test_region_extract.test_region_ghz",
  "specutils.tests.test_region_extract.test_region_simple",
  "specutils.tests.test_region_extract.test_region_two_sub",
  "specutils.tests.test_regions",
  "specutils.tests.test_regions.test_adding_spectral_regions",
  "specutils.tests.test_regions.test_bounds",
  "specutils.tests.test_regions.test_delitem",
  "specutils.tests.test_regions.test_getitem",
  "specutils.tests.test_regions.test_invert",
  "specutils.tests.test_regions.test_iterate",
  "specutils.tests.test_regions.test_lower_upper",
  "specutils.tests.test_regions.test_slicing",
  "specutils.tests.test_slicing",
  "specutils.tests.test_slicing.test_slicing",
  "specutils.tests.test_slicing.test_spectral_axes",
  "specutils.tests.test_smoothing",
  "specutils.tests.test_smoothing.compare_flux",
  "specutils.tests.test_smoothing.test_smooth_box_bad",
  "specutils.tests.test_smoothing.test_smooth_box_good",
  "specutils.tests.test_smoothing.test_smooth_custom_kernel",
  "specutils.tests.test_smoothing.test_smooth_gaussian_bad",
  "specutils.tests.test_smoothing.test_smooth_gaussian_good",
  "specutils.tests.test_smoothing.test_smooth_median_bad",
  "specutils.tests.test_smoothing.test_smooth_median_good",
  "specutils.tests.test_smoothing.test_smooth_trapezoid_bad",
  "specutils.tests.test_smoothing.test_smooth_trapezoid_good",
  "specutils.tests.test_spectrum1d",
  "specutils.tests.test_spectrum1d.test_create_explicit_fitswcs",
  "specutils.tests.test_spectrum1d.test_create_from_arrays",
  "specutils.tests.test_spectrum1d.test_create_from_multidimensional_arrays",
  "specutils.tests.test_spectrum1d.test_create_from_quantities",
  "specutils.tests.test_spectrum1d.test_create_implicit_wcs",
  "specutils.tests.test_spectrum1d.test_create_with_uncertainty",
  "specutils.tests.test_spectrum1d.test_energy_photon_flux",
  "specutils.tests.test_spectrum1d.test_flux_unit_conversion",
  "specutils.tests.test_spectrum1d.test_noise_estimate_uncertainty",
  "specutils.tests.test_spectrum1d.test_read_linear_solution",
  "specutils.tests.test_spectrum1d.test_repr",
  "specutils.tests.test_spectrum1d.test_spectral_axis_conversions",
  "specutils.tests.test_spectrum1d.test_str",
  "specutils.tests.test_spectrum1d.test_wcs_transformations",
  "specutils.tests.test_spectrum_collection",
  "specutils.tests.test_utils",
  "specutils.tests.test_utils.QuantityModel",
  "specutils.tests.test_utils.test_quantity_model",
  "specutils.utils",
  "specutils.utils.QuantityModel",
  "specutils.utils.__all__",
  "specutils.utils.quantity_model",
  "specutils.utils.quantity_model.QuantityModel",
  "specutils.utils.quantity_model.__all__",
  "specutils.utils.wcs_utils",
  "specutils.utils.wcs_utils.ALL_CTYPES",
  "specutils.utils.wcs_utils.CTYPE_CHAR_TO_PHYSICALTYPE",
  "specutils.utils.wcs_utils.CTYPE_TO_PHYSICALTYPE",
  "specutils.utils.wcs_utils.LINEAR_CTYPES",
  "specutils.utils.wcs_utils.LINEAR_CTYPE_CHARS",
  "specutils.utils.wcs_utils.LINEAR_CUNIT_DICT",
  "specutils.utils.wcs_utils.PHYSICAL_TYPE_TO_CHAR",
  "specutils.utils.wcs_utils.PHYSICAL_TYPE_TO_CTYPE",
  "specutils.utils.wcs_utils.PHYS_UNIT_DICT",
  "specutils.utils.wcs_utils.WCS_UNIT_DICT",
  "specutils.utils.wcs_utils._parse_velocity_convention",
  "specutils.utils.wcs_utils.air_to_vac",
  "specutils.utils.wcs_utils.cdelt_derivative",
  "specutils.utils.wcs_utils.convert_spectral_axis",
  "specutils.utils.wcs_utils.determine_ctype_from_vconv",
  "specutils.utils.wcs_utils.determine_vconv_from_ctype",
  "specutils.utils.wcs_utils.get_rest_value_from_wcs",
  "specutils.utils.wcs_utils.unit_from_header",
  "specutils.utils.wcs_utils.vac_to_air",
  "specutils.utils.wcs_utils.wcs_unit_scale",
  "specutils.version",
  "specutils.version._decode_stdio",
  "specutils.version._get_repo_path",
  "specutils.version._last_generated_version",
  "specutils.version._last_githash",
  "specutils.version._packagename",
  "specutils.version.astropy_helpers_version",
  "specutils.version.bugfix",
  "specutils.version.compiler",
  "specutils.version.cython_version",
  "specutils.version.debug",
  "specutils.version.get_git_devstr",
  "specutils.version.githash",
  "specutils.version.major",
  "specutils.version.minor",
  "specutils.version.release",
  "specutils.version.timestamp",
  "specutils.version.update_git_devstr",
  "specutils.version.version",
  "specutils.wcs",
  "specutils.wcs.WCSAdapter",
  "specutils.wcs.adapters.fitswcs_adapter.FITSWCSAdapter",
  "specutils.wcs.adapters.fitswcs_adapter.__all__",
  "specutils.wcs.adapters.fitswcs_adapter.wcs",
  "specutils.wcs.adapters.gwcs_adapter.GWCSAdapter",
  "specutils.wcs.adapters.gwcs_adapter.__all__",
  "specutils.wcs.adapters.gwcs_adapter.wcs",
  "specutils.wcs.wcs_adapter.WCSAdapter",
  "specutils.wcs.wcs_adapter.WCSAdapter.wcs",
  "specutils.wcs.wcs_adapter.WCSAxes",
  "specutils.wcs.wcs_wrapper.FITSWCSAdapter",
  "specutils.wcs.wcs_wrapper.GWCSAdapter",
  "specutils.wcs.wcs_wrapper.WCSWrapper",
  "specutils.wcs.wcs_wrapper.__all__",
  "specutils.wmsg"
 ]
}