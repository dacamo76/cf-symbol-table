{
 "errors": {
  "xlwings.command_line": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 243, in values",
    "    return [n for filter in self._filters for n in filter.values()]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 243, in <listcomp>",
    "    return [n for filter in self._filters for n in filter.values()]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in _convert_names",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in <listcomp>",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 100, in _break_check",
    "    reachable = _check_if(context, flow_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 70, in wrapper",
    "    and context.get_value() is inference_state.builtins_module:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "xlwings.expansion": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "xlwings.App",
  "xlwings.Book",
  "xlwings.Chart",
  "xlwings.Name",
  "xlwings.PY3",
  "xlwings.Picture",
  "xlwings.Range",
  "xlwings.Shape",
  "xlwings.Sheet",
  "xlwings.__version__",
  "xlwings._xlmac",
  "xlwings._xlmac.App",
  "xlwings._xlmac.Book",
  "xlwings._xlmac.Chart",
  "xlwings._xlmac.Collection",
  "xlwings._xlmac.Name",
  "xlwings._xlmac.Picture",
  "xlwings._xlmac.Range",
  "xlwings._xlmac.Shape",
  "xlwings._xlmac.Sheet",
  "xlwings._xlmac._clean_value_data_element",
  "xlwings._xlmac.calculation_k2s",
  "xlwings._xlmac.calculation_s2k",
  "xlwings._xlmac.chart_types_k2s",
  "xlwings._xlmac.chart_types_s2k",
  "xlwings._xlmac.clean_up",
  "xlwings._xlmac.clean_value_data",
  "xlwings._xlmac.directions_k2s",
  "xlwings._xlmac.directions_s2k",
  "xlwings._xlmac.hfs_to_posix_path",
  "xlwings._xlmac.is_excel_running",
  "xlwings._xlmac.np",
  "xlwings._xlmac.open_template",
  "xlwings._xlmac.pd",
  "xlwings._xlmac.posix_to_hfs_path",
  "xlwings._xlmac.prepare_xl_data_element",
  "xlwings._xlmac.shape_types_k2s",
  "xlwings._xlmac.shape_types_s2k",
  "xlwings._xlmac.time_types",
  "xlwings._xlwindows",
  "xlwings._xlwindows.App",
  "xlwings._xlwindows.BOOK_CALLER",
  "xlwings._xlwindows.Book",
  "xlwings._xlwindows.COMRetryMethodWrapper",
  "xlwings._xlwindows.COMRetryObjectWrapper",
  "xlwings._xlwindows.Chart",
  "xlwings._xlwindows.Collection",
  "xlwings._xlwindows.ExcelBusyError",
  "xlwings._xlwindows.N_COM_ATTEMPTS",
  "xlwings._xlwindows.Name",
  "xlwings._xlwindows.OBJID_NATIVEOM",
  "xlwings._xlwindows.Picture",
  "xlwings._xlwindows.Range",
  "xlwings._xlwindows.Shape",
  "xlwings._xlwindows.Sheet",
  "xlwings._xlwindows._com_time_to_datetime",
  "xlwings._xlwindows._datetime_to_com_time",
  "xlwings._xlwindows.accessible_object_from_window",
  "xlwings._xlwindows.calculation_i2s",
  "xlwings._xlwindows.calculation_s2i",
  "xlwings._xlwindows.chart_types_i2s",
  "xlwings._xlwindows.chart_types_s2i",
  "xlwings._xlwindows.clean_value_data",
  "xlwings._xlwindows.comtypes_to_pywin",
  "xlwings._xlwindows.cwd",
  "xlwings._xlwindows.directions_i2s",
  "xlwings._xlwindows.directions_s2i",
  "xlwings._xlwindows.get_excel_hwnds",
  "xlwings._xlwindows.get_xl_app_from_hwnd",
  "xlwings._xlwindows.get_xl_apps",
  "xlwings._xlwindows.is_hwnd_xl_app",
  "xlwings._xlwindows.is_range_instance",
  "xlwings._xlwindows.missing",
  "xlwings._xlwindows.np",
  "xlwings._xlwindows.open_template",
  "xlwings._xlwindows.pd",
  "xlwings._xlwindows.prepare_xl_data_element",
  "xlwings._xlwindows.shape_types_i2s",
  "xlwings._xlwindows.shape_types_s2i",
  "xlwings._xlwindows.time_types",
  "xlwings.apps",
  "xlwings.arg",
  "xlwings.books",
  "xlwings.builtins",
  "xlwings.command_line",
  "xlwings.constants",
  "xlwings.constants.AboveBelow",
  "xlwings.constants.ActionType",
  "xlwings.constants.Allocation",
  "xlwings.constants.ApplicationInternational",
  "xlwings.constants.ApplyNamesOrder",
  "xlwings.constants.ArabicModes",
  "xlwings.constants.ArrangeStyle",
  "xlwings.constants.ArrowHeadLength",
  "xlwings.constants.ArrowHeadStyle",
  "xlwings.constants.ArrowHeadWidth",
  "xlwings.constants.AutoFillType",
  "xlwings.constants.AutoFilterOperator",
  "xlwings.constants.AxisCrosses",
  "xlwings.constants.AxisGroup",
  "xlwings.constants.AxisType",
  "xlwings.constants.Background",
  "xlwings.constants.BarShape",
  "xlwings.constants.BorderWeight",
  "xlwings.constants.BordersIndex",
  "xlwings.constants.BuiltInDialog",
  "xlwings.constants.CVError",
  "xlwings.constants.CalcFor",
  "xlwings.constants.CalculatedMemberType",
  "xlwings.constants.Calculation",
  "xlwings.constants.CategoryType",
  "xlwings.constants.CellChangedState",
  "xlwings.constants.CellInsertionMode",
  "xlwings.constants.CellType",
  "xlwings.constants.ChartElementPosition",
  "xlwings.constants.ChartGallery",
  "xlwings.constants.ChartItem",
  "xlwings.constants.ChartLocation",
  "xlwings.constants.ChartPicturePlacement",
  "xlwings.constants.ChartPictureType",
  "xlwings.constants.ChartSplitType",
  "xlwings.constants.ChartType",
  "xlwings.constants.CheckInVersionType",
  "xlwings.constants.ClipboardFormat",
  "xlwings.constants.CmdType",
  "xlwings.constants.ColorIndex",
  "xlwings.constants.ColumnDataType",
  "xlwings.constants.CommandUnderlines",
  "xlwings.constants.CommentDisplayMode",
  "xlwings.constants.ConditionValueTypes",
  "xlwings.constants.ConnectionType",
  "xlwings.constants.ConsolidationFunction",
  "xlwings.constants.Constants",
  "xlwings.constants.ContainsOperator",
  "xlwings.constants.CopyPictureFormat",
  "xlwings.constants.CorruptLoad",
  "xlwings.constants.Creator",
  "xlwings.constants.CredentialsMethod",
  "xlwings.constants.CubeFieldSubType",
  "xlwings.constants.CubeFieldType",
  "xlwings.constants.CutCopyMode",
  "xlwings.constants.DVAlertStyle",
  "xlwings.constants.DVType",
  "xlwings.constants.DataBarAxisPosition",
  "xlwings.constants.DataBarBorderType",
  "xlwings.constants.DataBarFillType",
  "xlwings.constants.DataBarNegativeColorType",
  "xlwings.constants.DataLabelPosition",
  "xlwings.constants.DataLabelSeparator",
  "xlwings.constants.DataLabelsType",
  "xlwings.constants.DataSeriesDate",
  "xlwings.constants.DeleteShiftDirection",
  "xlwings.constants.Direction",
  "xlwings.constants.DisplayBlanksAs",
  "xlwings.constants.DisplayDrawingObjects",
  "xlwings.constants.DisplayUnit",
  "xlwings.constants.DupeUnique",
  "xlwings.constants.DynamicFilterCriteria",
  "xlwings.constants.EditionFormat",
  "xlwings.constants.EditionOptionsOption",
  "xlwings.constants.EditionType",
  "xlwings.constants.EnableCancelKey",
  "xlwings.constants.EnableSelection",
  "xlwings.constants.EndStyleCap",
  "xlwings.constants.ErrorBarDirection",
  "xlwings.constants.ErrorBarInclude",
  "xlwings.constants.ErrorBarType",
  "xlwings.constants.ErrorChecks",
  "xlwings.constants.FileAccess",
  "xlwings.constants.FileFormat",
  "xlwings.constants.FileValidationPivotMode",
  "xlwings.constants.FillWith",
  "xlwings.constants.FilterAction",
  "xlwings.constants.FilterAllDatesInPeriod",
  "xlwings.constants.FindLookIn",
  "xlwings.constants.FixedFormatQuality",
  "xlwings.constants.FixedFormatType",
  "xlwings.constants.FormControl",
  "xlwings.constants.FormatConditionOperator",
  "xlwings.constants.FormatConditionType",
  "xlwings.constants.FormatFilterTypes",
  "xlwings.constants.FormulaLabel",
  "xlwings.constants.GenerateTableRefs",
  "xlwings.constants.GradientFillType",
  "xlwings.constants.HAlign",
  "xlwings.constants.HebrewModes",
  "xlwings.constants.HighlightChangesTime",
  "xlwings.constants.HtmlType",
  "xlwings.constants.IMEMode",
  "xlwings.constants.Icon",
  "xlwings.constants.ImportDataAs",
  "xlwings.constants.InsertFormatOrigin",
  "xlwings.constants.InsertShiftDirection",
  "xlwings.constants.LayoutFormType",
  "xlwings.constants.LayoutRowType",
  "xlwings.constants.LegendPosition",
  "xlwings.constants.LineStyle",
  "xlwings.constants.Link",
  "xlwings.constants.ListConflict",
  "xlwings.constants.ListDataType",
  "xlwings.constants.ListObjectSourceType",
  "xlwings.constants.LocationInTable",
  "xlwings.constants.LookAt",
  "xlwings.constants.LookFor",
  "xlwings.constants.MSApplication",
  "xlwings.constants.MailSystem",
  "xlwings.constants.MarkerStyle",
  "xlwings.constants.MeasurementUnits",
  "xlwings.constants.MouseButton",
  "xlwings.constants.MousePointer",
  "xlwings.constants.OLEType",
  "xlwings.constants.OLEVerb",
  "xlwings.constants.OartHorizontalOverflow",
  "xlwings.constants.OartVerticalOverflow",
  "xlwings.constants.ObjectSize",
  "xlwings.constants.Order",
  "xlwings.constants.Orientation",
  "xlwings.constants.PTSelectionMode",
  "xlwings.constants.PageBreak",
  "xlwings.constants.PageOrientation",
  "xlwings.constants.PaperSize",
  "xlwings.constants.ParameterDataType",
  "xlwings.constants.ParameterType",
  "xlwings.constants.PasteSpecialOperation",
  "xlwings.constants.PasteType",
  "xlwings.constants.Pattern",
  "xlwings.constants.PhoneticAlignment",
  "xlwings.constants.PhoneticCharacterType",
  "xlwings.constants.PictureAppearance",
  "xlwings.constants.PictureConvertorType",
  "xlwings.constants.PieSliceIndex",
  "xlwings.constants.PieSliceLocation",
  "xlwings.constants.PivotCellType",
  "xlwings.constants.PivotConditionScope",
  "xlwings.constants.PivotFieldCalculation",
  "xlwings.constants.PivotFieldDataType",
  "xlwings.constants.PivotFieldOrientation",
  "xlwings.constants.PivotFieldRepeatLabels",
  "xlwings.constants.PivotFilterType",
  "xlwings.constants.PivotFormatType",
  "xlwings.constants.PivotLineType",
  "xlwings.constants.PivotTableMissingItems",
  "xlwings.constants.PivotTableSourceType",
  "xlwings.constants.PivotTableVersionList",
  "xlwings.constants.Placement",
  "xlwings.constants.Platform",
  "xlwings.constants.PortugueseReform",
  "xlwings.constants.PrintErrors",
  "xlwings.constants.PrintLocation",
  "xlwings.constants.Priority",
  "xlwings.constants.PropertyDisplayedIn",
  "xlwings.constants.ProtectedViewCloseReason",
  "xlwings.constants.ProtectedViewWindowState",
  "xlwings.constants.QueryType",
  "xlwings.constants.RE_WORD",
  "xlwings.constants.RangeAutoFormat",
  "xlwings.constants.RangeValueDataType",
  "xlwings.constants.ReferenceStyle",
  "xlwings.constants.ReferenceType",
  "xlwings.constants.RemoveDocInfoType",
  "xlwings.constants.RgbColor",
  "xlwings.constants.RobustConnect",
  "xlwings.constants.RoutingSlipDelivery",
  "xlwings.constants.RoutingSlipStatus",
  "xlwings.constants.RowCol",
  "xlwings.constants.RunAutoMacro",
  "xlwings.constants.SaveAction",
  "xlwings.constants.SaveAsAccessMode",
  "xlwings.constants.SaveConflictResolution",
  "xlwings.constants.ScaleType",
  "xlwings.constants.SearchDirection",
  "xlwings.constants.SearchOrder",
  "xlwings.constants.SearchWithin",
  "xlwings.constants.SheetType",
  "xlwings.constants.SheetVisibility",
  "xlwings.constants.SizeRepresents",
  "xlwings.constants.SlicerCrossFilterType",
  "xlwings.constants.SlicerSort",
  "xlwings.constants.SmartTagControlType",
  "xlwings.constants.SmartTagDisplayMode",
  "xlwings.constants.SortDataOption",
  "xlwings.constants.SortMethod",
  "xlwings.constants.SortOn",
  "xlwings.constants.SortOrder",
  "xlwings.constants.SortOrientation",
  "xlwings.constants.SortType",
  "xlwings.constants.SourceType",
  "xlwings.constants.SpanishModes",
  "xlwings.constants.SparkScale",
  "xlwings.constants.SparkType",
  "xlwings.constants.SparklineRowCol",
  "xlwings.constants.SpeakDirection",
  "xlwings.constants.SpecialCellsValue",
  "xlwings.constants.StdColorScale",
  "xlwings.constants.SubscribeToFormat",
  "xlwings.constants.SubtotalLocationType",
  "xlwings.constants.SummaryColumn",
  "xlwings.constants.SummaryReportType",
  "xlwings.constants.SummaryRow",
  "xlwings.constants.TabPosition",
  "xlwings.constants.TableStyleElementType",
  "xlwings.constants.TextParsingType",
  "xlwings.constants.TextQualifier",
  "xlwings.constants.TextVisualLayoutType",
  "xlwings.constants.ThemeColor",
  "xlwings.constants.ThemeFont",
  "xlwings.constants.ThreadMode",
  "xlwings.constants.TickLabelOrientation",
  "xlwings.constants.TickMark",
  "xlwings.constants.TimePeriods",
  "xlwings.constants.TimeUnit",
  "xlwings.constants.ToolbarProtection",
  "xlwings.constants.TopBottom",
  "xlwings.constants.TotalsCalculation",
  "xlwings.constants.TrendlineType",
  "xlwings.constants.UnderlineStyle",
  "xlwings.constants.UpdateLinks",
  "xlwings.constants.VAlign",
  "xlwings.constants.WBATemplate",
  "xlwings.constants.WebFormatting",
  "xlwings.constants.WebSelectionType",
  "xlwings.constants.WindowState",
  "xlwings.constants.WindowType",
  "xlwings.constants.WindowView",
  "xlwings.constants.XlmMacroType",
  "xlwings.constants.XmlExportResult",
  "xlwings.constants.XmlImportResult",
  "xlwings.constants.XmlLoadOption",
  "xlwings.constants.YesNoGuess",
  "xlwings.constants._dump_enum",
  "xlwings.constants.calculations",
  "xlwings.constants.chart_types",
  "xlwings.constants.directions",
  "xlwings.constants.shape_types",
  "xlwings.conversion",
  "xlwings.conversion.Accessor",
  "xlwings.conversion.AdjustDimensionsStage",
  "xlwings.conversion.CleanDataForWriteStage",
  "xlwings.conversion.CleanDataFromReadStage",
  "xlwings.conversion.ConversionContext",
  "xlwings.conversion.Converter",
  "xlwings.conversion.DictConverter",
  "xlwings.conversion.Ensure2DStage",
  "xlwings.conversion.ExpandRangeStage",
  "xlwings.conversion.NumpyArrayConverter",
  "xlwings.conversion.Options",
  "xlwings.conversion.PandasDataFrameConverter",
  "xlwings.conversion.PandasSeriesConverter",
  "xlwings.conversion.Pipeline",
  "xlwings.conversion.RangeAccessor",
  "xlwings.conversion.RawValueAccessor",
  "xlwings.conversion.ReadValueFromRangeStage",
  "xlwings.conversion.TransposeStage",
  "xlwings.conversion.ValueAccessor",
  "xlwings.conversion.WriteValueToRangeStage",
  "xlwings.conversion.accessors",
  "xlwings.conversion.framework",
  "xlwings.conversion.framework.Accessor",
  "xlwings.conversion.framework.ConversionContext",
  "xlwings.conversion.framework.Converter",
  "xlwings.conversion.framework.Options",
  "xlwings.conversion.framework.Pipeline",
  "xlwings.conversion.framework.accessors",
  "xlwings.conversion.np",
  "xlwings.conversion.numpy_conv",
  "xlwings.conversion.numpy_conv.NumpyArrayConverter",
  "xlwings.conversion.numpy_conv.np",
  "xlwings.conversion.numpy_conv.pd",
  "xlwings.conversion.pandas_conv",
  "xlwings.conversion.pandas_conv.PandasDataFrameConverter",
  "xlwings.conversion.pandas_conv.PandasSeriesConverter",
  "xlwings.conversion.pandas_conv.pd",
  "xlwings.conversion.pd",
  "xlwings.conversion.read",
  "xlwings.conversion.standard",
  "xlwings.conversion.standard.AdjustDimensionsStage",
  "xlwings.conversion.standard.BaseAccessor",
  "xlwings.conversion.standard.CleanDataForWriteStage",
  "xlwings.conversion.standard.CleanDataFromReadStage",
  "xlwings.conversion.standard.ClearExpandedRangeStage",
  "xlwings.conversion.standard.DictConverter",
  "xlwings.conversion.standard.Ensure2DStage",
  "xlwings.conversion.standard.ExpandRangeStage",
  "xlwings.conversion.standard.RangeAccessor",
  "xlwings.conversion.standard.RawValueAccessor",
  "xlwings.conversion.standard.ReadValueFromRangeStage",
  "xlwings.conversion.standard.TransposeStage",
  "xlwings.conversion.standard.ValueAccessor",
  "xlwings.conversion.standard.WriteValueToRangeStage",
  "xlwings.conversion.standard._date_handlers",
  "xlwings.conversion.standard._number_handlers",
  "xlwings.conversion.standard.np",
  "xlwings.conversion.write",
  "xlwings.expansion",
  "xlwings.ext",
  "xlwings.ext.sql",
  "xlwings.ext.sql.conv_value",
  "xlwings.ext.sql.sql",
  "xlwings.func",
  "xlwings.get_udf_module",
  "xlwings.import_udfs",
  "xlwings.mac_dict",
  "xlwings.mac_dict.classes",
  "xlwings.mac_dict.commands",
  "xlwings.mac_dict.elements",
  "xlwings.mac_dict.enums",
  "xlwings.mac_dict.properties",
  "xlwings.mac_dict.version",
  "xlwings.main",
  "xlwings.main.ActiveAppBooks",
  "xlwings.main.ActiveBookSheets",
  "xlwings.main.App",
  "xlwings.main.Book",
  "xlwings.main.Chart",
  "xlwings.main.Collection",
  "xlwings.main.FigureCanvas",
  "xlwings.main.Image",
  "xlwings.main.Macro",
  "xlwings.main.Name",
  "xlwings.main.Picture",
  "xlwings.main.Range",
  "xlwings.main.Shape",
  "xlwings.main.Sheet",
  "xlwings.main.apps",
  "xlwings.main.books",
  "xlwings.main.mpl",
  "xlwings.main.sheets",
  "xlwings.main.view",
  "xlwings.ret",
  "xlwings.serve",
  "xlwings.server.FromVariant",
  "xlwings.server.PyIDispatch",
  "xlwings.server.RPC_E_SERVERCALL_RETRYLATER",
  "xlwings.server.ToVariant",
  "xlwings.server.XLPython",
  "xlwings.server._ask_for_retry",
  "xlwings.server._can_retry",
  "xlwings.server._execute_task",
  "xlwings.server.add_idle_task",
  "xlwings.server.cwd",
  "xlwings.server.idle_queue",
  "xlwings.server.idle_queue_event",
  "xlwings.server.serve",
  "xlwings.sheets",
  "xlwings.string_types",
  "xlwings.sub",
  "xlwings.tests",
  "xlwings.tests.common",
  "xlwings.tests.common.SPEC",
  "xlwings.tests.common.TestBase",
  "xlwings.tests.common.this_dir",
  "xlwings.tests.test_active",
  "xlwings.tests.test_active.PY3",
  "xlwings.tests.test_active.TestActive",
  "xlwings.tests.test_active.TestBase",
  "xlwings.tests.test_active.TestView",
  "xlwings.tests.test_active.plt",
  "xlwings.tests.test_active.this_dir",
  "xlwings.tests.test_app",
  "xlwings.tests.test_app.SPEC",
  "xlwings.tests.test_app.TestApp",
  "xlwings.tests.test_app.TestBase",
  "xlwings.tests.test_app.this_dir",
  "xlwings.tests.test_book",
  "xlwings.tests.test_book.PY3",
  "xlwings.tests.test_book.TestBase",
  "xlwings.tests.test_book.TestBook",
  "xlwings.tests.test_book.this_dir",
  "xlwings.tests.test_conversion",
  "xlwings.tests.test_conversion.TestBase",
  "xlwings.tests.test_conversion.TestConverter",
  "xlwings.tests.test_conversion.TestNumpy",
  "xlwings.tests.test_conversion.TestPandas",
  "xlwings.tests.test_conversion.np",
  "xlwings.tests.test_conversion.pd",
  "xlwings.tests.test_names",
  "xlwings.tests.test_names.TestBase",
  "xlwings.tests.test_names.TestNames",
  "xlwings.tests.test_range",
  "xlwings.tests.test_range.RgbColor",
  "xlwings.tests.test_range.TestBase",
  "xlwings.tests.test_range.TestRangeAttributes",
  "xlwings.tests.test_range.TestRangeExpansion",
  "xlwings.tests.test_range.TestRangeIndexing",
  "xlwings.tests.test_range.TestRangeInstantiation",
  "xlwings.tests.test_range.TestRangeShortcut",
  "xlwings.tests.test_range.TestRangeSlicing",
  "xlwings.tests.test_range.this_dir",
  "xlwings.tests.test_shape",
  "xlwings.tests.test_shape.PIL",
  "xlwings.tests.test_shape.TestBase",
  "xlwings.tests.test_shape.TestChart",
  "xlwings.tests.test_shape.TestMatplotlib",
  "xlwings.tests.test_shape.TestPicture",
  "xlwings.tests.test_shape.TestShape",
  "xlwings.tests.test_shape.mpl",
  "xlwings.tests.test_shape.this_dir",
  "xlwings.tests.test_sheet",
  "xlwings.tests.test_sheet.TestBase",
  "xlwings.tests.test_sheet.TestSheet",
  "xlwings.time_types",
  "xlwings.udfs",
  "xlwings.udfs.DelayWrite",
  "xlwings.udfs.call_udf",
  "xlwings.udfs.check_volatile",
  "xlwings.udfs.func_sig",
  "xlwings.udfs.generate_vba_wrapper",
  "xlwings.udfs.get_category",
  "xlwings.udfs.get_udf_module",
  "xlwings.udfs.import_udfs",
  "xlwings.udfs.should_call_in_wizard",
  "xlwings.udfs.udf_modules",
  "xlwings.udfs.xlarg",
  "xlwings.udfs.xlsub",
  "xlwings.utils",
  "xlwings.utils.ALPHABET",
  "xlwings.utils.VBAWriter",
  "xlwings.utils.VersionNumber",
  "xlwings.utils.col_name",
  "xlwings.utils.get_duplicates",
  "xlwings.utils.int_to_rgb",
  "xlwings.utils.missing",
  "xlwings.utils.mpl",
  "xlwings.utils.np",
  "xlwings.utils.np_datetime_to_datetime",
  "xlwings.utils.process_image",
  "xlwings.utils.rgb_to_int",
  "xlwings.utils.try_parse_int",
  "xlwings.view",
  "xlwings.xlarg",
  "xlwings.xlfunc",
  "xlwings.xlplatform",
  "xlwings.xlret",
  "xlwings.xlsub",
  "xlwings.xrange"
 ]
}