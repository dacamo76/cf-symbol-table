{
 "errors": {},
 "symbols": [
  "pre_commit.__main__",
  "pre_commit.__main__.main",
  "pre_commit.clientlib",
  "pre_commit.clientlib.CONFIG_HOOK_DICT",
  "pre_commit.clientlib.CONFIG_REPO_DICT",
  "pre_commit.clientlib.CONFIG_SCHEMA",
  "pre_commit.clientlib.DEFAULT_LANGUAGE_VERSION",
  "pre_commit.clientlib.FatalError",
  "pre_commit.clientlib.InvalidConfigError",
  "pre_commit.clientlib.InvalidManifestError",
  "pre_commit.clientlib.LOCAL",
  "pre_commit.clientlib.MANIFEST_HOOK_DICT",
  "pre_commit.clientlib.MANIFEST_SCHEMA",
  "pre_commit.clientlib.META",
  "pre_commit.clientlib.META_HOOK_DICT",
  "pre_commit.clientlib.MigrateShaToRev",
  "pre_commit.clientlib._entry",
  "pre_commit.clientlib._make_argparser",
  "pre_commit.clientlib._meta",
  "pre_commit.clientlib.all_languages",
  "pre_commit.clientlib.check_min_version",
  "pre_commit.clientlib.check_string_regex",
  "pre_commit.clientlib.check_type_tag",
  "pre_commit.clientlib.constants",
  "pre_commit.clientlib.load_config",
  "pre_commit.clientlib.load_manifest",
  "pre_commit.clientlib.logger",
  "pre_commit.clientlib.ordered_load_normalize_legacy_config",
  "pre_commit.clientlib.parse_version",
  "pre_commit.clientlib.validate_config_main",
  "pre_commit.clientlib.validate_manifest_main",
  "pre_commit.clientlib.warn_unknown_keys_repo",
  "pre_commit.clientlib.warn_unknown_keys_root",
  "pre_commit.clientlib.yaml_load",
  "pre_commit.color",
  "pre_commit.color.COLOR_CHOICES",
  "pre_commit.color.GREEN",
  "pre_commit.color.NORMAL",
  "pre_commit.color.RED",
  "pre_commit.color.SUBTLE",
  "pre_commit.color.TURQUOISE",
  "pre_commit.color.YELLOW",
  "pre_commit.color._enable",
  "pre_commit.color.format_color",
  "pre_commit.color.terminal_supports_color",
  "pre_commit.color.use_color",
  "pre_commit.commands",
  "pre_commit.commands.autoupdate",
  "pre_commit.commands.autoupdate.CalledProcessError",
  "pre_commit.commands.autoupdate.InvalidManifestError",
  "pre_commit.commands.autoupdate.LOCAL",
  "pre_commit.commands.autoupdate.META",
  "pre_commit.commands.autoupdate.REV_LINE_RE",
  "pre_commit.commands.autoupdate.RepositoryCannotBeUpdatedError",
  "pre_commit.commands.autoupdate.RevInfo",
  "pre_commit.commands.autoupdate.Store",
  "pre_commit.commands.autoupdate._check_hooks_still_exist_at_rev",
  "pre_commit.commands.autoupdate._original_lines",
  "pre_commit.commands.autoupdate._write_new_config",
  "pre_commit.commands.autoupdate.autoupdate",
  "pre_commit.commands.autoupdate.cmd_output",
  "pre_commit.commands.autoupdate.constants",
  "pre_commit.commands.autoupdate.git",
  "pre_commit.commands.autoupdate.load_config",
  "pre_commit.commands.autoupdate.load_manifest",
  "pre_commit.commands.autoupdate.migrate_config",
  "pre_commit.commands.autoupdate.output",
  "pre_commit.commands.autoupdate.tmpdir",
  "pre_commit.commands.autoupdate.yaml_dump",
  "pre_commit.commands.autoupdate.yaml_load",
  "pre_commit.commands.clean",
  "pre_commit.commands.clean.Store",
  "pre_commit.commands.clean.clean",
  "pre_commit.commands.clean.output",
  "pre_commit.commands.clean.rmtree",
  "pre_commit.commands.gc",
  "pre_commit.commands.gc.InvalidConfigError",
  "pre_commit.commands.gc.InvalidManifestError",
  "pre_commit.commands.gc.LOCAL",
  "pre_commit.commands.gc.META",
  "pre_commit.commands.gc.Store",
  "pre_commit.commands.gc._gc_repos",
  "pre_commit.commands.gc._mark_used_repos",
  "pre_commit.commands.gc.constants",
  "pre_commit.commands.gc.gc",
  "pre_commit.commands.gc.load_config",
  "pre_commit.commands.gc.load_manifest",
  "pre_commit.commands.gc.output",
  "pre_commit.commands.hook_impl",
  "pre_commit.commands.hook_impl.Store",
  "pre_commit.commands.hook_impl.Z40",
  "pre_commit.commands.hook_impl._EXPECTED_ARG_LENGTH_BY_HOOK",
  "pre_commit.commands.hook_impl._check_args_length",
  "pre_commit.commands.hook_impl._ns",
  "pre_commit.commands.hook_impl._pre_push_ns",
  "pre_commit.commands.hook_impl._rev_exists",
  "pre_commit.commands.hook_impl._run_legacy",
  "pre_commit.commands.hook_impl._run_ns",
  "pre_commit.commands.hook_impl._validate_config",
  "pre_commit.commands.hook_impl.envcontext",
  "pre_commit.commands.hook_impl.hook_impl",
  "pre_commit.commands.hook_impl.normalize_cmd",
  "pre_commit.commands.hook_impl.run",
  "pre_commit.commands.init_templatedir",
  "pre_commit.commands.init_templatedir.CalledProcessError",
  "pre_commit.commands.init_templatedir.Store",
  "pre_commit.commands.init_templatedir.cmd_output",
  "pre_commit.commands.init_templatedir.init_templatedir",
  "pre_commit.commands.init_templatedir.install",
  "pre_commit.commands.init_templatedir.logger",
  "pre_commit.commands.install_uninstall",
  "pre_commit.commands.install_uninstall.CURRENT_HASH",
  "pre_commit.commands.install_uninstall.POSIX_SEARCH_PATH",
  "pre_commit.commands.install_uninstall.PRIOR_HASHES",
  "pre_commit.commands.install_uninstall.SYS_EXE",
  "pre_commit.commands.install_uninstall.Store",
  "pre_commit.commands.install_uninstall.TEMPLATE_END",
  "pre_commit.commands.install_uninstall.TEMPLATE_START",
  "pre_commit.commands.install_uninstall._hook_paths",
  "pre_commit.commands.install_uninstall._install_hook_script",
  "pre_commit.commands.install_uninstall._uninstall_hook_script",
  "pre_commit.commands.install_uninstall.all_hooks",
  "pre_commit.commands.install_uninstall.git",
  "pre_commit.commands.install_uninstall.install",
  "pre_commit.commands.install_uninstall.install_hook_envs",
  "pre_commit.commands.install_uninstall.is_our_script",
  "pre_commit.commands.install_uninstall.load_config",
  "pre_commit.commands.install_uninstall.logger",
  "pre_commit.commands.install_uninstall.make_executable",
  "pre_commit.commands.install_uninstall.output",
  "pre_commit.commands.install_uninstall.resource_text",
  "pre_commit.commands.install_uninstall.shebang",
  "pre_commit.commands.install_uninstall.uninstall",
  "pre_commit.commands.migrate_config",
  "pre_commit.commands.migrate_config._indent",
  "pre_commit.commands.migrate_config._is_header_line",
  "pre_commit.commands.migrate_config._migrate_map",
  "pre_commit.commands.migrate_config._migrate_sha_to_rev",
  "pre_commit.commands.migrate_config.load_config",
  "pre_commit.commands.migrate_config.migrate_config",
  "pre_commit.commands.migrate_config.yaml_load",
  "pre_commit.commands.run",
  "pre_commit.commands.run.Classifier",
  "pre_commit.commands.run.EnvironT",
  "pre_commit.commands.run.Hook",
  "pre_commit.commands.run.NO_FILES",
  "pre_commit.commands.run.SKIPPED",
  "pre_commit.commands.run.Store",
  "pre_commit.commands.run._all_filenames",
  "pre_commit.commands.run._compute_cols",
  "pre_commit.commands.run._full_msg",
  "pre_commit.commands.run._get_skips",
  "pre_commit.commands.run._has_unmerged_paths",
  "pre_commit.commands.run._has_unstaged_config",
  "pre_commit.commands.run._len_cjk",
  "pre_commit.commands.run._run_hooks",
  "pre_commit.commands.run._run_single_hook",
  "pre_commit.commands.run._start_msg",
  "pre_commit.commands.run._subtle_line",
  "pre_commit.commands.run.all_hooks",
  "pre_commit.commands.run.cmd_output_b",
  "pre_commit.commands.run.color",
  "pre_commit.commands.run.filter_by_include_exclude",
  "pre_commit.commands.run.git",
  "pre_commit.commands.run.install_hook_envs",
  "pre_commit.commands.run.languages",
  "pre_commit.commands.run.load_config",
  "pre_commit.commands.run.logger",
  "pre_commit.commands.run.output",
  "pre_commit.commands.run.run",
  "pre_commit.commands.run.staged_files_only",
  "pre_commit.commands.sample_config",
  "pre_commit.commands.sample_config.SAMPLE_CONFIG",
  "pre_commit.commands.sample_config.sample_config",
  "pre_commit.commands.try_repo",
  "pre_commit.commands.try_repo.Store",
  "pre_commit.commands.try_repo._repo_ref",
  "pre_commit.commands.try_repo.cmd_output_b",
  "pre_commit.commands.try_repo.constants",
  "pre_commit.commands.try_repo.git",
  "pre_commit.commands.try_repo.load_manifest",
  "pre_commit.commands.try_repo.logger",
  "pre_commit.commands.try_repo.output",
  "pre_commit.commands.try_repo.run",
  "pre_commit.commands.try_repo.tmpdir",
  "pre_commit.commands.try_repo.try_repo",
  "pre_commit.commands.try_repo.xargs",
  "pre_commit.commands.try_repo.yaml_dump",
  "pre_commit.constants",
  "pre_commit.constants.CONFIG_FILE",
  "pre_commit.constants.DEFAULT",
  "pre_commit.constants.INSTALLED_STATE_VERSION",
  "pre_commit.constants.LOCAL_REPO_VERSION",
  "pre_commit.constants.MANIFEST_FILE",
  "pre_commit.constants.STAGES",
  "pre_commit.constants.VERSION",
  "pre_commit.envcontext",
  "pre_commit.envcontext.EnvironT",
  "pre_commit.envcontext.PatchesT",
  "pre_commit.envcontext.SubstitutionT",
  "pre_commit.envcontext.UNSET",
  "pre_commit.envcontext.ValueT",
  "pre_commit.envcontext.Var",
  "pre_commit.envcontext._Unset",
  "pre_commit.envcontext.envcontext",
  "pre_commit.envcontext.format_env",
  "pre_commit.error_handler",
  "pre_commit.error_handler.FatalError",
  "pre_commit.error_handler.Store",
  "pre_commit.error_handler._log_and_exit",
  "pre_commit.error_handler.constants",
  "pre_commit.error_handler.error_handler",
  "pre_commit.error_handler.force_bytes",
  "pre_commit.error_handler.output",
  "pre_commit.file_lock",
  "pre_commit.file_lock._locked",
  "pre_commit.file_lock._region",
  "pre_commit.file_lock.lock",
  "pre_commit.git",
  "pre_commit.git.EnvironT",
  "pre_commit.git.check_for_cygwin_mismatch",
  "pre_commit.git.cmd_output",
  "pre_commit.git.commit",
  "pre_commit.git.get_all_files",
  "pre_commit.git.get_changed_files",
  "pre_commit.git.get_conflicted_files",
  "pre_commit.git.get_git_dir",
  "pre_commit.git.get_remote_url",
  "pre_commit.git.get_root",
  "pre_commit.git.get_staged_files",
  "pre_commit.git.git_path",
  "pre_commit.git.has_core_hookpaths_set",
  "pre_commit.git.has_diff",
  "pre_commit.git.head_rev",
  "pre_commit.git.init_repo",
  "pre_commit.git.intent_to_add_files",
  "pre_commit.git.is_in_merge_conflict",
  "pre_commit.git.logger",
  "pre_commit.git.no_git_env",
  "pre_commit.git.parse_merge_msg_for_conflicts",
  "pre_commit.git.zsplit",
  "pre_commit.hook",
  "pre_commit.hook.Hook",
  "pre_commit.hook.Prefix",
  "pre_commit.hook._KEYS",
  "pre_commit.hook.logger",
  "pre_commit.languages",
  "pre_commit.languages.all",
  "pre_commit.languages.all.Hook",
  "pre_commit.languages.all.Language",
  "pre_commit.languages.all.Prefix",
  "pre_commit.languages.all.all_languages",
  "pre_commit.languages.all.conda",
  "pre_commit.languages.all.docker",
  "pre_commit.languages.all.docker_image",
  "pre_commit.languages.all.fail",
  "pre_commit.languages.all.golang",
  "pre_commit.languages.all.languages",
  "pre_commit.languages.all.node",
  "pre_commit.languages.all.perl",
  "pre_commit.languages.all.pygrep",
  "pre_commit.languages.all.python",
  "pre_commit.languages.all.ruby",
  "pre_commit.languages.all.rust",
  "pre_commit.languages.all.script",
  "pre_commit.languages.all.swift",
  "pre_commit.languages.all.system",
  "pre_commit.languages.conda",
  "pre_commit.languages.conda.ENVIRONMENT_DIR",
  "pre_commit.languages.conda.Hook",
  "pre_commit.languages.conda.PatchesT",
  "pre_commit.languages.conda.Prefix",
  "pre_commit.languages.conda.SubstitutionT",
  "pre_commit.languages.conda.UNSET",
  "pre_commit.languages.conda.Var",
  "pre_commit.languages.conda.clean_path_on_failure",
  "pre_commit.languages.conda.cmd_output_b",
  "pre_commit.languages.conda.envcontext",
  "pre_commit.languages.conda.get_default_version",
  "pre_commit.languages.conda.get_env_patch",
  "pre_commit.languages.conda.healthy",
  "pre_commit.languages.conda.helpers",
  "pre_commit.languages.conda.in_env",
  "pre_commit.languages.conda.install_environment",
  "pre_commit.languages.conda.run_hook",
  "pre_commit.languages.docker",
  "pre_commit.languages.docker.CalledProcessError",
  "pre_commit.languages.docker.ENVIRONMENT_DIR",
  "pre_commit.languages.docker.Hook",
  "pre_commit.languages.docker.PRE_COMMIT_LABEL",
  "pre_commit.languages.docker.Prefix",
  "pre_commit.languages.docker.assert_docker_available",
  "pre_commit.languages.docker.build_docker_image",
  "pre_commit.languages.docker.clean_path_on_failure",
  "pre_commit.languages.docker.cmd_output_b",
  "pre_commit.languages.docker.constants",
  "pre_commit.languages.docker.docker_cmd",
  "pre_commit.languages.docker.docker_is_running",
  "pre_commit.languages.docker.docker_tag",
  "pre_commit.languages.docker.get_default_version",
  "pre_commit.languages.docker.get_docker_user",
  "pre_commit.languages.docker.healthy",
  "pre_commit.languages.docker.helpers",
  "pre_commit.languages.docker.install_environment",
  "pre_commit.languages.docker.md5",
  "pre_commit.languages.docker.run_hook",
  "pre_commit.languages.docker_image",
  "pre_commit.languages.docker_image.ENVIRONMENT_DIR",
  "pre_commit.languages.docker_image.Hook",
  "pre_commit.languages.docker_image.assert_docker_available",
  "pre_commit.languages.docker_image.docker_cmd",
  "pre_commit.languages.docker_image.get_default_version",
  "pre_commit.languages.docker_image.healthy",
  "pre_commit.languages.docker_image.helpers",
  "pre_commit.languages.docker_image.install_environment",
  "pre_commit.languages.docker_image.run_hook",
  "pre_commit.languages.fail",
  "pre_commit.languages.fail.ENVIRONMENT_DIR",
  "pre_commit.languages.fail.Hook",
  "pre_commit.languages.fail.get_default_version",
  "pre_commit.languages.fail.healthy",
  "pre_commit.languages.fail.helpers",
  "pre_commit.languages.fail.install_environment",
  "pre_commit.languages.fail.run_hook",
  "pre_commit.languages.golang",
  "pre_commit.languages.golang.ENVIRONMENT_DIR",
  "pre_commit.languages.golang.Hook",
  "pre_commit.languages.golang.PatchesT",
  "pre_commit.languages.golang.Prefix",
  "pre_commit.languages.golang.Var",
  "pre_commit.languages.golang.clean_path_on_failure",
  "pre_commit.languages.golang.cmd_output",
  "pre_commit.languages.golang.constants",
  "pre_commit.languages.golang.envcontext",
  "pre_commit.languages.golang.get_default_version",
  "pre_commit.languages.golang.get_env_patch",
  "pre_commit.languages.golang.git",
  "pre_commit.languages.golang.guess_go_dir",
  "pre_commit.languages.golang.healthy",
  "pre_commit.languages.golang.helpers",
  "pre_commit.languages.golang.in_env",
  "pre_commit.languages.golang.install_environment",
  "pre_commit.languages.golang.rmtree",
  "pre_commit.languages.golang.run_hook",
  "pre_commit.languages.helpers",
  "pre_commit.languages.helpers.FIXED_RANDOM_SEED",
  "pre_commit.languages.helpers.Hook",
  "pre_commit.languages.helpers.Prefix",
  "pre_commit.languages.helpers._shuffled",
  "pre_commit.languages.helpers.assert_no_additional_deps",
  "pre_commit.languages.helpers.assert_version_default",
  "pre_commit.languages.helpers.basic_get_default_version",
  "pre_commit.languages.helpers.basic_healthy",
  "pre_commit.languages.helpers.cmd_output_b",
  "pre_commit.languages.helpers.constants",
  "pre_commit.languages.helpers.environment_dir",
  "pre_commit.languages.helpers.no_install",
  "pre_commit.languages.helpers.run_setup_cmd",
  "pre_commit.languages.helpers.run_xargs",
  "pre_commit.languages.helpers.target_concurrency",
  "pre_commit.languages.helpers.xargs",
  "pre_commit.languages.node",
  "pre_commit.languages.node.ENVIRONMENT_DIR",
  "pre_commit.languages.node.Hook",
  "pre_commit.languages.node.PatchesT",
  "pre_commit.languages.node.Prefix",
  "pre_commit.languages.node.UNSET",
  "pre_commit.languages.node.Var",
  "pre_commit.languages.node._envdir",
  "pre_commit.languages.node.bin_dir",
  "pre_commit.languages.node.clean_path_on_failure",
  "pre_commit.languages.node.cmd_output",
  "pre_commit.languages.node.constants",
  "pre_commit.languages.node.envcontext",
  "pre_commit.languages.node.get_default_version",
  "pre_commit.languages.node.get_env_patch",
  "pre_commit.languages.node.healthy",
  "pre_commit.languages.node.helpers",
  "pre_commit.languages.node.in_env",
  "pre_commit.languages.node.install_environment",
  "pre_commit.languages.node.parse_shebang",
  "pre_commit.languages.node.run_hook",
  "pre_commit.languages.perl",
  "pre_commit.languages.perl.ENVIRONMENT_DIR",
  "pre_commit.languages.perl.Hook",
  "pre_commit.languages.perl.PatchesT",
  "pre_commit.languages.perl.Prefix",
  "pre_commit.languages.perl.Var",
  "pre_commit.languages.perl._envdir",
  "pre_commit.languages.perl.clean_path_on_failure",
  "pre_commit.languages.perl.envcontext",
  "pre_commit.languages.perl.get_default_version",
  "pre_commit.languages.perl.get_env_patch",
  "pre_commit.languages.perl.healthy",
  "pre_commit.languages.perl.helpers",
  "pre_commit.languages.perl.in_env",
  "pre_commit.languages.perl.install_environment",
  "pre_commit.languages.perl.run_hook",
  "pre_commit.languages.pygrep",
  "pre_commit.languages.pygrep.ENVIRONMENT_DIR",
  "pre_commit.languages.pygrep.Hook",
  "pre_commit.languages.pygrep._process_filename_at_once",
  "pre_commit.languages.pygrep._process_filename_by_line",
  "pre_commit.languages.pygrep.get_default_version",
  "pre_commit.languages.pygrep.healthy",
  "pre_commit.languages.pygrep.helpers",
  "pre_commit.languages.pygrep.install_environment",
  "pre_commit.languages.pygrep.main",
  "pre_commit.languages.pygrep.output",
  "pre_commit.languages.pygrep.run_hook",
  "pre_commit.languages.pygrep.xargs",
  "pre_commit.languages.python",
  "pre_commit.languages.python.CalledProcessError",
  "pre_commit.languages.python.ENVIRONMENT_DIR",
  "pre_commit.languages.python.Hook",
  "pre_commit.languages.python.PatchesT",
  "pre_commit.languages.python.Prefix",
  "pre_commit.languages.python.UNSET",
  "pre_commit.languages.python.Var",
  "pre_commit.languages.python._find_by_py_launcher",
  "pre_commit.languages.python._find_by_sys_executable",
  "pre_commit.languages.python._read_pyvenv_cfg",
  "pre_commit.languages.python._sys_executable_matches",
  "pre_commit.languages.python._version_info",
  "pre_commit.languages.python.bin_dir",
  "pre_commit.languages.python.clean_path_on_failure",
  "pre_commit.languages.python.cmd_output",
  "pre_commit.languages.python.constants",
  "pre_commit.languages.python.envcontext",
  "pre_commit.languages.python.find_executable",
  "pre_commit.languages.python.get_default_version",
  "pre_commit.languages.python.get_env_patch",
  "pre_commit.languages.python.healthy",
  "pre_commit.languages.python.helpers",
  "pre_commit.languages.python.in_env",
  "pre_commit.languages.python.install_environment",
  "pre_commit.languages.python.norm_version",
  "pre_commit.languages.python.run_hook",
  "pre_commit.languages.ruby",
  "pre_commit.languages.ruby.CalledProcessError",
  "pre_commit.languages.ruby.ENVIRONMENT_DIR",
  "pre_commit.languages.ruby.Hook",
  "pre_commit.languages.ruby.PatchesT",
  "pre_commit.languages.ruby.Prefix",
  "pre_commit.languages.ruby.UNSET",
  "pre_commit.languages.ruby.Var",
  "pre_commit.languages.ruby._extract_resource",
  "pre_commit.languages.ruby._install_rbenv",
  "pre_commit.languages.ruby._install_ruby",
  "pre_commit.languages.ruby.clean_path_on_failure",
  "pre_commit.languages.ruby.constants",
  "pre_commit.languages.ruby.envcontext",
  "pre_commit.languages.ruby.get_default_version",
  "pre_commit.languages.ruby.get_env_patch",
  "pre_commit.languages.ruby.healthy",
  "pre_commit.languages.ruby.helpers",
  "pre_commit.languages.ruby.in_env",
  "pre_commit.languages.ruby.install_environment",
  "pre_commit.languages.ruby.parse_shebang",
  "pre_commit.languages.ruby.resource_bytesio",
  "pre_commit.languages.ruby.run_hook",
  "pre_commit.languages.rust",
  "pre_commit.languages.rust.ENVIRONMENT_DIR",
  "pre_commit.languages.rust.Hook",
  "pre_commit.languages.rust.PatchesT",
  "pre_commit.languages.rust.Prefix",
  "pre_commit.languages.rust.Var",
  "pre_commit.languages.rust._add_dependencies",
  "pre_commit.languages.rust.clean_path_on_failure",
  "pre_commit.languages.rust.cmd_output_b",
  "pre_commit.languages.rust.constants",
  "pre_commit.languages.rust.envcontext",
  "pre_commit.languages.rust.get_default_version",
  "pre_commit.languages.rust.get_env_patch",
  "pre_commit.languages.rust.healthy",
  "pre_commit.languages.rust.helpers",
  "pre_commit.languages.rust.in_env",
  "pre_commit.languages.rust.install_environment",
  "pre_commit.languages.rust.run_hook",
  "pre_commit.languages.script",
  "pre_commit.languages.script.ENVIRONMENT_DIR",
  "pre_commit.languages.script.Hook",
  "pre_commit.languages.script.get_default_version",
  "pre_commit.languages.script.healthy",
  "pre_commit.languages.script.helpers",
  "pre_commit.languages.script.install_environment",
  "pre_commit.languages.script.run_hook",
  "pre_commit.languages.swift",
  "pre_commit.languages.swift.BUILD_CONFIG",
  "pre_commit.languages.swift.BUILD_DIR",
  "pre_commit.languages.swift.ENVIRONMENT_DIR",
  "pre_commit.languages.swift.Hook",
  "pre_commit.languages.swift.PatchesT",
  "pre_commit.languages.swift.Prefix",
  "pre_commit.languages.swift.Var",
  "pre_commit.languages.swift.clean_path_on_failure",
  "pre_commit.languages.swift.cmd_output_b",
  "pre_commit.languages.swift.constants",
  "pre_commit.languages.swift.envcontext",
  "pre_commit.languages.swift.get_default_version",
  "pre_commit.languages.swift.get_env_patch",
  "pre_commit.languages.swift.healthy",
  "pre_commit.languages.swift.helpers",
  "pre_commit.languages.swift.in_env",
  "pre_commit.languages.swift.install_environment",
  "pre_commit.languages.swift.run_hook",
  "pre_commit.languages.system",
  "pre_commit.languages.system.ENVIRONMENT_DIR",
  "pre_commit.languages.system.Hook",
  "pre_commit.languages.system.get_default_version",
  "pre_commit.languages.system.healthy",
  "pre_commit.languages.system.helpers",
  "pre_commit.languages.system.install_environment",
  "pre_commit.languages.system.run_hook",
  "pre_commit.logging_handler",
  "pre_commit.logging_handler.LOG_LEVEL_COLORS",
  "pre_commit.logging_handler.LoggingHandler",
  "pre_commit.logging_handler.color",
  "pre_commit.logging_handler.logger",
  "pre_commit.logging_handler.logging_handler",
  "pre_commit.logging_handler.output",
  "pre_commit.main",
  "pre_commit.main.AppendReplaceDefault",
  "pre_commit.main.COMMANDS_NO_GIT",
  "pre_commit.main.CalledProcessError",
  "pre_commit.main.FatalError",
  "pre_commit.main.Store",
  "pre_commit.main._add_color_option",
  "pre_commit.main._add_config_option",
  "pre_commit.main._add_hook_type_option",
  "pre_commit.main._add_run_options",
  "pre_commit.main._adjust_args_and_chdir",
  "pre_commit.main.autoupdate",
  "pre_commit.main.clean",
  "pre_commit.main.color",
  "pre_commit.main.constants",
  "pre_commit.main.error_handler",
  "pre_commit.main.gc",
  "pre_commit.main.git",
  "pre_commit.main.hook_impl",
  "pre_commit.main.init_templatedir",
  "pre_commit.main.install",
  "pre_commit.main.logger",
  "pre_commit.main.logging_handler",
  "pre_commit.main.main",
  "pre_commit.main.migrate_config",
  "pre_commit.main.run",
  "pre_commit.main.sample_config",
  "pre_commit.main.try_repo",
  "pre_commit.main.uninstall",
  "pre_commit.make_archives",
  "pre_commit.make_archives.REPOS",
  "pre_commit.make_archives.cmd_output_b",
  "pre_commit.make_archives.main",
  "pre_commit.make_archives.make_archive",
  "pre_commit.make_archives.output",
  "pre_commit.make_archives.rmtree",
  "pre_commit.make_archives.tmpdir",
  "pre_commit.meta_hooks",
  "pre_commit.meta_hooks.check_hooks_apply",
  "pre_commit.meta_hooks.check_hooks_apply.Classifier",
  "pre_commit.meta_hooks.check_hooks_apply.Store",
  "pre_commit.meta_hooks.check_hooks_apply.all_hooks",
  "pre_commit.meta_hooks.check_hooks_apply.check_all_hooks_match_files",
  "pre_commit.meta_hooks.check_hooks_apply.constants",
  "pre_commit.meta_hooks.check_hooks_apply.git",
  "pre_commit.meta_hooks.check_hooks_apply.load_config",
  "pre_commit.meta_hooks.check_hooks_apply.main",
  "pre_commit.meta_hooks.check_useless_excludes",
  "pre_commit.meta_hooks.check_useless_excludes.Classifier",
  "pre_commit.meta_hooks.check_useless_excludes.MANIFEST_HOOK_DICT",
  "pre_commit.meta_hooks.check_useless_excludes.check_useless_excludes",
  "pre_commit.meta_hooks.check_useless_excludes.constants",
  "pre_commit.meta_hooks.check_useless_excludes.exclude_matches_any",
  "pre_commit.meta_hooks.check_useless_excludes.git",
  "pre_commit.meta_hooks.check_useless_excludes.load_config",
  "pre_commit.meta_hooks.check_useless_excludes.main",
  "pre_commit.meta_hooks.identity",
  "pre_commit.meta_hooks.identity.main",
  "pre_commit.meta_hooks.identity.output",
  "pre_commit.output",
  "pre_commit.output.write",
  "pre_commit.parse_shebang",
  "pre_commit.parse_shebang.ExecutableNotFoundError",
  "pre_commit.parse_shebang.find_executable",
  "pre_commit.parse_shebang.normalize_cmd",
  "pre_commit.parse_shebang.normexe",
  "pre_commit.parse_shebang.parse_filename",
  "pre_commit.prefix",
  "pre_commit.prefix.Prefix",
  "pre_commit.repository",
  "pre_commit.repository.Hook",
  "pre_commit.repository.LOCAL",
  "pre_commit.repository.META",
  "pre_commit.repository.Prefix",
  "pre_commit.repository.Store",
  "pre_commit.repository._cloned_repository_hooks",
  "pre_commit.repository._hook",
  "pre_commit.repository._non_cloned_repository_hooks",
  "pre_commit.repository._read_state",
  "pre_commit.repository._repository_hooks",
  "pre_commit.repository._state",
  "pre_commit.repository._write_state",
  "pre_commit.repository.all_hooks",
  "pre_commit.repository.constants",
  "pre_commit.repository.environment_dir",
  "pre_commit.repository.install_hook_envs",
  "pre_commit.repository.languages",
  "pre_commit.repository.load_manifest",
  "pre_commit.repository.logger",
  "pre_commit.repository.parse_version",
  "pre_commit.repository.rmtree",
  "pre_commit.resources",
  "pre_commit.resources.empty_template_setup",
  "pre_commit.staged_files_only",
  "pre_commit.staged_files_only.CalledProcessError",
  "pre_commit.staged_files_only._git_apply",
  "pre_commit.staged_files_only._intent_to_add_cleared",
  "pre_commit.staged_files_only._unstaged_changes_cleared",
  "pre_commit.staged_files_only.cmd_output",
  "pre_commit.staged_files_only.git",
  "pre_commit.staged_files_only.logger",
  "pre_commit.staged_files_only.staged_files_only",
  "pre_commit.staged_files_only.xargs",
  "pre_commit.store",
  "pre_commit.store.CalledProcessError",
  "pre_commit.store.Store",
  "pre_commit.store._get_default_directory",
  "pre_commit.store.clean_path_on_failure",
  "pre_commit.store.cmd_output_b",
  "pre_commit.store.constants",
  "pre_commit.store.file_lock",
  "pre_commit.store.git",
  "pre_commit.store.logger",
  "pre_commit.store.resource_text",
  "pre_commit.store.rmtree",
  "pre_commit.util",
  "pre_commit.util.CalledProcessError",
  "pre_commit.util.Dumper",
  "pre_commit.util.EnvironT",
  "pre_commit.util.Loader",
  "pre_commit.util.Pty",
  "pre_commit.util._oserror_to_output",
  "pre_commit.util._setdefault_kwargs",
  "pre_commit.util.clean_path_on_failure",
  "pre_commit.util.cmd_output",
  "pre_commit.util.cmd_output_b",
  "pre_commit.util.cmd_output_p",
  "pre_commit.util.force_bytes",
  "pre_commit.util.make_executable",
  "pre_commit.util.parse_shebang",
  "pre_commit.util.parse_version",
  "pre_commit.util.resource_bytesio",
  "pre_commit.util.resource_text",
  "pre_commit.util.rmtree",
  "pre_commit.util.tmpdir",
  "pre_commit.util.yaml_dump",
  "pre_commit.util.yaml_load",
  "pre_commit.xargs",
  "pre_commit.xargs.ArgumentTooLongError",
  "pre_commit.xargs.EnvironT",
  "pre_commit.xargs.TArg",
  "pre_commit.xargs.TRet",
  "pre_commit.xargs._command_length",
  "pre_commit.xargs._environ_size",
  "pre_commit.xargs._get_platform_max_length",
  "pre_commit.xargs._thread_mapper",
  "pre_commit.xargs.cmd_output_b",
  "pre_commit.xargs.cmd_output_p",
  "pre_commit.xargs.parse_shebang",
  "pre_commit.xargs.partition",
  "pre_commit.xargs.xargs"
 ]
}