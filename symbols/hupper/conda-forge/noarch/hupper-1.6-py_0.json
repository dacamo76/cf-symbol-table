{
 "errors": {},
 "symbols": [
  "hupper.cli",
  "hupper.cli.main",
  "hupper.compat",
  "hupper.compat.PY2",
  "hupper.compat.WIN",
  "hupper.compat.get_py_path",
  "hupper.compat.get_site_packages",
  "hupper.compat.subprocess_wait_with_timeout",
  "hupper.compat.with_metaclass",
  "hupper.get_reloader",
  "hupper.interfaces",
  "hupper.interfaces.IFileMonitor",
  "hupper.interfaces.ILogger",
  "hupper.interfaces.IReloaderProxy",
  "hupper.ipc",
  "hupper.ipc.Connection",
  "hupper.ipc.Pipe",
  "hupper.ipc.ProcessGroup",
  "hupper.ipc._pipe",
  "hupper.ipc.args_from_interpreter_flags",
  "hupper.ipc.close_fd",
  "hupper.ipc.get_command_line",
  "hupper.ipc.get_handle",
  "hupper.ipc.get_preparation_data",
  "hupper.ipc.kill",
  "hupper.ipc.open_handle",
  "hupper.ipc.prepare",
  "hupper.ipc.restore_termios",
  "hupper.ipc.set_inheritable",
  "hupper.ipc.snapshot_termios",
  "hupper.ipc.spawn",
  "hupper.ipc.wait",
  "hupper.is_active",
  "hupper.is_watchdog_supported",
  "hupper.is_watchman_supported",
  "hupper.logger",
  "hupper.logger.DefaultLogger",
  "hupper.logger.LogLevel",
  "hupper.polling",
  "hupper.polling.PollingFileMonitor",
  "hupper.polling.get_mtime",
  "hupper.reloader",
  "hupper.reloader.FileMonitorProxy",
  "hupper.reloader.Reloader",
  "hupper.reloader.find_default_monitor_factory",
  "hupper.reloader.start_reloader",
  "hupper.start_reloader",
  "hupper.utils",
  "hupper.utils.Sentinel",
  "hupper.utils.default",
  "hupper.utils.get_watchman_sockpath",
  "hupper.utils.is_watchdog_supported",
  "hupper.utils.is_watchman_supported",
  "hupper.utils.resolve_spec",
  "hupper.watchdog",
  "hupper.watchdog.WatchdogFileMonitor",
  "hupper.watchman",
  "hupper.watchman.WatchmanFileMonitor",
  "hupper.winapi",
  "hupper.winapi.AssignProcessToJobObject",
  "hupper.winapi.BOOL",
  "hupper.winapi.CheckError",
  "hupper.winapi.CloseHandle",
  "hupper.winapi.CreateJobObject",
  "hupper.winapi.DELETE",
  "hupper.winapi.DUPLICATE_SAME_ACCESS",
  "hupper.winapi.DWORD",
  "hupper.winapi.DuplicateHandle",
  "hupper.winapi.GetCurrentProcess",
  "hupper.winapi.HANDLE",
  "hupper.winapi.HANDLE_FLAG_INHERIT",
  "hupper.winapi.HANDLE_FLAG_PROTECT_FROM_CLOSE",
  "hupper.winapi.Handle",
  "hupper.winapi.IO_COUNTERS",
  "hupper.winapi.JOBOBJECT_BASIC_LIMIT_INFORMATION",
  "hupper.winapi.JOBOBJECT_EXTENDED_LIMIT_INFORMATION",
  "hupper.winapi.JOB_OBJECT_LIMIT_KILL_ON_JOB_CLOSE",
  "hupper.winapi.JobObjectAssociateCompletionPortInformation",
  "hupper.winapi.JobObjectBasicLimitInformation",
  "hupper.winapi.JobObjectBasicUIRestrictions",
  "hupper.winapi.JobObjectEndOfJobTimeInformation",
  "hupper.winapi.JobObjectExtendedLimitInformation",
  "hupper.winapi.JobObjectGroupInformation",
  "hupper.winapi.JobObjectSecurityLimitInformation",
  "hupper.winapi.LARGE_INTEGER",
  "hupper.winapi.OpenProcess",
  "hupper.winapi.PROCESS_ALL_ACCESS",
  "hupper.winapi.PROCESS_CREATE_PROCESS",
  "hupper.winapi.PROCESS_CREATE_THREAD",
  "hupper.winapi.PROCESS_DUP_HANDLE",
  "hupper.winapi.PROCESS_QUERY_INFORMATION",
  "hupper.winapi.PROCESS_QUERY_LIMITED_INFORMATION",
  "hupper.winapi.PROCESS_SET_INFORMATION",
  "hupper.winapi.PROCESS_SET_QUOTA",
  "hupper.winapi.PROCESS_SUSPEND_RESUME",
  "hupper.winapi.PROCESS_TERMINATE",
  "hupper.winapi.PROCESS_VM_OPERATION",
  "hupper.winapi.PROCESS_VM_READ",
  "hupper.winapi.PROCESS_VM_WRITE",
  "hupper.winapi.READ_CONTROL",
  "hupper.winapi.SIZE_T",
  "hupper.winapi.STANDARD_RIGHTS_REQUIRED",
  "hupper.winapi.SYNCHRONIZE",
  "hupper.winapi.SetHandleInformation",
  "hupper.winapi.SetInformationJobObject",
  "hupper.winapi.ULONGLONG",
  "hupper.winapi.ULONG_PTR",
  "hupper.winapi.WRITE_DAC",
  "hupper.winapi.WRITE_OWNER",
  "hupper.winapi.kernel32",
  "hupper.worker",
  "hupper.worker.ReloaderProxy",
  "hupper.worker.WatchForParentShutdown",
  "hupper.worker.WatchSysModules",
  "hupper.worker.Worker",
  "hupper.worker.expand_source_paths",
  "hupper.worker.get_reloader",
  "hupper.worker.get_system_paths",
  "hupper.worker.is_active",
  "hupper.worker.iter_module_paths",
  "hupper.worker.worker_main"
 ]
}