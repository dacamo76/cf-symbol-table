{
 "errors": {},
 "symbols": [
  "monkeytype.Config",
  "monkeytype.__main__",
  "monkeytype.__main__.entry_point_main",
  "monkeytype.__version__",
  "monkeytype.cli",
  "monkeytype.cli.CallTrace",
  "monkeytype.cli.Config",
  "monkeytype.cli.ExistingAnnotationStrategy",
  "monkeytype.cli.HandlerError",
  "monkeytype.cli.MonkeyTypeError",
  "monkeytype.cli.NoOpRewriter",
  "monkeytype.cli.Stub",
  "monkeytype.cli.apply_stub_handler",
  "monkeytype.cli.build_module_stubs_from_traces",
  "monkeytype.cli.complain_about_no_traces",
  "monkeytype.cli.display_sample_count",
  "monkeytype.cli.entry_point_main",
  "monkeytype.cli.get_diff",
  "monkeytype.cli.get_monkeytype_config",
  "monkeytype.cli.get_name_in_module",
  "monkeytype.cli.get_stub",
  "monkeytype.cli.list_modules_handler",
  "monkeytype.cli.main",
  "monkeytype.cli.module_path",
  "monkeytype.cli.print_stub_handler",
  "monkeytype.cli.run_handler",
  "monkeytype.cli.trace",
  "monkeytype.cli.update_args_from_config",
  "monkeytype.compat",
  "monkeytype.compat.is_any",
  "monkeytype.compat.is_forward_ref",
  "monkeytype.compat.is_generic",
  "monkeytype.compat.is_union",
  "monkeytype.compat.make_forward_ref",
  "monkeytype.compat.name_of_generic",
  "monkeytype.compat.qualname_of_generic",
  "monkeytype.compat.repr_forward_ref",
  "monkeytype.config.CallTraceLogger",
  "monkeytype.config.CallTraceStore",
  "monkeytype.config.CodeFilter",
  "monkeytype.config.Config",
  "monkeytype.config.DEFAULT_REWRITER",
  "monkeytype.config.DefaultConfig",
  "monkeytype.config.LIB_PATHS",
  "monkeytype.config.NoOpRewriter",
  "monkeytype.config.SQLiteStore",
  "monkeytype.config.TypeRewriter",
  "monkeytype.config._startswith",
  "monkeytype.config.default_code_filter",
  "monkeytype.config.get_default_config",
  "monkeytype.config.lib_paths",
  "monkeytype.config.venv_real_prefix",
  "monkeytype.db",
  "monkeytype.db.base",
  "monkeytype.db.base.CallTrace",
  "monkeytype.db.base.CallTraceStore",
  "monkeytype.db.base.CallTraceThunk",
  "monkeytype.db.sqlite",
  "monkeytype.db.sqlite.CallTrace",
  "monkeytype.db.sqlite.CallTraceRow",
  "monkeytype.db.sqlite.CallTraceStore",
  "monkeytype.db.sqlite.CallTraceThunk",
  "monkeytype.db.sqlite.DEFAULT_TABLE",
  "monkeytype.db.sqlite.ParameterizedQuery",
  "monkeytype.db.sqlite.QueryValue",
  "monkeytype.db.sqlite.SQLiteStore",
  "monkeytype.db.sqlite.create_call_trace_table",
  "monkeytype.db.sqlite.logger",
  "monkeytype.db.sqlite.make_query",
  "monkeytype.db.sqlite.serialize_traces",
  "monkeytype.encoding",
  "monkeytype.encoding.CallTrace",
  "monkeytype.encoding.CallTraceRow",
  "monkeytype.encoding.CallTraceThunk",
  "monkeytype.encoding.InvalidTypeError",
  "monkeytype.encoding.NoneType",
  "monkeytype.encoding.NotImplementedType",
  "monkeytype.encoding.TypeDecoder",
  "monkeytype.encoding.TypeDict",
  "monkeytype.encoding.TypeEncoder",
  "monkeytype.encoding._HIDDEN_BUILTIN_TYPES",
  "monkeytype.encoding.arg_types_from_json",
  "monkeytype.encoding.arg_types_to_json",
  "monkeytype.encoding.get_func_in_module",
  "monkeytype.encoding.get_name_in_module",
  "monkeytype.encoding.is_any",
  "monkeytype.encoding.is_generic",
  "monkeytype.encoding.is_typed_dict",
  "monkeytype.encoding.is_union",
  "monkeytype.encoding.logger",
  "monkeytype.encoding.mappingproxy",
  "monkeytype.encoding.maybe_decode_type",
  "monkeytype.encoding.maybe_encode_type",
  "monkeytype.encoding.qualname_of_generic",
  "monkeytype.encoding.serialize_traces",
  "monkeytype.encoding.type_from_dict",
  "monkeytype.encoding.type_from_json",
  "monkeytype.encoding.type_to_dict",
  "monkeytype.encoding.type_to_json",
  "monkeytype.encoding.typed_dict_from_dict",
  "monkeytype.encoding.typed_dict_to_dict",
  "monkeytype.exceptions",
  "monkeytype.exceptions.InvalidTypeError",
  "monkeytype.exceptions.MonkeyTypeError",
  "monkeytype.exceptions.NameLookupError",
  "monkeytype.get_default_config",
  "monkeytype.stubs",
  "monkeytype.stubs.AttributeStub",
  "monkeytype.stubs.CallTrace",
  "monkeytype.stubs.ClassStub",
  "monkeytype.stubs.ExistingAnnotationStrategy",
  "monkeytype.stubs.FunctionDefinition",
  "monkeytype.stubs.FunctionKind",
  "monkeytype.stubs.FunctionStub",
  "monkeytype.stubs.ImportBlockStub",
  "monkeytype.stubs.ImportMap",
  "monkeytype.stubs.ModuleStub",
  "monkeytype.stubs.NoOpRewriter",
  "monkeytype.stubs.NoneType",
  "monkeytype.stubs.Stub",
  "monkeytype.stubs.TypeRewriter",
  "monkeytype.stubs._get_import_for_qualname",
  "monkeytype.stubs._get_optional_elem",
  "monkeytype.stubs._is_optional",
  "monkeytype.stubs.build_module_stubs",
  "monkeytype.stubs.build_module_stubs_from_traces",
  "monkeytype.stubs.cached_property",
  "monkeytype.stubs.get_imports_for_annotation",
  "monkeytype.stubs.get_imports_for_signature",
  "monkeytype.stubs.get_name_in_module",
  "monkeytype.stubs.get_typed_dict_class_name",
  "monkeytype.stubs.get_updated_definition",
  "monkeytype.stubs.is_anonymous_typed_dict",
  "monkeytype.stubs.is_any",
  "monkeytype.stubs.is_forward_ref",
  "monkeytype.stubs.is_generic",
  "monkeytype.stubs.is_union",
  "monkeytype.stubs.logger",
  "monkeytype.stubs.make_forward_ref",
  "monkeytype.stubs.make_generator",
  "monkeytype.stubs.make_iterator",
  "monkeytype.stubs.qualname_of_generic",
  "monkeytype.stubs.render_annotation",
  "monkeytype.stubs.render_parameter",
  "monkeytype.stubs.render_signature",
  "monkeytype.stubs.shrink_traced_types",
  "monkeytype.stubs.shrink_types",
  "monkeytype.stubs.update_signature_args",
  "monkeytype.stubs.update_signature_return",
  "monkeytype.trace",
  "monkeytype.trace_calls",
  "monkeytype.tracing",
  "monkeytype.tracing.CallTrace",
  "monkeytype.tracing.CallTraceLogger",
  "monkeytype.tracing.CodeFilter",
  "monkeytype.tracing.EVENT_CALL",
  "monkeytype.tracing.EVENT_RETURN",
  "monkeytype.tracing.RETURN_VALUE_OPCODE",
  "monkeytype.tracing.SUPPORTED_EVENTS",
  "monkeytype.tracing.YIELD_VALUE_OPCODE",
  "monkeytype.tracing._has_code",
  "monkeytype.tracing.cached_property",
  "monkeytype.tracing.get_func",
  "monkeytype.tracing.get_func_fqname",
  "monkeytype.tracing.get_type",
  "monkeytype.tracing.trace_calls",
  "monkeytype.typing",
  "monkeytype.typing.ChainedRewriter",
  "monkeytype.typing.DEFAULT_REWRITER",
  "monkeytype.typing.DUMMY_TYPED_DICT_NAME",
  "monkeytype.typing.NoOpRewriter",
  "monkeytype.typing.NoneType",
  "monkeytype.typing.NotImplementedType",
  "monkeytype.typing.RemoveEmptyContainers",
  "monkeytype.typing.RewriteConfigDict",
  "monkeytype.typing.RewriteGenerator",
  "monkeytype.typing.RewriteLargeUnion",
  "monkeytype.typing.TypeRewriter",
  "monkeytype.typing._BUILTIN_CALLABLE_TYPES",
  "monkeytype.typing.__are_typed_dict_types_equal",
  "monkeytype.typing._get_union_type_str",
  "monkeytype.typing.get_dict_type",
  "monkeytype.typing.get_type",
  "monkeytype.typing.is_anonymous_typed_dict",
  "monkeytype.typing.is_any",
  "monkeytype.typing.is_generic",
  "monkeytype.typing.is_typed_dict",
  "monkeytype.typing.is_union",
  "monkeytype.typing.make_generator",
  "monkeytype.typing.make_iterator",
  "monkeytype.typing.mappingproxy",
  "monkeytype.typing.name_of_generic",
  "monkeytype.typing.shrink_typed_dict_types",
  "monkeytype.typing.shrink_types",
  "monkeytype.typing.typed_dict_to_dict",
  "monkeytype.util",
  "monkeytype.util.InvalidTypeError",
  "monkeytype.util.NameLookupError",
  "monkeytype.util.cached_property",
  "monkeytype.util.get_func_fqname",
  "monkeytype.util.get_func_in_module",
  "monkeytype.util.get_name_in_module"
 ]
}