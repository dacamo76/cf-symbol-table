{
 "errors": {},
 "symbols": [
  "numpoly.FeatureNotSupported",
  "numpoly.INDETERMINANT_DEFAULTS",
  "numpoly.__all__",
  "numpoly.__version__",
  "numpoly.abs",
  "numpoly.add",
  "numpoly.align",
  "numpoly.align.align_dtype",
  "numpoly.align.align_exponents",
  "numpoly.align.align_indeterminants",
  "numpoly.align.align_polynomials",
  "numpoly.align.align_shape",
  "numpoly.align_dtype",
  "numpoly.align_exponents",
  "numpoly.align_indeterminants",
  "numpoly.align_polynomials",
  "numpoly.align_shape",
  "numpoly.all",
  "numpoly.any",
  "numpoly.apply_along_axis",
  "numpoly.apply_over_axes",
  "numpoly.around",
  "numpoly.array_function",
  "numpoly.array_function.abs",
  "numpoly.array_function.absolute.absolute",
  "numpoly.array_function.add",
  "numpoly.array_function.add.add",
  "numpoly.array_function.all",
  "numpoly.array_function.all.all",
  "numpoly.array_function.allclose.allclose",
  "numpoly.array_function.any",
  "numpoly.array_function.any.any",
  "numpoly.array_function.apply_along_axis",
  "numpoly.array_function.apply_along_axis.apply_along_axis",
  "numpoly.array_function.apply_over_axes",
  "numpoly.array_function.apply_over_axes.apply_over_axes",
  "numpoly.array_function.around",
  "numpoly.array_function.around.around",
  "numpoly.array_function.array_repr",
  "numpoly.array_function.array_repr.array_repr",
  "numpoly.array_function.array_repr.to_string",
  "numpoly.array_function.array_split",
  "numpoly.array_function.array_split.array_split",
  "numpoly.array_function.array_str",
  "numpoly.array_function.array_str.array_str",
  "numpoly.array_function.atleast_1d",
  "numpoly.array_function.atleast_1d.atleast_1d",
  "numpoly.array_function.atleast_2d",
  "numpoly.array_function.atleast_2d.atleast_2d",
  "numpoly.array_function.atleast_3d",
  "numpoly.array_function.atleast_3d.atleast_3d",
  "numpoly.array_function.broadcast_arrays",
  "numpoly.array_function.broadcast_arrays.broadcast_arrays",
  "numpoly.array_function.ceil",
  "numpoly.array_function.ceil.ceil",
  "numpoly.array_function.choose",
  "numpoly.array_function.choose.choose",
  "numpoly.array_function.common_type",
  "numpoly.array_function.common_type.common_type",
  "numpoly.array_function.concatenate",
  "numpoly.array_function.concatenate.concatenate",
  "numpoly.array_function.count_nonzero",
  "numpoly.array_function.count_nonzero.count_nonzero",
  "numpoly.array_function.cumsum",
  "numpoly.array_function.cumsum.cumsum",
  "numpoly.array_function.divide",
  "numpoly.array_function.divmod",
  "numpoly.array_function.divmod.DIVMOD_ERROR_MSG",
  "numpoly.array_function.divmod.divmod",
  "numpoly.array_function.dsplit",
  "numpoly.array_function.dsplit.dsplit",
  "numpoly.array_function.dstack",
  "numpoly.array_function.dstack.dstack",
  "numpoly.array_function.equal",
  "numpoly.array_function.equal.equal",
  "numpoly.array_function.expand_dims",
  "numpoly.array_function.expand_dims.expand_dims",
  "numpoly.array_function.floor",
  "numpoly.array_function.floor.floor",
  "numpoly.array_function.floor_divide.DIVIDE_ERROR_MSG",
  "numpoly.array_function.floor_divide.floor_divide",
  "numpoly.array_function.hsplit",
  "numpoly.array_function.hsplit.hsplit",
  "numpoly.array_function.hstack",
  "numpoly.array_function.hstack.hstack",
  "numpoly.array_function.inner",
  "numpoly.array_function.inner.inner",
  "numpoly.array_function.isclose",
  "numpoly.array_function.isclose.isclose",
  "numpoly.array_function.isfinite",
  "numpoly.array_function.isfinite.isfinite",
  "numpoly.array_function.logical_and",
  "numpoly.array_function.logical_and.logical_and",
  "numpoly.array_function.logical_or",
  "numpoly.array_function.logical_or.logical_or",
  "numpoly.array_function.matmul",
  "numpoly.array_function.matmul.ERROR_MESSAGE",
  "numpoly.array_function.matmul.matmul",
  "numpoly.array_function.mean",
  "numpoly.array_function.mean.mean",
  "numpoly.array_function.mod",
  "numpoly.array_function.moveaxis",
  "numpoly.array_function.moveaxis.moveaxis",
  "numpoly.array_function.multiply",
  "numpoly.array_function.multiply.multiply",
  "numpoly.array_function.negative",
  "numpoly.array_function.negative.negative",
  "numpoly.array_function.nonzero",
  "numpoly.array_function.nonzero.nonzero",
  "numpoly.array_function.not_equal",
  "numpoly.array_function.not_equal.not_equal",
  "numpoly.array_function.outer",
  "numpoly.array_function.outer.outer",
  "numpoly.array_function.positive",
  "numpoly.array_function.positive.positive",
  "numpoly.array_function.power",
  "numpoly.array_function.power.power",
  "numpoly.array_function.prod",
  "numpoly.array_function.prod._prod",
  "numpoly.array_function.prod.prod",
  "numpoly.array_function.remainder",
  "numpoly.array_function.remainder.REMAINDER_ERROR_MSG",
  "numpoly.array_function.remainder.remainder",
  "numpoly.array_function.repeat",
  "numpoly.array_function.repeat.repeat",
  "numpoly.array_function.reshape",
  "numpoly.array_function.reshape.reshape",
  "numpoly.array_function.rint",
  "numpoly.array_function.rint.rint",
  "numpoly.array_function.round",
  "numpoly.array_function.split",
  "numpoly.array_function.split.split",
  "numpoly.array_function.square",
  "numpoly.array_function.square.square",
  "numpoly.array_function.stack",
  "numpoly.array_function.stack.stack",
  "numpoly.array_function.subtract",
  "numpoly.array_function.subtract.subtract",
  "numpoly.array_function.sum",
  "numpoly.array_function.sum.sum",
  "numpoly.array_function.tile",
  "numpoly.array_function.tile.tile",
  "numpoly.array_function.transpose",
  "numpoly.array_function.transpose.transpose",
  "numpoly.array_function.true_divide",
  "numpoly.array_function.true_divide.DIVIDE_ERROR_MSG",
  "numpoly.array_function.true_divide.true_divide",
  "numpoly.array_function.vsplit",
  "numpoly.array_function.vsplit.vsplit",
  "numpoly.array_function.vstack",
  "numpoly.array_function.vstack.vstack",
  "numpoly.array_function.where",
  "numpoly.array_function.where.where",
  "numpoly.array_function.zeros",
  "numpoly.array_function.zeros.zeros",
  "numpoly.array_repr",
  "numpoly.array_split",
  "numpoly.array_str",
  "numpoly.aspolynomial",
  "numpoly.atleast_1d",
  "numpoly.atleast_2d",
  "numpoly.atleast_3d",
  "numpoly.baseclass",
  "numpoly.baseclass.ACCUMULATE_MAPPINGS",
  "numpoly.baseclass.FeatureNotSupported",
  "numpoly.baseclass.INDETERMINANT_DEFAULTS",
  "numpoly.baseclass.REDUCE_MAPPINGS",
  "numpoly.baseclass.ndpoly",
  "numpoly.bindex",
  "numpoly.broadcast_arrays",
  "numpoly.call",
  "numpoly.ceil",
  "numpoly.choose",
  "numpoly.clean_attributes",
  "numpoly.common_type",
  "numpoly.concatenate",
  "numpoly.configure_logging",
  "numpoly.construct",
  "numpoly.construct.aspolynomial",
  "numpoly.construct.aspolynomial.aspolynomial",
  "numpoly.construct.bindex",
  "numpoly.construct.clean",
  "numpoly.construct.clean.PolynomialConstructionError",
  "numpoly.construct.clean._validate_input",
  "numpoly.construct.clean.clean_attributes",
  "numpoly.construct.clean.postprocess_attributes",
  "numpoly.construct.clean_attributes",
  "numpoly.construct.compose",
  "numpoly.construct.compose.compose_polynomial_array",
  "numpoly.construct.from_attributes",
  "numpoly.construct.from_attributes.polynomial_from_attributes",
  "numpoly.construct.monomial",
  "numpoly.construct.monomial.bindex",
  "numpoly.construct.monomial.bindex._bindex",
  "numpoly.construct.monomial.bindex.bindex",
  "numpoly.construct.monomial.cross_truncate",
  "numpoly.construct.monomial.cross_truncation",
  "numpoly.construct.monomial.cross_truncation.cross_truncate",
  "numpoly.construct.monomial.frontend",
  "numpoly.construct.monomial.frontend.monomial",
  "numpoly.construct.monomial.monomial",
  "numpoly.construct.polynomial",
  "numpoly.construct.polynomial.polynomial",
  "numpoly.construct.symbols",
  "numpoly.construct.symbols.symbols",
  "numpoly.count_nonzero",
  "numpoly.cumsum",
  "numpoly.decompose",
  "numpoly.diff",
  "numpoly.dispatch",
  "numpoly.dispatch.FUNCTION_COLLECTION",
  "numpoly.dispatch.UFUNC_COLLECTION",
  "numpoly.dispatch.implements",
  "numpoly.dispatch.simple_dispatch",
  "numpoly.divide",
  "numpoly.divmod",
  "numpoly.dsplit",
  "numpoly.dstack",
  "numpoly.equal",
  "numpoly.expand_dims",
  "numpoly.floor",
  "numpoly.get_version",
  "numpoly.gradient",
  "numpoly.hessian",
  "numpoly.hsplit",
  "numpoly.hstack",
  "numpoly.inner",
  "numpoly.isclose",
  "numpoly.isconstant",
  "numpoly.isfinite",
  "numpoly.logical_and",
  "numpoly.logical_or",
  "numpoly.matmul",
  "numpoly.mean",
  "numpoly.mod",
  "numpoly.monomial",
  "numpoly.moveaxis",
  "numpoly.multiply",
  "numpoly.ndpoly",
  "numpoly.negative",
  "numpoly.nonzero",
  "numpoly.not_equal",
  "numpoly.outer",
  "numpoly.poly_divide",
  "numpoly.poly_divmod",
  "numpoly.poly_function",
  "numpoly.poly_function.__all__",
  "numpoly.poly_function.call",
  "numpoly.poly_function.call.call",
  "numpoly.poly_function.decompose",
  "numpoly.poly_function.decompose.decompose",
  "numpoly.poly_function.derivative",
  "numpoly.poly_function.derivative.diff",
  "numpoly.poly_function.derivative.gradient",
  "numpoly.poly_function.derivative.hessian",
  "numpoly.poly_function.diff",
  "numpoly.poly_function.divide",
  "numpoly.poly_function.divide.divide",
  "numpoly.poly_function.divide.divide.poly_divide",
  "numpoly.poly_function.divide.divmod",
  "numpoly.poly_function.divide.divmod.get_division_candidate",
  "numpoly.poly_function.divide.divmod.poly_divmod",
  "numpoly.poly_function.divide.poly_divide",
  "numpoly.poly_function.divide.poly_divmod",
  "numpoly.poly_function.divide.poly_remainder",
  "numpoly.poly_function.divide.remainder",
  "numpoly.poly_function.divide.remainder.poly_remainder",
  "numpoly.poly_function.gradient",
  "numpoly.poly_function.hessian",
  "numpoly.poly_function.isconstant",
  "numpoly.poly_function.isconstant.isconstant",
  "numpoly.poly_function.poly_divide",
  "numpoly.poly_function.poly_divmod",
  "numpoly.poly_function.poly_remainder",
  "numpoly.poly_function.tonumpy",
  "numpoly.poly_function.tonumpy.tonumpy",
  "numpoly.poly_remainder",
  "numpoly.polynomial",
  "numpoly.positive",
  "numpoly.power",
  "numpoly.prod",
  "numpoly.remainder",
  "numpoly.repeat",
  "numpoly.reshape",
  "numpoly.rint",
  "numpoly.round",
  "numpoly.split",
  "numpoly.square",
  "numpoly.stack",
  "numpoly.subtract",
  "numpoly.sum",
  "numpoly.symbols",
  "numpoly.sympy_",
  "numpoly.sympy_.to_sympy",
  "numpoly.tile",
  "numpoly.to_sympy",
  "numpoly.tonumpy",
  "numpoly.transpose",
  "numpoly.true_divide",
  "numpoly.vsplit",
  "numpoly.vstack",
  "numpoly.where",
  "numpoly.zeros"
 ]
}