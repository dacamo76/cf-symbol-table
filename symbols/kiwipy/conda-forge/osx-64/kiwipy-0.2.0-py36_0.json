{
 "errors": {
  "kiwipy.utils": {
   "exception": "invalid load key, '\\x00'.",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "_pickle.UnpicklingError: invalid load key, '\\x00'.",
    ""
   ]
  },
  "kiwipy.version": {
   "exception": "invalid load key, '\\x00'.",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "_pickle.UnpicklingError: invalid load key, '\\x00'.",
    ""
   ]
  }
 },
 "symbols": [
  "kiwipy.BroadcastFilter",
  "kiwipy.CancelledError",
  "kiwipy.Communicator",
  "kiwipy.DeliveryFailed",
  "kiwipy.EventHelper",
  "kiwipy.Future",
  "kiwipy.InvalidStateError",
  "kiwipy.LocalCommunicator",
  "kiwipy.NullHandler",
  "kiwipy.RemoteException",
  "kiwipy.TaskRejected",
  "kiwipy.TimeoutError",
  "kiwipy.UnroutableError",
  "kiwipy._GatheringFuture",
  "kiwipy._LOGGER",
  "kiwipy.__all__",
  "kiwipy.__version__",
  "kiwipy.chain",
  "kiwipy.communications",
  "kiwipy.communications.Communicator",
  "kiwipy.communications.DeliveryFailed",
  "kiwipy.communications.RemoteException",
  "kiwipy.communications.TaskRejected",
  "kiwipy.communications.TimeoutError",
  "kiwipy.communications.UnroutableError",
  "kiwipy.communications.__all__",
  "kiwipy.copy_future",
  "kiwipy.filters",
  "kiwipy.filters.BroadcastFilter",
  "kiwipy.filters.__all__",
  "kiwipy.futures",
  "kiwipy.futures.CancelledError",
  "kiwipy.futures.Future",
  "kiwipy.futures.InvalidStateError",
  "kiwipy.futures._GatheringFuture",
  "kiwipy.futures.__all__",
  "kiwipy.futures.chain",
  "kiwipy.futures.copy_future",
  "kiwipy.futures.gather",
  "kiwipy.gather",
  "kiwipy.local",
  "kiwipy.local.LocalCommunicator",
  "kiwipy.local.__all__",
  "kiwipy.rmq",
  "kiwipy.rmq.ConnectionListener",
  "kiwipy.rmq.ConnectorState",
  "kiwipy.rmq.EXCHANGE_PROPERTIES",
  "kiwipy.rmq.LOGGER",
  "kiwipy.rmq.RmqCommunicator",
  "kiwipy.rmq.RmqConnector",
  "kiwipy.rmq.RmqPublisher",
  "kiwipy.rmq.RmqSubscriber",
  "kiwipy.rmq.RmqTaskPublisher",
  "kiwipy.rmq.RmqTaskSubscriber",
  "kiwipy.rmq.TaskMessage",
  "kiwipy.rmq._LOGGER",
  "kiwipy.rmq.__all__",
  "kiwipy.rmq.communicator",
  "kiwipy.rmq.communicator.EXCHANGE_PROPERTIES",
  "kiwipy.rmq.communicator.RmqCommunicator",
  "kiwipy.rmq.communicator.RmqPublisher",
  "kiwipy.rmq.communicator.RmqSubscriber",
  "kiwipy.rmq.communicator._LOGGER",
  "kiwipy.rmq.communicator.__all__",
  "kiwipy.rmq.configure",
  "kiwipy.rmq.defaults",
  "kiwipy.rmq.defaults.BROADCAST_TOPIC",
  "kiwipy.rmq.defaults.MESSAGE_EXCHANGE",
  "kiwipy.rmq.defaults.MESSAGE_TTL",
  "kiwipy.rmq.defaults.QUEUE_EXPIRES",
  "kiwipy.rmq.defaults.REPLY_QUEUE_EXPIRES",
  "kiwipy.rmq.defaults.RPC_TOPIC",
  "kiwipy.rmq.defaults.TASK_EXCHANGE",
  "kiwipy.rmq.defaults.TASK_MESSAGE_TTL",
  "kiwipy.rmq.defaults.TASK_PREFETCH_COUNT",
  "kiwipy.rmq.defaults.TASK_PREFETCH_SIZE",
  "kiwipy.rmq.defaults.TASK_QUEUE",
  "kiwipy.rmq.get_event_loop",
  "kiwipy.rmq.loops",
  "kiwipy.rmq.loops.__all__",
  "kiwipy.rmq.loops.get_event_loop",
  "kiwipy.rmq.loops.new_event_loop",
  "kiwipy.rmq.loops.set_event_loop",
  "kiwipy.rmq.messages",
  "kiwipy.rmq.messages.BaseConnectionWithExchange",
  "kiwipy.rmq.messages.BasePublisherWithReplyQueue",
  "kiwipy.rmq.messages.BasePublisherWithReplyQueue.DEFAULT_EXCHANGE_PARAMS",
  "kiwipy.rmq.messages.BasePublisherWithReplyQueue.is_closing",
  "kiwipy.rmq.messages.BasePublisherWithReplyQueue.is_connected",
  "kiwipy.rmq.messages.BroadcastMessage",
  "kiwipy.rmq.messages.DeliveryInfo",
  "kiwipy.rmq.messages.Message",
  "kiwipy.rmq.messages.Publisher",
  "kiwipy.rmq.messages.RpcMessage",
  "kiwipy.rmq.new_event_loop",
  "kiwipy.rmq.pubsub",
  "kiwipy.rmq.pubsub.ConnectionListener",
  "kiwipy.rmq.pubsub.ConnectorState",
  "kiwipy.rmq.pubsub.LOGGER",
  "kiwipy.rmq.pubsub.RmqConnector",
  "kiwipy.rmq.pubsub.__all__",
  "kiwipy.rmq.set_event_loop",
  "kiwipy.rmq.tasks",
  "kiwipy.rmq.tasks.DEFAULT_EXCHANGE_PARAMS",
  "kiwipy.rmq.tasks.RmqTaskPublisher",
  "kiwipy.rmq.tasks.RmqTaskSubscriber",
  "kiwipy.rmq.tasks.TaskMessage",
  "kiwipy.rmq.tasks._LOGGER",
  "kiwipy.rmq.tasks.__all__",
  "kiwipy.rmq.tasks.is_closing",
  "kiwipy.rmq.tasks.is_connected",
  "kiwipy.rmq.utils",
  "kiwipy.rmq.utils.CANCELLED_KEY",
  "kiwipy.rmq.utils.EXCEPTION_KEY",
  "kiwipy.rmq.utils.HOSTNAME_KEY",
  "kiwipy.rmq.utils.HOST_KEY",
  "kiwipy.rmq.utils.InitialisationMixin",
  "kiwipy.rmq.utils.PENDING_KEY",
  "kiwipy.rmq.utils.PID_KEY",
  "kiwipy.rmq.utils.RESULT_KEY",
  "kiwipy.rmq.utils._get_initialisers",
  "kiwipy.rmq.utils.add_host_info",
  "kiwipy.rmq.utils.cancelled_response",
  "kiwipy.rmq.utils.exception_response",
  "kiwipy.rmq.utils.get_host_info",
  "kiwipy.rmq.utils.initialiser",
  "kiwipy.rmq.utils.pending_response",
  "kiwipy.rmq.utils.response_result",
  "kiwipy.rmq.utils.response_to_future",
  "kiwipy.rmq.utils.result_response",
  "kiwipy.utils",
  "kiwipy.utils.EventHelper",
  "kiwipy.utils._LOGGER",
  "kiwipy.version",
  "kiwipy.version.__version__"
 ]
}