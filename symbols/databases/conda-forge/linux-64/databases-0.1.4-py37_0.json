{
 "errors": {},
 "symbols": [
  "databases.Database",
  "databases.__all__",
  "databases.__version__",
  "databases.backends",
  "databases.backends.mysql",
  "databases.backends.mysql.CompilationContext",
  "databases.backends.mysql.ConnectionBackend",
  "databases.backends.mysql.DatabaseBackend",
  "databases.backends.mysql.DatabaseURL",
  "databases.backends.mysql.MySQLBackend",
  "databases.backends.mysql.MySQLConnection",
  "databases.backends.mysql.MySQLTransaction",
  "databases.backends.mysql.TransactionBackend",
  "databases.backends.mysql.logger",
  "databases.backends.postgres",
  "databases.backends.postgres.ConnectionBackend",
  "databases.backends.postgres.DatabaseBackend",
  "databases.backends.postgres.DatabaseURL",
  "databases.backends.postgres.PostgresBackend",
  "databases.backends.postgres.PostgresConnection",
  "databases.backends.postgres.PostgresTransaction",
  "databases.backends.postgres.Record",
  "databases.backends.postgres.TransactionBackend",
  "databases.backends.postgres._result_processors",
  "databases.backends.postgres.logger",
  "databases.backends.sqlite",
  "databases.backends.sqlite.CompilationContext",
  "databases.backends.sqlite.ConnectionBackend",
  "databases.backends.sqlite.DatabaseBackend",
  "databases.backends.sqlite.DatabaseURL",
  "databases.backends.sqlite.SQLiteBackend",
  "databases.backends.sqlite.SQLiteConnection",
  "databases.backends.sqlite.SQLitePool",
  "databases.backends.sqlite.SQLiteTransaction",
  "databases.backends.sqlite.TransactionBackend",
  "databases.backends.sqlite.logger",
  "databases.core",
  "databases.core.Connection",
  "databases.core.ConnectionBackend",
  "databases.core.Database",
  "databases.core.DatabaseBackend",
  "databases.core.DatabaseURL",
  "databases.core.Transaction",
  "databases.core.TransactionBackend",
  "databases.core.import_from_string",
  "databases.importer",
  "databases.importer.ImportFromStringError",
  "databases.importer.import_from_string",
  "databases.interfaces",
  "databases.interfaces.ConnectionBackend",
  "databases.interfaces.DatabaseBackend",
  "databases.interfaces.TransactionBackend"
 ]
}