{
 "errors": {},
 "symbols": [
  "dask_ml.__version__",
  "dask_ml._compat",
  "dask_ml._compat.DASK_VERSION",
  "dask_ml._compat.HAS_MULTIPLE_METRICS",
  "dask_ml._compat.SK_GE_020",
  "dask_ml._compat.SK_VERSION",
  "dask_ml._compat.dummy_context",
  "dask_ml._partial",
  "dask_ml._partial._BigPartialFitMixin",
  "dask_ml._partial._BigPartialFitMixin._fit_kwargs",
  "dask_ml._partial._BigPartialFitMixin._init_kwargs",
  "dask_ml._partial._WritableDoc",
  "dask_ml._partial._copy_partial_doc",
  "dask_ml._partial._partial_deprecation",
  "dask_ml._partial._partial_fit",
  "dask_ml._partial._predict",
  "dask_ml._partial.fit",
  "dask_ml._partial.logger",
  "dask_ml._partial.predict",
  "dask_ml._utils",
  "dask_ml._utils.copy_learned_attributes",
  "dask_ml.cluster",
  "dask_ml.cluster.KMeans",
  "dask_ml.cluster.PartialMiniBatchKMeans",
  "dask_ml.cluster.SpectralClustering",
  "dask_ml.cluster.k_means",
  "dask_ml.cluster.k_means.KMeans",
  "dask_ml.cluster.k_means._centers_dense",
  "dask_ml.cluster.k_means._kmeans_single_lloyd",
  "dask_ml.cluster.k_means._sample_points",
  "dask_ml.cluster.k_means.compute_inertia",
  "dask_ml.cluster.k_means.evaluate_cost",
  "dask_ml.cluster.k_means.init_pp",
  "dask_ml.cluster.k_means.init_random",
  "dask_ml.cluster.k_means.init_scalable",
  "dask_ml.cluster.k_means.k_init",
  "dask_ml.cluster.k_means.k_means",
  "dask_ml.cluster.k_means.logger",
  "dask_ml.cluster.minibatch",
  "dask_ml.cluster.minibatch.PartialMiniBatchKMeans",
  "dask_ml.cluster.minibatch._fit_kwargs",
  "dask_ml.cluster.minibatch._init_kwargs",
  "dask_ml.cluster.spectral",
  "dask_ml.cluster.spectral.SpectralClustering",
  "dask_ml.cluster.spectral._slice_mostly_sorted",
  "dask_ml.cluster.spectral.embed",
  "dask_ml.cluster.spectral.logger",
  "dask_ml.compose",
  "dask_ml.compose.ColumnTransformer",
  "dask_ml.compose.__all__",
  "dask_ml.compose._column_transformer",
  "dask_ml.compose._column_transformer.ColumnTransformer",
  "dask_ml.compose._column_transformer.make_column_transformer",
  "dask_ml.compose.make_column_transformer",
  "dask_ml.datasets",
  "dask_ml.datasets._check_axis_partitioning",
  "dask_ml.datasets.make_blobs",
  "dask_ml.datasets.make_classification",
  "dask_ml.datasets.make_counts",
  "dask_ml.datasets.make_regression",
  "dask_ml.decomposition",
  "dask_ml.decomposition.PCA",
  "dask_ml.decomposition.TruncatedSVD",
  "dask_ml.decomposition.pca",
  "dask_ml.decomposition.pca.PCA",
  "dask_ml.decomposition.truncated_svd",
  "dask_ml.decomposition.truncated_svd.TruncatedSVD",
  "dask_ml.feature_extraction",
  "dask_ml.feature_extraction.text",
  "dask_ml.feature_extraction.text.HashingVectorizer",
  "dask_ml.impute",
  "dask_ml.impute.SimpleImputer",
  "dask_ml.joblib",
  "dask_ml.linear_model",
  "dask_ml.linear_model.LinearRegression",
  "dask_ml.linear_model.LogisticRegression",
  "dask_ml.linear_model.PartialPassiveAggressiveClassifier",
  "dask_ml.linear_model.PartialPassiveAggressiveRegressor",
  "dask_ml.linear_model.PartialPerceptron",
  "dask_ml.linear_model.PartialSGDClassifier",
  "dask_ml.linear_model.PartialSGDRegressor",
  "dask_ml.linear_model.PoissonRegression",
  "dask_ml.linear_model.__all__",
  "dask_ml.linear_model.glm",
  "dask_ml.linear_model.glm.LinearRegression",
  "dask_ml.linear_model.glm.LogisticRegression",
  "dask_ml.linear_model.glm.PoissonRegression",
  "dask_ml.linear_model.glm._GLM",
  "dask_ml.linear_model.glm._base_doc",
  "dask_ml.linear_model.passive_aggressive",
  "dask_ml.linear_model.passive_aggressive.PartialPassiveAggressiveClassifier",
  "dask_ml.linear_model.passive_aggressive.PartialPassiveAggressiveRegressor",
  "dask_ml.linear_model.passive_aggressive._fit_kwargs",
  "dask_ml.linear_model.passive_aggressive._init_kwargs",
  "dask_ml.linear_model.perceptron",
  "dask_ml.linear_model.perceptron.PartialPerceptron",
  "dask_ml.linear_model.stochastic_gradient",
  "dask_ml.linear_model.stochastic_gradient.PartialSGDClassifier",
  "dask_ml.linear_model.stochastic_gradient.PartialSGDRegressor",
  "dask_ml.linear_model.stochastic_gradient._fit_kwargs",
  "dask_ml.linear_model.stochastic_gradient._init_kwargs",
  "dask_ml.linear_model.utils",
  "dask_ml.linear_model.utils._add_intercept",
  "dask_ml.linear_model.utils.absolute",
  "dask_ml.linear_model.utils.add_intercept",
  "dask_ml.linear_model.utils.exp",
  "dask_ml.linear_model.utils.log1p",
  "dask_ml.linear_model.utils.sign",
  "dask_ml.metrics",
  "dask_ml.metrics.SCORERS",
  "dask_ml.metrics.accuracy_score",
  "dask_ml.metrics.check_scoring",
  "dask_ml.metrics.classification",
  "dask_ml.metrics.classification._log_loss_inner",
  "dask_ml.metrics.classification.accuracy_score",
  "dask_ml.metrics.classification.log_loss",
  "dask_ml.metrics.euclidean_distances",
  "dask_ml.metrics.get_scorer",
  "dask_ml.metrics.log_loss",
  "dask_ml.metrics.mean_absolute_error",
  "dask_ml.metrics.mean_squared_error",
  "dask_ml.metrics.pairwise",
  "dask_ml.metrics.pairwise.PAIRWISE_KERNEL_FUNCTIONS",
  "dask_ml.metrics.pairwise.check_pairwise_arrays",
  "dask_ml.metrics.pairwise.euclidean_distances",
  "dask_ml.metrics.pairwise.linear_kernel",
  "dask_ml.metrics.pairwise.pairwise_distances",
  "dask_ml.metrics.pairwise.pairwise_kernels",
  "dask_ml.metrics.pairwise.polynomial_kernel",
  "dask_ml.metrics.pairwise.rbf_kernel",
  "dask_ml.metrics.pairwise.sigmoid_kernel",
  "dask_ml.metrics.pairwise_distances",
  "dask_ml.metrics.r2_score",
  "dask_ml.metrics.regression",
  "dask_ml.metrics.regression._check_reg_targets",
  "dask_ml.metrics.regression._check_sample_weight",
  "dask_ml.metrics.regression.mean_absolute_error",
  "dask_ml.metrics.regression.mean_squared_error",
  "dask_ml.metrics.regression.r2_score",
  "dask_ml.metrics.scorer",
  "dask_ml.metrics.scorer.SCORERS",
  "dask_ml.metrics.scorer.accuracy_scorer",
  "dask_ml.metrics.scorer.check_scoring",
  "dask_ml.metrics.scorer.get_scorer",
  "dask_ml.metrics.scorer.neg_log_loss_scorer",
  "dask_ml.metrics.scorer.neg_mean_squared_error_scorer",
  "dask_ml.metrics.scorer.r2_scorer",
  "dask_ml.model_selection",
  "dask_ml.model_selection.GridSearchCV",
  "dask_ml.model_selection.KFold",
  "dask_ml.model_selection.RandomizedSearchCV",
  "dask_ml.model_selection.ShuffleSplit",
  "dask_ml.model_selection.__all__",
  "dask_ml.model_selection._incremental",
  "dask_ml.model_selection._incremental._create_model",
  "dask_ml.model_selection._incremental._fit",
  "dask_ml.model_selection._incremental._partial_fit",
  "dask_ml.model_selection._incremental._score",
  "dask_ml.model_selection._incremental.fit",
  "dask_ml.model_selection._normalize",
  "dask_ml.model_selection._normalize.normalize_CVIterableWrapper",
  "dask_ml.model_selection._normalize.normalize_KFold",
  "dask_ml.model_selection._normalize.normalize_LeaveOneOut",
  "dask_ml.model_selection._normalize.normalize_LeavePOut",
  "dask_ml.model_selection._normalize.normalize_PredefinedSplit",
  "dask_ml.model_selection._normalize.normalize_ShuffleSplit",
  "dask_ml.model_selection._normalize.normalize_estimator",
  "dask_ml.model_selection._normalize.normalize_random_state",
  "dask_ml.model_selection._search",
  "dask_ml.model_selection._search.DaskBaseSearchCV",
  "dask_ml.model_selection._search.GridSearchCV",
  "dask_ml.model_selection._search.RandomizedSearchCV",
  "dask_ml.model_selection._search.TokenIterator",
  "dask_ml.model_selection._search._DOC_TEMPLATE",
  "dask_ml.model_selection._search._RETURN_TRAIN_SCORE_DEFAULT",
  "dask_ml.model_selection._search.__all__",
  "dask_ml.model_selection._search._do_featureunion",
  "dask_ml.model_selection._search._do_fit_step",
  "dask_ml.model_selection._search._do_n_samples",
  "dask_ml.model_selection._search._do_pipeline",
  "dask_ml.model_selection._search._get_fit_params",
  "dask_ml.model_selection._search._grid_description",
  "dask_ml.model_selection._search._grid_example",
  "dask_ml.model_selection._search._grid_oneliner",
  "dask_ml.model_selection._search._grid_parameters",
  "dask_ml.model_selection._search._group_fit_params",
  "dask_ml.model_selection._search._group_ids_by_index",
  "dask_ml.model_selection._search._group_subparams",
  "dask_ml.model_selection._search._normalize_n_jobs",
  "dask_ml.model_selection._search._randomized_description",
  "dask_ml.model_selection._search._randomized_example",
  "dask_ml.model_selection._search._randomized_oneliner",
  "dask_ml.model_selection._search._randomized_parameters",
  "dask_ml.model_selection._search.build_graph",
  "dask_ml.model_selection._search.check_cv",
  "dask_ml.model_selection._search.compute_n_splits",
  "dask_ml.model_selection._search.do_fit",
  "dask_ml.model_selection._search.handle_deprecated_train_score",
  "dask_ml.model_selection._search.normalize_params",
  "dask_ml.model_selection._split",
  "dask_ml.model_selection._split.KFold",
  "dask_ml.model_selection._split.ShuffleSplit",
  "dask_ml.model_selection._split._blockwise_slice",
  "dask_ml.model_selection._split._check_blockwise",
  "dask_ml.model_selection._split._generate_idx",
  "dask_ml.model_selection._split._generate_offset_idx",
  "dask_ml.model_selection._split._maybe_normalize_split_sizes",
  "dask_ml.model_selection._split.check_array",
  "dask_ml.model_selection._split.check_matching_blocks",
  "dask_ml.model_selection._split.logger",
  "dask_ml.model_selection._split.train_test_split",
  "dask_ml.model_selection.check_cv",
  "dask_ml.model_selection.compute_n_splits",
  "dask_ml.model_selection.methods",
  "dask_ml.model_selection.methods.CVCache",
  "dask_ml.model_selection.methods.FIT_FAILURE",
  "dask_ml.model_selection.methods.MISSING",
  "dask_ml.model_selection.methods.SET_PARAMS_LOCK",
  "dask_ml.model_selection.methods._maybe_timed",
  "dask_ml.model_selection.methods._score",
  "dask_ml.model_selection.methods._store",
  "dask_ml.model_selection.methods.create_cv_results",
  "dask_ml.model_selection.methods.cv_extract",
  "dask_ml.model_selection.methods.cv_n_samples",
  "dask_ml.model_selection.methods.cv_split",
  "dask_ml.model_selection.methods.decompress_params",
  "dask_ml.model_selection.methods.feature_union",
  "dask_ml.model_selection.methods.fit",
  "dask_ml.model_selection.methods.get_best_params",
  "dask_ml.model_selection.methods.pipeline",
  "dask_ml.model_selection.methods.score",
  "dask_ml.model_selection.methods.set_params",
  "dask_ml.model_selection.methods.warn_fit_failure",
  "dask_ml.model_selection.train_test_split",
  "dask_ml.model_selection.utils",
  "dask_ml.model_selection.utils._index_param_value",
  "dask_ml.model_selection.utils._indexable",
  "dask_ml.model_selection.utils._maybe_indexable",
  "dask_ml.model_selection.utils.copy_estimator",
  "dask_ml.model_selection.utils.is_dask_collection",
  "dask_ml.model_selection.utils.to_indexable",
  "dask_ml.model_selection.utils.to_keys",
  "dask_ml.model_selection.utils.unzip",
  "dask_ml.model_selection.utils_test",
  "dask_ml.model_selection.utils_test.ArraySlicingWrapper",
  "dask_ml.model_selection.utils_test.CheckXClassifier",
  "dask_ml.model_selection.utils_test.CheckingClassifier",
  "dask_ml.model_selection.utils_test.FailingClassifier",
  "dask_ml.model_selection.utils_test.MockClassifier",
  "dask_ml.model_selection.utils_test.MockDataFrame",
  "dask_ml.model_selection.utils_test.ScalingTransformer",
  "dask_ml.naive_bayes",
  "dask_ml.naive_bayes.GaussianNB",
  "dask_ml.naive_bayes.PartialBernoulliNB",
  "dask_ml.naive_bayes.PartialMultinomialNB",
  "dask_ml.naive_bayes.logsumexp",
  "dask_ml.neural_network",
  "dask_ml.neural_network.ParitalMLPClassifier",
  "dask_ml.neural_network.ParitalMLPRegressor",
  "dask_ml.neural_network._fit_kwargs",
  "dask_ml.neural_network._init_kwargs",
  "dask_ml.preprocessing",
  "dask_ml.preprocessing.Categorizer",
  "dask_ml.preprocessing.DummyEncoder",
  "dask_ml.preprocessing.LabelEncoder",
  "dask_ml.preprocessing.MinMaxScaler",
  "dask_ml.preprocessing.OneHotEncoder",
  "dask_ml.preprocessing.OrdinalEncoder",
  "dask_ml.preprocessing.QuantileTransformer",
  "dask_ml.preprocessing.RobustScaler",
  "dask_ml.preprocessing.StandardScaler",
  "dask_ml.preprocessing.__all__",
  "dask_ml.preprocessing._encoders",
  "dask_ml.preprocessing._encoders.OneHotEncoder",
  "dask_ml.preprocessing.data",
  "dask_ml.preprocessing.data.Categorizer",
  "dask_ml.preprocessing.data.DummyEncoder",
  "dask_ml.preprocessing.data.MinMaxScaler",
  "dask_ml.preprocessing.data.OrdinalEncoder",
  "dask_ml.preprocessing.data.QuantileTransformer",
  "dask_ml.preprocessing.data.RobustScaler",
  "dask_ml.preprocessing.data.StandardScaler",
  "dask_ml.preprocessing.data._HAS_CTD",
  "dask_ml.preprocessing.data._PANDAS_VERSION",
  "dask_ml.preprocessing.data.check_array",
  "dask_ml.preprocessing.data.handle_zeros_in_scale",
  "dask_ml.preprocessing.label",
  "dask_ml.preprocessing.label.LabelEncoder",
  "dask_ml.preprocessing.label._check_and_search_block",
  "dask_ml.preprocessing.label._construct",
  "dask_ml.preprocessing.label._encode",
  "dask_ml.preprocessing.label._is_categorical",
  "dask_ml.tensorflow",
  "dask_ml.utils",
  "dask_ml.utils.__all__",
  "dask_ml.utils._assert_eq",
  "dask_ml.utils._format_bytes",
  "dask_ml.utils._log_array",
  "dask_ml.utils._num_samples",
  "dask_ml.utils._timed",
  "dask_ml.utils._timer",
  "dask_ml.utils.assert_estimator_equal",
  "dask_ml.utils.check_array",
  "dask_ml.utils.check_chunks",
  "dask_ml.utils.check_matching_blocks",
  "dask_ml.utils.check_random_state",
  "dask_ml.utils.handle_zeros_in_scale",
  "dask_ml.utils.logger",
  "dask_ml.utils.row_norms",
  "dask_ml.utils.slice_columns",
  "dask_ml.utils.svd_flip",
  "dask_ml.wrappers",
  "dask_ml.wrappers.Incremental",
  "dask_ml.wrappers.ParallelPostFit",
  "dask_ml.wrappers._apply_partitionwise",
  "dask_ml.wrappers._first_block",
  "dask_ml.wrappers._timer",
  "dask_ml.wrappers.logger",
  "dask_ml.xgboost"
 ]
}