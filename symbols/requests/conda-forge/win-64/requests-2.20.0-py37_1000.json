{
 "errors": {},
 "symbols": [
  "requests.ConnectTimeout",
  "requests.ConnectionError",
  "requests.FileModeWarning",
  "requests.HTTPError",
  "requests.PreparedRequest",
  "requests.ReadTimeout",
  "requests.Request",
  "requests.Response",
  "requests.Session",
  "requests.Timeout",
  "requests.TooManyRedirects",
  "requests.URLRequired",
  "requests.__author__",
  "requests.__author_email__",
  "requests.__build__",
  "requests.__cake__",
  "requests.__copyright__",
  "requests.__description__",
  "requests.__license__",
  "requests.__title__",
  "requests.__url__",
  "requests.__version__",
  "requests.__version__.__author__",
  "requests.__version__.__author_email__",
  "requests.__version__.__build__",
  "requests.__version__.__cake__",
  "requests.__version__.__copyright__",
  "requests.__version__.__description__",
  "requests.__version__.__license__",
  "requests.__version__.__title__",
  "requests.__version__.__url__",
  "requests.__version__.__version__",
  "requests._check_cryptography",
  "requests._internal_utils",
  "requests._internal_utils.to_native_string",
  "requests._internal_utils.unicode_is_ascii",
  "requests.adapters",
  "requests.adapters.BaseAdapter",
  "requests.adapters.DEFAULT_POOLBLOCK",
  "requests.adapters.DEFAULT_POOLSIZE",
  "requests.adapters.DEFAULT_POOL_TIMEOUT",
  "requests.adapters.DEFAULT_RETRIES",
  "requests.adapters.HTTPAdapter",
  "requests.adapters.SOCKSProxyManager",
  "requests.api",
  "requests.api.delete",
  "requests.api.get",
  "requests.api.head",
  "requests.api.options",
  "requests.api.patch",
  "requests.api.post",
  "requests.api.put",
  "requests.api.request",
  "requests.auth",
  "requests.auth.AuthBase",
  "requests.auth.CONTENT_TYPE_FORM_URLENCODED",
  "requests.auth.CONTENT_TYPE_MULTI_PART",
  "requests.auth.HTTPBasicAuth",
  "requests.auth.HTTPDigestAuth",
  "requests.auth.HTTPProxyAuth",
  "requests.auth._basic_auth_str",
  "requests.certs",
  "requests.check_compatibility",
  "requests.codes",
  "requests.compat",
  "requests.compat._ver",
  "requests.compat.basestring",
  "requests.compat.builtin_str",
  "requests.compat.bytes",
  "requests.compat.integer_types",
  "requests.compat.is_py2",
  "requests.compat.is_py3",
  "requests.compat.numeric_types",
  "requests.compat.str",
  "requests.cookies",
  "requests.cookies.CookieConflictError",
  "requests.cookies.MockRequest",
  "requests.cookies.MockResponse",
  "requests.cookies.RequestsCookieJar",
  "requests.cookies._copy_cookie_jar",
  "requests.cookies.cookiejar_from_dict",
  "requests.cookies.create_cookie",
  "requests.cookies.extract_cookies_to_jar",
  "requests.cookies.get_cookie_header",
  "requests.cookies.merge_cookies",
  "requests.cookies.morsel_to_cookie",
  "requests.cookies.remove_cookie_by_name",
  "requests.delete",
  "requests.exceptions",
  "requests.exceptions.ChunkedEncodingError",
  "requests.exceptions.ConnectTimeout",
  "requests.exceptions.ConnectionError",
  "requests.exceptions.ContentDecodingError",
  "requests.exceptions.FileModeWarning",
  "requests.exceptions.HTTPError",
  "requests.exceptions.InvalidHeader",
  "requests.exceptions.InvalidProxyURL",
  "requests.exceptions.InvalidSchema",
  "requests.exceptions.InvalidURL",
  "requests.exceptions.MissingSchema",
  "requests.exceptions.ProxyError",
  "requests.exceptions.ReadTimeout",
  "requests.exceptions.RequestException",
  "requests.exceptions.RequestsDependencyWarning",
  "requests.exceptions.RequestsWarning",
  "requests.exceptions.RetryError",
  "requests.exceptions.SSLError",
  "requests.exceptions.StreamConsumedError",
  "requests.exceptions.Timeout",
  "requests.exceptions.TooManyRedirects",
  "requests.exceptions.URLRequired",
  "requests.exceptions.UnrewindableBodyError",
  "requests.get",
  "requests.head",
  "requests.help",
  "requests.help._implementation",
  "requests.help.info",
  "requests.help.main",
  "requests.help.pyopenssl",
  "requests.hooks",
  "requests.hooks.HOOKS",
  "requests.hooks.default_hooks",
  "requests.hooks.dispatch_hook",
  "requests.models",
  "requests.models.CONTENT_CHUNK_SIZE",
  "requests.models.DEFAULT_REDIRECT_LIMIT",
  "requests.models.ITER_CHUNK_SIZE",
  "requests.models.PreparedRequest",
  "requests.models.REDIRECT_STATI",
  "requests.models.Request",
  "requests.models.Response",
  "requests.options",
  "requests.packages",
  "requests.packages.mod",
  "requests.packages.package",
  "requests.patch",
  "requests.post",
  "requests.put",
  "requests.request",
  "requests.session",
  "requests.sessions.Session",
  "requests.sessions.merge_hooks",
  "requests.sessions.merge_setting",
  "requests.sessions.preferred_clock",
  "requests.sessions.session",
  "requests.status_codes",
  "requests.status_codes.__doc__",
  "requests.status_codes._codes",
  "requests.status_codes._init",
  "requests.status_codes.codes",
  "requests.structures",
  "requests.structures.CaseInsensitiveDict",
  "requests.structures.LookupDict",
  "requests.utils",
  "requests.utils.DEFAULT_CA_BUNDLE_PATH",
  "requests.utils.NETRC_FILES",
  "requests.utils.UNRESERVED_SET",
  "requests.utils._CLEAN_HEADER_REGEX_BYTE",
  "requests.utils._CLEAN_HEADER_REGEX_STR",
  "requests.utils._null",
  "requests.utils._null2",
  "requests.utils._null3",
  "requests.utils._parse_content_type_header",
  "requests.utils.add_dict_to_cookiejar",
  "requests.utils.address_in_network",
  "requests.utils.check_header_validity",
  "requests.utils.default_headers",
  "requests.utils.default_user_agent",
  "requests.utils.dict_from_cookiejar",
  "requests.utils.dict_to_sequence",
  "requests.utils.dotted_netmask",
  "requests.utils.extract_zipped_paths",
  "requests.utils.from_key_val_list",
  "requests.utils.get_auth_from_url",
  "requests.utils.get_encoding_from_headers",
  "requests.utils.get_encodings_from_content",
  "requests.utils.get_environ_proxies",
  "requests.utils.get_netrc_auth",
  "requests.utils.get_unicode_from_response",
  "requests.utils.guess_filename",
  "requests.utils.guess_json_utf",
  "requests.utils.is_ipv4_address",
  "requests.utils.is_valid_cidr",
  "requests.utils.iter_slices",
  "requests.utils.parse_dict_header",
  "requests.utils.parse_header_links",
  "requests.utils.parse_list_header",
  "requests.utils.prepend_scheme_if_needed",
  "requests.utils.proxy_bypass",
  "requests.utils.requote_uri",
  "requests.utils.rewind_body",
  "requests.utils.select_proxy",
  "requests.utils.set_environ",
  "requests.utils.should_bypass_proxies",
  "requests.utils.stream_decode_response_unicode",
  "requests.utils.super_len",
  "requests.utils.to_key_val_list",
  "requests.utils.unquote_header_value",
  "requests.utils.unquote_unreserved",
  "requests.utils.urldefragauth"
 ]
}