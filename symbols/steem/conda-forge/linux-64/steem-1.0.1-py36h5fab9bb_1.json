{
 "errors": {
  "steembase.exceptions": {
   "exception": "pickle data was truncated",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "_pickle.UnpicklingError: pickle data was truncated",
    ""
   ]
  }
 },
 "symbols": [
  "steem.Steem",
  "steem.__version__",
  "steem.account",
  "steem.account.Account",
  "steem.aes",
  "steem.aes.AESCipher",
  "steem.amount",
  "steem.amount.Amount",
  "steem.amount.a",
  "steem.amount.b",
  "steem.amount.c",
  "steem.block",
  "steem.block.Block",
  "steem.blockchain",
  "steem.blockchain.Blockchain",
  "steem.blockchain.logger",
  "steem.blog",
  "steem.blog.Blog",
  "steem.cli",
  "steem.cli.availableConfigurationKeys",
  "steem.cli.confirm",
  "steem.cli.format_operation_details",
  "steem.cli.get_terminal",
  "steem.cli.legacyentry",
  "steem.cli.print_json",
  "steem.cli.print_permissions",
  "steem.cli.steemtailentry",
  "steem.commit",
  "steem.commit.Commit",
  "steem.commit.STEEMIT_100_PERCENT",
  "steem.commit.STEEMIT_1_PERCENT",
  "steem.commit.log",
  "steem.converter",
  "steem.converter.Converter",
  "steem.dex",
  "steem.dex.Dex",
  "steem.instance",
  "steem.instance.get_config_node_list",
  "steem.instance.set_shared_steemd_instance",
  "steem.instance.shared_steemd_instance",
  "steem.post",
  "steem.post.Post",
  "steem.post.log",
  "steem.profile",
  "steem.profile.DotDict",
  "steem.profile.Profile",
  "steem.profile.keys",
  "steem.profile.values",
  "steem.steem",
  "steem.steem.Steem",
  "steem.steem.s",
  "steem.steemd",
  "steem.steemd.Steemd",
  "steem.steemd.logger",
  "steem.steemd.s",
  "steem.transactionbuilder",
  "steem.transactionbuilder.TransactionBuilder",
  "steem.transactionbuilder.log",
  "steem.utils",
  "steem.utils.MIN_TEXT_LENGTH_FOR_DETECTION",
  "steem.utils.RE_HUNK_HEADER",
  "steem.utils.block_num_from_hash",
  "steem.utils.block_num_from_previous",
  "steem.utils.build_comment_url",
  "steem.utils.canonicalize_url",
  "steem.utils.chunkify",
  "steem.utils.compat_bytes",
  "steem.utils.compat_chr",
  "steem.utils.compat_compose_dictionary",
  "steem.utils.compat_json",
  "steem.utils.construct_identifier",
  "steem.utils.derive_permlink",
  "steem.utils.detect_language",
  "steem.utils.ensure_decoded",
  "steem.utils.env_unlocked",
  "steem.utils.extract_keys_from_meta",
  "steem.utils.findall_patch_hunks",
  "steem.utils.findkeys",
  "steem.utils.fmt_time",
  "steem.utils.is_comment",
  "steem.utils.is_valid_account_name",
  "steem.utils.json_expand",
  "steem.utils.keep_in_dict",
  "steem.utils.logger",
  "steem.utils.parse_time",
  "steem.utils.remove_from_dict",
  "steem.utils.resolve_identifier",
  "steem.utils.sanitize_permlink",
  "steem.utils.strfage",
  "steem.utils.strfdelta",
  "steem.utils.time_diff",
  "steem.utils.time_elapsed",
  "steem.wallet",
  "steem.wallet.Wallet",
  "steem.wallet.log",
  "steem.witness",
  "steem.witness.Witness",
  "steembase.__all__",
  "steembase.account",
  "steembase.account.Address",
  "steembase.account.BrainKey",
  "steembase.account.PasswordKey",
  "steembase.account.PrivateKey",
  "steembase.account.PublicKey",
  "steembase.base58",
  "steembase.base58.BASE58_ALPHABET",
  "steembase.base58.Base58",
  "steembase.base58.PREFIX",
  "steembase.base58.b58decode",
  "steembase.base58.b58encode",
  "steembase.base58.base58CheckDecode",
  "steembase.base58.base58CheckEncode",
  "steembase.base58.base58decode",
  "steembase.base58.base58encode",
  "steembase.base58.doublesha256",
  "steembase.base58.gphBase58CheckDecode",
  "steembase.base58.gphBase58CheckEncode",
  "steembase.base58.known_prefixes",
  "steembase.base58.log",
  "steembase.base58.ripemd160",
  "steembase.bip38",
  "steembase.bip38.SCRYPT_MODULE",
  "steembase.bip38.SaltException",
  "steembase.bip38._encrypt_xor",
  "steembase.bip38.decrypt",
  "steembase.bip38.encrypt",
  "steembase.bip38.log",
  "steembase.chains",
  "steembase.chains.default_prefix",
  "steembase.chains.known_chains",
  "steembase.dictionary",
  "steembase.dictionary.words",
  "steembase.exceptions",
  "steembase.exceptions.RPCError",
  "steembase.http_client",
  "steembase.http_client.HttpClient",
  "steembase.http_client.RPCError",
  "steembase.http_client.logger",
  "steembase.memo",
  "steembase.memo._pad",
  "steembase.memo._unpad",
  "steembase.memo.decode_memo",
  "steembase.memo.default_prefix",
  "steembase.memo.encode_memo",
  "steembase.memo.get_shared_secret",
  "steembase.memo.init_aes",
  "steembase.memo.involved_keys",
  "steembase.operationids",
  "steembase.operationids.op_names",
  "steembase.operationids.operations",
  "steembase.operations",
  "steembase.operations.AccountCreate",
  "steembase.operations.AccountUpdate",
  "steembase.operations.AccountWitnessVote",
  "steembase.operations.Amount",
  "steembase.operations.Beneficiaries",
  "steembase.operations.Beneficiary",
  "steembase.operations.CancelTransferFromSavings",
  "steembase.operations.ChangeRecoveryAccount",
  "steembase.operations.ClaimRewardBalance",
  "steembase.operations.Comment",
  "steembase.operations.Convert",
  "steembase.operations.CustomJson",
  "steembase.operations.DelegateVestingShares",
  "steembase.operations.ExchangeRate",
  "steembase.operations.FeedPublish",
  "steembase.operations.GrapheneObject",
  "steembase.operations.LimitOrderCancel",
  "steembase.operations.LimitOrderCreate",
  "steembase.operations.Memo",
  "steembase.operations.Operation",
  "steembase.operations.Permission",
  "steembase.operations.SetWithdrawVestingRoute",
  "steembase.operations.Transfer",
  "steembase.operations.Vote",
  "steembase.operations.WithdrawVesting",
  "steembase.operations.WitnessProps",
  "steembase.operations.WitnessUpdate",
  "steembase.operations.asset_precision",
  "steembase.operations.default_prefix",
  "steembase.operations.isArgsThisClass",
  "steembase.storage",
  "steembase.storage.Configuration",
  "steembase.storage.DataDir",
  "steembase.storage.Key",
  "steembase.storage.WrongKEKException",
  "steembase.storage.configStorage",
  "steembase.storage.keyStorage",
  "steembase.storage.log",
  "steembase.storage.newKeyStorage",
  "steembase.storage.timeformat",
  "steembase.transactions",
  "steembase.transactions.SignedTransaction",
  "steembase.transactions.USE_SECP256K1",
  "steembase.transactions.fmt_time_from_now",
  "steembase.transactions.get_block_params",
  "steembase.transactions.log",
  "steembase.transactions.time_format",
  "steembase.types",
  "steembase.types.Array",
  "steembase.types.Bool",
  "steembase.types.Bytes",
  "steembase.types.FixedArray",
  "steembase.types.Id",
  "steembase.types.Int16",
  "steembase.types.Int64",
  "steembase.types.JsonObj",
  "steembase.types.Map",
  "steembase.types.ObjectId",
  "steembase.types.Optional",
  "steembase.types.PointInTime",
  "steembase.types.Set",
  "steembase.types.Signature",
  "steembase.types.StaticVariant",
  "steembase.types.String",
  "steembase.types.Uint16",
  "steembase.types.Uint32",
  "steembase.types.Uint64",
  "steembase.types.Uint8",
  "steembase.types.Varint32",
  "steembase.types.Void",
  "steembase.types.VoteId",
  "steembase.types.object_type",
  "steembase.types.timeformat",
  "steembase.types.variable_buffer",
  "steembase.types.varint"
 ]
}