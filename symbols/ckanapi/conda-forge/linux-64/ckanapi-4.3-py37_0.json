{
 "errors": {
  "ckanapi": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "ckanapi.errors": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  },
  "ckanapi.remoteckan": {
   "exception": "Ran out of input",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 122, in load_module",
    "    module_cache_item = parser_cache[hashed_grammar][file_io.path]",
    "KeyError: PosixPath('/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/third_party/typeshed/stdlib/2and3/builtins.pyi')",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 375, in _complete_global_scope",
    "    for filter in filters:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 495, in get_global_filters",
    "    b = next(base_context.inference_state.builtins_module.get_filters(), None)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 128, in builtins_module",
    "    builtins_module, = self.import_module((module_name,), sys_path=())",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 112, in import_module",
    "    self, import_names, sys_path, prefer_stubs=prefer_stubs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 127, in wrapper",
    "    parent_module_value, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 148, in try_to_load_stub_cached",
    "    _try_to_load_stub(inference_state, import_names, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 216, in _try_to_load_stub",
    "    m = _load_from_typeshed(inference_state, python_value_set, parent_module_value, import_names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 270, in _load_from_typeshed",
    "    import_names=import_names,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 276, in _try_to_load_stub_from_file",
    "    stub_module_node = parse_stub_module(inference_state, file_io)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 293, in parse_stub_module",
    "    use_latest_grammar=True",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 200, in parse",
    "    return self.parse_and_get_code(*args, **kwargs)[0]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/__init__.py\", line 197, in parse_and_get_code",
    "    return grammar.parse(code=code, path=path, file_io=file_io, **kwargs), code",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/grammar.py\", line 114, in parse",
    "    module_node = load_module(self._hashed, file_io, cache_path=cache_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 131, in load_module",
    "    cache_path=cache_path",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/parso/cache.py\", line 145, in _load_from_file_system",
    "    module_cache_item = pickle.load(f)",
    "EOFError: Ran out of input",
    ""
   ]
  }
 },
 "symbols": [
  "ckanapi.NotFound",
  "ckanapi.RemoteCKAN",
  "ckanapi.cli.action",
  "ckanapi.cli.action.CLIError",
  "ckanapi.cli.action.action",
  "ckanapi.cli.action.compact_json",
  "ckanapi.cli.action.pretty_json",
  "ckanapi.cli.delete",
  "ckanapi.cli.delete.NotAuthorized",
  "ckanapi.cli.delete.NotFound",
  "ckanapi.cli.delete.SearchIndexError",
  "ckanapi.cli.delete.ValidationError",
  "ckanapi.cli.delete._worker_command_line",
  "ckanapi.cli.delete.compact_json",
  "ckanapi.cli.delete.completion_stats",
  "ckanapi.cli.delete.delete_things",
  "ckanapi.cli.delete.extract_ids_or_names",
  "ckanapi.cli.delete.quiet_int_pipe",
  "ckanapi.cli.delete.unicode",
  "ckanapi.cli.delete.workers",
  "ckanapi.cli.dump",
  "ckanapi.cli.dump.NotAuthorized",
  "ckanapi.cli.dump.NotFound",
  "ckanapi.cli.dump.SearchIndexError",
  "ckanapi.cli.dump.ValidationError",
  "ckanapi.cli.dump._worker_command_line",
  "ckanapi.cli.dump.compact_json",
  "ckanapi.cli.dump.completion_stats",
  "ckanapi.cli.dump.create_datapackage",
  "ckanapi.cli.dump.dump_things",
  "ckanapi.cli.dump.populate_datastore_res_fields",
  "ckanapi.cli.dump.quiet_int_pipe",
  "ckanapi.cli.dump.workers",
  "ckanapi.cli.load",
  "ckanapi.cli.load.NotAuthorized",
  "ckanapi.cli.load.NotFound",
  "ckanapi.cli.load.SearchIndexError",
  "ckanapi.cli.load.ValidationError",
  "ckanapi.cli.load._copy_from_existing_for_update",
  "ckanapi.cli.load._upload_logo",
  "ckanapi.cli.load._upload_resources",
  "ckanapi.cli.load._worker_command_line",
  "ckanapi.cli.load.compact_json",
  "ckanapi.cli.load.completion_stats",
  "ckanapi.cli.load.load_things",
  "ckanapi.cli.load.quiet_int_pipe",
  "ckanapi.cli.load.unicode",
  "ckanapi.cli.load.workers",
  "ckanapi.cli.main",
  "ckanapi.cli.main.CLIError",
  "ckanapi.cli.main.LocalCKAN",
  "ckanapi.cli.main.RemoteCKAN",
  "ckanapi.cli.main.__version__",
  "ckanapi.cli.main._switch_to_paster",
  "ckanapi.cli.main.action",
  "ckanapi.cli.main.delete_things",
  "ckanapi.cli.main.dump_things",
  "ckanapi.cli.main.load_things",
  "ckanapi.cli.main.main",
  "ckanapi.cli.main.parse_arguments",
  "ckanapi.cli.paster",
  "ckanapi.cli.paster.CKANAPICommand",
  "ckanapi.cli.paster._DelegateParsing",
  "ckanapi.cli.paster._Options",
  "ckanapi.cli.paster.main",
  "ckanapi.cli.utils",
  "ckanapi.cli.utils.PYTHON2",
  "ckanapi.cli.utils.compact_json",
  "ckanapi.cli.utils.completion_stats",
  "ckanapi.cli.utils.pretty_json",
  "ckanapi.cli.utils.quiet_int_pipe",
  "ckanapi.cli.workers",
  "ckanapi.cli.workers.worker_pool",
  "ckanapi.common.ActionShortcut",
  "ckanapi.common.CKANAPIError",
  "ckanapi.common.NotAuthorized",
  "ckanapi.common.NotFound",
  "ckanapi.common.SearchError",
  "ckanapi.common.SearchIndexError",
  "ckanapi.common.SearchQueryError",
  "ckanapi.common.ServerIncompatibleError",
  "ckanapi.common.ValidationError",
  "ckanapi.common.is_file_like",
  "ckanapi.common.prepare_action",
  "ckanapi.common.reverse_apicontroller_action",
  "ckanapi.datapackage.CKANAPIError",
  "ckanapi.datapackage.DATAPACKAGE_TYPES",
  "ckanapi.datapackage.DL_CHUNK_SIZE",
  "ckanapi.datapackage._convert_to_datapackage_resource",
  "ckanapi.datapackage._parse_author_and_source",
  "ckanapi.datapackage._parse_ckan_url",
  "ckanapi.datapackage._parse_extras",
  "ckanapi.datapackage._parse_license",
  "ckanapi.datapackage._parse_maintainer",
  "ckanapi.datapackage._parse_notes",
  "ckanapi.datapackage._parse_tags",
  "ckanapi.datapackage._rename_dict_key",
  "ckanapi.datapackage.create_datapackage",
  "ckanapi.datapackage.create_resource",
  "ckanapi.datapackage.dataset_to_datapackage",
  "ckanapi.datapackage.populate_datastore_res_fields",
  "ckanapi.datapackage.populate_schema_from_datastore",
  "ckanapi.datapackage.pretty_json",
  "ckanapi.datapackage.resource_filename",
  "ckanapi.errors.CKANAPIError",
  "ckanapi.errors.CLIError",
  "ckanapi.errors.NotAuthorized",
  "ckanapi.errors.NotFound",
  "ckanapi.errors.SearchError",
  "ckanapi.errors.SearchIndexError",
  "ckanapi.errors.SearchQueryError",
  "ckanapi.errors.ServerIncompatibleError",
  "ckanapi.errors.ValidationError",
  "ckanapi.localckan.ActionShortcut",
  "ckanapi.localckan.CKANAPIError",
  "ckanapi.localckan.COPY_CHUNK",
  "ckanapi.localckan.LocalCKAN",
  "ckanapi.localckan._write_temp_file",
  "ckanapi.remoteckan.RemoteCKAN",
  "ckanapi.testappckan.ActionShortcut",
  "ckanapi.testappckan.CKANAPIError",
  "ckanapi.testappckan.TestAppCKAN",
  "ckanapi.testappckan.prepare_action",
  "ckanapi.testappckan.reverse_apicontroller_action",
  "ckanapi.tests.mock",
  "ckanapi.tests.mock.mock_ckan.httpd",
  "ckanapi.tests.mock.mock_ckan.mock_ckan",
  "ckanapi.tests.test_call",
  "ckanapi.tests.test_call.TestCallAction",
  "ckanapi.tests.test_cli_action",
  "ckanapi.tests.test_cli_action.CLIError",
  "ckanapi.tests.test_cli_action.MockCKAN",
  "ckanapi.tests.test_cli_action.TestCLIAction",
  "ckanapi.tests.test_cli_action.action",
  "ckanapi.tests.test_cli_dump",
  "ckanapi.tests.test_cli_dump.MockCKAN",
  "ckanapi.tests.test_cli_dump.NotFound",
  "ckanapi.tests.test_cli_dump.TestCLIDump",
  "ckanapi.tests.test_cli_dump.dump_things",
  "ckanapi.tests.test_cli_load",
  "ckanapi.tests.test_cli_load.MockCKAN",
  "ckanapi.tests.test_cli_load.NotAuthorized",
  "ckanapi.tests.test_cli_load.NotFound",
  "ckanapi.tests.test_cli_load.TestCLILoad",
  "ckanapi.tests.test_cli_load.ValidationError",
  "ckanapi.tests.test_cli_load.load_things",
  "ckanapi.tests.test_cli_workers",
  "ckanapi.tests.test_cli_workers.TestCLIWorkers",
  "ckanapi.tests.test_cli_workers._MockPopen",
  "ckanapi.tests.test_cli_workers.worker_pool",
  "ckanapi.tests.test_datapackage",
  "ckanapi.tests.test_datapackage.TestCreateDataPackage",
  "ckanapi.tests.test_datapackage.TestCreateResource",
  "ckanapi.tests.test_datapackage.TestDatasetToDataPackage",
  "ckanapi.tests.test_datapackage.TestPopulateSchemaFromDatastore",
  "ckanapi.tests.test_datapackage.TestResourceFilename",
  "ckanapi.tests.test_datapackage.create_datapackage",
  "ckanapi.tests.test_datapackage.create_resource",
  "ckanapi.tests.test_datapackage.dataset_to_datapackage",
  "ckanapi.tests.test_datapackage.populate_schema_from_datastore",
  "ckanapi.tests.test_datapackage.resource_filename",
  "ckanapi.tests.test_remote",
  "ckanapi.tests.test_remote.DEVNULL",
  "ckanapi.tests.test_remote.NUMBER_THING_CSV",
  "ckanapi.tests.test_remote.NotFound",
  "ckanapi.tests.test_remote.RemoteCKAN",
  "ckanapi.tests.test_remote.TEST_CKAN",
  "ckanapi.tests.test_remote.TestRemoteAction",
  "ckanapi.tests.test_testapp",
  "ckanapi.tests.test_testapp.TestTestAPPCKAN",
  "ckanapi.tests.test_testapp.UPLOAD_DATA",
  "ckanapi.tests.test_testapp.wsgi_app",
  "ckanapi.version.__version__"
 ]
}