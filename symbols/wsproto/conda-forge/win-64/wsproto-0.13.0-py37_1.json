{
 "errors": {},
 "symbols": [
  "test.helpers",
  "test.helpers.FakeExtension",
  "test.test_client",
  "test.test_client._make_connection_request",
  "test.test_client._make_handshake",
  "test.test_client.test_broken_handshake",
  "test.test_client.test_connection_request",
  "test.test_client.test_handshake",
  "test.test_client.test_protocol_error",
  "test.test_connection",
  "test.test_connection.test_abnormal_closure",
  "test.test_connection.test_close_whilst_closing",
  "test.test_connection.test_closure",
  "test.test_connection.test_data",
  "test.test_connection.test_frame_protocol_gets_fed_garbage",
  "test.test_connection.test_ping_pong",
  "test.test_connection.test_receive_data_when_closed",
  "test.test_connection.test_send_invalid_event",
  "test.test_connection.test_send_message",
  "test.test_connection.test_unsolicited_pong",
  "test.test_events",
  "test.test_events.SimpleEvent",
  "test.test_events.test_event_construction",
  "test.test_events.test_event_defaults",
  "test.test_events.test_event_equality",
  "test.test_events.test_event_repr",
  "test.test_extensions",
  "test.test_extensions.TestExtension",
  "test.test_frame_protocol",
  "test.test_frame_protocol.FakeValidator",
  "test.test_frame_protocol.TestBuffer",
  "test.test_frame_protocol.TestFrameDecoder",
  "test.test_frame_protocol.TestFrameProtocolReceive",
  "test.test_frame_protocol.TestFrameProtocolSend",
  "test.test_frame_protocol.TestMessageDecoder",
  "test.test_handshake",
  "test.test_handshake.test_initiate_upgrade_as_client",
  "test.test_handshake.test_rejected_handshake",
  "test.test_handshake.test_send_invalid_event",
  "test.test_handshake.test_successful_handshake",
  "test.test_permessage_deflate",
  "test.test_permessage_deflate.TestPerMessageDeflate",
  "test.test_server",
  "test.test_server._make_connection_request",
  "test.test_server._make_handshake",
  "test.test_server.test_connection_request",
  "test.test_server.test_handshake",
  "test.test_server.test_protocol_error",
  "test.test_server.test_upgrade_request",
  "wsproto.ConnectionType",
  "wsproto.H11Handshake",
  "wsproto.WSConnection",
  "wsproto.__all__",
  "wsproto.__version__",
  "wsproto.compat",
  "wsproto.compat.PY2",
  "wsproto.compat.PY3",
  "wsproto.compat.unicode",
  "wsproto.connection",
  "wsproto.connection.CLIENT",
  "wsproto.connection.Connection",
  "wsproto.connection.SERVER",
  "wsproto.events",
  "wsproto.events.AcceptConnection",
  "wsproto.events.BytesMessage",
  "wsproto.events.CloseConnection",
  "wsproto.events.Event",
  "wsproto.events.Message",
  "wsproto.events.Ping",
  "wsproto.events.Pong",
  "wsproto.events.RejectConnection",
  "wsproto.events.RejectData",
  "wsproto.events.Request",
  "wsproto.events.TextMessage",
  "wsproto.extensions",
  "wsproto.extensions.Extension",
  "wsproto.extensions.PerMessageDeflate",
  "wsproto.extensions.SUPPORTED_EXTENSIONS",
  "wsproto.frame_protocol",
  "wsproto.frame_protocol.Buffer",
  "wsproto.frame_protocol.CloseReason",
  "wsproto.frame_protocol.FIN_MASK",
  "wsproto.frame_protocol.Frame",
  "wsproto.frame_protocol.FrameDecoder",
  "wsproto.frame_protocol.FrameProtocol",
  "wsproto.frame_protocol.Header",
  "wsproto.frame_protocol.LOCAL_ONLY_CLOSE_REASONS",
  "wsproto.frame_protocol.MASK_MASK",
  "wsproto.frame_protocol.MAX_CLOSE_REASON",
  "wsproto.frame_protocol.MAX_FRAME_PAYLOAD",
  "wsproto.frame_protocol.MAX_LIBRARY_CLOSE_REASON",
  "wsproto.frame_protocol.MAX_PAYLOAD_EIGHT_BYTE",
  "wsproto.frame_protocol.MAX_PAYLOAD_NORMAL",
  "wsproto.frame_protocol.MAX_PAYLOAD_TWO_BYTE",
  "wsproto.frame_protocol.MAX_PRIVATE_CLOSE_REASON",
  "wsproto.frame_protocol.MAX_PROTOCOL_CLOSE_REASON",
  "wsproto.frame_protocol.MIN_CLOSE_REASON",
  "wsproto.frame_protocol.MIN_LIBRARY_CLOSE_REASON",
  "wsproto.frame_protocol.MIN_PRIVATE_CLOSE_REASON",
  "wsproto.frame_protocol.MIN_PROTOCOL_CLOSE_REASON",
  "wsproto.frame_protocol.MessageDecoder",
  "wsproto.frame_protocol.NULL_MASK",
  "wsproto.frame_protocol.OPCODE_MASK",
  "wsproto.frame_protocol.Opcode",
  "wsproto.frame_protocol.PAYLOAD_LENGTH_EIGHT_BYTE",
  "wsproto.frame_protocol.PAYLOAD_LENGTH_TWO_BYTE",
  "wsproto.frame_protocol.PAYLOAD_LEN_MASK",
  "wsproto.frame_protocol.ParseFailed",
  "wsproto.frame_protocol.RSV1_MASK",
  "wsproto.frame_protocol.RSV2_MASK",
  "wsproto.frame_protocol.RSV3_MASK",
  "wsproto.frame_protocol.RsvBits",
  "wsproto.frame_protocol.XorMaskerNull",
  "wsproto.frame_protocol.XorMaskerSimple",
  "wsproto.frame_protocol._truncate_utf8",
  "wsproto.handshake",
  "wsproto.handshake.H11Handshake",
  "wsproto.handshake.WEBSOCKET_VERSION",
  "wsproto.handshake.handshake_extensions",
  "wsproto.utf8validator",
  "wsproto.utf8validator.UTF8VALIDATOR_DFA",
  "wsproto.utf8validator.UTF8VALIDATOR_DFA_S",
  "wsproto.utf8validator.UTF8_ACCEPT",
  "wsproto.utf8validator.UTF8_REJECT",
  "wsproto.utf8validator.Utf8Validator",
  "wsproto.utf8validator.__all__",
  "wsproto.utilities",
  "wsproto.utilities.ACCEPT_GUID",
  "wsproto.utilities.LocalProtocolError",
  "wsproto.utilities.ProtocolError",
  "wsproto.utilities.RemoteProtocolError",
  "wsproto.utilities.generate_accept_token",
  "wsproto.utilities.generate_nonce",
  "wsproto.utilities.normed_header_dict",
  "wsproto.utilities.split_comma_header"
 ]
}