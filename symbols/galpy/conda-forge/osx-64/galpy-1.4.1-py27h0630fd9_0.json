{
 "errors": {
  "galpy.actionAngle": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/__init__.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngle": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngle.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngle.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleAdiabatic": {
   "exception": "write to closed file",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/utils.py\", line 16, in wrapper",
    "    return list(func(*args, **kwargs))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 160, in _convert_names",
    "    for name in names:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 93, in _break_check",
    "    reachable = _check_if(context, check_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 278, in infer_trailer",
    "    return atom_values.execute(args)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in execute",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 483, in <genexpr>",
    "    return ValueSet.from_sets(c.inference_state.execute(c, arguments) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 133, in wrapper",
    "    return func(value, arguments=arguments, callback=call)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 159, in wrapper",
    "    value.inference_state, arguments, clinic_string))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/arguments.py\", line 94, in iterate_argument_clinic",
    "    value_set = NO_VALUES if argument is None else argument.infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/lazy_value.py\", line 48, in infer",
    "    return self.context.infer_node(self.data)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 208, in _infer_node",
    "    value_set = infer_trailer(context, value_set, trailer)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 273, in infer_trailer",
    "    name_or_str=node",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in py__getattribute__",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 492, in <genexpr>",
    "    return ValueSet.from_sets(c.py__getattribute__(*args, **kwargs) for c in self._set)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 80, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 80, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/value/instance.py\", line 514, in infer",
    "    return super().infer()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 738, in tree_name_to_values",
    "    types = infer_expr_stmt(context, node, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 376, in infer_expr_stmt",
    "    return _infer_expr_stmt(context, stmt, seek_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 409, in _infer_expr_stmt",
    "    value_set = context.infer_node(rhs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 415, in import_module",
    "    is_global_search=True,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 241, in _send",
    "    pickle_dump(data, self._get_process().stdin, PICKLE_PROTOCOL)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 39, in pickle_dump",
    "    pickle.dump(data, file, protocol)",
    "ValueError: write to closed file",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleAxi": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleAxi.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleAxi.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleIsochroneApprox": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleIsochroneApprox.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleIsochroneApprox.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleSpherical": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleSpherical.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleSpherical.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleStaeckel": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleStaeckel.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleStaeckel.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleStaeckel_c": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleStaeckel_c.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleStaeckel_c.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleTorus": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleTorus.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleTorus.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleTorus_c": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleTorus_c.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleTorus_c.py'",
    ""
   ]
  },
  "galpy.actionAngle.actionAngleVertical": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleVertical.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/actionAngle/actionAngleVertical.py'",
    ""
   ]
  },
  "galpy.df": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/__init__.py'",
    ""
   ]
  },
  "galpy.df.df": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/df.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/df.py'",
    ""
   ]
  },
  "galpy.df.diskdf": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/diskdf.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/diskdf.py'",
    ""
   ]
  },
  "galpy.df.evolveddiskdf": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/evolveddiskdf.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/evolveddiskdf.py'",
    ""
   ]
  },
  "galpy.df.jeans": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/jeans.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/jeans.py'",
    ""
   ]
  },
  "galpy.df.quasiisothermaldf": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/quasiisothermaldf.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/quasiisothermaldf.py'",
    ""
   ]
  },
  "galpy.df.streamdf": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/streamdf.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/streamdf.py'",
    ""
   ]
  },
  "galpy.df.streamgapdf": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/streamgapdf.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/streamgapdf.py'",
    ""
   ]
  },
  "galpy.df.surfaceSigmaProfile": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/surfaceSigmaProfile.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 36, in single_file_extraction",
    "    path=file_name, project=jedi.Project(\"\".join(top_dir))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpqh46_s5k/lib/python2.7/site-packages/galpy/df/surfaceSigmaProfile.py'",
    ""
   ]
  }
 },
 "symbols": [
  "galpy.__version__",
  "galpy.actionAngle",
  "galpy.actionAngle.actionAngleAdiabaticGrid._PRINTOUTSIDEGRID",
  "galpy.actionAngle.actionAngleAdiabaticGrid._evaluatePotentials",
  "galpy.actionAngle.actionAngleAdiabaticGrid.actionAngleAdiabaticGrid",
  "galpy.actionAngle.actionAngleAdiabaticGrid.flatten",
  "galpy.actionAngle.actionAngleAdiabaticGrid.multi",
  "galpy.actionAngle.actionAngleAdiabatic_c.PY3",
  "galpy.actionAngle.actionAngleAdiabatic_c._ext_loaded",
  "galpy.actionAngle.actionAngleAdiabatic_c._ext_suffix",
  "galpy.actionAngle.actionAngleAdiabatic_c._lib",
  "galpy.actionAngle.actionAngleAdiabatic_c._parse_pot",
  "galpy.actionAngle.actionAngleAdiabatic_c.actionAngleAdiabatic_c",
  "galpy.actionAngle.actionAngleAdiabatic_c.actionAngleRperiRapZmaxAdiabatic_c",
  "galpy.actionAngle.actionAngleAdiabatic_c.e",
  "galpy.actionAngle.actionAngleAdiabatic_c.galpyWarning",
  "galpy.actionAngle.actionAngleAdiabatic_c.outerr",
  "galpy.actionAngle.actionAngleAdiabatic_c.path",
  "galpy.actionAngle.actionAngleIsochrone.IsochronePotential",
  "galpy.actionAngle.actionAngleIsochrone._APY_LOADED",
  "galpy.actionAngle.actionAngleIsochrone.actionAngleIsochrone",
  "galpy.actionAngle.actionAngleIsochrone.galpyWarning",
  "galpy.actionAngle.actionAngleStaeckelGrid._APY_LOADED",
  "galpy.actionAngle.actionAngleStaeckelGrid._Efunc",
  "galpy.actionAngle.actionAngleStaeckelGrid._PRINTOUTSIDEGRID",
  "galpy.actionAngle.actionAngleStaeckelGrid._evaluatePotentials",
  "galpy.actionAngle.actionAngleStaeckelGrid._invEfunc",
  "galpy.actionAngle.actionAngleStaeckelGrid._u0Eq",
  "galpy.actionAngle.actionAngleStaeckelGrid.actionAngleStaeckelGrid",
  "galpy.actionAngle.actionAngleStaeckelGrid.actionAngle_physical_input",
  "galpy.actionAngle.actionAngleStaeckelGrid.bovy_coords",
  "galpy.actionAngle.actionAngleStaeckelGrid.flatten",
  "galpy.actionAngle.actionAngleStaeckelGrid.multi",
  "galpy.actionAngle.actionAngleStaeckelGrid.physical_conversion_actionAngle",
  "galpy.df",
  "galpy.orbit",
  "galpy.orbit.FullOrbit",
  "galpy.orbit.FullOrbit.FullOrbit",
  "galpy.orbit.FullOrbit._FullEOM",
  "galpy.orbit.FullOrbit._ORBFITNORMDIST",
  "galpy.orbit.FullOrbit._ORBFITNORMPMRADEC",
  "galpy.orbit.FullOrbit._ORBFITNORMRADEC",
  "galpy.orbit.FullOrbit._ORBFITNORMVLOS",
  "galpy.orbit.FullOrbit._SCIPY_VERSION",
  "galpy.orbit.FullOrbit._check_c",
  "galpy.orbit.FullOrbit._evaluateRforces",
  "galpy.orbit.FullOrbit._evaluatephiforces",
  "galpy.orbit.FullOrbit._evaluatezforces",
  "galpy.orbit.FullOrbit._fit_orbit",
  "galpy.orbit.FullOrbit._integrateFullOrbit",
  "galpy.orbit.FullOrbit._isDissipative",
  "galpy.orbit.FullOrbit._rectForce",
  "galpy.orbit.FullOrbit.bovy_coords",
  "galpy.orbit.FullOrbit.bovy_plot",
  "galpy.orbit.FullOrbit.bovy_symplecticode",
  "galpy.orbit.FullOrbit.evaluateDensities",
  "galpy.orbit.FullOrbit.evaluatePotentials",
  "galpy.orbit.FullOrbit.ext_loaded",
  "galpy.orbit.FullOrbit.galpyWarning",
  "galpy.orbit.FullOrbit.physical_conversion",
  "galpy.orbit.Orbit",
  "galpy.orbit.Orbit.Orbit",
  "galpy.orbit.Orbit._APY3",
  "galpy.orbit.Orbit._APY_LOADED",
  "galpy.orbit.Orbit._APY_UNITS",
  "galpy.orbit.Orbit._ASTROQUERY_LOADED",
  "galpy.orbit.Orbit._K",
  "galpy.orbit.Orbit._check_consistent_units",
  "galpy.orbit.Orbit._check_integrate_dt",
  "galpy.orbit.Orbit._check_potential_dim",
  "galpy.orbit.Orbit._isNonAxi",
  "galpy.orbit.Orbit.bovy_conversion",
  "galpy.orbit.Orbit.bovy_coords",
  "galpy.orbit.Orbit.config",
  "galpy.orbit.Orbit.flatten",
  "galpy.orbit.Orbit.galpyWarning",
  "galpy.orbit.Orbit.physical_conversion",
  "galpy.orbit.Orbit.rl",
  "galpy.orbit.Orbit.vxvv_units",
  "galpy.orbit.OrbitTop",
  "galpy.orbit.OrbitTop.OrbitTop",
  "galpy.orbit.OrbitTop.PotentialError",
  "galpy.orbit.OrbitTop._APY3",
  "galpy.orbit.OrbitTop._APY_LOADED",
  "galpy.orbit.OrbitTop._KWINTERP",
  "galpy.orbit.OrbitTop._OLD_SCIPY",
  "galpy.orbit.OrbitTop._check_roSet",
  "galpy.orbit.OrbitTop._check_voSet",
  "galpy.orbit.OrbitTop._fakeInterp",
  "galpy.orbit.OrbitTop.actionAngle",
  "galpy.orbit.OrbitTop.bovy_conversion",
  "galpy.orbit.OrbitTop.bovy_coords",
  "galpy.orbit.OrbitTop.bovy_plot",
  "galpy.orbit.OrbitTop.config",
  "galpy.orbit.OrbitTop.galpyWarning",
  "galpy.orbit.OrbitTop.physical_conversion",
  "galpy.orbit.RZOrbit",
  "galpy.orbit.RZOrbit.RZOrbit",
  "galpy.orbit.RZOrbit._RZEOM",
  "galpy.orbit.RZOrbit._check_c",
  "galpy.orbit.RZOrbit._evaluateRforces",
  "galpy.orbit.RZOrbit._evaluatezforces",
  "galpy.orbit.RZOrbit._integrateRZOrbit",
  "galpy.orbit.RZOrbit.bovy_plot",
  "galpy.orbit.RZOrbit.bovy_symplecticode",
  "galpy.orbit.RZOrbit.evaluateDensities",
  "galpy.orbit.RZOrbit.evaluatePotentials",
  "galpy.orbit.RZOrbit.galpyWarning",
  "galpy.orbit.RZOrbit.physical_conversion",
  "galpy.orbit.integrateFullOrbit",
  "galpy.orbit.integrateFullOrbit.PY3",
  "galpy.orbit.integrateFullOrbit._ext_loaded",
  "galpy.orbit.integrateFullOrbit._ext_suffix",
  "galpy.orbit.integrateFullOrbit._lib",
  "galpy.orbit.integrateFullOrbit._parse_pot",
  "galpy.orbit.integrateFullOrbit._parse_scf_pot",
  "galpy.orbit.integrateFullOrbit.e",
  "galpy.orbit.integrateFullOrbit.galpyWarning",
  "galpy.orbit.integrateFullOrbit.integrateFullOrbit_c",
  "galpy.orbit.integrateFullOrbit.integrateFullOrbit_dxdv_c",
  "galpy.orbit.integrateFullOrbit.outerr",
  "galpy.orbit.integrateFullOrbit.path",
  "galpy.orbit.integrateFullOrbit.potential",
  "galpy.orbit.integratePlanarOrbit",
  "galpy.orbit.integratePlanarOrbit.PY3",
  "galpy.orbit.integratePlanarOrbit._ext_loaded",
  "galpy.orbit.integratePlanarOrbit._ext_suffix",
  "galpy.orbit.integratePlanarOrbit._lib",
  "galpy.orbit.integratePlanarOrbit._parse_integrator",
  "galpy.orbit.integratePlanarOrbit._parse_pot",
  "galpy.orbit.integratePlanarOrbit._parse_tol",
  "galpy.orbit.integratePlanarOrbit.e",
  "galpy.orbit.integratePlanarOrbit.galpyWarning",
  "galpy.orbit.integratePlanarOrbit.integratePlanarOrbit_c",
  "galpy.orbit.integratePlanarOrbit.integratePlanarOrbit_dxdv_c",
  "galpy.orbit.integratePlanarOrbit.outerr",
  "galpy.orbit.integratePlanarOrbit.parentWrapperPotential",
  "galpy.orbit.integratePlanarOrbit.path",
  "galpy.orbit.integratePlanarOrbit.planarPotentialFromFullPotential",
  "galpy.orbit.integratePlanarOrbit.planarPotentialFromRZPotential",
  "galpy.orbit.integratePlanarOrbit.potential",
  "galpy.orbit.linearOrbit",
  "galpy.orbit.linearOrbit._evaluatelinearForces",
  "galpy.orbit.linearOrbit._integrateLinearOrbit",
  "galpy.orbit.linearOrbit._linearEOM",
  "galpy.orbit.linearOrbit.bovy_plot",
  "galpy.orbit.linearOrbit.bovy_symplecticode",
  "galpy.orbit.linearOrbit.evaluatelinearPotentials",
  "galpy.orbit.linearOrbit.linearOrbit",
  "galpy.orbit.linearOrbit.physical_conversion",
  "galpy.orbit.planarOrbit",
  "galpy.orbit.planarOrbit.Potential",
  "galpy.orbit.planarOrbit.RZToplanarPotential",
  "galpy.orbit.planarOrbit._EOM",
  "galpy.orbit.planarOrbit._REOM",
  "galpy.orbit.planarOrbit._check_c",
  "galpy.orbit.planarOrbit._evaluateplanarPotentials",
  "galpy.orbit.planarOrbit._evaluateplanarRforces",
  "galpy.orbit.planarOrbit._evaluateplanarphiforces",
  "galpy.orbit.planarOrbit._integrateOrbit",
  "galpy.orbit.planarOrbit._integrateROrbit",
  "galpy.orbit.planarOrbit._parse_warnmessage",
  "galpy.orbit.planarOrbit._rectForce",
  "galpy.orbit.planarOrbit.bovy_symplecticode",
  "galpy.orbit.planarOrbit.ext_loaded",
  "galpy.orbit.planarOrbit.galpyWarning",
  "galpy.orbit.planarOrbit.physical_conversion",
  "galpy.orbit.planarOrbit.planarOrbit",
  "galpy.orbit.planarOrbit.planarROrbit",
  "galpy.orbit.planarOrbit.toPlanarPotential",
  "galpy.potential",
  "galpy.potential.BurkertPotential",
  "galpy.potential.BurkertPotential.BurkertPotential",
  "galpy.potential.ChandrasekharDynamicalFrictionForce",
  "galpy.potential.ChandrasekharDynamicalFrictionForce.ChandrasekharDynamicalFrictionForce",
  "galpy.potential.ChandrasekharDynamicalFrictionForce._INVSQRTPI",
  "galpy.potential.ChandrasekharDynamicalFrictionForce._INVSQRTTWO",
  "galpy.potential.ChandrasekharDynamicalFrictionForce.bovy_conversion",
  "galpy.potential.CorotatingRotationWrapperPotential",
  "galpy.potential.CorotatingRotationWrapperPotential.CorotatingRotationWrapperPotential",
  "galpy.potential.CorotatingRotationWrapperPotential.bovy_conversion",
  "galpy.potential.CosmphiDiskPotential",
  "galpy.potential.CosmphiDiskPotential.CosmphiDiskPotential",
  "galpy.potential.CosmphiDiskPotential.LopsidedDiskPotential",
  "galpy.potential.CosmphiDiskPotential._degtorad",
  "galpy.potential.DehnenBarPotential",
  "galpy.potential.DehnenBarPotential.DehnenBarPotential",
  "galpy.potential.DehnenBarPotential._degtorad",
  "galpy.potential.DehnenBarPotential.bovy_conversion",
  "galpy.potential.DehnenSmoothWrapperPotential",
  "galpy.potential.DehnenSmoothWrapperPotential.DehnenSmoothWrapperPotential",
  "galpy.potential.DehnenSmoothWrapperPotential.bovy_conversion",
  "galpy.potential.DiskSCFPotential",
  "galpy.potential.DiskSCFPotential.DiskSCFPotential",
  "galpy.potential.DiskSCFPotential._SCIPY_VERSION",
  "galpy.potential.DiskSCFPotential.phiME_dens",
  "galpy.potential.DissipativeForce",
  "galpy.potential.DissipativeForce.DissipativeForce",
  "galpy.potential.DissipativeForce._isDissipative",
  "galpy.potential.DissipativeForce.physical_conversion",
  "galpy.potential.DissipativeForce.potential_physical_input",
  "galpy.potential.DoubleExponentialDiskPotential",
  "galpy.potential.DoubleExponentialDiskPotential.DoubleExponentialDiskPotential",
  "galpy.potential.DoubleExponentialDiskPotential._MAXITER",
  "galpy.potential.DoubleExponentialDiskPotential._TOL",
  "galpy.potential.DoubleExponentialDiskPotential.galpyWarning",
  "galpy.potential.EllipsoidalPotential",
  "galpy.potential.EllipsoidalPotential.EllipsoidalPotential",
  "galpy.potential.EllipsoidalPotential._2ndDerivInt",
  "galpy.potential.EllipsoidalPotential._forceInt",
  "galpy.potential.EllipsoidalPotential._potInt",
  "galpy.potential.EllipsoidalPotential._rotate_to_arbitrary_vector",
  "galpy.potential.EllipsoidalPotential.bovy_coords",
  "galpy.potential.EllipticalDiskPotential",
  "galpy.potential.EllipticalDiskPotential.EllipticalDiskPotential",
  "galpy.potential.EllipticalDiskPotential._degtorad",
  "galpy.potential.EllipticalDiskPotential.bovy_conversion",
  "galpy.potential.FerrersPotential",
  "galpy.potential.FerrersPotential.FerrersPotential",
  "galpy.potential.FerrersPotential._2ndDerivInt",
  "galpy.potential.FerrersPotential._FracInt",
  "galpy.potential.FerrersPotential._forceInt",
  "galpy.potential.FerrersPotential._potInt",
  "galpy.potential.FerrersPotential.bovy_conversion",
  "galpy.potential.FerrersPotential.bovy_coords",
  "galpy.potential.FerrersPotential.lowerlim",
  "galpy.potential.FlattenedPowerPotential",
  "galpy.potential.FlattenedPowerPotential.FlattenedPowerPotential",
  "galpy.potential.FlattenedPowerPotential._CORE",
  "galpy.potential.Force",
  "galpy.potential.Force.Force",
  "galpy.potential.Force._APY_LOADED",
  "galpy.potential.Force.bovy_conversion",
  "galpy.potential.Force.config",
  "galpy.potential.Force.physical_conversion",
  "galpy.potential.Force.potential_physical_input",
  "galpy.potential.ForceSoftening",
  "galpy.potential.ForceSoftening.ForceSoftening",
  "galpy.potential.ForceSoftening.PlummerSoftening",
  "galpy.potential.GaussianAmplitudeWrapperPotential",
  "galpy.potential.GaussianAmplitudeWrapperPotential.GaussianAmplitudeWrapperPotential",
  "galpy.potential.GaussianAmplitudeWrapperPotential.bovy_conversion",
  "galpy.potential.HenonHeilesPotential",
  "galpy.potential.HenonHeilesPotential.HenonHeilesPotential",
  "galpy.potential.HernquistPotential",
  "galpy.potential.InterpSnapshotRZPotential",
  "galpy.potential.IsochronePotential",
  "galpy.potential.IsochronePotential.IsochronePotential",
  "galpy.potential.JaffePotential",
  "galpy.potential.KGPotential",
  "galpy.potential.KGPotential.KGPotential",
  "galpy.potential.KGPotential.bovy_conversion",
  "galpy.potential.KeplerPotential",
  "galpy.potential.KuzminDiskPotential",
  "galpy.potential.KuzminDiskPotential.KuzminDiskPotential",
  "galpy.potential.KuzminKutuzovStaeckelPotential",
  "galpy.potential.KuzminKutuzovStaeckelPotential.KuzminKutuzovStaeckelPotential",
  "galpy.potential.KuzminKutuzovStaeckelPotential.bovy_coords",
  "galpy.potential.LinShuReductionFactor",
  "galpy.potential.LogarithmicHaloPotential",
  "galpy.potential.LogarithmicHaloPotential.LogarithmicHaloPotential",
  "galpy.potential.LogarithmicHaloPotential._CORE",
  "galpy.potential.LogarithmicHaloPotential.galpyWarning",
  "galpy.potential.LopsidedDiskPotential",
  "galpy.potential.MN3ExponentialDiskPotential",
  "galpy.potential.MN3ExponentialDiskPotential.MN3ExponentialDiskPotential",
  "galpy.potential.MN3ExponentialDiskPotential._a1_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._a1_tab2",
  "galpy.potential.MN3ExponentialDiskPotential._a2_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._a2_tab2",
  "galpy.potential.MN3ExponentialDiskPotential._a3_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._a3_tab2",
  "galpy.potential.MN3ExponentialDiskPotential._b_exphz",
  "galpy.potential.MN3ExponentialDiskPotential._b_sechhz",
  "galpy.potential.MN3ExponentialDiskPotential._mass1_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._mass1_tab2",
  "galpy.potential.MN3ExponentialDiskPotential._mass2_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._mass2_tab2",
  "galpy.potential.MN3ExponentialDiskPotential._mass3_tab1",
  "galpy.potential.MN3ExponentialDiskPotential._mass3_tab2",
  "galpy.potential.MN3ExponentialDiskPotential.galpyWarning",
  "galpy.potential.MWPotential",
  "galpy.potential.MWPotential2014",
  "galpy.potential.MiyamotoNagaiPotential",
  "galpy.potential.MiyamotoNagaiPotential.MiyamotoNagaiPotential",
  "galpy.potential.MovingObjectPotential",
  "galpy.potential.MovingObjectPotential.MovingObjectPotential",
  "galpy.potential.MovingObjectPotential._cyldiffdist",
  "galpy.potential.MovingObjectPotential._cyldist",
  "galpy.potential.NFWPotential",
  "galpy.potential.PerfectEllipsoidPotential",
  "galpy.potential.PerfectEllipsoidPotential.PerfectEllipsoidPotential",
  "galpy.potential.PlummerPotential",
  "galpy.potential.PlummerPotential.PlummerPotential",
  "galpy.potential.PlummerSoftening",
  "galpy.potential.Potential",
  "galpy.potential.Potential.Potential",
  "galpy.potential.Potential._check_c",
  "galpy.potential.Potential._corotationR_eq",
  "galpy.potential.Potential._dim",
  "galpy.potential.Potential._evaluatePotentials",
  "galpy.potential.Potential._evaluateRforces",
  "galpy.potential.Potential._evaluatephiforces",
  "galpy.potential.Potential._evaluatezforces",
  "galpy.potential.Potential._flatten_list",
  "galpy.potential.Potential._isNonAxi",
  "galpy.potential.Potential._lindbladR_eq",
  "galpy.potential.Potential._rlFindStart",
  "galpy.potential.Potential._rlfunc",
  "galpy.potential.Potential.bovy_coords",
  "galpy.potential.Potential.bovy_plot",
  "galpy.potential.Potential.epifreq",
  "galpy.potential.Potential.evaluateDensities",
  "galpy.potential.Potential.evaluatePotentials",
  "galpy.potential.Potential.evaluateR2derivs",
  "galpy.potential.Potential.evaluateRforces",
  "galpy.potential.Potential.evaluateRphiderivs",
  "galpy.potential.Potential.evaluateRzderivs",
  "galpy.potential.Potential.evaluateSurfaceDensities",
  "galpy.potential.Potential.evaluatephi2derivs",
  "galpy.potential.Potential.evaluatephiforces",
  "galpy.potential.Potential.evaluater2derivs",
  "galpy.potential.Potential.evaluaterforces",
  "galpy.potential.Potential.evaluatez2derivs",
  "galpy.potential.Potential.evaluatezforces",
  "galpy.potential.Potential.flatten",
  "galpy.potential.Potential.freq_in_Gyr",
  "galpy.potential.Potential.kms_to_kpcGyrDecorator",
  "galpy.potential.Potential.lindbladR",
  "galpy.potential.Potential.nemo_accname",
  "galpy.potential.Potential.nemo_accpars",
  "galpy.potential.Potential.omegac",
  "galpy.potential.Potential.physical_conversion",
  "galpy.potential.Potential.plotDensities",
  "galpy.potential.Potential.plotPotentials",
  "galpy.potential.Potential.potential_physical_input",
  "galpy.potential.Potential.rl",
  "galpy.potential.Potential.rtide",
  "galpy.potential.Potential.ttensor",
  "galpy.potential.Potential.turn_physical_off",
  "galpy.potential.Potential.turn_physical_on",
  "galpy.potential.Potential.velocity_in_kpcGyr",
  "galpy.potential.Potential.verticalfreq",
  "galpy.potential.Potential.vterm",
  "galpy.potential.PotentialError",
  "galpy.potential.PowerSphericalPotential",
  "galpy.potential.PowerSphericalPotential.KeplerPotential",
  "galpy.potential.PowerSphericalPotential.PowerSphericalPotential",
  "galpy.potential.PowerSphericalPotentialwCutoff",
  "galpy.potential.PowerSphericalPotentialwCutoff.PowerSphericalPotentialwCutoff",
  "galpy.potential.PseudoIsothermalPotential",
  "galpy.potential.PseudoIsothermalPotential.PseudoIsothermalPotential",
  "galpy.potential.RZToplanarPotential",
  "galpy.potential.RZToverticalPotential",
  "galpy.potential.RazorThinExponentialDiskPotential",
  "galpy.potential.RazorThinExponentialDiskPotential.RazorThinExponentialDiskPotential",
  "galpy.potential.RazorThinExponentialDiskPotential._MAXITER",
  "galpy.potential.RazorThinExponentialDiskPotential._TOL",
  "galpy.potential.RazorThinExponentialDiskPotential.galpyWarning",
  "galpy.potential.RingPotential",
  "galpy.potential.RingPotential.RingPotential",
  "galpy.potential.SCFPotential",
  "galpy.potential.SCFPotential.SCFPotential",
  "galpy.potential.SCFPotential._C",
  "galpy.potential.SCFPotential._cartesian",
  "galpy.potential.SCFPotential._dC",
  "galpy.potential.SCFPotential._gaussianQuadrature",
  "galpy.potential.SCFPotential._xiToR",
  "galpy.potential.SCFPotential.bovy_coords",
  "galpy.potential.SCFPotential.scf_compute_coeffs",
  "galpy.potential.SnapshotRZPotential",
  "galpy.potential.SnapshotRZPotential.InterpSnapshotRZPotential",
  "galpy.potential.SnapshotRZPotential.SnapshotRZPotential",
  "galpy.potential.SnapshotRZPotential._PYNBODY_LOADED",
  "galpy.potential.SoftenedNeedleBarPotential",
  "galpy.potential.SoftenedNeedleBarPotential.SoftenedNeedleBarPotential",
  "galpy.potential.SoftenedNeedleBarPotential.bovy_conversion",
  "galpy.potential.SoftenedNeedleBarPotential.bovy_coords",
  "galpy.potential.SolidBodyRotationWrapperPotential",
  "galpy.potential.SolidBodyRotationWrapperPotential.SolidBodyRotationWrapperPotential",
  "galpy.potential.SolidBodyRotationWrapperPotential.bovy_conversion",
  "galpy.potential.SphericalShellPotential",
  "galpy.potential.SphericalShellPotential.SphericalShellPotential",
  "galpy.potential.SpiralArmsPotential",
  "galpy.potential.SpiralArmsPotential.SpiralArmsPotential",
  "galpy.potential.SpiralArmsPotential.bovy_conversion",
  "galpy.potential.SpiralArmsPotential.check_inputs_not_arrays",
  "galpy.potential.SteadyLogSpiralPotential",
  "galpy.potential.SteadyLogSpiralPotential.SteadyLogSpiralPotential",
  "galpy.potential.SteadyLogSpiralPotential._degtorad",
  "galpy.potential.SteadyLogSpiralPotential.bovy_conversion",
  "galpy.potential.TransientLogSpiralPotential",
  "galpy.potential.TransientLogSpiralPotential.TransientLogSpiralPotential",
  "galpy.potential.TransientLogSpiralPotential._degtorad",
  "galpy.potential.TransientLogSpiralPotential.bovy_conversion",
  "galpy.potential.TriaxialHernquistPotential",
  "galpy.potential.TriaxialJaffePotential",
  "galpy.potential.TriaxialNFWPotential",
  "galpy.potential.TwoPowerSphericalPotential",
  "galpy.potential.TwoPowerSphericalPotential.HernquistPotential",
  "galpy.potential.TwoPowerSphericalPotential.JaffePotential",
  "galpy.potential.TwoPowerSphericalPotential.NFWPotential",
  "galpy.potential.TwoPowerSphericalPotential.TwoPowerIntegerSphericalPotential",
  "galpy.potential.TwoPowerSphericalPotential.TwoPowerSphericalPotential",
  "galpy.potential.TwoPowerSphericalPotential.bovy_conversion",
  "galpy.potential.TwoPowerTriaxialPotential",
  "galpy.potential.TwoPowerTriaxialPotential.TriaxialHernquistPotential",
  "galpy.potential.TwoPowerTriaxialPotential.TriaxialJaffePotential",
  "galpy.potential.TwoPowerTriaxialPotential.TriaxialNFWPotential",
  "galpy.potential.TwoPowerTriaxialPotential.TwoPowerTriaxialPotential",
  "galpy.potential.WrapperPotential",
  "galpy.potential.WrapperPotential.WrapperPotential",
  "galpy.potential.WrapperPotential.parentWrapperPotential",
  "galpy.potential.WrapperPotential.planarWrapperPotential",
  "galpy.potential._dim",
  "galpy.potential._isNonAxi",
  "galpy.potential.calcEscapecurve",
  "galpy.potential.calcRotcurve",
  "galpy.potential.dvcircdR",
  "galpy.potential.epifreq",
  "galpy.potential.evaluateDensities",
  "galpy.potential.evaluatePotentials",
  "galpy.potential.evaluateR2derivs",
  "galpy.potential.evaluateRforces",
  "galpy.potential.evaluateRphiderivs",
  "galpy.potential.evaluateRzderivs",
  "galpy.potential.evaluateSurfaceDensities",
  "galpy.potential.evaluatelinearForces",
  "galpy.potential.evaluatelinearPotentials",
  "galpy.potential.evaluatephi2derivs",
  "galpy.potential.evaluatephiforces",
  "galpy.potential.evaluateplanarPotentials",
  "galpy.potential.evaluateplanarR2derivs",
  "galpy.potential.evaluateplanarRforces",
  "galpy.potential.evaluateplanarphiforces",
  "galpy.potential.evaluater2derivs",
  "galpy.potential.evaluaterforces",
  "galpy.potential.evaluatez2derivs",
  "galpy.potential.evaluatezforces",
  "galpy.potential.flatten",
  "galpy.potential.flattening",
  "galpy.potential.interpRZPotential",
  "galpy.potential.interpRZPotential.PY3",
  "galpy.potential.interpRZPotential._DEBUG",
  "galpy.potential.interpRZPotential._ext_suffix",
  "galpy.potential.interpRZPotential._lib",
  "galpy.potential.interpRZPotential.calc_2dsplinecoeffs_c",
  "galpy.potential.interpRZPotential.calc_potential_c",
  "galpy.potential.interpRZPotential.e",
  "galpy.potential.interpRZPotential.eval_force_c",
  "galpy.potential.interpRZPotential.eval_potential_c",
  "galpy.potential.interpRZPotential.ext_loaded",
  "galpy.potential.interpRZPotential.galpyWarning",
  "galpy.potential.interpRZPotential.interpRZPotential",
  "galpy.potential.interpRZPotential.multi",
  "galpy.potential.interpRZPotential.outerr",
  "galpy.potential.interpRZPotential.path",
  "galpy.potential.interpRZPotential.physical_conversion",
  "galpy.potential.interpRZPotential.scalarDecorator",
  "galpy.potential.interpRZPotential.scalarVectorDecorator",
  "galpy.potential.interpRZPotential.sign",
  "galpy.potential.interpRZPotential.zsymDecorator",
  "galpy.potential.lindbladR",
  "galpy.potential.linearPotential",
  "galpy.potential.linearPotential._APY_LOADED",
  "galpy.potential.linearPotential._evaluatelinearForces",
  "galpy.potential.linearPotential._evaluatelinearPotentials",
  "galpy.potential.linearPotential.bovy_plot",
  "galpy.potential.linearPotential.config",
  "galpy.potential.linearPotential.evaluatelinearForces",
  "galpy.potential.linearPotential.evaluatelinearPotentials",
  "galpy.potential.linearPotential.linearPotential",
  "galpy.potential.linearPotential.physical_conversion",
  "galpy.potential.linearPotential.plotlinearPotentials",
  "galpy.potential.linearPotential.potential_physical_input",
  "galpy.potential.nemo_accname",
  "galpy.potential.nemo_accpars",
  "galpy.potential.omegac",
  "galpy.potential.planarAxiPotential",
  "galpy.potential.planarPotential",
  "galpy.potential.planarPotential.LinShuReductionFactor",
  "galpy.potential.planarPotential.RZToplanarPotential",
  "galpy.potential.planarPotential._APY_LOADED",
  "galpy.potential.planarPotential._evaluateplanarPotentials",
  "galpy.potential.planarPotential._evaluateplanarRforces",
  "galpy.potential.planarPotential._evaluateplanarphiforces",
  "galpy.potential.planarPotential.bovy_plot",
  "galpy.potential.planarPotential.config",
  "galpy.potential.planarPotential.evaluateplanarPotentials",
  "galpy.potential.planarPotential.evaluateplanarR2derivs",
  "galpy.potential.planarPotential.evaluateplanarRforces",
  "galpy.potential.planarPotential.evaluateplanarphiforces",
  "galpy.potential.planarPotential.freq_in_Gyr",
  "galpy.potential.planarPotential.physical_conversion",
  "galpy.potential.planarPotential.planarAxiPotential",
  "galpy.potential.planarPotential.planarPotential",
  "galpy.potential.planarPotential.planarPotentialFromFullPotential",
  "galpy.potential.planarPotential.planarPotentialFromRZPotential",
  "galpy.potential.planarPotential.plotplanarPotentials",
  "galpy.potential.planarPotential.potential_physical_input",
  "galpy.potential.planarPotential.toPlanarPotential",
  "galpy.potential.plotDensities",
  "galpy.potential.plotEscapecurve",
  "galpy.potential.plotEscapecurve._APY_LOADED",
  "galpy.potential.plotEscapecurve._INF",
  "galpy.potential.plotEscapecurve.bovy_plot",
  "galpy.potential.plotEscapecurve.calcEscapecurve",
  "galpy.potential.plotEscapecurve.physical_conversion",
  "galpy.potential.plotEscapecurve.plotEscapecurve",
  "galpy.potential.plotEscapecurve.potential_physical_input",
  "galpy.potential.plotEscapecurve.vesc",
  "galpy.potential.plotPotentials",
  "galpy.potential.plotRotcurve",
  "galpy.potential.plotRotcurve._APY_LOADED",
  "galpy.potential.plotRotcurve.bovy_plot",
  "galpy.potential.plotRotcurve.calcRotcurve",
  "galpy.potential.plotRotcurve.dvcircdR",
  "galpy.potential.plotRotcurve.physical_conversion",
  "galpy.potential.plotRotcurve.plotRotcurve",
  "galpy.potential.plotRotcurve.potential_physical_input",
  "galpy.potential.plotRotcurve.vcirc",
  "galpy.potential.plotlinearPotentials",
  "galpy.potential.plotplanarPotentials",
  "galpy.potential.rl",
  "galpy.potential.rtide",
  "galpy.potential.scf_compute_coeffs",
  "galpy.potential.scf_compute_coeffs_axi",
  "galpy.potential.scf_compute_coeffs_spherical",
  "galpy.potential.toPlanarPotential",
  "galpy.potential.ttensor",
  "galpy.potential.turn_physical_off",
  "galpy.potential.turn_physical_on",
  "galpy.potential.vcirc",
  "galpy.potential.verticalPotential",
  "galpy.potential.verticalPotential.RZToverticalPotential",
  "galpy.potential.verticalPotential._APY_LOADED",
  "galpy.potential.verticalPotential.verticalPotential",
  "galpy.potential.verticalfreq",
  "galpy.potential.vesc",
  "galpy.potential.vterm",
  "galpy.snapshot",
  "galpy.snapshot.GadgetSnapshot",
  "galpy.snapshot.GadgetSnapshot.GadgetSnapshot",
  "galpy.snapshot.GadgetSnapshot._PYNBODYENABLED",
  "galpy.snapshot.Snapshot",
  "galpy.snapshot.Snapshot.Orbit",
  "galpy.snapshot.Snapshot.RZToplanarPotential",
  "galpy.snapshot.Snapshot.Snapshot",
  "galpy.snapshot.Snapshot.bovy_plot",
  "galpy.snapshot.directnbody",
  "galpy.snapshot.directnbody._direct_nbody_force",
  "galpy.snapshot.directnbody._direct_nbody_step",
  "galpy.snapshot.directnbody._external_force",
  "galpy.snapshot.directnbody._plummer_soft",
  "galpy.snapshot.directnbody.bovy_symplecticode",
  "galpy.snapshot.directnbody.direct_nbody",
  "galpy.snapshot.directnbody.evaluateRforces",
  "galpy.snapshot.directnbody.evaluatelinearForces",
  "galpy.snapshot.directnbody.evaluatephiforces",
  "galpy.snapshot.directnbody.evaluateplanarRforces",
  "galpy.snapshot.directnbody.evaluateplanarphiforces",
  "galpy.snapshot.directnbody.evaluatezforces",
  "galpy.snapshot.nemo_util",
  "galpy.snapshot.nemo_util._wc",
  "galpy.snapshot.nemo_util.read",
  "galpy.snapshot.snapshotMovies",
  "galpy.snapshot.snapshotMovies.Orbit",
  "galpy.snapshot.snapshotMovies.RZToplanarPotential",
  "galpy.snapshot.snapshotMovies._cleanupMovieTempdir",
  "galpy.snapshot.snapshotMovies.bovy_plot",
  "galpy.snapshot.snapshotMovies.snapshotToMovie",
  "galpy.snapshot.snapshotToMovie",
  "galpy.util",
  "galpy.util._SHOW_WARNINGS",
  "galpy.util._TINY",
  "galpy.util.__config__",
  "galpy.util._rotate_to_arbitrary_vector",
  "galpy.util._warning",
  "galpy.util.bovy_ars",
  "galpy.util.bovy_ars.bovy_ars",
  "galpy.util.bovy_ars.evaluate_hull",
  "galpy.util.bovy_ars.sample_hull",
  "galpy.util.bovy_ars.sampleone",
  "galpy.util.bovy_ars.setup_hull",
  "galpy.util.bovy_ars.update_hull",
  "galpy.util.bovy_conversion",
  "galpy.util.bovy_conversion._APY_LOADED",
  "galpy.util.bovy_conversion._APY_UNITS",
  "galpy.util.bovy_conversion._CIN10p5KMS",
  "galpy.util.bovy_conversion._EVIN10m19J",
  "galpy.util.bovy_conversion._G",
  "galpy.util.bovy_conversion._MSOLAR10p30KG",
  "galpy.util.bovy_conversion._MyrIn1013Sec",
  "galpy.util.bovy_conversion._PCIN10p18CM",
  "galpy.util.bovy_conversion._TWOPI",
  "galpy.util.bovy_conversion.__config__",
  "galpy.util.bovy_conversion._kmsInPcMyr",
  "galpy.util.bovy_conversion._roNecessary",
  "galpy.util.bovy_conversion._voNecessary",
  "galpy.util.bovy_conversion.actionAngle_physical_input",
  "galpy.util.bovy_conversion.dens_in_criticaldens",
  "galpy.util.bovy_conversion.dens_in_gevcc",
  "galpy.util.bovy_conversion.dens_in_meanmatterdens",
  "galpy.util.bovy_conversion.dens_in_msolpc3",
  "galpy.util.bovy_conversion.force_in_10m13kms2",
  "galpy.util.bovy_conversion.force_in_2piGmsolpc2",
  "galpy.util.bovy_conversion.force_in_kmsMyr",
  "galpy.util.bovy_conversion.force_in_pcMyr2",
  "galpy.util.bovy_conversion.freq_in_Gyr",
  "galpy.util.bovy_conversion.freq_in_kmskpc",
  "galpy.util.bovy_conversion.galpyWarning",
  "galpy.util.bovy_conversion.mass_in_1010msol",
  "galpy.util.bovy_conversion.mass_in_msol",
  "galpy.util.bovy_conversion.physical_conversion",
  "galpy.util.bovy_conversion.physical_conversion_actionAngle",
  "galpy.util.bovy_conversion.potential_physical_input",
  "galpy.util.bovy_conversion.print_physical_warning",
  "galpy.util.bovy_conversion.surfdens_in_msolpc2",
  "galpy.util.bovy_conversion.time_in_Gyr",
  "galpy.util.bovy_conversion.velocity_in_kpcGyr",
  "galpy.util.bovy_coords",
  "galpy.util.bovy_coords.Rz_to_coshucosv",
  "galpy.util.bovy_coords.Rz_to_lambdanu",
  "galpy.util.bovy_coords.Rz_to_uv",
  "galpy.util.bovy_coords.XYZ_to_galcencyl",
  "galpy.util.bovy_coords.XYZ_to_galcenrect",
  "galpy.util.bovy_coords.XYZ_to_lbd",
  "galpy.util.bovy_coords._APY_COORDS",
  "galpy.util.bovy_coords._APY_LOADED",
  "galpy.util.bovy_coords._DEGTORAD",
  "galpy.util.bovy_coords._K",
  "galpy.util.bovy_coords.__config__",
  "galpy.util.bovy_coords._parse_epoch_frame_apy",
  "galpy.util.bovy_coords._rotate_to_arbitrary_vector",
  "galpy.util.bovy_coords.c",
  "galpy.util.bovy_coords.cov_dvrpmllbb_to_vxyz",
  "galpy.util.bovy_coords.cov_pmradec_to_pmllbb_single",
  "galpy.util.bovy_coords.cov_pmrapmdec_to_pmllpmbb",
  "galpy.util.bovy_coords.cyl_to_rect",
  "galpy.util.bovy_coords.cyl_to_spher",
  "galpy.util.bovy_coords.dec",
  "galpy.util.bovy_coords.dec_gc",
  "galpy.util.bovy_coords.dec_ngp",
  "galpy.util.bovy_coords.dec_ngp_icrs",
  "galpy.util.bovy_coords.degreeDecorator",
  "galpy.util.bovy_coords.dl_to_rphi_2d",
  "galpy.util.bovy_coords.eta",
  "galpy.util.bovy_coords.galcen_extra_rot",
  "galpy.util.bovy_coords.galcen_extra_rot1",
  "galpy.util.bovy_coords.galcen_extra_rot2",
  "galpy.util.bovy_coords.galcencyl_to_XYZ",
  "galpy.util.bovy_coords.galcencyl_to_vxvyvz",
  "galpy.util.bovy_coords.galcenrect_to_XYZ",
  "galpy.util.bovy_coords.galcenrect_to_vxvyvz",
  "galpy.util.bovy_coords.gc_vec",
  "galpy.util.bovy_coords.get_epoch_angles",
  "galpy.util.bovy_coords.lambdanu_to_Rz",
  "galpy.util.bovy_coords.lb_to_radec",
  "galpy.util.bovy_coords.lbd_to_XYZ",
  "galpy.util.bovy_coords.ngp_vec",
  "galpy.util.bovy_coords.pmllpmbb_to_pmrapmdec",
  "galpy.util.bovy_coords.pmrapmdec_to_custom",
  "galpy.util.bovy_coords.pmrapmdec_to_pmllpmbb",
  "galpy.util.bovy_coords.pupv_to_vRvz",
  "galpy.util.bovy_coords.ra",
  "galpy.util.bovy_coords.ra_gc",
  "galpy.util.bovy_coords.ra_ngp",
  "galpy.util.bovy_coords.ra_ngp_icrs",
  "galpy.util.bovy_coords.radec_to_custom",
  "galpy.util.bovy_coords.radec_to_lb",
  "galpy.util.bovy_coords.rect_to_cyl",
  "galpy.util.bovy_coords.rectgal_to_sphergal",
  "galpy.util.bovy_coords.rphi_to_dl_2d",
  "galpy.util.bovy_coords.scalarDecorator",
  "galpy.util.bovy_coords.spher_to_cyl",
  "galpy.util.bovy_coords.sphergal_to_rectgal",
  "galpy.util.bovy_coords.theta",
  "galpy.util.bovy_coords.theta_icrs",
  "galpy.util.bovy_coords.uv_to_Rz",
  "galpy.util.bovy_coords.vRvz_to_pupv",
  "galpy.util.bovy_coords.vrpmllpmbb_to_vxvyvz",
  "galpy.util.bovy_coords.vxvyvz_to_galcencyl",
  "galpy.util.bovy_coords.vxvyvz_to_galcenrect",
  "galpy.util.bovy_coords.vxvyvz_to_vrpmllpmbb",
  "galpy.util.bovy_plot",
  "galpy.util.bovy_plot.GalPolarAxes",
  "galpy.util.bovy_plot._DEFAULTNCNTR",
  "galpy.util.bovy_plot.__config__",
  "galpy.util.bovy_plot._add_axislabels",
  "galpy.util.bovy_plot._add_ticks",
  "galpy.util.bovy_plot.bovy_dens2d",
  "galpy.util.bovy_plot.bovy_end_print",
  "galpy.util.bovy_plot.bovy_hist",
  "galpy.util.bovy_plot.bovy_plot",
  "galpy.util.bovy_plot.bovy_print",
  "galpy.util.bovy_plot.bovy_text",
  "galpy.util.bovy_plot.scatterplot",
  "galpy.util.bovy_quadpack",
  "galpy.util.bovy_quadpack._infunc",
  "galpy.util.bovy_quadpack.dblquad",
  "galpy.util.bovy_symplecticode",
  "galpy.util.bovy_symplecticode._MAX_DT_REDUCE",
  "galpy.util.bovy_symplecticode._leapfrog_estimate_step",
  "galpy.util.bovy_symplecticode.leapfrog",
  "galpy.util.config",
  "galpy.util.config._APY_LOADED",
  "galpy.util.config.__config__",
  "galpy.util.config.cfilename",
  "galpy.util.config.check_config",
  "galpy.util.config.default_configuration",
  "galpy.util.config.default_filename",
  "galpy.util.config.set_ro",
  "galpy.util.config.set_vo",
  "galpy.util.config.write_config",
  "galpy.util.fast_cholesky_invert",
  "galpy.util.galpyWarning",
  "galpy.util.logsumexp",
  "galpy.util.multi",
  "galpy.util.multi.__all__",
  "galpy.util.multi._multi",
  "galpy.util.multi._ncpus",
  "galpy.util.multi.f",
  "galpy.util.multi.iterable",
  "galpy.util.multi.numtasks",
  "galpy.util.multi.parallel_map",
  "galpy.util.multi.presult",
  "galpy.util.multi.result",
  "galpy.util.multi.run_tasks",
  "galpy.util.multi.size",
  "galpy.util.multi.tt",
  "galpy.util.multi.vals",
  "galpy.util.multi.worker",
  "galpy.util.save_pickles",
  "galpy.util.stable_cho_factor"
 ]
}