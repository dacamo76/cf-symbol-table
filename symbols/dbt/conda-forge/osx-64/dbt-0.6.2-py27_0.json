{
 "errors": {
  "test.unit": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/__init__.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/__init__.py'",
    ""
   ]
  },
  "test.unit.test_compilation": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_compilation.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_compilation.py'",
    ""
   ]
  },
  "test.unit.test_config": {
   "exception": "The subprocess /usr/share/miniconda/envs/test/bin/python has crashed (EOFError('Ran out of input'), stderr=).",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 248, in _send",
    "    is_exception, traceback, result = pickle_load(self._get_process().stdout)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/_compatibility.py\", line 28, in pickle_load",
    "    return pickle.load(file)",
    "EOFError: Ran out of input",
    "",
    "During handling of the above exception, another exception occurred:",
    "",
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/helpers.py\", line 488, in wrapper",
    "    return func(self, line, column, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 213, in complete",
    "    return completion.complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 169, in complete",
    "    cached_name, completion_names = self._complete_python(leaf)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 310, in _complete_python",
    "    completion_names += self._complete_global_scope()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/completion.py\", line 376, in _complete_global_scope",
    "    completion_names += filter.values()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 93, in values",
    "    for name_key in self._used_names",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in _convert_names",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 88, in <listcomp>",
    "    return [self.name_class(self.parent_context, name) for name in names]",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 95, in <genexpr>",
    "    _get_definition_names(self._used_names, name_key),",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 122, in _filter",
    "    return list(self._check_flows(names))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/filters.py\", line 137, in _check_flows",
    "    origin_scope=self._origin_scope",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 85, in reachability_check",
    "    return _break_check(context, value_scope, first_flow_scope, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 93, in _break_check",
    "    reachable = _check_if(context, check_node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/flow_analysis.py\", line 120, in _check_if",
    "    types = context.infer_node(node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 254, in _infer_node",
    "    return infer_or_test(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 460, in infer_or_test",
    "    types = context.infer_node(next(iterator))",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 197, in _infer_node",
    "    value_set = context.infer_node(first_child)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 222, in infer_node",
    "    return infer_node(self, node)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 156, in infer_node",
    "    return _infer_node_if_inferred(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 169, in _infer_node_if_inferred",
    "    return _infer_node_cached(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 174, in _infer_node_cached",
    "    return _infer_node(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/debug.py\", line 81, in wrapper",
    "    return func(*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 82, in wrapper",
    "    return func(context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 184, in _infer_node",
    "    return infer_atom(context, element)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 304, in infer_atom",
    "    return context.py__getattribute__(atom, position=position)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in py__getattribute__",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/context.py\", line 75, in <genexpr>",
    "    values = ValueSet.from_sets(name.infer() for name in names)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/names.py\", line 284, in infer",
    "    self.tree_name",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/stdlib.py\", line 867, in wrapper",
    "    return func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/django.py\", line 177, in wrapper",
    "    result = func(inference_state, context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/syntax_tree.py\", line 744, in tree_name_to_values",
    "    types = imports.infer_import(context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/cache.py\", line 44, in wrapper",
    "    rv = function(obj, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 53, in infer_import",
    "    _prepare_infer_import(module_context, tree_name)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 116, in _prepare_infer_import",
    "    return from_import_name, tuple(import_path), import_node.level, importer.follow()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 297, in follow",
    "    self._inference_state, self.import_path, sys_path, self._module_context",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in import_module_by_names",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 383, in <listcomp>",
    "    ) for parent_module_value in value_set",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/__init__.py\", line 21, in wrapper",
    "    return built_functions[public_name](*args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/plugins/flask.py\", line 20, in wrapper",
    "    return callback(inference_state, import_names, module_context, *args, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in wrapper",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/base_value.py\", line 426, in from_sets",
    "    for set_ in sets:",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/gradual/typeshed.py\", line 119, in <genexpr>",
    "    for p in parent_module_values",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 449, in import_module",
    "    module = _load_builtin_module(inference_state, import_names, sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/imports.py\", line 495, in _load_builtin_module",
    "    module = compiled.load_module(inference_state, dotted_name=dotted_name, sys_path=sys_path)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/__init__.py\", line 67, in load_module",
    "    access_path = inference_state.compiled_subprocess.load_module(dotted_name=dotted_name, **kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 133, in wrapper",
    "    kwargs=kwargs,",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 226, in run",
    "    return self._send(id(inference_state), function, args, kwargs)",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/inference/compiled/subprocess/__init__.py\", line 260, in _send",
    "    stderr,",
    "jedi.api.exceptions.InternalError: The subprocess /usr/share/miniconda/envs/test/bin/python has crashed (EOFError('Ran out of input'), stderr=).",
    ""
   ]
  },
  "test.unit.test_import": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_import.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_import.py'",
    ""
   ]
  },
  "test.unit.test_linker": {
   "exception": "[Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_linker.py'",
   "traceback": [
    "Traceback (most recent call last):",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/symbol_exporter/symbol_inspection.py\", line 34, in single_file_extraction",
    "    data = jedi.Script(path=file_name, project=jedi.Project(''.join(top_dir))).complete()",
    "  File \"/usr/share/miniconda/envs/test/lib/python3.7/site-packages/jedi/api/__init__.py\", line 111, in __init__",
    "    with open(path, 'rb') as f:",
    "FileNotFoundError: [Errno 2] No such file or directory: '/tmp/tmpejjcdlr6/lib/python2.7/site-packages/test/unit/test_linker.py'",
    ""
   ]
  }
 },
 "symbols": [
  "dbt.archival",
  "dbt.archival.Archival",
  "dbt.compilation",
  "dbt.compilation.CompilableEntities",
  "dbt.compilation.Compiler",
  "dbt.compilation.GLOBAL_LOGGER",
  "dbt.compilation.Linker",
  "dbt.compilation.RuntimeContext",
  "dbt.compilation.Source",
  "dbt.compilation.This",
  "dbt.compilation.Var",
  "dbt.compilation.compile_string",
  "dbt.compilation.compiler_error",
  "dbt.compilation.dependency_projects",
  "dbt.compilation.find_model_by_fqn",
  "dbt.compilation.find_model_by_name",
  "dbt.compilation.split_path",
  "dbt.compilation.to_string",
  "dbt.compiled_model",
  "dbt.compiled_model.CompiledArchive",
  "dbt.compiled_model.CompiledModel",
  "dbt.compiled_model.CompiledTest",
  "dbt.compiled_model.compiler_error",
  "dbt.compiled_model.make_compiled_model",
  "dbt.compiled_model.to_unicode",
  "dbt.config",
  "dbt.config.project",
  "dbt.config.read_config",
  "dbt.config.send_anonymous_usage_stats",
  "dbt.deprecations",
  "dbt.deprecations.DBTDeprecation",
  "dbt.deprecations.DBTInvalidPackageName",
  "dbt.deprecations.DBTRunTargetDeprecation",
  "dbt.deprecations.GLOBAL_LOGGER",
  "dbt.deprecations.active_deprecations",
  "dbt.deprecations.deprecations",
  "dbt.deprecations.deprecations_list",
  "dbt.deprecations.reset_deprecations",
  "dbt.deprecations.warn",
  "dbt.linker",
  "dbt.linker.Linker",
  "dbt.logger",
  "dbt.logger.GLOBAL_LOGGER",
  "dbt.logger.initialize_logger",
  "dbt.logger.initialized",
  "dbt.logger.logger",
  "dbt.logger.make_log_dir_if_missing",
  "dbt.logger.stdout_handler",
  "dbt.main",
  "dbt.main.GLOBAL_LOGGER",
  "dbt.main.archive",
  "dbt.main.clean",
  "dbt.main.compile",
  "dbt.main.config",
  "dbt.main.debug",
  "dbt.main.deps",
  "dbt.main.get_nearest_project_dir",
  "dbt.main.handle",
  "dbt.main.init",
  "dbt.main.initialize_logger",
  "dbt.main.invoke_dbt",
  "dbt.main.main",
  "dbt.main.parse_args",
  "dbt.main.project",
  "dbt.main.run",
  "dbt.main.run_from_args",
  "dbt.main.seed",
  "dbt.main.test",
  "dbt.model",
  "dbt.model.AcceptedValuesSchemaTest",
  "dbt.model.Analysis",
  "dbt.model.ArchiveModel",
  "dbt.model.BaseCreateTemplate",
  "dbt.model.Csv",
  "dbt.model.DBTConfigKeys",
  "dbt.model.DBTSource",
  "dbt.model.DataTest",
  "dbt.model.DryCreateTemplate",
  "dbt.model.Macro",
  "dbt.model.Model",
  "dbt.model.NotNullSchemaTest",
  "dbt.model.ReferentialIntegritySchemaTest",
  "dbt.model.SchemaFile",
  "dbt.model.SchemaTest",
  "dbt.model.SourceConfig",
  "dbt.model.TestModel",
  "dbt.model.UniqueSchemaTest",
  "dbt.model.compiler_error",
  "dbt.model.compiler_warning",
  "dbt.model.deep_merge",
  "dbt.model.split_path",
  "dbt.project",
  "dbt.project.DbtProjectError",
  "dbt.project.Project",
  "dbt.project.default_profiles",
  "dbt.project.default_profiles_dir",
  "dbt.project.default_project_cfg",
  "dbt.project.read_profiles",
  "dbt.project.read_project",
  "dbt.runner",
  "dbt.runner.ABORTED_TRANSACTION_STRING",
  "dbt.runner.ArchiveRunner",
  "dbt.runner.BaseCreateTemplate",
  "dbt.runner.BaseRunner",
  "dbt.runner.DryRunner",
  "dbt.runner.GLOBAL_LOGGER",
  "dbt.runner.Linker",
  "dbt.runner.ModelRunner",
  "dbt.runner.RunManager",
  "dbt.runner.RunModelResult",
  "dbt.runner.Source",
  "dbt.runner.TestRunner",
  "dbt.runner.compile_string",
  "dbt.runner.dependency_projects",
  "dbt.runner.find_model_by_fqn",
  "dbt.runner.find_model_by_name",
  "dbt.runner.get_timestamp",
  "dbt.runner.make_compiled_model",
  "dbt.runtime",
  "dbt.runtime.RuntimeContext",
  "dbt.runtime.compiler_error",
  "dbt.schema",
  "dbt.schema.Column",
  "dbt.schema.GLOBAL_LOGGER",
  "dbt.schema.READ_PERMISSION_DENIED_ERROR",
  "dbt.schema.RELATION_NOT_OWNER_MESSAGE",
  "dbt.schema.RELATION_PERMISSION_DENIED_MESSAGE",
  "dbt.schema.SCHEMA_PERMISSION_DENIED_MESSAGE",
  "dbt.schema.Schema",
  "dbt.schema_tester",
  "dbt.schema_tester.DDL_TEST_RESULT_CREATE",
  "dbt.schema_tester.GLOBAL_LOGGER",
  "dbt.schema_tester.QUERY_VALIDATE_ACCEPTED_VALUES",
  "dbt.schema_tester.QUERY_VALIDATE_NOT_NULL",
  "dbt.schema_tester.QUERY_VALIDATE_REFERENTIAL_INTEGRITY",
  "dbt.schema_tester.QUERY_VALIDATE_UNIQUE",
  "dbt.schema_tester.SchemaTester",
  "dbt.seeder",
  "dbt.seeder.GLOBAL_LOGGER",
  "dbt.seeder.Seeder",
  "dbt.seeder.Source",
  "dbt.source",
  "dbt.source.Analysis",
  "dbt.source.ArchiveModel",
  "dbt.source.Csv",
  "dbt.source.DataTest",
  "dbt.source.Macro",
  "dbt.source.Model",
  "dbt.source.SchemaFile",
  "dbt.source.Source",
  "dbt.source.TestModel",
  "dbt.ssh_forward",
  "dbt.ssh_forward.get_or_create_tunnel",
  "dbt.ssh_forward.server",
  "dbt.targets",
  "dbt.targets.BAD_THREADS_ERROR",
  "dbt.targets.BaseSQLTarget",
  "dbt.targets.PostgresTarget",
  "dbt.targets.RedshiftTarget",
  "dbt.targets.THREAD_MAX",
  "dbt.targets.THREAD_MIN",
  "dbt.targets.get_target",
  "dbt.targets.target_map",
  "dbt.task",
  "dbt.task.archive",
  "dbt.task.archive.ArchiveInsertTemplate",
  "dbt.task.archive.ArchiveTask",
  "dbt.task.archive.Compiler",
  "dbt.task.archive.GLOBAL_LOGGER",
  "dbt.task.archive.RunManager",
  "dbt.task.clean",
  "dbt.task.clean.CleanTask",
  "dbt.task.compile",
  "dbt.task.compile.BaseCreateTemplate",
  "dbt.task.compile.CompilableEntities",
  "dbt.task.compile.CompileTask",
  "dbt.task.compile.Compiler",
  "dbt.task.compile.DryCreateTemplate",
  "dbt.task.compile.GLOBAL_LOGGER",
  "dbt.task.debug",
  "dbt.task.debug.DebugTask",
  "dbt.task.debug.GLOBAL_LOGGER",
  "dbt.task.deps",
  "dbt.task.deps.DepsTask",
  "dbt.task.deps.GLOBAL_LOGGER",
  "dbt.task.deps.folder_from_git_remote",
  "dbt.task.deps.project",
  "dbt.task.init",
  "dbt.task.init.GIT_IGNORE",
  "dbt.task.init.InitTask",
  "dbt.task.init.SAMPLE_CONFIG",
  "dbt.task.run",
  "dbt.task.run.BaseCreateTemplate",
  "dbt.task.run.CompilableEntities",
  "dbt.task.run.Compiler",
  "dbt.task.run.DryCreateTemplate",
  "dbt.task.run.GLOBAL_LOGGER",
  "dbt.task.run.RunManager",
  "dbt.task.run.RunTask",
  "dbt.task.run.THREAD_LIMIT",
  "dbt.task.seed",
  "dbt.task.seed.SeedTask",
  "dbt.task.seed.Seeder",
  "dbt.task.test",
  "dbt.task.test.BaseCreateTemplate",
  "dbt.task.test.CompilableEntities",
  "dbt.task.test.Compiler",
  "dbt.task.test.DryCreateTemplate",
  "dbt.task.test.GLOBAL_LOGGER",
  "dbt.task.test.RunManager",
  "dbt.task.test.SchemaTester",
  "dbt.task.test.TestTask",
  "dbt.templates",
  "dbt.templates.ArchiveInsertTemplate",
  "dbt.templates.BaseCreateTemplate",
  "dbt.templates.DryCreateTemplate",
  "dbt.templates.SCDArchiveTemplate",
  "dbt.tracking",
  "dbt.tracking.BASE_URL",
  "dbt.tracking.COLLECTOR_PROTOCOL",
  "dbt.tracking.COLLECTOR_URL",
  "dbt.tracking.COOKIE_PATH",
  "dbt.tracking.DBT_INVOCATION_ENV",
  "dbt.tracking.GLOBAL_LOGGER",
  "dbt.tracking.INVOCATION_ENV_SPEC",
  "dbt.tracking.INVOCATION_SPEC",
  "dbt.tracking.PLATFORM_SPEC",
  "dbt.tracking.RUN_MODEL_SPEC",
  "dbt.tracking.__write_user",
  "dbt.tracking.do_not_track",
  "dbt.tracking.emitter",
  "dbt.tracking.env_context",
  "dbt.tracking.flush",
  "dbt.tracking.get_dbt_env_context",
  "dbt.tracking.get_invocation_context",
  "dbt.tracking.get_invocation_end_context",
  "dbt.tracking.get_invocation_invalid_context",
  "dbt.tracking.get_invocation_start_context",
  "dbt.tracking.get_options",
  "dbt.tracking.get_platform_context",
  "dbt.tracking.get_run_type",
  "dbt.tracking.get_user",
  "dbt.tracking.invocation_id",
  "dbt.tracking.platform_context",
  "dbt.tracking.subject",
  "dbt.tracking.track",
  "dbt.tracking.user",
  "dbt.tracking.version",
  "dbt.utils",
  "dbt.utils.DBTConfigKeys",
  "dbt.utils.GLOBAL_LOGGER",
  "dbt.utils.This",
  "dbt.utils.Var",
  "dbt.utils.compiler_error",
  "dbt.utils.compiler_warning",
  "dbt.utils.deep_merge",
  "dbt.utils.dependency_projects",
  "dbt.utils.find_model_by_fqn",
  "dbt.utils.find_model_by_name",
  "dbt.utils.split_path",
  "dbt.utils.to_string",
  "dbt.utils.to_unicode",
  "dbt.version",
  "dbt.version.REMOTE_VERSION_FILE",
  "dbt.version.__parse_version",
  "dbt.version.__version__",
  "dbt.version.get_latest_version",
  "dbt.version.get_version",
  "dbt.version.installed",
  "dbt.version.is_latest",
  "dbt.version.latest",
  "dbt.version.not_latest",
  "test.integration",
  "test.integration.base",
  "test.integration.base.DBTIntegrationTest",
  "test.integration.base.DBT_CONFIG_DIR",
  "test.integration.base.DBT_PROFILES",
  "test.integration.base._testMethodDoc",
  "test.integration.base._testMethodName",
  "test.integration.base.failureException",
  "test.integration.base.handle",
  "test.integration.base.longMessage",
  "test.integration.base.maxDiff",
  "test.integration.connection",
  "test.integration.connection.handle",
  "test.unit",
  "test.unit.fake_data.new_base_compiler",
  "test.unit.fake_data.new_project",
  "test.unit.fake_data.new_test_compiler",
  "unittest.case.TestCase._testMethodDoc",
  "unittest.case.TestCase._testMethodName",
  "unittest.case.TestCase.failureException",
  "unittest.case.TestCase.longMessage",
  "unittest.case.TestCase.maxDiff"
 ]
}