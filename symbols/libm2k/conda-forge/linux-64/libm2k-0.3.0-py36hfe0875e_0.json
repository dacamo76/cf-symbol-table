{
 "errors": {},
 "symbols": [
  "libm2k.ADC_GND",
  "libm2k.ADC_REF1",
  "libm2k.ADC_REF2",
  "libm2k.ALWAYS",
  "libm2k.ANALOG",
  "libm2k.ANALOG_DEV",
  "libm2k.ANALOG_IN_CHANNEL_1",
  "libm2k.ANALOG_IN_CHANNEL_2",
  "libm2k.ANY_EDGE_DIGITAL",
  "libm2k.BOTH",
  "libm2k.CHANNEL_1",
  "libm2k.CHANNEL_1_AND_CHANNEL_2",
  "libm2k.CHANNEL_1_OR_CHANNEL_2",
  "libm2k.CHANNEL_1_OR_CHANNEL_2_OR_SRC_LOGIC_ANALYZER",
  "libm2k.CHANNEL_1_OR_SRC_LOGIC_ANALYZER",
  "libm2k.CHANNEL_1_XOR_CHANNEL_2",
  "libm2k.CHANNEL_2",
  "libm2k.CHANNEL_2_OR_SRC_LOGIC_ANALYZER",
  "libm2k.CONTEXT_INFO",
  "libm2k.Context",
  "libm2k.CtxFMCOMMS",
  "libm2k.CtxLIDAR",
  "libm2k.CtxM2K",
  "libm2k.DAC",
  "libm2k.DIGITAL_AND_ANALOG",
  "libm2k.DIGITAL_DEV",
  "libm2k.DIGITAL_OR_ANALOG",
  "libm2k.DIGITAL_XOR_ANALOG",
  "libm2k.DIO_AND",
  "libm2k.DIO_CHANNEL_0",
  "libm2k.DIO_CHANNEL_1",
  "libm2k.DIO_CHANNEL_10",
  "libm2k.DIO_CHANNEL_11",
  "libm2k.DIO_CHANNEL_12",
  "libm2k.DIO_CHANNEL_13",
  "libm2k.DIO_CHANNEL_14",
  "libm2k.DIO_CHANNEL_15",
  "libm2k.DIO_CHANNEL_2",
  "libm2k.DIO_CHANNEL_3",
  "libm2k.DIO_CHANNEL_4",
  "libm2k.DIO_CHANNEL_5",
  "libm2k.DIO_CHANNEL_6",
  "libm2k.DIO_CHANNEL_7",
  "libm2k.DIO_CHANNEL_8",
  "libm2k.DIO_CHANNEL_9",
  "libm2k.DIO_INPUT",
  "libm2k.DIO_OPENDRAIN",
  "libm2k.DIO_OR",
  "libm2k.DIO_OUTPUT",
  "libm2k.DIO_PUSHPULL",
  "libm2k.DMM",
  "libm2k.EVEN",
  "libm2k.EXC_INVALID_FIRMWARE_VERSION",
  "libm2k.EXC_INVALID_PARAMETER",
  "libm2k.EXC_OUT_OF_RANGE",
  "libm2k.EXC_RUNTIME_ERROR",
  "libm2k.EXC_TIMEOUT",
  "libm2k.EXTERNAL",
  "libm2k.FALLING_EDGE_ANALOG",
  "libm2k.FALLING_EDGE_DIGITAL",
  "libm2k.FMCOMMS",
  "libm2k.Generic",
  "libm2k.HIGH",
  "libm2k.HIGH_GAIN",
  "libm2k.HIGH_LEVEL_ANALOG",
  "libm2k.HIGH_LEVEL_DIGITAL",
  "libm2k.IIO_OBJECTS",
  "libm2k.INPUT",
  "libm2k.IioBuffers",
  "libm2k.IioChannels",
  "libm2k.IioDevices",
  "libm2k.LOW",
  "libm2k.LOW_GAIN",
  "libm2k.LOW_LEVEL_ANALOG",
  "libm2k.LOW_LEVEL_DIGITAL",
  "libm2k.LSB",
  "libm2k.Lidar",
  "libm2k.Logger",
  "libm2k.M2k",
  "libm2k.MARK",
  "libm2k.MSB",
  "libm2k.NONE",
  "libm2k.NO_DEV",
  "libm2k.NO_DIRECTION",
  "libm2k.NO_PARITY",
  "libm2k.NO_SOURCE",
  "libm2k.NO_TRIGGER_DIGITAL",
  "libm2k.N_DIGITAL_AND_ANALOG",
  "libm2k.N_DIGITAL_OR_ANALOG",
  "libm2k.N_DIGITAL_XOR_ANALOG",
  "libm2k.ODD",
  "libm2k.ONE",
  "libm2k.ONE_AND_A_HALF",
  "libm2k.OUTPUT",
  "libm2k.Other",
  "libm2k.PLUS_MINUS_25V",
  "libm2k.PLUS_MINUS_2_5V",
  "libm2k.PairDD",
  "libm2k.RISING_EDGE_ANALOG",
  "libm2k.RISING_EDGE_DIGITAL",
  "libm2k.SELECT_ANALOG_IN",
  "libm2k.SELECT_DIGITAL_IN",
  "libm2k.SELECT_NONE",
  "libm2k.SELECT_TRIGGER_IN",
  "libm2k.SELECT_TRIGGER_I_SAME_CHAN",
  "libm2k.SETTINGS",
  "libm2k.SHARED_PTR_DISOWN",
  "libm2k.SPACE",
  "libm2k.SPI_CPHA",
  "libm2k.SPI_CPOL",
  "libm2k.SPI_MODE_0",
  "libm2k.SPI_MODE_1",
  "libm2k.SPI_MODE_2",
  "libm2k.SPI_MODE_3",
  "libm2k.SRC_ANALOG_IN",
  "libm2k.SRC_DIGITAL_IN",
  "libm2k.SRC_DISABLED",
  "libm2k.SRC_NONE",
  "libm2k.SRC_TRIGGER_IN",
  "libm2k.SWIG_ON",
  "libm2k.SwigPyIterator",
  "libm2k.TWO",
  "libm2k.VectorD",
  "libm2k.VectorI",
  "libm2k.VectorPairDD",
  "libm2k.VectorS",
  "libm2k.VectorUS",
  "libm2k.VectorVectorD",
  "libm2k.VectorVectorS",
  "libm2k.VectorVectorUS",
  "libm2k._SwigNonDynamicMeta",
  "libm2k._swig_add_metaclass",
  "libm2k._swig_repr",
  "libm2k._swig_setattr_nondynamic_class_variable",
  "libm2k._swig_setattr_nondynamic_instance_variable",
  "libm2k.channel",
  "libm2k.contextClose",
  "libm2k.contextOpen",
  "libm2k.getAllContexts",
  "libm2k.getContextsInfo",
  "libm2k.getVersion",
  "libm2k.i2c_10_bit_transfer",
  "libm2k.i2c_desc",
  "libm2k.i2c_general_call",
  "libm2k.i2c_init",
  "libm2k.i2c_read",
  "libm2k.i2c_remove",
  "libm2k.i2c_repeated_start",
  "libm2k.i2c_write",
  "libm2k.ini_device_struct",
  "libm2k.m2kOpen",
  "libm2k.m2k_exception",
  "libm2k.m2k_i2c_desc",
  "libm2k.m2k_i2c_init",
  "libm2k.m2k_spi_desc",
  "libm2k.m2k_spi_init",
  "libm2k.m2k_uart_desc",
  "libm2k.m2k_uart_init",
  "libm2k.spi_desc",
  "libm2k.spi_init",
  "libm2k.spi_remove",
  "libm2k.spi_write_and_read",
  "libm2k.spi_write_only",
  "libm2k.throw_exception",
  "libm2k.uart_desc",
  "libm2k.uart_get_errors",
  "libm2k.uart_init",
  "libm2k.uart_read",
  "libm2k.uart_remove",
  "libm2k.uart_write"
 ]
}